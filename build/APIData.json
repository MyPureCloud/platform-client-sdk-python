{
  "delete_alerting_alert": {
    "operationId": "delete_alerting_alert",
    "functionName": "delete_alerting_alert",
    "signature": "delete_alerting_alert(alert_id)",
    "parameters": [
      {
        "name": "alert_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nalert_id = 'alert_id_example' # str | Alert ID\n\ntry:\n    # Delete an alert\n    api_instance.delete_alerting_alert(alert_id)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->delete_alerting_alert: %s\\n\" % e)"
  },
  "delete_alerting_interactionstats_alert": {
    "operationId": "delete_alerting_interactionstats_alert",
    "functionName": "delete_alerting_interactionstats_alert",
    "signature": "delete_alerting_interactionstats_alert(alert_id)",
    "parameters": [
      {
        "name": "alert_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nalert_id = 'alert_id_example' # str | Alert ID\n\ntry:\n    # Delete an interaction stats alert\n    api_instance.delete_alerting_interactionstats_alert(alert_id)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->delete_alerting_interactionstats_alert: %s\\n\" % e)"
  },
  "delete_alerting_interactionstats_rule": {
    "operationId": "delete_alerting_interactionstats_rule",
    "functionName": "delete_alerting_interactionstats_rule",
    "signature": "delete_alerting_interactionstats_rule(rule_id)",
    "parameters": [
      {
        "name": "rule_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nrule_id = 'rule_id_example' # str | Rule ID\n\ntry:\n    # Delete an interaction stats rule\n    api_instance.delete_alerting_interactionstats_rule(rule_id)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->delete_alerting_interactionstats_rule: %s\\n\" % e)"
  },
  "delete_alerting_rule": {
    "operationId": "delete_alerting_rule",
    "functionName": "delete_alerting_rule",
    "signature": "delete_alerting_rule(rule_id)",
    "parameters": [
      {
        "name": "rule_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nrule_id = 'rule_id_example' # str | Rule Id\n\ntry:\n    # Delete a rule.\n    api_instance.delete_alerting_rule(rule_id)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->delete_alerting_rule: %s\\n\" % e)"
  },
  "get_alerting_alert": {
    "operationId": "get_alerting_alert",
    "functionName": "get_alerting_alert",
    "signature": "get_alerting_alert(alert_id)",
    "parameters": [
      {
        "name": "alert_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CommonAlert",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nalert_id = 'alert_id_example' # str | Alert ID\n\ntry:\n    # Get an alert\n    api_response = api_instance.get_alerting_alert(alert_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->get_alerting_alert: %s\\n\" % e)"
  },
  "get_alerting_alerts_active": {
    "operationId": "get_alerting_alerts_active",
    "functionName": "get_alerting_alerts_active",
    "signature": "get_alerting_alerts_active()",
    "return": "ActiveAlertCount",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\n\ntry:\n    # Gets active alert count for a user\n    api_response = api_instance.get_alerting_alerts_active()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->get_alerting_alerts_active: %s\\n\" % e)"
  },
  "get_alerting_interactionstats_alert": {
    "operationId": "get_alerting_interactionstats_alert",
    "functionName": "get_alerting_interactionstats_alert",
    "signature": "get_alerting_interactionstats_alert(alert_id, expand)",
    "parameters": [
      {
        "name": "alert_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "InteractionStatsAlert",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nalert_id = 'alert_id_example' # str | Alert ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Get an interaction stats alert\n    api_response = api_instance.get_alerting_interactionstats_alert(alert_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->get_alerting_interactionstats_alert: %s\\n\" % e)"
  },
  "get_alerting_interactionstats_alerts": {
    "operationId": "get_alerting_interactionstats_alerts",
    "functionName": "get_alerting_interactionstats_alerts",
    "signature": "get_alerting_interactionstats_alerts(expand)",
    "parameters": [
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "InteractionStatsAlertContainer",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Get interaction stats alert list\n    api_response = api_instance.get_alerting_interactionstats_alerts(expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->get_alerting_interactionstats_alerts: %s\\n\" % e)"
  },
  "get_alerting_interactionstats_alerts_unread": {
    "operationId": "get_alerting_interactionstats_alerts_unread",
    "functionName": "get_alerting_interactionstats_alerts_unread",
    "signature": "get_alerting_interactionstats_alerts_unread()",
    "return": "UnreadMetric",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\n\ntry:\n    # Gets user unread count of interaction stats alerts\n    api_response = api_instance.get_alerting_interactionstats_alerts_unread()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->get_alerting_interactionstats_alerts_unread: %s\\n\" % e)"
  },
  "get_alerting_interactionstats_rule": {
    "operationId": "get_alerting_interactionstats_rule",
    "functionName": "get_alerting_interactionstats_rule",
    "signature": "get_alerting_interactionstats_rule(rule_id, expand)",
    "parameters": [
      {
        "name": "rule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "InteractionStatsRule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nrule_id = 'rule_id_example' # str | Rule ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Get an interaction stats rule\n    api_response = api_instance.get_alerting_interactionstats_rule(rule_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->get_alerting_interactionstats_rule: %s\\n\" % e)"
  },
  "get_alerting_interactionstats_rules": {
    "operationId": "get_alerting_interactionstats_rules",
    "functionName": "get_alerting_interactionstats_rules",
    "signature": "get_alerting_interactionstats_rules(expand)",
    "parameters": [
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "InteractionStatsRuleContainer",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Get an interaction stats rule list\n    api_response = api_instance.get_alerting_interactionstats_rules(expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->get_alerting_interactionstats_rules: %s\\n\" % e)"
  },
  "get_alerting_rule": {
    "operationId": "get_alerting_rule",
    "functionName": "get_alerting_rule",
    "signature": "get_alerting_rule(rule_id)",
    "parameters": [
      {
        "name": "rule_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CommonRule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nrule_id = 'rule_id_example' # str | Rule Id\n\ntry:\n    # Get a rule.\n    api_response = api_instance.get_alerting_rule(rule_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->get_alerting_rule: %s\\n\" % e)"
  },
  "patch_alerting_alert": {
    "operationId": "patch_alerting_alert",
    "functionName": "patch_alerting_alert",
    "signature": "patch_alerting_alert(alert_id, body)",
    "parameters": [
      {
        "name": "alert_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AlertRequest",
        "required": "false"
      }
    ],
    "return": "CommonAlert",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nalert_id = 'alert_id_example' # str | Alert ID\nbody = PureCloudPlatformClientV2.AlertRequest() # AlertRequest |  (optional)\n\ntry:\n    # Allows an entity to mute/snooze an alert or update the unread status of the alert.\n    api_response = api_instance.patch_alerting_alert(alert_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->patch_alerting_alert: %s\\n\" % e)"
  },
  "patch_alerting_alerts_bulk": {
    "operationId": "patch_alerting_alerts_bulk",
    "functionName": "patch_alerting_alerts_bulk",
    "signature": "patch_alerting_alerts_bulk(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CommonAlertBulkUpdateRequest",
        "required": "true"
      }
    ],
    "return": "BulkResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nbody = PureCloudPlatformClientV2.CommonAlertBulkUpdateRequest() # CommonAlertBulkUpdateRequest | \n\ntry:\n    # Bulk alert updates\n    api_response = api_instance.patch_alerting_alerts_bulk(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->patch_alerting_alerts_bulk: %s\\n\" % e)"
  },
  "patch_alerting_rules_bulk": {
    "operationId": "patch_alerting_rules_bulk",
    "functionName": "patch_alerting_rules_bulk",
    "signature": "patch_alerting_rules_bulk(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CommonRuleBulkUpdateNotificationsRequest",
        "required": "true"
      }
    ],
    "return": "BulkResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nbody = PureCloudPlatformClientV2.CommonRuleBulkUpdateNotificationsRequest() # CommonRuleBulkUpdateNotificationsRequest | \n\ntry:\n    # Bulk update of notification lists\n    api_response = api_instance.patch_alerting_rules_bulk(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->patch_alerting_rules_bulk: %s\\n\" % e)"
  },
  "post_alerting_alerts_query": {
    "operationId": "post_alerting_alerts_query",
    "functionName": "post_alerting_alerts_query",
    "signature": "post_alerting_alerts_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GetAlertQuery",
        "required": "false"
      }
    ],
    "return": "AlertListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nbody = PureCloudPlatformClientV2.GetAlertQuery() # GetAlertQuery |  (optional)\n\ntry:\n    # Gets a paged list of alerts. The max page size is 50\n    api_response = api_instance.post_alerting_alerts_query(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->post_alerting_alerts_query: %s\\n\" % e)"
  },
  "post_alerting_interactionstats_rules": {
    "operationId": "post_alerting_interactionstats_rules",
    "functionName": "post_alerting_interactionstats_rules",
    "signature": "post_alerting_interactionstats_rules(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "InteractionStatsRule",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "InteractionStatsRule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nbody = PureCloudPlatformClientV2.InteractionStatsRule() # InteractionStatsRule | AlertingRule\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Create an interaction stats rule\n    api_response = api_instance.post_alerting_interactionstats_rules(body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->post_alerting_interactionstats_rules: %s\\n\" % e)"
  },
  "post_alerting_rules": {
    "operationId": "post_alerting_rules",
    "functionName": "post_alerting_rules",
    "signature": "post_alerting_rules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CommonRule",
        "required": "true"
      }
    ],
    "return": "CommonRule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nbody = PureCloudPlatformClientV2.CommonRule() # CommonRule | rule to be created\n\ntry:\n    # Create a Rule.\n    api_response = api_instance.post_alerting_rules(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->post_alerting_rules: %s\\n\" % e)"
  },
  "post_alerting_rules_bulk_remove": {
    "operationId": "post_alerting_rules_bulk_remove",
    "functionName": "post_alerting_rules_bulk_remove",
    "signature": "post_alerting_rules_bulk_remove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CommonRuleBulkDeleteRequest",
        "required": "true"
      }
    ],
    "return": "BulkResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nbody = PureCloudPlatformClientV2.CommonRuleBulkDeleteRequest() # CommonRuleBulkDeleteRequest | \n\ntry:\n    # Bulk remove rules\n    api_response = api_instance.post_alerting_rules_bulk_remove(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->post_alerting_rules_bulk_remove: %s\\n\" % e)"
  },
  "post_alerting_rules_query": {
    "operationId": "post_alerting_rules_query",
    "functionName": "post_alerting_rules_query",
    "signature": "post_alerting_rules_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GetRulesQuery",
        "required": "false"
      }
    ],
    "return": "CommonRuleContainer",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nbody = PureCloudPlatformClientV2.GetRulesQuery() # GetRulesQuery |  (optional)\n\ntry:\n    # Get a paged list of rules.  The max size of the page is 50 items.\n    api_response = api_instance.post_alerting_rules_query(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->post_alerting_rules_query: %s\\n\" % e)"
  },
  "put_alerting_alert": {
    "operationId": "put_alerting_alert",
    "functionName": "put_alerting_alert",
    "signature": "put_alerting_alert(alert_id, body)",
    "parameters": [
      {
        "name": "alert_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AlertingUnreadStatus",
        "required": "false"
      }
    ],
    "return": "UnreadStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nalert_id = 'alert_id_example' # str | Alert ID\nbody = PureCloudPlatformClientV2.AlertingUnreadStatus() # AlertingUnreadStatus |  (optional)\n\ntry:\n    # Update an alert read status\n    api_response = api_instance.put_alerting_alert(alert_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->put_alerting_alert: %s\\n\" % e)"
  },
  "put_alerting_interactionstats_alert": {
    "operationId": "put_alerting_interactionstats_alert",
    "functionName": "put_alerting_interactionstats_alert",
    "signature": "put_alerting_interactionstats_alert(alert_id, body, expand)",
    "parameters": [
      {
        "name": "alert_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UnreadStatus",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "UnreadStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nalert_id = 'alert_id_example' # str | Alert ID\nbody = PureCloudPlatformClientV2.UnreadStatus() # UnreadStatus | InteractionStatsAlert\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Update an interaction stats alert read status\n    api_response = api_instance.put_alerting_interactionstats_alert(alert_id, body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->put_alerting_interactionstats_alert: %s\\n\" % e)"
  },
  "put_alerting_interactionstats_rule": {
    "operationId": "put_alerting_interactionstats_rule",
    "functionName": "put_alerting_interactionstats_rule",
    "signature": "put_alerting_interactionstats_rule(rule_id, body, expand)",
    "parameters": [
      {
        "name": "rule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "InteractionStatsRule",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "InteractionStatsRule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nrule_id = 'rule_id_example' # str | Rule ID\nbody = PureCloudPlatformClientV2.InteractionStatsRule() # InteractionStatsRule | AlertingRule\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Update an interaction stats rule\n    api_response = api_instance.put_alerting_interactionstats_rule(rule_id, body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->put_alerting_interactionstats_rule: %s\\n\" % e)"
  },
  "put_alerting_rule": {
    "operationId": "put_alerting_rule",
    "functionName": "put_alerting_rule",
    "signature": "put_alerting_rule(rule_id, body)",
    "parameters": [
      {
        "name": "rule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ModifiableRuleProperties",
        "required": "true"
      }
    ],
    "return": "CommonRule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AlertingApi();\nrule_id = 'rule_id_example' # str | Rule Id\nbody = PureCloudPlatformClientV2.ModifiableRuleProperties() # ModifiableRuleProperties | rule to be updated\n\ntry:\n    # Update a rule\n    api_response = api_instance.put_alerting_rule(rule_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AlertingApi->put_alerting_rule: %s\\n\" % e)"
  },
  "delete_analytics_conversations_details_job": {
    "operationId": "delete_analytics_conversations_details_job",
    "functionName": "delete_analytics_conversations_details_job",
    "signature": "delete_analytics_conversations_details_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Delete/cancel an async details job\n    api_instance.delete_analytics_conversations_details_job(job_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->delete_analytics_conversations_details_job: %s\\n\" % e)"
  },
  "delete_analytics_users_details_job": {
    "operationId": "delete_analytics_users_details_job",
    "functionName": "delete_analytics_users_details_job",
    "signature": "delete_analytics_users_details_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Delete/cancel an async request\n    api_instance.delete_analytics_users_details_job(job_id)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->delete_analytics_users_details_job: %s\\n\" % e)"
  },
  "get_analytics_actions_aggregates_job": {
    "operationId": "get_analytics_actions_aggregates_job",
    "functionName": "get_analytics_actions_aggregates_job",
    "signature": "get_analytics_actions_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for action aggregates\n    api_response = api_instance.get_analytics_actions_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_actions_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_actions_aggregates_job_results": {
    "operationId": "get_analytics_actions_aggregates_job_results",
    "functionName": "get_analytics_actions_aggregates_job_results",
    "signature": "get_analytics_actions_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ActionAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async aggregates query\n    api_response = api_instance.get_analytics_actions_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_actions_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_agentcopilots_aggregates_job": {
    "operationId": "get_analytics_agentcopilots_aggregates_job",
    "functionName": "get_analytics_agentcopilots_aggregates_job",
    "signature": "get_analytics_agentcopilots_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for agent copilot aggregates\n    api_response = api_instance.get_analytics_agentcopilots_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_agentcopilots_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_agentcopilots_aggregates_job_results": {
    "operationId": "get_analytics_agentcopilots_aggregates_job_results",
    "functionName": "get_analytics_agentcopilots_aggregates_job_results",
    "signature": "get_analytics_agentcopilots_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "AgentCopilotAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async aggregates query\n    api_response = api_instance.get_analytics_agentcopilots_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_agentcopilots_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_botflow_divisions_reportingturns": {
    "operationId": "get_analytics_botflow_divisions_reportingturns",
    "functionName": "get_analytics_botflow_divisions_reportingturns",
    "signature": "get_analytics_botflow_divisions_reportingturns(bot_flow_id, after, page_size, interval, action_id, session_id, language, ask_action_results)",
    "parameters": [
      {
        "name": "bot_flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "action_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "session_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "language",
        "type": "str",
        "required": "false"
      },
      {
        "name": "ask_action_results",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ReportingTurnsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbot_flow_id = 'bot_flow_id_example' # str | ID of the bot flow.\nafter = 'after_example' # str | The cursor that points to the ID of the last item in the list of entities that has been returned. (optional)\npage_size = ''50'' # str | Max number of entities to return. Maximum of 250 (optional) (default to '50')\ninterval = '2023-07-17T08:15:44.586Z/2023-07-26T09:22:33.111Z' # str | Date range filter based on the date the individual resources were completed. UTC is the default if no TZ is supplied, however alternate timezones can be used e.g: '2022-11-22T09:11:11.111+08:00/2022-11-30T07:17:44.586-07'. . Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\naction_id = 'action_id_example' # str | Optional action ID to get the reporting turns associated to a particular flow action (optional)\nsession_id = 'session_id_example' # str | Optional session ID to get the reporting turns for a particular session. Specifying a session ID alongside an action ID or a language or any ask action results is not allowed. (optional)\nlanguage = 'en-us' # str | Optional language code to get the reporting turns for a particular language (optional)\nask_action_results = 'ask_action_results_example' # str | Optional case-insensitive comma separated list of ask action results to filter the reporting turns. (optional)\n\ntry:\n    # Get Reporting Turns (division aware).\n    api_response = api_instance.get_analytics_botflow_divisions_reportingturns(bot_flow_id, after=after, page_size=page_size, interval=interval, action_id=action_id, session_id=session_id, language=language, ask_action_results=ask_action_results)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_botflow_divisions_reportingturns: %s\\n\" % e)"
  },
  "get_analytics_botflow_reportingturns": {
    "operationId": "get_analytics_botflow_reportingturns",
    "functionName": "get_analytics_botflow_reportingturns",
    "signature": "get_analytics_botflow_reportingturns(bot_flow_id, after, page_size, interval, action_id, session_id, language, ask_action_results)",
    "parameters": [
      {
        "name": "bot_flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "action_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "session_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "language",
        "type": "str",
        "required": "false"
      },
      {
        "name": "ask_action_results",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ReportingTurnsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbot_flow_id = 'bot_flow_id_example' # str | ID of the bot flow.\nafter = 'after_example' # str | The cursor that points to the ID of the last item in the list of entities that has been returned. (optional)\npage_size = ''50'' # str | Max number of entities to return. Maximum of 250 (optional) (default to '50')\ninterval = '2023-07-17T08:15:44.586Z/2023-07-26T09:22:33.111Z' # str | Date range filter based on the date the individual resources were completed. UTC is the default if no TZ is supplied, however alternate timezones can be used e.g: '2022-11-22T09:11:11.111+08:00/2022-11-30T07:17:44.586-07'. . Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\naction_id = 'action_id_example' # str | Optional action ID to get the reporting turns associated to a particular flow action (optional)\nsession_id = 'session_id_example' # str | Optional session ID to get the reporting turns for a particular session. Specifying a session ID alongside an action ID or a language or any ask action results is not allowed. (optional)\nlanguage = 'en-us' # str | Optional language code to get the reporting turns for a particular language (optional)\nask_action_results = 'ask_action_results_example' # str | Optional case-insensitive comma separated list of ask action results to filter the reporting turns. (optional)\n\ntry:\n    # Get Reporting Turns.\n    api_response = api_instance.get_analytics_botflow_reportingturns(bot_flow_id, after=after, page_size=page_size, interval=interval, action_id=action_id, session_id=session_id, language=language, ask_action_results=ask_action_results)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_botflow_reportingturns: %s\\n\" % e)"
  },
  "get_analytics_botflow_sessions": {
    "operationId": "get_analytics_botflow_sessions",
    "functionName": "get_analytics_botflow_sessions",
    "signature": "get_analytics_botflow_sessions(bot_flow_id, after, page_size, interval, bot_result_categories, end_language)",
    "parameters": [
      {
        "name": "bot_flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "bot_result_categories",
        "type": "str",
        "required": "false"
      },
      {
        "name": "end_language",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SessionsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbot_flow_id = 'bot_flow_id_example' # str | ID of the bot flow.\nafter = 'after_example' # str | The cursor that points to the ID of the last item in the list of entities that has been returned. (optional)\npage_size = ''50'' # str | Max number of entities to return. Maximum of 250 (optional) (default to '50')\ninterval = '2023-07-17T08:15:44.586Z/2023-07-26T09:22:33.111Z' # str | Date range filter based on the date the individual resources were completed. UTC is the default if no TZ is supplied, however alternate timezones can be used e.g: '2022-11-22T09:11:11.111+08:00/2022-11-30T07:17:44.586-07'. . Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\nbot_result_categories = 'bot_result_categories_example' # str | Optional case-insensitive comma separated list of Bot Result Categories to filter sessions by. (optional)\nend_language = 'end_language_example' # str | Optional case-insensitive language code to filter sessions by the language the sessions ended in. (optional)\n\ntry:\n    # Get Bot Flow Sessions.\n    api_response = api_instance.get_analytics_botflow_sessions(bot_flow_id, after=after, page_size=page_size, interval=interval, bot_result_categories=bot_result_categories, end_language=end_language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_botflow_sessions: %s\\n\" % e)"
  },
  "get_analytics_bots_aggregates_job": {
    "operationId": "get_analytics_bots_aggregates_job",
    "functionName": "get_analytics_bots_aggregates_job",
    "signature": "get_analytics_bots_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for bot aggregates\n    api_response = api_instance.get_analytics_bots_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_bots_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_bots_aggregates_job_results": {
    "operationId": "get_analytics_bots_aggregates_job_results",
    "functionName": "get_analytics_bots_aggregates_job_results",
    "signature": "get_analytics_bots_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "BotAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async aggregates query\n    api_response = api_instance.get_analytics_bots_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_bots_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_conversation_details": {
    "operationId": "get_analytics_conversation_details",
    "functionName": "get_analytics_conversation_details",
    "signature": "get_analytics_conversation_details(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AnalyticsConversationWithoutAttributes",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\n\ntry:\n    # Get a conversation by id\n    api_response = api_instance.get_analytics_conversation_details(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_analytics_conversation_details: %s\\n\" % e)"
  },
  "get_analytics_conversations_aggregates_job": {
    "operationId": "get_analytics_conversations_aggregates_job",
    "functionName": "get_analytics_conversations_aggregates_job",
    "signature": "get_analytics_conversations_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for conversation aggregates\n    api_response = api_instance.get_analytics_conversations_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_analytics_conversations_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_conversations_aggregates_job_results": {
    "operationId": "get_analytics_conversations_aggregates_job_results",
    "functionName": "get_analytics_conversations_aggregates_job_results",
    "signature": "get_analytics_conversations_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ConversationAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async aggregates query\n    api_response = api_instance.get_analytics_conversations_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_analytics_conversations_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_conversations_details": {
    "operationId": "get_analytics_conversations_details",
    "functionName": "get_analytics_conversations_details",
    "signature": "get_analytics_conversations_details(id)",
    "parameters": [
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "AnalyticsConversationWithoutAttributesMultiGetResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nid = ['id_example'] # list[str] | Comma-separated conversation ids (optional)\n\ntry:\n    # Gets multiple conversations by id\n    api_response = api_instance.get_analytics_conversations_details(id=id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_analytics_conversations_details: %s\\n\" % e)"
  },
  "get_analytics_conversations_details_job": {
    "operationId": "get_analytics_conversations_details_job",
    "functionName": "get_analytics_conversations_details_job",
    "signature": "get_analytics_conversations_details_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for conversation details\n    api_response = api_instance.get_analytics_conversations_details_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_analytics_conversations_details_job: %s\\n\" % e)"
  },
  "get_analytics_conversations_details_job_results": {
    "operationId": "get_analytics_conversations_details_job_results",
    "functionName": "get_analytics_conversations_details_job_results",
    "signature": "get_analytics_conversations_details_job_results(job_id, cursor, page_size)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "AnalyticsConversationAsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Indicates where to resume query results (not required for first page) (optional)\npage_size = 56 # int | The desired maximum number of results (optional)\n\ntry:\n    # Fetch a page of results for an async details job\n    api_response = api_instance.get_analytics_conversations_details_job_results(job_id, cursor=cursor, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_analytics_conversations_details_job_results: %s\\n\" % e)"
  },
  "get_analytics_conversations_details_jobs_availability": {
    "operationId": "get_analytics_conversations_details_jobs_availability",
    "functionName": "get_analytics_conversations_details_jobs_availability",
    "signature": "get_analytics_conversations_details_jobs_availability()",
    "return": "DataAvailabilityResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Lookup the datalake availability date and time\n    api_response = api_instance.get_analytics_conversations_details_jobs_availability()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_analytics_conversations_details_jobs_availability: %s\\n\" % e)"
  },
  "get_analytics_dataretention_settings": {
    "operationId": "get_analytics_dataretention_settings",
    "functionName": "get_analytics_dataretention_settings",
    "signature": "get_analytics_dataretention_settings()",
    "return": "AnalyticsDataRetentionResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\n\ntry:\n    # Get analytics data retention setting\n    api_response = api_instance.get_analytics_dataretention_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_dataretention_settings: %s\\n\" % e)"
  },
  "get_analytics_evaluations_aggregates_job": {
    "operationId": "get_analytics_evaluations_aggregates_job",
    "functionName": "get_analytics_evaluations_aggregates_job",
    "signature": "get_analytics_evaluations_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for evaluation aggregates\n    api_response = api_instance.get_analytics_evaluations_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_analytics_evaluations_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_evaluations_aggregates_job_results": {
    "operationId": "get_analytics_evaluations_aggregates_job_results",
    "functionName": "get_analytics_evaluations_aggregates_job_results",
    "signature": "get_analytics_evaluations_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "EvaluationAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async aggregates query\n    api_response = api_instance.get_analytics_evaluations_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_analytics_evaluations_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_flowexecutions_aggregates_job": {
    "operationId": "get_analytics_flowexecutions_aggregates_job",
    "functionName": "get_analytics_flowexecutions_aggregates_job",
    "signature": "get_analytics_flowexecutions_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for flow execution aggregates\n    api_response = api_instance.get_analytics_flowexecutions_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_flowexecutions_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_flowexecutions_aggregates_job_results": {
    "operationId": "get_analytics_flowexecutions_aggregates_job_results",
    "functionName": "get_analytics_flowexecutions_aggregates_job_results",
    "signature": "get_analytics_flowexecutions_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "FlowExecutionAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async aggregates query\n    api_response = api_instance.get_analytics_flowexecutions_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_flowexecutions_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_flows_aggregates_job": {
    "operationId": "get_analytics_flows_aggregates_job",
    "functionName": "get_analytics_flows_aggregates_job",
    "signature": "get_analytics_flows_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FlowsApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for Flow aggregates\n    api_response = api_instance.get_analytics_flows_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FlowsApi->get_analytics_flows_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_flows_aggregates_job_results": {
    "operationId": "get_analytics_flows_aggregates_job_results",
    "functionName": "get_analytics_flows_aggregates_job_results",
    "signature": "get_analytics_flows_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "FlowAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FlowsApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async aggregates query\n    api_response = api_instance.get_analytics_flows_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FlowsApi->get_analytics_flows_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_journeys_aggregates_job": {
    "operationId": "get_analytics_journeys_aggregates_job",
    "functionName": "get_analytics_journeys_aggregates_job",
    "signature": "get_analytics_journeys_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for journey aggregates\n    api_response = api_instance.get_analytics_journeys_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_analytics_journeys_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_journeys_aggregates_job_results": {
    "operationId": "get_analytics_journeys_aggregates_job_results",
    "functionName": "get_analytics_journeys_aggregates_job_results",
    "signature": "get_analytics_journeys_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "JourneyAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async aggregates query\n    api_response = api_instance.get_analytics_journeys_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_analytics_journeys_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_knowledge_aggregates_job": {
    "operationId": "get_analytics_knowledge_aggregates_job",
    "functionName": "get_analytics_knowledge_aggregates_job",
    "signature": "get_analytics_knowledge_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for knowledge aggregates\n    api_response = api_instance.get_analytics_knowledge_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_knowledge_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_knowledge_aggregates_job_results": {
    "operationId": "get_analytics_knowledge_aggregates_job_results",
    "functionName": "get_analytics_knowledge_aggregates_job_results",
    "signature": "get_analytics_knowledge_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "KnowledgeAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async aggregates query\n    api_response = api_instance.get_analytics_knowledge_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_knowledge_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_reporting_dashboards_user": {
    "operationId": "get_analytics_reporting_dashboards_user",
    "functionName": "get_analytics_reporting_dashboards_user",
    "signature": "get_analytics_reporting_dashboards_user(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DashboardUser",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Get dashboards summary for a user\n    api_response = api_instance.get_analytics_reporting_dashboards_user(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_reporting_dashboards_user: %s\\n\" % e)"
  },
  "get_analytics_reporting_dashboards_users": {
    "operationId": "get_analytics_reporting_dashboards_users",
    "functionName": "get_analytics_reporting_dashboards_users",
    "signature": "get_analytics_reporting_dashboards_users(sort_by, page_number, page_size, id, state)",
    "parameters": [
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "state",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DashboardUserListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nsort_by = ''asc'' # str |  (optional) (default to 'asc')\npage_number = 1 # int |  (optional) (default to 1)\npage_size = 25 # int |  (optional) (default to 25)\nid = ['id_example'] # list[str] | A list of user IDs to fetch by bulk (optional)\nstate = 'state_example' # str | Only list users of this state (optional)\n\ntry:\n    # Get dashboards summary for users in a org\n    api_response = api_instance.get_analytics_reporting_dashboards_users(sort_by=sort_by, page_number=page_number, page_size=page_size, id=id, state=state)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_reporting_dashboards_users: %s\\n\" % e)"
  },
  "get_analytics_reporting_exports": {
    "operationId": "get_analytics_reporting_exports",
    "functionName": "get_analytics_reporting_exports",
    "signature": "get_analytics_reporting_exports(page_number, page_size)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "ReportingExportJobListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get all view export requests for a user\n    api_response = api_instance.get_analytics_reporting_exports(page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_reporting_exports: %s\\n\" % e)"
  },
  "get_analytics_reporting_exports_metadata": {
    "operationId": "get_analytics_reporting_exports_metadata",
    "functionName": "get_analytics_reporting_exports_metadata",
    "signature": "get_analytics_reporting_exports_metadata()",
    "return": "ReportingExportMetadataJobListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\n\ntry:\n    # Get all export metadata\n    api_response = api_instance.get_analytics_reporting_exports_metadata()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_reporting_exports_metadata: %s\\n\" % e)"
  },
  "get_analytics_reporting_settings": {
    "operationId": "get_analytics_reporting_settings",
    "functionName": "get_analytics_reporting_settings",
    "signature": "get_analytics_reporting_settings()",
    "return": "AnalyticsReportingSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\n\ntry:\n    # Get AnalyticsReportingSettings for an organization\n    api_response = api_instance.get_analytics_reporting_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_reporting_settings: %s\\n\" % e)"
  },
  "get_analytics_reporting_settings_dashboards_query": {
    "operationId": "get_analytics_reporting_settings_dashboards_query",
    "functionName": "get_analytics_reporting_settings_dashboards_query",
    "signature": "get_analytics_reporting_settings_dashboards_query(dashboard_type, dashboard_access_filter, sort_by, page_number, page_size)",
    "parameters": [
      {
        "name": "dashboard_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "dashboard_access_filter",
        "type": "str",
        "required": "true"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "DashboardConfigurationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\ndashboard_type = 'dashboard_type_example' # str | List dashboard of given type\ndashboard_access_filter = 'dashboard_access_filter_example' # str | Filter dashboard based on the owner of dashboard\nsort_by = ''desc'' # str |  (optional) (default to 'desc')\npage_number = 1 # int |  (optional) (default to 1)\npage_size = 9 # int |  (optional) (default to 9)\n\ntry:\n    # Get list of dashboard configurations\n    api_response = api_instance.get_analytics_reporting_settings_dashboards_query(dashboard_type, dashboard_access_filter, sort_by=sort_by, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_reporting_settings_dashboards_query: %s\\n\" % e)"
  },
  "get_analytics_reporting_settings_user_dashboards": {
    "operationId": "get_analytics_reporting_settings_user_dashboards",
    "functionName": "get_analytics_reporting_settings_user_dashboards",
    "signature": "get_analytics_reporting_settings_user_dashboards(user_id, sort_by, page_number, page_size, public_only, favorite_only, name)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "public_only",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "favorite_only",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DashboardConfigurationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nuser_id = 'user_id_example' # str | User ID\nsort_by = ''asc'' # str |  (optional) (default to 'asc')\npage_number = 1 # int |  (optional) (default to 1)\npage_size = 50 # int |  (optional) (default to 50)\npublic_only = True # bool | If true, retrieve only public dashboards (optional)\nfavorite_only = True # bool | If true, retrieve only favorite dashboards (optional)\nname = 'name_example' # str | retrieve dashboards that match with given name (optional)\n\ntry:\n    # Get list of dashboards for an user\n    api_response = api_instance.get_analytics_reporting_settings_user_dashboards(user_id, sort_by=sort_by, page_number=page_number, page_size=page_size, public_only=public_only, favorite_only=favorite_only, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_reporting_settings_user_dashboards: %s\\n\" % e)"
  },
  "get_analytics_resolutions_aggregates_job": {
    "operationId": "get_analytics_resolutions_aggregates_job",
    "functionName": "get_analytics_resolutions_aggregates_job",
    "signature": "get_analytics_resolutions_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for resolution aggregates\n    api_response = api_instance.get_analytics_resolutions_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_resolutions_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_resolutions_aggregates_job_results": {
    "operationId": "get_analytics_resolutions_aggregates_job_results",
    "functionName": "get_analytics_resolutions_aggregates_job_results",
    "signature": "get_analytics_resolutions_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ResolutionAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async aggregates query\n    api_response = api_instance.get_analytics_resolutions_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_resolutions_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_surveys_aggregates_job": {
    "operationId": "get_analytics_surveys_aggregates_job",
    "functionName": "get_analytics_surveys_aggregates_job",
    "signature": "get_analytics_surveys_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for survey aggregates\n    api_response = api_instance.get_analytics_surveys_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_analytics_surveys_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_surveys_aggregates_job_results": {
    "operationId": "get_analytics_surveys_aggregates_job_results",
    "functionName": "get_analytics_surveys_aggregates_job_results",
    "signature": "get_analytics_surveys_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SurveyAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async aggregates query\n    api_response = api_instance.get_analytics_surveys_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_analytics_surveys_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_taskmanagement_aggregates_job": {
    "operationId": "get_analytics_taskmanagement_aggregates_job",
    "functionName": "get_analytics_taskmanagement_aggregates_job",
    "signature": "get_analytics_taskmanagement_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for task management aggregates\n    api_response = api_instance.get_analytics_taskmanagement_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_taskmanagement_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_taskmanagement_aggregates_job_results": {
    "operationId": "get_analytics_taskmanagement_aggregates_job_results",
    "functionName": "get_analytics_taskmanagement_aggregates_job_results",
    "signature": "get_analytics_taskmanagement_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TaskManagementAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async task management query\n    api_response = api_instance.get_analytics_taskmanagement_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_taskmanagement_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_transcripts_aggregates_job": {
    "operationId": "get_analytics_transcripts_aggregates_job",
    "functionName": "get_analytics_transcripts_aggregates_job",
    "signature": "get_analytics_transcripts_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for transcript aggregates\n    api_response = api_instance.get_analytics_transcripts_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_transcripts_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_transcripts_aggregates_job_results": {
    "operationId": "get_analytics_transcripts_aggregates_job_results",
    "functionName": "get_analytics_transcripts_aggregates_job_results",
    "signature": "get_analytics_transcripts_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TranscriptAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async aggregates query\n    api_response = api_instance.get_analytics_transcripts_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->get_analytics_transcripts_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_users_aggregates_job": {
    "operationId": "get_analytics_users_aggregates_job",
    "functionName": "get_analytics_users_aggregates_job",
    "signature": "get_analytics_users_aggregates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for user aggregates\n    api_response = api_instance.get_analytics_users_aggregates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_analytics_users_aggregates_job: %s\\n\" % e)"
  },
  "get_analytics_users_aggregates_job_results": {
    "operationId": "get_analytics_users_aggregates_job_results",
    "functionName": "get_analytics_users_aggregates_job_results",
    "signature": "get_analytics_users_aggregates_job_results(job_id, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UserAsyncAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Cursor token to retrieve next page (optional)\n\ntry:\n    # Fetch a page of results for an async aggregates query\n    api_response = api_instance.get_analytics_users_aggregates_job_results(job_id, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_analytics_users_aggregates_job_results: %s\\n\" % e)"
  },
  "get_analytics_users_details_job": {
    "operationId": "get_analytics_users_details_job",
    "functionName": "get_analytics_users_details_job",
    "signature": "get_analytics_users_details_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get status for async query for user details\n    api_response = api_instance.get_analytics_users_details_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_analytics_users_details_job: %s\\n\" % e)"
  },
  "get_analytics_users_details_job_results": {
    "operationId": "get_analytics_users_details_job_results",
    "functionName": "get_analytics_users_details_job_results",
    "signature": "get_analytics_users_details_job_results(job_id, cursor, page_size)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "AnalyticsUserDetailsAsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\njob_id = 'job_id_example' # str | jobId\ncursor = 'cursor_example' # str | Indicates where to resume query results (not required for first page) (optional)\npage_size = 56 # int | The desired maximum number of results (optional)\n\ntry:\n    # Fetch a page of results for an async query\n    api_response = api_instance.get_analytics_users_details_job_results(job_id, cursor=cursor, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_analytics_users_details_job_results: %s\\n\" % e)"
  },
  "get_analytics_users_details_jobs_availability": {
    "operationId": "get_analytics_users_details_jobs_availability",
    "functionName": "get_analytics_users_details_jobs_availability",
    "signature": "get_analytics_users_details_jobs_availability()",
    "return": "DataAvailabilityResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\n\ntry:\n    # Lookup the datalake availability date and time\n    api_response = api_instance.get_analytics_users_details_jobs_availability()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_analytics_users_details_jobs_availability: %s\\n\" % e)"
  },
  "patch_analytics_reporting_settings": {
    "operationId": "patch_analytics_reporting_settings",
    "functionName": "patch_analytics_reporting_settings",
    "signature": "patch_analytics_reporting_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AnalyticsReportingSettings",
        "required": "true"
      }
    ],
    "return": "AnalyticsReportingSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.AnalyticsReportingSettings() # AnalyticsReportingSettings | AnalyticsReportingSettingsRequest\n\ntry:\n    # Patch AnalyticsReportingSettings values for an organization\n    api_response = api_instance.patch_analytics_reporting_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->patch_analytics_reporting_settings: %s\\n\" % e)"
  },
  "post_analytics_actions_aggregates_jobs": {
    "operationId": "post_analytics_actions_aggregates_jobs",
    "functionName": "post_analytics_actions_aggregates_jobs",
    "signature": "post_analytics_actions_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ActionAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.ActionAsyncAggregationQuery() # ActionAsyncAggregationQuery | query\n\ntry:\n    # Query for action aggregates asynchronously\n    api_response = api_instance.post_analytics_actions_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_actions_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_actions_aggregates_query": {
    "operationId": "post_analytics_actions_aggregates_query",
    "functionName": "post_analytics_actions_aggregates_query",
    "signature": "post_analytics_actions_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ActionAggregationQuery",
        "required": "true"
      }
    ],
    "return": "ActionAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.ActionAggregationQuery() # ActionAggregationQuery | query\n\ntry:\n    # Query for action aggregates\n    api_response = api_instance.post_analytics_actions_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_actions_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_agentcopilots_aggregates_jobs": {
    "operationId": "post_analytics_agentcopilots_aggregates_jobs",
    "functionName": "post_analytics_agentcopilots_aggregates_jobs",
    "signature": "post_analytics_agentcopilots_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AgentCopilotAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.AgentCopilotAsyncAggregationQuery() # AgentCopilotAsyncAggregationQuery | query\n\ntry:\n    # Query for agent copilot aggregates asynchronously\n    api_response = api_instance.post_analytics_agentcopilots_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_agentcopilots_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_agentcopilots_aggregates_query": {
    "operationId": "post_analytics_agentcopilots_aggregates_query",
    "functionName": "post_analytics_agentcopilots_aggregates_query",
    "signature": "post_analytics_agentcopilots_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AgentCopilotAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AgentCopilotAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.AgentCopilotAggregationQuery() # AgentCopilotAggregationQuery | query\n\ntry:\n    # Query for agent copilot aggregates\n    api_response = api_instance.post_analytics_agentcopilots_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_agentcopilots_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_bots_aggregates_jobs": {
    "operationId": "post_analytics_bots_aggregates_jobs",
    "functionName": "post_analytics_bots_aggregates_jobs",
    "signature": "post_analytics_bots_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BotAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.BotAsyncAggregationQuery() # BotAsyncAggregationQuery | query\n\ntry:\n    # Query for bot aggregates asynchronously\n    api_response = api_instance.post_analytics_bots_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_bots_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_bots_aggregates_query": {
    "operationId": "post_analytics_bots_aggregates_query",
    "functionName": "post_analytics_bots_aggregates_query",
    "signature": "post_analytics_bots_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BotAggregationQuery",
        "required": "true"
      }
    ],
    "return": "BotAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.BotAggregationQuery() # BotAggregationQuery | query\n\ntry:\n    # Query for bot aggregates\n    api_response = api_instance.post_analytics_bots_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_bots_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_conversation_details_properties": {
    "operationId": "post_analytics_conversation_details_properties",
    "functionName": "post_analytics_conversation_details_properties",
    "signature": "post_analytics_conversation_details_properties(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PropertyIndexRequest",
        "required": "true"
      }
    ],
    "return": "PropertyIndexRequest",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.PropertyIndexRequest() # PropertyIndexRequest | request\n\ntry:\n    # Index conversation properties\n    api_response = api_instance.post_analytics_conversation_details_properties(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_analytics_conversation_details_properties: %s\\n\" % e)"
  },
  "post_analytics_conversations_activity_query": {
    "operationId": "post_analytics_conversations_activity_query",
    "functionName": "post_analytics_conversations_activity_query",
    "signature": "post_analytics_conversations_activity_query(body, page_size, page_number)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationActivityQuery",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "ConversationActivityResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.ConversationActivityQuery() # ConversationActivityQuery | query\npage_size = 56 # int | The desired page size (optional)\npage_number = 56 # int | The desired page number (optional)\n\ntry:\n    # Query for conversation activity observations\n    api_response = api_instance.post_analytics_conversations_activity_query(body, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_analytics_conversations_activity_query: %s\\n\" % e)"
  },
  "post_analytics_conversations_aggregates_jobs": {
    "operationId": "post_analytics_conversations_aggregates_jobs",
    "functionName": "post_analytics_conversations_aggregates_jobs",
    "signature": "post_analytics_conversations_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.ConversationAsyncAggregationQuery() # ConversationAsyncAggregationQuery | query\n\ntry:\n    # Query for conversation aggregates asynchronously\n    api_response = api_instance.post_analytics_conversations_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_analytics_conversations_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_conversations_aggregates_query": {
    "operationId": "post_analytics_conversations_aggregates_query",
    "functionName": "post_analytics_conversations_aggregates_query",
    "signature": "post_analytics_conversations_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationAggregationQuery",
        "required": "true"
      }
    ],
    "return": "ConversationAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.ConversationAggregationQuery() # ConversationAggregationQuery | query\n\ntry:\n    # Query for conversation aggregates\n    api_response = api_instance.post_analytics_conversations_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_analytics_conversations_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_conversations_details_jobs": {
    "operationId": "post_analytics_conversations_details_jobs",
    "functionName": "post_analytics_conversations_details_jobs",
    "signature": "post_analytics_conversations_details_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AsyncConversationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.AsyncConversationQuery() # AsyncConversationQuery | query\n\ntry:\n    # Query for conversation details asynchronously\n    api_response = api_instance.post_analytics_conversations_details_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_analytics_conversations_details_jobs: %s\\n\" % e)"
  },
  "post_analytics_conversations_details_query": {
    "operationId": "post_analytics_conversations_details_query",
    "functionName": "post_analytics_conversations_details_query",
    "signature": "post_analytics_conversations_details_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationQuery",
        "required": "true"
      }
    ],
    "return": "AnalyticsConversationQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.ConversationQuery() # ConversationQuery | query\n\ntry:\n    # Query for conversation details\n    api_response = api_instance.post_analytics_conversations_details_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_analytics_conversations_details_query: %s\\n\" % e)"
  },
  "post_analytics_conversations_transcripts_query": {
    "operationId": "post_analytics_conversations_transcripts_query",
    "functionName": "post_analytics_conversations_transcripts_query",
    "signature": "post_analytics_conversations_transcripts_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TranscriptConversationDetailSearchRequest",
        "required": "true"
      }
    ],
    "return": "AnalyticsConversationWithoutAttributesMultiGetResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SearchApi();\nbody = PureCloudPlatformClientV2.TranscriptConversationDetailSearchRequest() # TranscriptConversationDetailSearchRequest | Search request options\n\ntry:\n    # Search resources.\n    api_response = api_instance.post_analytics_conversations_transcripts_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SearchApi->post_analytics_conversations_transcripts_query: %s\\n\" % e)"
  },
  "post_analytics_evaluations_aggregates_jobs": {
    "operationId": "post_analytics_evaluations_aggregates_jobs",
    "functionName": "post_analytics_evaluations_aggregates_jobs",
    "signature": "post_analytics_evaluations_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EvaluationAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.EvaluationAsyncAggregationQuery() # EvaluationAsyncAggregationQuery | query\n\ntry:\n    # Query for evaluation aggregates asynchronously\n    api_response = api_instance.post_analytics_evaluations_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_analytics_evaluations_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_evaluations_aggregates_query": {
    "operationId": "post_analytics_evaluations_aggregates_query",
    "functionName": "post_analytics_evaluations_aggregates_query",
    "signature": "post_analytics_evaluations_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EvaluationAggregationQuery",
        "required": "true"
      }
    ],
    "return": "EvaluationAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.EvaluationAggregationQuery() # EvaluationAggregationQuery | query\n\ntry:\n    # Query for evaluation aggregates\n    api_response = api_instance.post_analytics_evaluations_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_analytics_evaluations_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_flowexecutions_aggregates_jobs": {
    "operationId": "post_analytics_flowexecutions_aggregates_jobs",
    "functionName": "post_analytics_flowexecutions_aggregates_jobs",
    "signature": "post_analytics_flowexecutions_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowExecutionAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.FlowExecutionAsyncAggregationQuery() # FlowExecutionAsyncAggregationQuery | query\n\ntry:\n    # Query for flow execution aggregates asynchronously\n    api_response = api_instance.post_analytics_flowexecutions_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_flowexecutions_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_flowexecutions_aggregates_query": {
    "operationId": "post_analytics_flowexecutions_aggregates_query",
    "functionName": "post_analytics_flowexecutions_aggregates_query",
    "signature": "post_analytics_flowexecutions_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowExecutionAggregationQuery",
        "required": "true"
      }
    ],
    "return": "FlowExecutionAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.FlowExecutionAggregationQuery() # FlowExecutionAggregationQuery | query\n\ntry:\n    # Query for flow execution aggregates\n    api_response = api_instance.post_analytics_flowexecutions_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_flowexecutions_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_flows_activity_query": {
    "operationId": "post_analytics_flows_activity_query",
    "functionName": "post_analytics_flows_activity_query",
    "signature": "post_analytics_flows_activity_query(body, page_size, page_number)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowActivityQuery",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "FlowActivityResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FlowsApi();\nbody = PureCloudPlatformClientV2.FlowActivityQuery() # FlowActivityQuery | query\npage_size = 56 # int | The desired page size (optional)\npage_number = 56 # int | The desired page number (optional)\n\ntry:\n    # Query for flow activity observations\n    api_response = api_instance.post_analytics_flows_activity_query(body, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FlowsApi->post_analytics_flows_activity_query: %s\\n\" % e)"
  },
  "post_analytics_flows_aggregates_jobs": {
    "operationId": "post_analytics_flows_aggregates_jobs",
    "functionName": "post_analytics_flows_aggregates_jobs",
    "signature": "post_analytics_flows_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FlowsApi();\nbody = PureCloudPlatformClientV2.FlowAsyncAggregationQuery() # FlowAsyncAggregationQuery | query\n\ntry:\n    # Query for flow aggregates asynchronously\n    api_response = api_instance.post_analytics_flows_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FlowsApi->post_analytics_flows_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_flows_aggregates_query": {
    "operationId": "post_analytics_flows_aggregates_query",
    "functionName": "post_analytics_flows_aggregates_query",
    "signature": "post_analytics_flows_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowAggregationQuery",
        "required": "true"
      }
    ],
    "return": "FlowAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FlowsApi();\nbody = PureCloudPlatformClientV2.FlowAggregationQuery() # FlowAggregationQuery | query\n\ntry:\n    # Query for flow aggregates\n    api_response = api_instance.post_analytics_flows_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FlowsApi->post_analytics_flows_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_flows_observations_query": {
    "operationId": "post_analytics_flows_observations_query",
    "functionName": "post_analytics_flows_observations_query",
    "signature": "post_analytics_flows_observations_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowObservationQuery",
        "required": "true"
      }
    ],
    "return": "FlowObservationQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FlowsApi();\nbody = PureCloudPlatformClientV2.FlowObservationQuery() # FlowObservationQuery | query\n\ntry:\n    # Query for flow observations\n    api_response = api_instance.post_analytics_flows_observations_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FlowsApi->post_analytics_flows_observations_query: %s\\n\" % e)"
  },
  "post_analytics_journeys_aggregates_jobs": {
    "operationId": "post_analytics_journeys_aggregates_jobs",
    "functionName": "post_analytics_journeys_aggregates_jobs",
    "signature": "post_analytics_journeys_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "JourneyAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nbody = PureCloudPlatformClientV2.JourneyAsyncAggregationQuery() # JourneyAsyncAggregationQuery | query\n\ntry:\n    # Query for journey aggregates asynchronously\n    api_response = api_instance.post_analytics_journeys_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_analytics_journeys_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_journeys_aggregates_query": {
    "operationId": "post_analytics_journeys_aggregates_query",
    "functionName": "post_analytics_journeys_aggregates_query",
    "signature": "post_analytics_journeys_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "JourneyAggregationQuery",
        "required": "true"
      }
    ],
    "return": "JourneyAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nbody = PureCloudPlatformClientV2.JourneyAggregationQuery() # JourneyAggregationQuery | query\n\ntry:\n    # Query for journey aggregates\n    api_response = api_instance.post_analytics_journeys_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_analytics_journeys_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_knowledge_aggregates_jobs": {
    "operationId": "post_analytics_knowledge_aggregates_jobs",
    "functionName": "post_analytics_knowledge_aggregates_jobs",
    "signature": "post_analytics_knowledge_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "KnowledgeAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.KnowledgeAsyncAggregationQuery() # KnowledgeAsyncAggregationQuery | query\n\ntry:\n    # Query for knowledge aggregates asynchronously\n    api_response = api_instance.post_analytics_knowledge_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_knowledge_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_knowledge_aggregates_query": {
    "operationId": "post_analytics_knowledge_aggregates_query",
    "functionName": "post_analytics_knowledge_aggregates_query",
    "signature": "post_analytics_knowledge_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "KnowledgeAggregationQuery",
        "required": "true"
      }
    ],
    "return": "KnowledgeAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.KnowledgeAggregationQuery() # KnowledgeAggregationQuery | query\n\ntry:\n    # Query for knowledge aggregates\n    api_response = api_instance.post_analytics_knowledge_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_knowledge_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_queues_observations_query": {
    "operationId": "post_analytics_queues_observations_query",
    "functionName": "post_analytics_queues_observations_query",
    "signature": "post_analytics_queues_observations_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "QueueObservationQuery",
        "required": "true"
      }
    ],
    "return": "QueueObservationQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.QueueObservationQuery() # QueueObservationQuery | query\n\ntry:\n    # Query for queue observations\n    api_response = api_instance.post_analytics_queues_observations_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_analytics_queues_observations_query: %s\\n\" % e)"
  },
  "post_analytics_ratelimits_aggregates_query": {
    "operationId": "post_analytics_ratelimits_aggregates_query",
    "functionName": "post_analytics_ratelimits_aggregates_query",
    "signature": "post_analytics_ratelimits_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RateLimitAggregationQuery",
        "required": "true"
      }
    ],
    "return": "RateLimitAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.RateLimitAggregationQuery() # RateLimitAggregationQuery | query\n\ntry:\n    # Query for limits rate limit aggregates. Data populated when limits are exceeded or are close to being exceeded. Not a source of truth for limits hit but a best effort estimate.\n    api_response = api_instance.post_analytics_ratelimits_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_ratelimits_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_reporting_dashboards_users_bulk_remove": {
    "operationId": "post_analytics_reporting_dashboards_users_bulk_remove",
    "functionName": "post_analytics_reporting_dashboards_users_bulk_remove",
    "signature": "post_analytics_reporting_dashboards_users_bulk_remove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = ['body_example'] # list[str] | List of userIds\n\ntry:\n    # Bulk delete dashboards owned by other user(s)\n    api_instance.post_analytics_reporting_dashboards_users_bulk_remove(body)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_reporting_dashboards_users_bulk_remove: %s\\n\" % e)"
  },
  "post_analytics_reporting_exports": {
    "operationId": "post_analytics_reporting_exports",
    "functionName": "post_analytics_reporting_exports",
    "signature": "post_analytics_reporting_exports(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ReportingExportJobRequest",
        "required": "true"
      }
    ],
    "return": "ReportingExportJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.ReportingExportJobRequest() # ReportingExportJobRequest | ReportingExportJobRequest\n\ntry:\n    # Generate a view export request\n    api_response = api_instance.post_analytics_reporting_exports(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_reporting_exports: %s\\n\" % e)"
  },
  "post_analytics_reporting_settings_dashboards_bulk_remove": {
    "operationId": "post_analytics_reporting_settings_dashboards_bulk_remove",
    "functionName": "post_analytics_reporting_settings_dashboards_bulk_remove",
    "signature": "post_analytics_reporting_settings_dashboards_bulk_remove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DashboardConfigurationBulkRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.DashboardConfigurationBulkRequest() # DashboardConfigurationBulkRequest | \n\ntry:\n    # Bulk remove dashboard configurations\n    api_instance.post_analytics_reporting_settings_dashboards_bulk_remove(body)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_reporting_settings_dashboards_bulk_remove: %s\\n\" % e)"
  },
  "post_analytics_reporting_settings_dashboards_query": {
    "operationId": "post_analytics_reporting_settings_dashboards_query",
    "functionName": "post_analytics_reporting_settings_dashboards_query",
    "signature": "post_analytics_reporting_settings_dashboards_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DashboardConfigurationQueryRequest",
        "required": "true"
      }
    ],
    "return": "DashboardConfigurationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.DashboardConfigurationQueryRequest() # DashboardConfigurationQueryRequest | \n\ntry:\n    # Query dashboard configurations\n    api_response = api_instance.post_analytics_reporting_settings_dashboards_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_reporting_settings_dashboards_query: %s\\n\" % e)"
  },
  "post_analytics_resolutions_aggregates_jobs": {
    "operationId": "post_analytics_resolutions_aggregates_jobs",
    "functionName": "post_analytics_resolutions_aggregates_jobs",
    "signature": "post_analytics_resolutions_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ResolutionAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.ResolutionAsyncAggregationQuery() # ResolutionAsyncAggregationQuery | query\n\ntry:\n    # Query for resolution aggregates asynchronously\n    api_response = api_instance.post_analytics_resolutions_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_resolutions_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_routing_activity_query": {
    "operationId": "post_analytics_routing_activity_query",
    "functionName": "post_analytics_routing_activity_query",
    "signature": "post_analytics_routing_activity_query(body, page_size, page_number)",
    "parameters": [
      {
        "name": "body",
        "type": "RoutingActivityQuery",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "RoutingActivityResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.RoutingActivityQuery() # RoutingActivityQuery | query\npage_size = 56 # int | The desired page size (optional)\npage_number = 56 # int | The desired page number (optional)\n\ntry:\n    # Query for user activity observations\n    api_response = api_instance.post_analytics_routing_activity_query(body, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_analytics_routing_activity_query: %s\\n\" % e)"
  },
  "post_analytics_surveys_aggregates_jobs": {
    "operationId": "post_analytics_surveys_aggregates_jobs",
    "functionName": "post_analytics_surveys_aggregates_jobs",
    "signature": "post_analytics_surveys_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SurveyAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.SurveyAsyncAggregationQuery() # SurveyAsyncAggregationQuery | query\n\ntry:\n    # Query for survey aggregates asynchronously\n    api_response = api_instance.post_analytics_surveys_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_analytics_surveys_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_surveys_aggregates_query": {
    "operationId": "post_analytics_surveys_aggregates_query",
    "functionName": "post_analytics_surveys_aggregates_query",
    "signature": "post_analytics_surveys_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SurveyAggregationQuery",
        "required": "true"
      }
    ],
    "return": "SurveyAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.SurveyAggregationQuery() # SurveyAggregationQuery | query\n\ntry:\n    # Query for survey aggregates\n    api_response = api_instance.post_analytics_surveys_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_analytics_surveys_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_taskmanagement_aggregates_jobs": {
    "operationId": "post_analytics_taskmanagement_aggregates_jobs",
    "functionName": "post_analytics_taskmanagement_aggregates_jobs",
    "signature": "post_analytics_taskmanagement_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TaskManagementAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.TaskManagementAsyncAggregationQuery() # TaskManagementAsyncAggregationQuery | query\n\ntry:\n    # Query for task management aggregates asynchronously\n    api_response = api_instance.post_analytics_taskmanagement_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_taskmanagement_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_taskmanagement_aggregates_query": {
    "operationId": "post_analytics_taskmanagement_aggregates_query",
    "functionName": "post_analytics_taskmanagement_aggregates_query",
    "signature": "post_analytics_taskmanagement_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TaskManagementAggregationQuery",
        "required": "true"
      }
    ],
    "return": "TaskManagementAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.TaskManagementAggregationQuery() # TaskManagementAggregationQuery | query\n\ntry:\n    # Query for task management aggregates\n    api_response = api_instance.post_analytics_taskmanagement_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_taskmanagement_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_teams_activity_query": {
    "operationId": "post_analytics_teams_activity_query",
    "functionName": "post_analytics_teams_activity_query",
    "signature": "post_analytics_teams_activity_query(body, page_size, page_number)",
    "parameters": [
      {
        "name": "body",
        "type": "TeamActivityQuery",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "TeamActivityResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TeamsApi();\nbody = PureCloudPlatformClientV2.TeamActivityQuery() # TeamActivityQuery | query\npage_size = 56 # int | The desired page size (optional)\npage_number = 56 # int | The desired page number (optional)\n\ntry:\n    # Query for team activity observations\n    api_response = api_instance.post_analytics_teams_activity_query(body, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TeamsApi->post_analytics_teams_activity_query: %s\\n\" % e)"
  },
  "post_analytics_transcripts_aggregates_jobs": {
    "operationId": "post_analytics_transcripts_aggregates_jobs",
    "functionName": "post_analytics_transcripts_aggregates_jobs",
    "signature": "post_analytics_transcripts_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TranscriptAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.TranscriptAsyncAggregationQuery() # TranscriptAsyncAggregationQuery | query\n\ntry:\n    # Query for transcript aggregates asynchronously\n    api_response = api_instance.post_analytics_transcripts_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_transcripts_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_transcripts_aggregates_query": {
    "operationId": "post_analytics_transcripts_aggregates_query",
    "functionName": "post_analytics_transcripts_aggregates_query",
    "signature": "post_analytics_transcripts_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TranscriptAggregationQuery",
        "required": "true"
      }
    ],
    "return": "TranscriptAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.TranscriptAggregationQuery() # TranscriptAggregationQuery | query\n\ntry:\n    # Query for transcript aggregates\n    api_response = api_instance.post_analytics_transcripts_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->post_analytics_transcripts_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_users_activity_query": {
    "operationId": "post_analytics_users_activity_query",
    "functionName": "post_analytics_users_activity_query",
    "signature": "post_analytics_users_activity_query(body, page_size, page_number)",
    "parameters": [
      {
        "name": "body",
        "type": "UserActivityQuery",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "UserActivityResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = PureCloudPlatformClientV2.UserActivityQuery() # UserActivityQuery | query\npage_size = 56 # int | The desired page size (optional)\npage_number = 56 # int | The desired page number (optional)\n\ntry:\n    # Query for user activity observations\n    api_response = api_instance.post_analytics_users_activity_query(body, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_analytics_users_activity_query: %s\\n\" % e)"
  },
  "post_analytics_users_aggregates_jobs": {
    "operationId": "post_analytics_users_aggregates_jobs",
    "functionName": "post_analytics_users_aggregates_jobs",
    "signature": "post_analytics_users_aggregates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserAsyncAggregationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = PureCloudPlatformClientV2.UserAsyncAggregationQuery() # UserAsyncAggregationQuery | query\n\ntry:\n    # Query for user aggregates asynchronously\n    api_response = api_instance.post_analytics_users_aggregates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_analytics_users_aggregates_jobs: %s\\n\" % e)"
  },
  "post_analytics_users_aggregates_query": {
    "operationId": "post_analytics_users_aggregates_query",
    "functionName": "post_analytics_users_aggregates_query",
    "signature": "post_analytics_users_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserAggregationQuery",
        "required": "true"
      }
    ],
    "return": "UserAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = PureCloudPlatformClientV2.UserAggregationQuery() # UserAggregationQuery | query\n\ntry:\n    # Query for user aggregates\n    api_response = api_instance.post_analytics_users_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_analytics_users_aggregates_query: %s\\n\" % e)"
  },
  "post_analytics_users_details_jobs": {
    "operationId": "post_analytics_users_details_jobs",
    "functionName": "post_analytics_users_details_jobs",
    "signature": "post_analytics_users_details_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AsyncUserDetailsQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = PureCloudPlatformClientV2.AsyncUserDetailsQuery() # AsyncUserDetailsQuery | query\n\ntry:\n    # Query for user details asynchronously\n    api_response = api_instance.post_analytics_users_details_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_analytics_users_details_jobs: %s\\n\" % e)"
  },
  "post_analytics_users_details_query": {
    "operationId": "post_analytics_users_details_query",
    "functionName": "post_analytics_users_details_query",
    "signature": "post_analytics_users_details_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserDetailsQuery",
        "required": "true"
      }
    ],
    "return": "AnalyticsUserDetailsQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = PureCloudPlatformClientV2.UserDetailsQuery() # UserDetailsQuery | query\n\ntry:\n    # Query for user details\n    api_response = api_instance.post_analytics_users_details_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_analytics_users_details_query: %s\\n\" % e)"
  },
  "post_analytics_users_observations_query": {
    "operationId": "post_analytics_users_observations_query",
    "functionName": "post_analytics_users_observations_query",
    "signature": "post_analytics_users_observations_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserObservationQuery",
        "required": "true"
      }
    ],
    "return": "UserObservationQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = PureCloudPlatformClientV2.UserObservationQuery() # UserObservationQuery | query\n\ntry:\n    # Query for user observations\n    api_response = api_instance.post_analytics_users_observations_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_analytics_users_observations_query: %s\\n\" % e)"
  },
  "put_analytics_dataretention_settings": {
    "operationId": "put_analytics_dataretention_settings",
    "functionName": "put_analytics_dataretention_settings",
    "signature": "put_analytics_dataretention_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UpdateAnalyticsDataRetentionRequest",
        "required": "true"
      }
    ],
    "return": "AnalyticsDataRetentionResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AnalyticsApi();\nbody = PureCloudPlatformClientV2.UpdateAnalyticsDataRetentionRequest() # UpdateAnalyticsDataRetentionRequest | retentionDays\n\ntry:\n    # Update analytics data retention setting\n    api_response = api_instance.put_analytics_dataretention_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnalyticsApi->put_analytics_dataretention_settings: %s\\n\" % e)"
  },
  "delete_architect_emergencygroup": {
    "operationId": "delete_architect_emergencygroup",
    "functionName": "delete_architect_emergencygroup",
    "signature": "delete_architect_emergencygroup(emergency_group_id)",
    "parameters": [
      {
        "name": "emergency_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nemergency_group_id = 'emergency_group_id_example' # str | Emergency group ID\n\ntry:\n    # Deletes a emergency group by ID\n    api_instance.delete_architect_emergencygroup(emergency_group_id)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_architect_emergencygroup: %s\\n\" % e)"
  },
  "delete_architect_grammar": {
    "operationId": "delete_architect_grammar",
    "functionName": "delete_architect_grammar",
    "signature": "delete_architect_grammar(grammar_id)",
    "parameters": [
      {
        "name": "grammar_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ngrammar_id = 'grammar_id_example' # str | grammar ID\n\ntry:\n    # Delete a grammar.\n    api_response = api_instance.delete_architect_grammar(grammar_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_architect_grammar: %s\\n\" % e)"
  },
  "delete_architect_grammar_language": {
    "operationId": "delete_architect_grammar_language",
    "functionName": "delete_architect_grammar_language",
    "signature": "delete_architect_grammar_language(grammar_id, language_code)",
    "parameters": [
      {
        "name": "grammar_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ngrammar_id = 'grammar_id_example' # str | Grammar ID\nlanguage_code = 'language_code_example' # str | Language\n\ntry:\n    # Delete specified grammar language\n    api_instance.delete_architect_grammar_language(grammar_id, language_code)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_architect_grammar_language: %s\\n\" % e)"
  },
  "delete_architect_grammar_language_files_dtmf": {
    "operationId": "delete_architect_grammar_language_files_dtmf",
    "functionName": "delete_architect_grammar_language_files_dtmf",
    "signature": "delete_architect_grammar_language_files_dtmf(grammar_id, language_code)",
    "parameters": [
      {
        "name": "grammar_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ngrammar_id = 'grammar_id_example' # str | Grammar ID\nlanguage_code = 'language_code_example' # str | Language\n\ntry:\n    # Clear the DTMF mode file for the grammar language if there is one\n    api_instance.delete_architect_grammar_language_files_dtmf(grammar_id, language_code)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_architect_grammar_language_files_dtmf: %s\\n\" % e)"
  },
  "delete_architect_grammar_language_files_voice": {
    "operationId": "delete_architect_grammar_language_files_voice",
    "functionName": "delete_architect_grammar_language_files_voice",
    "signature": "delete_architect_grammar_language_files_voice(grammar_id, language_code)",
    "parameters": [
      {
        "name": "grammar_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ngrammar_id = 'grammar_id_example' # str | Grammar ID\nlanguage_code = 'language_code_example' # str | Language\n\ntry:\n    # Clear the voice mode file for the grammar language if there is one\n    api_instance.delete_architect_grammar_language_files_voice(grammar_id, language_code)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_architect_grammar_language_files_voice: %s\\n\" % e)"
  },
  "delete_architect_ivr": {
    "operationId": "delete_architect_ivr",
    "functionName": "delete_architect_ivr",
    "signature": "delete_architect_ivr(ivr_id)",
    "parameters": [
      {
        "name": "ivr_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nivr_id = 'ivr_id_example' # str | IVR id\n\ntry:\n    # Delete an IVR Config.\n    api_instance.delete_architect_ivr(ivr_id)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_architect_ivr: %s\\n\" % e)"
  },
  "delete_architect_prompt": {
    "operationId": "delete_architect_prompt",
    "functionName": "delete_architect_prompt",
    "signature": "delete_architect_prompt(prompt_id, all_resources)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "all_resources",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\nall_resources = True # bool | Whether or not to delete all the prompt resources (optional)\n\ntry:\n    # Delete specified user prompt\n    api_instance.delete_architect_prompt(prompt_id, all_resources=all_resources)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_architect_prompt: %s\\n\" % e)"
  },
  "delete_architect_prompt_resource": {
    "operationId": "delete_architect_prompt_resource",
    "functionName": "delete_architect_prompt_resource",
    "signature": "delete_architect_prompt_resource(prompt_id, language_code)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\nlanguage_code = 'language_code_example' # str | Language\n\ntry:\n    # Delete specified user prompt resource\n    api_instance.delete_architect_prompt_resource(prompt_id, language_code)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_architect_prompt_resource: %s\\n\" % e)"
  },
  "delete_architect_prompt_resource_audio": {
    "operationId": "delete_architect_prompt_resource_audio",
    "functionName": "delete_architect_prompt_resource_audio",
    "signature": "delete_architect_prompt_resource_audio(prompt_id, language_code)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\nlanguage_code = 'language_code_example' # str | Language\n\ntry:\n    # Delete specified user prompt resource audio\n    api_instance.delete_architect_prompt_resource_audio(prompt_id, language_code)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_architect_prompt_resource_audio: %s\\n\" % e)"
  },
  "delete_architect_prompts": {
    "operationId": "delete_architect_prompts",
    "functionName": "delete_architect_prompts",
    "signature": "delete_architect_prompts(id)",
    "parameters": [
      {
        "name": "id",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nid = ['id_example'] # list[str] | List of Prompt IDs\n\ntry:\n    # Batch-delete a list of prompts\n    api_response = api_instance.delete_architect_prompts(id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_architect_prompts: %s\\n\" % e)"
  },
  "delete_architect_schedule": {
    "operationId": "delete_architect_schedule",
    "functionName": "delete_architect_schedule",
    "signature": "delete_architect_schedule(schedule_id)",
    "parameters": [
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nschedule_id = 'schedule_id_example' # str | Schedule ID\n\ntry:\n    # Delete a schedule by id\n    api_instance.delete_architect_schedule(schedule_id)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_architect_schedule: %s\\n\" % e)"
  },
  "delete_architect_schedulegroup": {
    "operationId": "delete_architect_schedulegroup",
    "functionName": "delete_architect_schedulegroup",
    "signature": "delete_architect_schedulegroup(schedule_group_id)",
    "parameters": [
      {
        "name": "schedule_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nschedule_group_id = 'schedule_group_id_example' # str | Schedule group ID\n\ntry:\n    # Deletes a schedule group by ID\n    api_instance.delete_architect_schedulegroup(schedule_group_id)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_architect_schedulegroup: %s\\n\" % e)"
  },
  "delete_architect_systemprompt_resource": {
    "operationId": "delete_architect_systemprompt_resource",
    "functionName": "delete_architect_systemprompt_resource",
    "signature": "delete_architect_systemprompt_resource(prompt_id, language_code)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\nlanguage_code = 'language_code_example' # str | Language\n\ntry:\n    # Delete a system prompt resource override.\n    api_instance.delete_architect_systemprompt_resource(prompt_id, language_code)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_architect_systemprompt_resource: %s\\n\" % e)"
  },
  "delete_flow": {
    "operationId": "delete_flow",
    "functionName": "delete_flow",
    "signature": "delete_flow(flow_id)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | Flow ID\n\ntry:\n    # Delete flow\n    api_instance.delete_flow(flow_id)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_flow: %s\\n\" % e)"
  },
  "delete_flow_instances_settings_loglevels": {
    "operationId": "delete_flow_instances_settings_loglevels",
    "functionName": "delete_flow_instances_settings_loglevels",
    "signature": "delete_flow_instances_settings_loglevels(flow_id)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | The flow id to delete the loglevel for\n\ntry:\n    # Deletes a log level for a flow by flow id.\n    api_instance.delete_flow_instances_settings_loglevels(flow_id)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_flow_instances_settings_loglevels: %s\\n\" % e)"
  },
  "delete_flows": {
    "operationId": "delete_flows",
    "functionName": "delete_flows",
    "signature": "delete_flows(id)",
    "parameters": [
      {
        "name": "id",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nid = ['id_example'] # list[str] | List of Flow IDs\n\ntry:\n    # Batch-delete a list of flows\n    api_response = api_instance.delete_flows(id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_flows: %s\\n\" % e)"
  },
  "delete_flows_datatable": {
    "operationId": "delete_flows_datatable",
    "functionName": "delete_flows_datatable",
    "signature": "delete_flows_datatable(datatable_id, force)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\nforce = False # bool | force delete, even if in use (optional) (default to False)\n\ntry:\n    # deletes a specific datatable by id\n    api_instance.delete_flows_datatable(datatable_id, force=force)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_flows_datatable: %s\\n\" % e)"
  },
  "delete_flows_datatable_row": {
    "operationId": "delete_flows_datatable_row",
    "functionName": "delete_flows_datatable_row",
    "signature": "delete_flows_datatable_row(datatable_id, row_id)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "row_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\nrow_id = 'row_id_example' # str | the key for the row\n\ntry:\n    # Delete a row entry\n    api_instance.delete_flows_datatable_row(datatable_id, row_id)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_flows_datatable_row: %s\\n\" % e)"
  },
  "delete_flows_instances_settings_loglevels_default": {
    "operationId": "delete_flows_instances_settings_loglevels_default",
    "functionName": "delete_flows_instances_settings_loglevels_default",
    "signature": "delete_flows_instances_settings_loglevels_default()",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\n\ntry:\n    # Resets the org log level to default, base\n    api_instance.delete_flows_instances_settings_loglevels_default()\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_flows_instances_settings_loglevels_default: %s\\n\" % e)"
  },
  "delete_flows_milestone": {
    "operationId": "delete_flows_milestone",
    "functionName": "delete_flows_milestone",
    "signature": "delete_flows_milestone(milestone_id)",
    "parameters": [
      {
        "name": "milestone_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nmilestone_id = 'milestone_id_example' # str | flow milestone ID\n\ntry:\n    # Delete a flow milestone.\n    api_response = api_instance.delete_flows_milestone(milestone_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->delete_flows_milestone: %s\\n\" % e)"
  },
  "get_architect_dependencytracking": {
    "operationId": "get_architect_dependencytracking",
    "functionName": "get_architect_dependencytracking",
    "signature": "get_architect_dependencytracking(name, page_number, page_size, object_type, consumed_resources, consuming_resources, consumed_resource_type, consuming_resource_type)",
    "parameters": [
      {
        "name": "name",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "object_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "consumed_resources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "consuming_resources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "consumed_resource_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "consuming_resource_type",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "DependencyObjectEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nname = 'name_example' # str | Object name to search for\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nobject_type = ['object_type_example'] # list[str] | Object type(s) to search for (optional)\nconsumed_resources = True # bool | Include resources each result item consumes (optional)\nconsuming_resources = True # bool | Include resources that consume each result item (optional)\nconsumed_resource_type = ['consumed_resource_type_example'] # list[str] | Types of consumed resources to return, if consumed resources are requested (optional)\nconsuming_resource_type = ['consuming_resource_type_example'] # list[str] | Types of consuming resources to return, if consuming resources are requested (optional)\n\ntry:\n    # Get Dependency Tracking objects that have a given display name\n    api_response = api_instance.get_architect_dependencytracking(name, page_number=page_number, page_size=page_size, object_type=object_type, consumed_resources=consumed_resources, consuming_resources=consuming_resources, consumed_resource_type=consumed_resource_type, consuming_resource_type=consuming_resource_type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_dependencytracking: %s\\n\" % e)"
  },
  "get_architect_dependencytracking_build": {
    "operationId": "get_architect_dependencytracking_build",
    "functionName": "get_architect_dependencytracking_build",
    "signature": "get_architect_dependencytracking_build()",
    "return": "DependencyStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\n\ntry:\n    # Get Dependency Tracking build status for an organization\n    api_response = api_instance.get_architect_dependencytracking_build()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_dependencytracking_build: %s\\n\" % e)"
  },
  "get_architect_dependencytracking_consumedresources": {
    "operationId": "get_architect_dependencytracking_consumedresources",
    "functionName": "get_architect_dependencytracking_consumedresources",
    "signature": "get_architect_dependencytracking_consumedresources(id, version, object_type, resource_type, page_number, page_size)",
    "parameters": [
      {
        "name": "id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version",
        "type": "str",
        "required": "true"
      },
      {
        "name": "object_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "resource_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "ConsumedResourcesEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nid = 'id_example' # str | Consuming object ID\nversion = 'version_example' # str | Consuming object version\nobject_type = 'object_type_example' # str | Consuming object type.  Only versioned types are allowed here.\nresource_type = ['resource_type_example'] # list[str] | Types of consumed resources to show (optional)\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get resources that are consumed by a given Dependency Tracking object\n    api_response = api_instance.get_architect_dependencytracking_consumedresources(id, version, object_type, resource_type=resource_type, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_dependencytracking_consumedresources: %s\\n\" % e)"
  },
  "get_architect_dependencytracking_consumingresources": {
    "operationId": "get_architect_dependencytracking_consumingresources",
    "functionName": "get_architect_dependencytracking_consumingresources",
    "signature": "get_architect_dependencytracking_consumingresources(id, object_type, resource_type, version, page_number, page_size, flow_filter)",
    "parameters": [
      {
        "name": "id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "object_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "resource_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "version",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "flow_filter",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ConsumingResourcesEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nid = 'id_example' # str | Consumed object ID\nobject_type = 'object_type_example' # str | Consumed object type\nresource_type = ['resource_type_example'] # list[str] | Types of consuming resources to show.  Only versioned types are allowed here. (optional)\nversion = 'version_example' # str | Object version (optional)\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nflow_filter = 'flow_filter_example' # str | Show only checkedIn or published flows (optional)\n\ntry:\n    # Get resources that consume a given Dependency Tracking object\n    api_response = api_instance.get_architect_dependencytracking_consumingresources(id, object_type, resource_type=resource_type, version=version, page_number=page_number, page_size=page_size, flow_filter=flow_filter)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_dependencytracking_consumingresources: %s\\n\" % e)"
  },
  "get_architect_dependencytracking_deletedresourceconsumers": {
    "operationId": "get_architect_dependencytracking_deletedresourceconsumers",
    "functionName": "get_architect_dependencytracking_deletedresourceconsumers",
    "signature": "get_architect_dependencytracking_deletedresourceconsumers(name, object_type, flow_filter, consumed_resources, consumed_resource_type, page_number, page_size)",
    "parameters": [
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "object_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "flow_filter",
        "type": "str",
        "required": "false"
      },
      {
        "name": "consumed_resources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "consumed_resource_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "DependencyObjectEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nname = 'name_example' # str | Name to search for (optional)\nobject_type = ['object_type_example'] # list[str] | Object type(s) to search for (optional)\nflow_filter = 'flow_filter_example' # str | Show only checkedIn or published flows (optional)\nconsumed_resources = False # bool | Return consumed resources? (optional) (default to False)\nconsumed_resource_type = ['consumed_resource_type_example'] # list[str] | Resource type(s) to return (optional)\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get Dependency Tracking objects that consume deleted resources\n    api_response = api_instance.get_architect_dependencytracking_deletedresourceconsumers(name=name, object_type=object_type, flow_filter=flow_filter, consumed_resources=consumed_resources, consumed_resource_type=consumed_resource_type, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_dependencytracking_deletedresourceconsumers: %s\\n\" % e)"
  },
  "get_architect_dependencytracking_object": {
    "operationId": "get_architect_dependencytracking_object",
    "functionName": "get_architect_dependencytracking_object",
    "signature": "get_architect_dependencytracking_object(id, version, object_type, consumed_resources, consuming_resources, consumed_resource_type, consuming_resource_type, consumed_resource_request)",
    "parameters": [
      {
        "name": "id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version",
        "type": "str",
        "required": "false"
      },
      {
        "name": "object_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "consumed_resources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "consuming_resources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "consumed_resource_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "consuming_resource_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "consumed_resource_request",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "DependencyObject",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nid = 'id_example' # str | Object ID\nversion = 'version_example' # str | Object version (optional)\nobject_type = 'object_type_example' # str | Object type (optional)\nconsumed_resources = True # bool | Include resources this item consumes (optional)\nconsuming_resources = True # bool | Include resources that consume this item (optional)\nconsumed_resource_type = ['consumed_resource_type_example'] # list[str] | Types of consumed resources to return, if consumed resources are requested (optional)\nconsuming_resource_type = ['consuming_resource_type_example'] # list[str] | Types of consuming resources to return, if consuming resources are requested (optional)\nconsumed_resource_request = True # bool | Indicate that this is going to look up a consumed resource object (optional)\n\ntry:\n    # Get a Dependency Tracking object\n    api_response = api_instance.get_architect_dependencytracking_object(id, version=version, object_type=object_type, consumed_resources=consumed_resources, consuming_resources=consuming_resources, consumed_resource_type=consumed_resource_type, consuming_resource_type=consuming_resource_type, consumed_resource_request=consumed_resource_request)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_dependencytracking_object: %s\\n\" % e)"
  },
  "get_architect_dependencytracking_type": {
    "operationId": "get_architect_dependencytracking_type",
    "functionName": "get_architect_dependencytracking_type",
    "signature": "get_architect_dependencytracking_type(type_id)",
    "parameters": [
      {
        "name": "type_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DependencyType",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ntype_id = 'type_id_example' # str | Type ID\n\ntry:\n    # Get a Dependency Tracking type.\n    api_response = api_instance.get_architect_dependencytracking_type(type_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_dependencytracking_type: %s\\n\" % e)"
  },
  "get_architect_dependencytracking_types": {
    "operationId": "get_architect_dependencytracking_types",
    "functionName": "get_architect_dependencytracking_types",
    "signature": "get_architect_dependencytracking_types(page_number, page_size)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "DependencyTypeEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get Dependency Tracking types.\n    api_response = api_instance.get_architect_dependencytracking_types(page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_dependencytracking_types: %s\\n\" % e)"
  },
  "get_architect_dependencytracking_updatedresourceconsumers": {
    "operationId": "get_architect_dependencytracking_updatedresourceconsumers",
    "functionName": "get_architect_dependencytracking_updatedresourceconsumers",
    "signature": "get_architect_dependencytracking_updatedresourceconsumers(name, object_type, consumed_resources, consumed_resource_type, page_number, page_size)",
    "parameters": [
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "object_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "consumed_resources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "consumed_resource_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "DependencyObjectEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nname = 'name_example' # str | Name to search for (optional)\nobject_type = ['object_type_example'] # list[str] | Object type(s) to search for (optional)\nconsumed_resources = False # bool | Return consumed resources? (optional) (default to False)\nconsumed_resource_type = ['consumed_resource_type_example'] # list[str] | Resource type(s) to return (optional)\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get Dependency Tracking objects that depend on updated resources\n    api_response = api_instance.get_architect_dependencytracking_updatedresourceconsumers(name=name, object_type=object_type, consumed_resources=consumed_resources, consumed_resource_type=consumed_resource_type, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_dependencytracking_updatedresourceconsumers: %s\\n\" % e)"
  },
  "get_architect_emergencygroup": {
    "operationId": "get_architect_emergencygroup",
    "functionName": "get_architect_emergencygroup",
    "signature": "get_architect_emergencygroup(emergency_group_id)",
    "parameters": [
      {
        "name": "emergency_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EmergencyGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nemergency_group_id = 'emergency_group_id_example' # str | Emergency group ID\n\ntry:\n    # Gets a emergency group by ID\n    api_response = api_instance.get_architect_emergencygroup(emergency_group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_emergencygroup: %s\\n\" % e)"
  },
  "get_architect_emergencygroups": {
    "operationId": "get_architect_emergencygroups",
    "functionName": "get_architect_emergencygroups",
    "signature": "get_architect_emergencygroups(page_number, page_size, sort_by, sort_order, name)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "EmergencyGroupListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nname = 'name_example' # str | Name of the Emergency Group to filter by. (optional)\n\ntry:\n    # Get a list of emergency groups.\n    api_response = api_instance.get_architect_emergencygroups(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_emergencygroups: %s\\n\" % e)"
  },
  "get_architect_emergencygroups_divisionviews": {
    "operationId": "get_architect_emergencygroups_divisionviews",
    "functionName": "get_architect_emergencygroups_divisionviews",
    "signature": "get_architect_emergencygroups_divisionviews(page_number, page_size, sort_by, sort_order, id, name, division_id)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "EmergencyGroupDivisionViewEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nid = ['id_example'] # list[str] | ID of the Emergency Groups to filter by. (optional)\nname = 'name_example' # str | Name of the Emergency Group to filter by. (optional)\ndivision_id = ['division_id_example'] # list[str] | List of divisionIds on which to filter. (optional)\n\ntry:\n    # Get a pageable list of basic emergency group objects filterable by query parameters.\n    api_response = api_instance.get_architect_emergencygroups_divisionviews(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, id=id, name=name, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_emergencygroups_divisionviews: %s\\n\" % e)"
  },
  "get_architect_grammar": {
    "operationId": "get_architect_grammar",
    "functionName": "get_architect_grammar",
    "signature": "get_architect_grammar(grammar_id, include_file_urls)",
    "parameters": [
      {
        "name": "grammar_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_file_urls",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Grammar",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ngrammar_id = 'grammar_id_example' # str | grammar ID\ninclude_file_urls = True # bool | Include grammar language file URLs (optional)\n\ntry:\n    # Get a grammar\n    api_response = api_instance.get_architect_grammar(grammar_id, include_file_urls=include_file_urls)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_grammar: %s\\n\" % e)"
  },
  "get_architect_grammar_language": {
    "operationId": "get_architect_grammar_language",
    "functionName": "get_architect_grammar_language",
    "signature": "get_architect_grammar_language(grammar_id, language_code)",
    "parameters": [
      {
        "name": "grammar_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "GrammarLanguage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ngrammar_id = 'grammar_id_example' # str | Grammar ID\nlanguage_code = 'language_code_example' # str | Language\n\ntry:\n    # Get a grammar language.\n    api_response = api_instance.get_architect_grammar_language(grammar_id, language_code)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_grammar_language: %s\\n\" % e)"
  },
  "get_architect_grammars": {
    "operationId": "get_architect_grammars",
    "functionName": "get_architect_grammars",
    "signature": "get_architect_grammars(page_number, page_size, sort_by, sort_order, id, name, description, name_or_description, include_file_urls)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "description",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name_or_description",
        "type": "str",
        "required": "false"
      },
      {
        "name": "include_file_urls",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "GrammarListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''id'' # str | Sort by (optional) (default to 'id')\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\nid = ['id_example'] # list[str] | ID (optional)\nname = 'name_example' # str | Name (optional)\ndescription = 'description_example' # str | Description (optional)\nname_or_description = 'name_or_description_example' # str | Name or description (optional)\ninclude_file_urls = True # bool | Include grammar language file URLs (optional)\n\ntry:\n    # Get a pageable list of grammars, filtered by query parameters\n    api_response = api_instance.get_architect_grammars(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, id=id, name=name, description=description, name_or_description=name_or_description, include_file_urls=include_file_urls)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_grammars: %s\\n\" % e)"
  },
  "get_architect_ivr": {
    "operationId": "get_architect_ivr",
    "functionName": "get_architect_ivr",
    "signature": "get_architect_ivr(ivr_id)",
    "parameters": [
      {
        "name": "ivr_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "IVR",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nivr_id = 'ivr_id_example' # str | IVR id\n\ntry:\n    # Get an IVR config.\n    api_response = api_instance.get_architect_ivr(ivr_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_ivr: %s\\n\" % e)"
  },
  "get_architect_ivrs": {
    "operationId": "get_architect_ivrs",
    "functionName": "get_architect_ivrs",
    "signature": "get_architect_ivrs(page_number, page_size, sort_by, sort_order, name, dnis, schedule_group)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "dnis",
        "type": "str",
        "required": "false"
      },
      {
        "name": "schedule_group",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "IVREntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nname = 'name_example' # str | Name of the IVR to filter by. (optional)\ndnis = 'dnis_example' # str | The phone number of the IVR to filter by. (optional)\nschedule_group = 'schedule_group_example' # str | The Schedule Group of the IVR to filter by. (optional)\n\ntry:\n    # Get IVR configs.\n    api_response = api_instance.get_architect_ivrs(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, name=name, dnis=dnis, schedule_group=schedule_group)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_ivrs: %s\\n\" % e)"
  },
  "get_architect_ivrs_divisionviews": {
    "operationId": "get_architect_ivrs_divisionviews",
    "functionName": "get_architect_ivrs_divisionviews",
    "signature": "get_architect_ivrs_divisionviews(page_number, page_size, sort_by, sort_order, id, name, division_id)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "IVRDivisionViewEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nid = ['id_example'] # list[str] | ID of the IVR to filter by. (optional)\nname = 'name_example' # str | Name of the IVR to filter by. (optional)\ndivision_id = ['division_id_example'] # list[str] | List of divisionIds on which to filter. (optional)\n\ntry:\n    # Get a pageable list of basic ivr configuration information objects filterable by query parameters.\n    api_response = api_instance.get_architect_ivrs_divisionviews(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, id=id, name=name, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_ivrs_divisionviews: %s\\n\" % e)"
  },
  "get_architect_prompt": {
    "operationId": "get_architect_prompt",
    "functionName": "get_architect_prompt",
    "signature": "get_architect_prompt(prompt_id, include_media_uris, include_resources, language)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_media_uris",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_resources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "language",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "Prompt",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\ninclude_media_uris = True # bool | Include the media URIs for each resource (optional) (default to True)\ninclude_resources = True # bool | Include the resources for each system prompt (optional) (default to True)\nlanguage = ['language_example'] # list[str] | Filter the resources down to the provided languages (optional)\n\ntry:\n    # Get specified user prompt\n    api_response = api_instance.get_architect_prompt(prompt_id, include_media_uris=include_media_uris, include_resources=include_resources, language=language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_prompt: %s\\n\" % e)"
  },
  "get_architect_prompt_history_history_id": {
    "operationId": "get_architect_prompt_history_history_id",
    "functionName": "get_architect_prompt_history_history_id",
    "signature": "get_architect_prompt_history_history_id(prompt_id, history_id, page_number, page_size, sort_order, sort_by, action)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "history_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "action",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "HistoryListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\nhistory_id = 'history_id_example' # str | History request ID\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_order = ''desc'' # str | Sort order (optional) (default to 'desc')\nsort_by = ''timestamp'' # str | Sort by (optional) (default to 'timestamp')\naction = ['action_example'] # list[str] | Flow actions to include (omit to include all) (optional)\n\ntry:\n    # Get generated prompt history\n    api_response = api_instance.get_architect_prompt_history_history_id(prompt_id, history_id, page_number=page_number, page_size=page_size, sort_order=sort_order, sort_by=sort_by, action=action)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_prompt_history_history_id: %s\\n\" % e)"
  },
  "get_architect_prompt_resource": {
    "operationId": "get_architect_prompt_resource",
    "functionName": "get_architect_prompt_resource",
    "signature": "get_architect_prompt_resource(prompt_id, language_code)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PromptAsset",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\nlanguage_code = 'language_code_example' # str | Language\n\ntry:\n    # Get specified user prompt resource\n    api_response = api_instance.get_architect_prompt_resource(prompt_id, language_code)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_prompt_resource: %s\\n\" % e)"
  },
  "get_architect_prompt_resources": {
    "operationId": "get_architect_prompt_resources",
    "functionName": "get_architect_prompt_resources",
    "signature": "get_architect_prompt_resources(prompt_id, page_number, page_size)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "PromptAssetEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get a pageable list of user prompt resources\n    api_response = api_instance.get_architect_prompt_resources(prompt_id, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_prompt_resources: %s\\n\" % e)"
  },
  "get_architect_prompts": {
    "operationId": "get_architect_prompts",
    "functionName": "get_architect_prompts",
    "signature": "get_architect_prompts(page_number, page_size, name, description, name_or_description, sort_by, sort_order, include_media_uris, include_resources, language)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "description",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name_or_description",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "include_media_uris",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_resources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "language",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "PromptEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nname = ['name_example'] # list[str] | Name (optional)\ndescription = 'description_example' # str | Description (optional)\nname_or_description = 'name_or_description_example' # str | Name or description (optional)\nsort_by = ''id'' # str | Sort by (optional) (default to 'id')\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\ninclude_media_uris = True # bool | Include the media URIs for each resource (optional) (default to True)\ninclude_resources = True # bool | Include the resources for each system prompt (optional) (default to True)\nlanguage = ['language_example'] # list[str] | Filter the resources down to the provided languages (optional)\n\ntry:\n    # Get a pageable list of user prompts\n    api_response = api_instance.get_architect_prompts(page_number=page_number, page_size=page_size, name=name, description=description, name_or_description=name_or_description, sort_by=sort_by, sort_order=sort_order, include_media_uris=include_media_uris, include_resources=include_resources, language=language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_prompts: %s\\n\" % e)"
  },
  "get_architect_schedule": {
    "operationId": "get_architect_schedule",
    "functionName": "get_architect_schedule",
    "signature": "get_architect_schedule(schedule_id)",
    "parameters": [
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Schedule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nschedule_id = 'schedule_id_example' # str | Schedule ID\n\ntry:\n    # Get a schedule by ID\n    api_response = api_instance.get_architect_schedule(schedule_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_schedule: %s\\n\" % e)"
  },
  "get_architect_schedulegroup": {
    "operationId": "get_architect_schedulegroup",
    "functionName": "get_architect_schedulegroup",
    "signature": "get_architect_schedulegroup(schedule_group_id)",
    "parameters": [
      {
        "name": "schedule_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ScheduleGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nschedule_group_id = 'schedule_group_id_example' # str | Schedule group ID\n\ntry:\n    # Gets a schedule group by ID\n    api_response = api_instance.get_architect_schedulegroup(schedule_group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_schedulegroup: %s\\n\" % e)"
  },
  "get_architect_schedulegroups": {
    "operationId": "get_architect_schedulegroups",
    "functionName": "get_architect_schedulegroups",
    "signature": "get_architect_schedulegroups(page_number, page_size, sort_by, sort_order, name, schedule_ids, division_id)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "schedule_ids",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ScheduleGroupEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nname = 'name_example' # str | Name of the Schedule Group to filter by. (optional)\nschedule_ids = 'schedule_ids_example' # str | A comma-delimited list of Schedule IDs to filter by. (optional)\ndivision_id = ['division_id_example'] # list[str] | List of divisionIds on which to filter. (optional)\n\ntry:\n    # Get a list of schedule groups.\n    api_response = api_instance.get_architect_schedulegroups(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, name=name, schedule_ids=schedule_ids, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_schedulegroups: %s\\n\" % e)"
  },
  "get_architect_schedulegroups_divisionviews": {
    "operationId": "get_architect_schedulegroups_divisionviews",
    "functionName": "get_architect_schedulegroups_divisionviews",
    "signature": "get_architect_schedulegroups_divisionviews(page_number, page_size, sort_by, sort_order, id, name, division_id)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ScheduleGroupDivisionViewEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nid = ['id_example'] # list[str] | ID of the schedule group to filter by. (optional)\nname = 'name_example' # str | Name of the schedule group to filter by. (optional)\ndivision_id = ['division_id_example'] # list[str] | List of divisionIds on which to filter. (optional)\n\ntry:\n    # Get a pageable list of basic schedule group configuration information objects filterable by query parameters.\n    api_response = api_instance.get_architect_schedulegroups_divisionviews(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, id=id, name=name, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_schedulegroups_divisionviews: %s\\n\" % e)"
  },
  "get_architect_schedules": {
    "operationId": "get_architect_schedules",
    "functionName": "get_architect_schedules",
    "signature": "get_architect_schedules(page_number, page_size, sort_by, sort_order, name, division_id)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ScheduleEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nname = 'name_example' # str | Name of the Schedule to filter by. (optional)\ndivision_id = ['division_id_example'] # list[str] | List of divisionIds on which to filter. (optional)\n\ntry:\n    # Get a list of schedules.\n    api_response = api_instance.get_architect_schedules(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, name=name, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_schedules: %s\\n\" % e)"
  },
  "get_architect_schedules_divisionviews": {
    "operationId": "get_architect_schedules_divisionviews",
    "functionName": "get_architect_schedules_divisionviews",
    "signature": "get_architect_schedules_divisionviews(page_number, page_size, sort_by, sort_order, id, name, division_id)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ScheduleDivisionViewEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nid = ['id_example'] # list[str] | ID of the schedule group to filter by. (optional)\nname = 'name_example' # str | Name of the schedule group to filter by. (optional)\ndivision_id = ['division_id_example'] # list[str] | List of divisionIds on which to filter. (optional)\n\ntry:\n    # Get a pageable list of basic schedule configuration information objects filterable by query parameters.\n    api_response = api_instance.get_architect_schedules_divisionviews(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, id=id, name=name, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_schedules_divisionviews: %s\\n\" % e)"
  },
  "get_architect_systemprompt": {
    "operationId": "get_architect_systemprompt",
    "functionName": "get_architect_systemprompt",
    "signature": "get_architect_systemprompt(prompt_id, include_media_uris, include_resources, language)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_media_uris",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_resources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "language",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "SystemPrompt",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | promptId\ninclude_media_uris = True # bool | Include the media URIs for each resource (optional) (default to True)\ninclude_resources = True # bool | Include the resources for each system prompt (optional) (default to True)\nlanguage = ['language_example'] # list[str] | Filter the resources down to the provided languages (optional)\n\ntry:\n    # Get a system prompt\n    api_response = api_instance.get_architect_systemprompt(prompt_id, include_media_uris=include_media_uris, include_resources=include_resources, language=language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_systemprompt: %s\\n\" % e)"
  },
  "get_architect_systemprompt_history_history_id": {
    "operationId": "get_architect_systemprompt_history_history_id",
    "functionName": "get_architect_systemprompt_history_history_id",
    "signature": "get_architect_systemprompt_history_history_id(prompt_id, history_id, page_number, page_size, sort_order, sort_by, action)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "history_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "action",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "HistoryListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | promptId\nhistory_id = 'history_id_example' # str | History request ID\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_order = ''desc'' # str | Sort order (optional) (default to 'desc')\nsort_by = ''timestamp'' # str | Sort by (optional) (default to 'timestamp')\naction = ['action_example'] # list[str] | Flow actions to include (omit to include all) (optional)\n\ntry:\n    # Get generated prompt history\n    api_response = api_instance.get_architect_systemprompt_history_history_id(prompt_id, history_id, page_number=page_number, page_size=page_size, sort_order=sort_order, sort_by=sort_by, action=action)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_systemprompt_history_history_id: %s\\n\" % e)"
  },
  "get_architect_systemprompt_resource": {
    "operationId": "get_architect_systemprompt_resource",
    "functionName": "get_architect_systemprompt_resource",
    "signature": "get_architect_systemprompt_resource(prompt_id, language_code)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SystemPromptAsset",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\nlanguage_code = 'language_code_example' # str | Language\n\ntry:\n    # Get a system prompt resource.\n    api_response = api_instance.get_architect_systemprompt_resource(prompt_id, language_code)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_systemprompt_resource: %s\\n\" % e)"
  },
  "get_architect_systemprompt_resources": {
    "operationId": "get_architect_systemprompt_resources",
    "functionName": "get_architect_systemprompt_resources",
    "signature": "get_architect_systemprompt_resources(prompt_id, page_number, page_size, sort_by, sort_order)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SystemPromptAssetEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''id'' # str | Sort by (optional) (default to 'id')\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\n\ntry:\n    # Get system prompt resources.\n    api_response = api_instance.get_architect_systemprompt_resources(prompt_id, page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_systemprompt_resources: %s\\n\" % e)"
  },
  "get_architect_systemprompts": {
    "operationId": "get_architect_systemprompts",
    "functionName": "get_architect_systemprompts",
    "signature": "get_architect_systemprompts(page_number, page_size, sort_by, sort_order, name, description, name_or_description, include_media_uris, include_resources, language)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "description",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name_or_description",
        "type": "str",
        "required": "false"
      },
      {
        "name": "include_media_uris",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_resources",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "language",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "SystemPromptEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''id'' # str | Sort by (optional) (default to 'id')\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\nname = 'name_example' # str | Name (optional)\ndescription = 'description_example' # str | Description (optional)\nname_or_description = 'name_or_description_example' # str | Name or description (optional)\ninclude_media_uris = True # bool | Include the media URIs for each resource (optional) (default to True)\ninclude_resources = True # bool | Include the resources for each system prompt (optional) (default to True)\nlanguage = ['language_example'] # list[str] | Filter the resources down to the provided languages (optional)\n\ntry:\n    # Get System Prompts\n    api_response = api_instance.get_architect_systemprompts(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, name=name, description=description, name_or_description=name_or_description, include_media_uris=include_media_uris, include_resources=include_resources, language=language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_architect_systemprompts: %s\\n\" % e)"
  },
  "get_flow": {
    "operationId": "get_flow",
    "functionName": "get_flow",
    "signature": "get_flow(flow_id, deleted)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "deleted",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Flow",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | Flow ID\ndeleted = False # bool | Deleted flows (optional) (default to False)\n\ntry:\n    # Get flow\n    api_response = api_instance.get_flow(flow_id, deleted=deleted)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flow: %s\\n\" % e)"
  },
  "get_flow_history_history_id": {
    "operationId": "get_flow_history_history_id",
    "functionName": "get_flow_history_history_id",
    "signature": "get_flow_history_history_id(flow_id, history_id, page_number, page_size, sort_order, sort_by, action)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "history_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "action",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "HistoryListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | Flow ID\nhistory_id = 'history_id_example' # str | History request ID\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_order = ''desc'' # str | Sort order (optional) (default to 'desc')\nsort_by = ''timestamp'' # str | Sort by (optional) (default to 'timestamp')\naction = ['action_example'] # list[str] | Flow actions to include (omit to include all) (optional)\n\ntry:\n    # Get generated flow history\n    api_response = api_instance.get_flow_history_history_id(flow_id, history_id, page_number=page_number, page_size=page_size, sort_order=sort_order, sort_by=sort_by, action=action)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flow_history_history_id: %s\\n\" % e)"
  },
  "get_flow_instances_settings_loglevels": {
    "operationId": "get_flow_instances_settings_loglevels",
    "functionName": "get_flow_instances_settings_loglevels",
    "signature": "get_flow_instances_settings_loglevels(flow_id, expand)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "FlowSettingsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | The flow id to get the loglevel for\nexpand = ['expand_example'] # list[str] | Expand instructions for the result (optional)\n\ntry:\n    # Retrieves the log level for a flow by flow id.\n    api_response = api_instance.get_flow_instances_settings_loglevels(flow_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flow_instances_settings_loglevels: %s\\n\" % e)"
  },
  "get_flow_latestconfiguration": {
    "operationId": "get_flow_latestconfiguration",
    "functionName": "get_flow_latestconfiguration",
    "signature": "get_flow_latestconfiguration(flow_id, deleted)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "deleted",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | Flow ID\ndeleted = False # bool | Deleted flows (optional) (default to False)\n\ntry:\n    # Get the latest configuration for flow\n    api_response = api_instance.get_flow_latestconfiguration(flow_id, deleted=deleted)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flow_latestconfiguration: %s\\n\" % e)"
  },
  "get_flow_version": {
    "operationId": "get_flow_version",
    "functionName": "get_flow_version",
    "signature": "get_flow_version(flow_id, version_id, deleted)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "deleted",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "FlowVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | Flow ID\nversion_id = 'version_id_example' # str | Version ID\ndeleted = 'deleted_example' # str | Deleted flows (optional)\n\ntry:\n    # Get flow version\n    api_response = api_instance.get_flow_version(flow_id, version_id, deleted=deleted)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flow_version: %s\\n\" % e)"
  },
  "get_flow_version_configuration": {
    "operationId": "get_flow_version_configuration",
    "functionName": "get_flow_version_configuration",
    "signature": "get_flow_version_configuration(flow_id, version_id, deleted)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "deleted",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | Flow ID\nversion_id = 'version_id_example' # str | Version ID\ndeleted = 'deleted_example' # str | Deleted flows (optional)\n\ntry:\n    # Create flow version configuration\n    api_response = api_instance.get_flow_version_configuration(flow_id, version_id, deleted=deleted)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flow_version_configuration: %s\\n\" % e)"
  },
  "get_flow_version_health": {
    "operationId": "get_flow_version_health",
    "functionName": "get_flow_version_health",
    "signature": "get_flow_version_health(flow_id, version_id, language)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "FlowHealth",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | Flow ID.\nversion_id = 'version_id_example' # str | Version ID.\nlanguage = 'language_example' # str | Language to filter for (optional)\n\ntry:\n    # Get overall health scores for all intents present in the NLU domain version associated with the bot flow version.\n    api_response = api_instance.get_flow_version_health(flow_id, version_id, language=language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flow_version_health: %s\\n\" % e)"
  },
  "get_flow_version_intent_health": {
    "operationId": "get_flow_version_intent_health",
    "functionName": "get_flow_version_intent_health",
    "signature": "get_flow_version_intent_health(flow_id, version_id, intent_id, language)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "intent_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "FlowHealthIntent",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | Flow ID.\nversion_id = 'version_id_example' # str | Version ID.\nintent_id = 'intent_id_example' # str | Intent ID.\nlanguage = 'language_example' # str | Language to filter for\n\ntry:\n    # Get health scores and other health metrics for a specific intent. This includes the health metrics for each utterance in an intent.\n    api_response = api_instance.get_flow_version_intent_health(flow_id, version_id, intent_id, language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flow_version_intent_health: %s\\n\" % e)"
  },
  "get_flow_version_intent_utterance_health": {
    "operationId": "get_flow_version_intent_utterance_health",
    "functionName": "get_flow_version_intent_utterance_health",
    "signature": "get_flow_version_intent_utterance_health(flow_id, version_id, intent_id, utterance_id, language)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "intent_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "utterance_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "FlowHealthUtterance",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | Flow ID.\nversion_id = 'version_id_example' # str | Version ID.\nintent_id = 'intent_id_example' # str | Intent ID.\nutterance_id = 'utterance_id_example' # str | Utterance ID.\nlanguage = 'language_example' # str | Language to filter for\n\ntry:\n    # Get health metrics associated with a specific utterance of an intent.\n    api_response = api_instance.get_flow_version_intent_utterance_health(flow_id, version_id, intent_id, utterance_id, language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flow_version_intent_utterance_health: %s\\n\" % e)"
  },
  "get_flow_versions": {
    "operationId": "get_flow_versions",
    "functionName": "get_flow_versions",
    "signature": "get_flow_versions(flow_id, page_number, page_size, deleted)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "deleted",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "FlowVersionEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | Flow ID\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\ndeleted = True # bool | Include Deleted flows (optional)\n\ntry:\n    # Get flow version list\n    api_response = api_instance.get_flow_versions(flow_id, page_number=page_number, page_size=page_size, deleted=deleted)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flow_versions: %s\\n\" % e)"
  },
  "get_flows": {
    "operationId": "get_flows",
    "functionName": "get_flows",
    "signature": "get_flows(type, page_number, page_size, sort_by, sort_order, id, name, description, name_or_description, publish_version_id, editable_by, locked_by, locked_by_client_id, secure, deleted, include_schemas, published_after, published_before, division_id)",
    "parameters": [
      {
        "name": "type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "description",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name_or_description",
        "type": "str",
        "required": "false"
      },
      {
        "name": "publish_version_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "editable_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "locked_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "locked_by_client_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "secure",
        "type": "str",
        "required": "false"
      },
      {
        "name": "deleted",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_schemas",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "published_after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "published_before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "FlowEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ntype = ['type_example'] # list[str] | Type (optional)\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''id'' # str | Sort by (optional) (default to 'id')\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\nid = ['id_example'] # list[str] | ID (optional)\nname = 'name_example' # str | Name (optional)\ndescription = 'description_example' # str | Description (optional)\nname_or_description = 'name_or_description_example' # str | Name or description (optional)\npublish_version_id = 'publish_version_id_example' # str | Publish version ID (optional)\neditable_by = 'editable_by_example' # str | Editable by (optional)\nlocked_by = 'locked_by_example' # str | Locked by (optional)\nlocked_by_client_id = 'locked_by_client_id_example' # str | Locked by client ID (optional)\nsecure = 'secure_example' # str | Secure (optional)\ndeleted = False # bool | Include deleted (optional) (default to False)\ninclude_schemas = False # bool | Include variable schemas (optional) (default to False)\npublished_after = '2015-01-01T12:00:00-0600, 2015-01-01T18:00:00Z, 2015-01-01T12:00:00.000-0600, 2015-01-01T18:00:00.000Z, 2015-01-01' # str | Published after (optional)\npublished_before = '2015-01-01T12:00:00-0600, 2015-01-01T18:00:00Z, 2015-01-01T12:00:00.000-0600, 2015-01-01T18:00:00.000Z, 2015-01-01' # str | Published before (optional)\ndivision_id = ['division_id_example'] # list[str] | division ID(s) (optional)\n\ntry:\n    # Get a pageable list of flows, filtered by query parameters\n    api_response = api_instance.get_flows(type=type, page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, id=id, name=name, description=description, name_or_description=name_or_description, publish_version_id=publish_version_id, editable_by=editable_by, locked_by=locked_by, locked_by_client_id=locked_by_client_id, secure=secure, deleted=deleted, include_schemas=include_schemas, published_after=published_after, published_before=published_before, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows: %s\\n\" % e)"
  },
  "get_flows_datatable": {
    "operationId": "get_flows_datatable",
    "functionName": "get_flows_datatable",
    "signature": "get_flows_datatable(datatable_id, expand)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DataTable",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\nexpand = 'expand_example' # str | Expand instructions for the result (optional)\n\ntry:\n    # Returns a specific datatable by id\n    api_response = api_instance.get_flows_datatable(datatable_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_datatable: %s\\n\" % e)"
  },
  "get_flows_datatable_export_job": {
    "operationId": "get_flows_datatable_export_job",
    "functionName": "get_flows_datatable_export_job",
    "signature": "get_flows_datatable_export_job(datatable_id, export_job_id)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "export_job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DataTableExportJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\nexport_job_id = 'export_job_id_example' # str | id of export job\n\ntry:\n    # Returns the state information about an export job\n    api_response = api_instance.get_flows_datatable_export_job(datatable_id, export_job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_datatable_export_job: %s\\n\" % e)"
  },
  "get_flows_datatable_import_job": {
    "operationId": "get_flows_datatable_import_job",
    "functionName": "get_flows_datatable_import_job",
    "signature": "get_flows_datatable_import_job(datatable_id, import_job_id)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "import_job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DataTableImportJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\nimport_job_id = 'import_job_id_example' # str | id of import job\n\ntry:\n    # Returns the state information about an import job\n    api_response = api_instance.get_flows_datatable_import_job(datatable_id, import_job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_datatable_import_job: %s\\n\" % e)"
  },
  "get_flows_datatable_import_jobs": {
    "operationId": "get_flows_datatable_import_jobs",
    "functionName": "get_flows_datatable_import_jobs",
    "signature": "get_flows_datatable_import_jobs(datatable_id, page_number, page_size)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "DataTableImportEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get all recent import jobs\n    api_response = api_instance.get_flows_datatable_import_jobs(datatable_id, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_datatable_import_jobs: %s\\n\" % e)"
  },
  "get_flows_datatable_row": {
    "operationId": "get_flows_datatable_row",
    "functionName": "get_flows_datatable_row",
    "signature": "get_flows_datatable_row(datatable_id, row_id, showbrief)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "row_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "showbrief",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "dict(str, object)",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\nrow_id = 'row_id_example' # str | The key for the row\nshowbrief = True # bool | if true returns just the key field for the row (optional) (default to True)\n\ntry:\n    # Returns a specific row for the datatable\n    api_response = api_instance.get_flows_datatable_row(datatable_id, row_id, showbrief=showbrief)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_datatable_row: %s\\n\" % e)"
  },
  "get_flows_datatable_rows": {
    "operationId": "get_flows_datatable_rows",
    "functionName": "get_flows_datatable_rows",
    "signature": "get_flows_datatable_rows(datatable_id, page_number, page_size, showbrief, sort_order)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "showbrief",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DataTableRowEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nshowbrief = True # bool | If true returns just the key value of the row (optional) (default to True)\nsort_order = ''ascending'' # str | Sort order (optional) (default to 'ascending')\n\ntry:\n    # Returns the rows for the datatable with the given id\n    api_response = api_instance.get_flows_datatable_rows(datatable_id, page_number=page_number, page_size=page_size, showbrief=showbrief, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_datatable_rows: %s\\n\" % e)"
  },
  "get_flows_datatables": {
    "operationId": "get_flows_datatables",
    "functionName": "get_flows_datatables",
    "signature": "get_flows_datatables(expand, page_number, page_size, sort_by, sort_order, division_id, name)",
    "parameters": [
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DataTablesDomainEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nexpand = 'expand_example' # str | Expand instructions for the result (optional)\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''id'' # str | Sort by (optional) (default to 'id')\nsort_order = ''ascending'' # str | Sort order (optional) (default to 'ascending')\ndivision_id = ['division_id_example'] # list[str] | division ID(s) (optional)\nname = 'exactMatch, beginsWith*, *endsWith, *contains*' # str | Filter by Name. The wildcard character * is supported within the filter. Matches are case-insensitive. (optional)\n\ntry:\n    # Retrieve a list of datatables for the org\n    api_response = api_instance.get_flows_datatables(expand=expand, page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, division_id=division_id, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_datatables: %s\\n\" % e)"
  },
  "get_flows_datatables_divisionview": {
    "operationId": "get_flows_datatables_divisionview",
    "functionName": "get_flows_datatables_divisionview",
    "signature": "get_flows_datatables_divisionview(datatable_id, expand)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DataTable",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\nexpand = 'expand_example' # str | Expand instructions for the result (optional)\n\ntry:\n    # Returns a specific datatable by id\n    api_response = api_instance.get_flows_datatables_divisionview(datatable_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_datatables_divisionview: %s\\n\" % e)"
  },
  "get_flows_datatables_divisionviews": {
    "operationId": "get_flows_datatables_divisionviews",
    "functionName": "get_flows_datatables_divisionviews",
    "signature": "get_flows_datatables_divisionviews(expand, page_number, page_size, sort_by, sort_order, division_id, name)",
    "parameters": [
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DataTablesDomainEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nexpand = 'expand_example' # str | Expand instructions for the result (optional)\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''id'' # str | Sort by (optional) (default to 'id')\nsort_order = ''ascending'' # str | Sort order (optional) (default to 'ascending')\ndivision_id = ['division_id_example'] # list[str] | division ID(s) (optional)\nname = 'exactMatch, beginsWith*, *endsWith, *contains*' # str | Filter by Name. The wildcard character * is supported within the filter. Matches are case-insensitive. (optional)\n\ntry:\n    # Retrieve a list of datatables for the org\n    api_response = api_instance.get_flows_datatables_divisionviews(expand=expand, page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, division_id=division_id, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_datatables_divisionviews: %s\\n\" % e)"
  },
  "get_flows_divisionviews": {
    "operationId": "get_flows_divisionviews",
    "functionName": "get_flows_divisionviews",
    "signature": "get_flows_divisionviews(type, page_number, page_size, sort_by, sort_order, id, name, publish_version_id, published_after, published_before, division_id, include_schemas)",
    "parameters": [
      {
        "name": "type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "publish_version_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "published_after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "published_before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "include_schemas",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "FlowDivisionViewEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ntype = ['type_example'] # list[str] | Type (optional)\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''id'' # str | Sort by (optional) (default to 'id')\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\nid = ['id_example'] # list[str] | ID (optional)\nname = 'name_example' # str | Name (optional)\npublish_version_id = 'publish_version_id_example' # str | Publish version ID (optional)\npublished_after = '2015-01-01T12:00:00-0600, 2015-01-01T18:00:00Z, 2015-01-01T12:00:00.000-0600, 2015-01-01T18:00:00.000Z, 2015-01-01' # str | Published after (optional)\npublished_before = '2015-01-01T12:00:00-0600, 2015-01-01T18:00:00Z, 2015-01-01T12:00:00.000-0600, 2015-01-01T18:00:00.000Z, 2015-01-01' # str | Published before (optional)\ndivision_id = ['division_id_example'] # list[str] | division ID(s) (optional)\ninclude_schemas = False # bool | Include variable schemas (optional) (default to False)\n\ntry:\n    # Get a pageable list of basic flow information objects filterable by query parameters.\n    api_response = api_instance.get_flows_divisionviews(type=type, page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, id=id, name=name, publish_version_id=publish_version_id, published_after=published_after, published_before=published_before, division_id=division_id, include_schemas=include_schemas)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_divisionviews: %s\\n\" % e)"
  },
  "get_flows_execution": {
    "operationId": "get_flows_execution",
    "functionName": "get_flows_execution",
    "signature": "get_flows_execution(flow_execution_id)",
    "parameters": [
      {
        "name": "flow_execution_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "FlowRuntimeExecution",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_execution_id = 'flow_execution_id_example' # str | flow execution ID\n\ntry:\n    # Get a flow execution's details. Flow execution details are available for several days after the flow is started.\n    api_response = api_instance.get_flows_execution(flow_execution_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_execution: %s\\n\" % e)"
  },
  "get_flows_instance": {
    "operationId": "get_flows_instance",
    "functionName": "get_flows_instance",
    "signature": "get_flows_instance(instance_id, expand)",
    "parameters": [
      {
        "name": "instance_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "GetFlowExecutionDataJobResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ninstance_id = 'instance_id_example' # str | Instance ID\nexpand = 'expand_example' # str | Expand various details. (optional)\n\ntry:\n    # Start a process (job) to prepare a download of a singular flow execution data instance by Id\n    api_response = api_instance.get_flows_instance(instance_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_instance: %s\\n\" % e)"
  },
  "get_flows_instances_job": {
    "operationId": "get_flows_instances_job",
    "functionName": "get_flows_instances_job",
    "signature": "get_flows_instances_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "GetFlowExecutionDataJobResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\njob_id = 'job_id_example' # str | The asynchronous job ID\n\ntry:\n    # Get the status and/or results of an asynchronous flow execution data retrieval job\n    api_response = api_instance.get_flows_instances_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_instances_job: %s\\n\" % e)"
  },
  "get_flows_instances_querycapabilities": {
    "operationId": "get_flows_instances_querycapabilities",
    "functionName": "get_flows_instances_querycapabilities",
    "signature": "get_flows_instances_querycapabilities(expand)",
    "parameters": [
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "FlowsQueryCriteriaResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nexpand = 'expand_example' # str | Expand various query types. (optional)\n\ntry:\n    # Retrieve a list of capabilities that the org can use to query for execution data\n    api_response = api_instance.get_flows_instances_querycapabilities(expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_instances_querycapabilities: %s\\n\" % e)"
  },
  "get_flows_instances_settings_executiondata": {
    "operationId": "get_flows_instances_settings_executiondata",
    "functionName": "get_flows_instances_settings_executiondata",
    "signature": "get_flows_instances_settings_executiondata()",
    "return": "ExecutionDataFlowSettingsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\n\ntry:\n    # Get the execution history enabled setting.\n    api_response = api_instance.get_flows_instances_settings_executiondata()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_instances_settings_executiondata: %s\\n\" % e)"
  },
  "get_flows_instances_settings_loglevels": {
    "operationId": "get_flows_instances_settings_loglevels",
    "functionName": "get_flows_instances_settings_loglevels",
    "signature": "get_flows_instances_settings_loglevels(expand, page_number, page_size)",
    "parameters": [
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "FlowSettingsResponseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nexpand = ['expand_example'] # list[str] | Expand instructions for the result (optional)\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Number of entities to return. Maximum of 200. (optional) (default to 25)\n\ntry:\n    # Retrieve a list of LogLevels for the organization.\n    api_response = api_instance.get_flows_instances_settings_loglevels(expand=expand, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_instances_settings_loglevels: %s\\n\" % e)"
  },
  "get_flows_instances_settings_loglevels_characteristics": {
    "operationId": "get_flows_instances_settings_loglevels_characteristics",
    "functionName": "get_flows_instances_settings_loglevels_characteristics",
    "signature": "get_flows_instances_settings_loglevels_characteristics()",
    "return": "FlowLogLevelCharacteristicsDefinitions",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\n\ntry:\n    # Gets the available flow log level characteristics for this organization.\n    api_response = api_instance.get_flows_instances_settings_loglevels_characteristics()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_instances_settings_loglevels_characteristics: %s\\n\" % e)"
  },
  "get_flows_instances_settings_loglevels_default": {
    "operationId": "get_flows_instances_settings_loglevels_default",
    "functionName": "get_flows_instances_settings_loglevels_default",
    "signature": "get_flows_instances_settings_loglevels_default(expand)",
    "parameters": [
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "FlowSettingsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nexpand = ['expand_example'] # list[str] | Expand instructions for the result (optional)\n\ntry:\n    # Returns the flow default log level.\n    api_response = api_instance.get_flows_instances_settings_loglevels_default(expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_instances_settings_loglevels_default: %s\\n\" % e)"
  },
  "get_flows_job": {
    "operationId": "get_flows_job",
    "functionName": "get_flows_job",
    "signature": "get_flows_job(job_id, expand)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ArchitectJobStateResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\njob_id = 'job_id_example' # str | Job ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Fetch Architect Job Status\n    api_response = api_instance.get_flows_job(job_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_job: %s\\n\" % e)"
  },
  "get_flows_milestone": {
    "operationId": "get_flows_milestone",
    "functionName": "get_flows_milestone",
    "signature": "get_flows_milestone(milestone_id)",
    "parameters": [
      {
        "name": "milestone_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "FlowMilestone",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nmilestone_id = 'milestone_id_example' # str | flow milestone ID\n\ntry:\n    # Get a flow milestone\n    api_response = api_instance.get_flows_milestone(milestone_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_milestone: %s\\n\" % e)"
  },
  "get_flows_milestones": {
    "operationId": "get_flows_milestones",
    "functionName": "get_flows_milestones",
    "signature": "get_flows_milestones(page_number, page_size, sort_by, sort_order, id, name, description, name_or_description, division_id)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "description",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name_or_description",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "FlowMilestoneListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''id'' # str | Sort by (optional) (default to 'id')\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\nid = ['id_example'] # list[str] | ID (optional)\nname = 'name_example' # str | Name (optional)\ndescription = 'description_example' # str | Description (optional)\nname_or_description = 'name_or_description_example' # str | Name or description (optional)\ndivision_id = ['division_id_example'] # list[str] | division ID(s) (optional)\n\ntry:\n    # Get a pageable list of flow milestones, filtered by query parameters\n    api_response = api_instance.get_flows_milestones(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, id=id, name=name, description=description, name_or_description=name_or_description, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_milestones: %s\\n\" % e)"
  },
  "get_flows_milestones_divisionviews": {
    "operationId": "get_flows_milestones_divisionviews",
    "functionName": "get_flows_milestones_divisionviews",
    "signature": "get_flows_milestones_divisionviews(page_number, page_size, sort_by, sort_order, id, name, division_id)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "FlowMilestoneDivisionViewEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''id'' # str | Sort by (optional) (default to 'id')\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\nid = ['id_example'] # list[str] | ID (optional)\nname = 'name_example' # str | Name (optional)\ndivision_id = ['division_id_example'] # list[str] | division ID(s) (optional)\n\ntry:\n    # Get a pageable list of basic flow milestone information objects filterable by query parameters.\n    api_response = api_instance.get_flows_milestones_divisionviews(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, id=id, name=name, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_milestones_divisionviews: %s\\n\" % e)"
  },
  "get_flows_outcome": {
    "operationId": "get_flows_outcome",
    "functionName": "get_flows_outcome",
    "signature": "get_flows_outcome(flow_outcome_id)",
    "parameters": [
      {
        "name": "flow_outcome_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "FlowOutcome",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_outcome_id = 'flow_outcome_id_example' # str | flow outcome ID\n\ntry:\n    # Get a flow outcome\n    api_response = api_instance.get_flows_outcome(flow_outcome_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_outcome: %s\\n\" % e)"
  },
  "get_flows_outcomes": {
    "operationId": "get_flows_outcomes",
    "functionName": "get_flows_outcomes",
    "signature": "get_flows_outcomes(page_number, page_size, sort_by, sort_order, id, name, description, name_or_description, division_id)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "description",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name_or_description",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "FlowOutcomeListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''id'' # str | Sort by (optional) (default to 'id')\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\nid = ['id_example'] # list[str] | ID (optional)\nname = 'name_example' # str | Name (optional)\ndescription = 'description_example' # str | Description (optional)\nname_or_description = 'name_or_description_example' # str | Name or description (optional)\ndivision_id = ['division_id_example'] # list[str] | division ID(s) (optional)\n\ntry:\n    # Get a pageable list of flow outcomes, filtered by query parameters\n    api_response = api_instance.get_flows_outcomes(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, id=id, name=name, description=description, name_or_description=name_or_description, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_outcomes: %s\\n\" % e)"
  },
  "get_flows_outcomes_divisionviews": {
    "operationId": "get_flows_outcomes_divisionviews",
    "functionName": "get_flows_outcomes_divisionviews",
    "signature": "get_flows_outcomes_divisionviews(page_number, page_size, sort_by, sort_order, id, name, division_id)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "FlowOutcomeDivisionViewEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''id'' # str | Sort by (optional) (default to 'id')\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\nid = ['id_example'] # list[str] | ID (optional)\nname = 'name_example' # str | Name (optional)\ndivision_id = ['division_id_example'] # list[str] | division ID(s) (optional)\n\ntry:\n    # Get a pageable list of basic flow outcome information objects filterable by query parameters.\n    api_response = api_instance.get_flows_outcomes_divisionviews(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, id=id, name=name, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->get_flows_outcomes_divisionviews: %s\\n\" % e)"
  },
  "patch_architect_grammar": {
    "operationId": "patch_architect_grammar",
    "functionName": "patch_architect_grammar",
    "signature": "patch_architect_grammar(grammar_id, body)",
    "parameters": [
      {
        "name": "grammar_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Grammar",
        "required": "false"
      }
    ],
    "return": "Grammar",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ngrammar_id = 'grammar_id_example' # str | grammar ID\nbody = PureCloudPlatformClientV2.Grammar() # Grammar |  (optional)\n\ntry:\n    # Updates a grammar\n    api_response = api_instance.patch_architect_grammar(grammar_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->patch_architect_grammar: %s\\n\" % e)"
  },
  "patch_architect_grammar_language": {
    "operationId": "patch_architect_grammar_language",
    "functionName": "patch_architect_grammar_language",
    "signature": "patch_architect_grammar_language(grammar_id, language_code, body)",
    "parameters": [
      {
        "name": "grammar_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "GrammarLanguageUpdate",
        "required": "false"
      }
    ],
    "return": "GrammarLanguage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ngrammar_id = 'grammar_id_example' # str | Grammar ID\nlanguage_code = 'language_code_example' # str | Language\nbody = PureCloudPlatformClientV2.GrammarLanguageUpdate() # GrammarLanguageUpdate |  (optional)\n\ntry:\n    # Updates a grammar language\n    api_response = api_instance.patch_architect_grammar_language(grammar_id, language_code, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->patch_architect_grammar_language: %s\\n\" % e)"
  },
  "patch_flows_instances_settings_executiondata": {
    "operationId": "patch_flows_instances_settings_executiondata",
    "functionName": "patch_flows_instances_settings_executiondata",
    "signature": "patch_flows_instances_settings_executiondata(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ExecutionDataSettingsRequest",
        "required": "true"
      }
    ],
    "return": "ExecutionDataFlowSettingsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.ExecutionDataSettingsRequest() # ExecutionDataSettingsRequest | New Execution Data Setting\n\ntry:\n    # Edit the execution history enabled setting.\n    api_response = api_instance.patch_flows_instances_settings_executiondata(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->patch_flows_instances_settings_executiondata: %s\\n\" % e)"
  },
  "post_architect_dependencytracking_build": {
    "operationId": "post_architect_dependencytracking_build",
    "functionName": "post_architect_dependencytracking_build",
    "signature": "post_architect_dependencytracking_build()",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\n\ntry:\n    # Rebuild Dependency Tracking data for an organization\n    api_instance.post_architect_dependencytracking_build()\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_dependencytracking_build: %s\\n\" % e)"
  },
  "post_architect_emergencygroups": {
    "operationId": "post_architect_emergencygroups",
    "functionName": "post_architect_emergencygroups",
    "signature": "post_architect_emergencygroups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EmergencyGroup",
        "required": "true"
      }
    ],
    "return": "EmergencyGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.EmergencyGroup() # EmergencyGroup | \n\ntry:\n    # Creates a new emergency group\n    api_response = api_instance.post_architect_emergencygroups(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_emergencygroups: %s\\n\" % e)"
  },
  "post_architect_grammar_language_files_dtmf": {
    "operationId": "post_architect_grammar_language_files_dtmf",
    "functionName": "post_architect_grammar_language_files_dtmf",
    "signature": "post_architect_grammar_language_files_dtmf(grammar_id, language_code, body)",
    "parameters": [
      {
        "name": "grammar_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "GrammarFileUploadRequest",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ngrammar_id = 'grammar_id_example' # str | Grammar ID\nlanguage_code = 'language_code_example' # str | Language\nbody = PureCloudPlatformClientV2.GrammarFileUploadRequest() # GrammarFileUploadRequest | query\n\ntry:\n    # Creates a presigned URL for uploading a grammar DTMF mode file\n    api_response = api_instance.post_architect_grammar_language_files_dtmf(grammar_id, language_code, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_grammar_language_files_dtmf: %s\\n\" % e)"
  },
  "post_architect_grammar_language_files_voice": {
    "operationId": "post_architect_grammar_language_files_voice",
    "functionName": "post_architect_grammar_language_files_voice",
    "signature": "post_architect_grammar_language_files_voice(grammar_id, language_code, body)",
    "parameters": [
      {
        "name": "grammar_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "GrammarFileUploadRequest",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ngrammar_id = 'grammar_id_example' # str | Grammar ID\nlanguage_code = 'language_code_example' # str | Language\nbody = PureCloudPlatformClientV2.GrammarFileUploadRequest() # GrammarFileUploadRequest | query\n\ntry:\n    # Creates a presigned URL for uploading a grammar voice mode file\n    api_response = api_instance.post_architect_grammar_language_files_voice(grammar_id, language_code, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_grammar_language_files_voice: %s\\n\" % e)"
  },
  "post_architect_grammar_languages": {
    "operationId": "post_architect_grammar_languages",
    "functionName": "post_architect_grammar_languages",
    "signature": "post_architect_grammar_languages(grammar_id, body)",
    "parameters": [
      {
        "name": "grammar_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "GrammarLanguage",
        "required": "true"
      }
    ],
    "return": "GrammarLanguage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ngrammar_id = 'grammar_id_example' # str | Grammar ID\nbody = PureCloudPlatformClientV2.GrammarLanguage() # GrammarLanguage | \n\ntry:\n    # Create a new language for a given grammar\n    api_response = api_instance.post_architect_grammar_languages(grammar_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_grammar_languages: %s\\n\" % e)"
  },
  "post_architect_grammars": {
    "operationId": "post_architect_grammars",
    "functionName": "post_architect_grammars",
    "signature": "post_architect_grammars(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Grammar",
        "required": "true"
      }
    ],
    "return": "Grammar",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.Grammar() # Grammar | \n\ntry:\n    # Create a new grammar\n    api_response = api_instance.post_architect_grammars(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_grammars: %s\\n\" % e)"
  },
  "post_architect_ivrs": {
    "operationId": "post_architect_ivrs",
    "functionName": "post_architect_ivrs",
    "signature": "post_architect_ivrs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "IVR",
        "required": "true"
      }
    ],
    "return": "IVR",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.IVR() # IVR | \n\ntry:\n    # Create IVR config.\n    api_response = api_instance.post_architect_ivrs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_ivrs: %s\\n\" % e)"
  },
  "post_architect_prompt_history": {
    "operationId": "post_architect_prompt_history",
    "functionName": "post_architect_prompt_history",
    "signature": "post_architect_prompt_history(prompt_id)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\n\ntry:\n    # Generate prompt history\n    api_response = api_instance.post_architect_prompt_history(prompt_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_prompt_history: %s\\n\" % e)"
  },
  "post_architect_prompt_resources": {
    "operationId": "post_architect_prompt_resources",
    "functionName": "post_architect_prompt_resources",
    "signature": "post_architect_prompt_resources(prompt_id, body)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PromptAssetCreate",
        "required": "true"
      }
    ],
    "return": "PromptAsset",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\nbody = PureCloudPlatformClientV2.PromptAssetCreate() # PromptAssetCreate | \n\ntry:\n    # Create a new user prompt resource\n    api_response = api_instance.post_architect_prompt_resources(prompt_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_prompt_resources: %s\\n\" % e)"
  },
  "post_architect_prompts": {
    "operationId": "post_architect_prompts",
    "functionName": "post_architect_prompts",
    "signature": "post_architect_prompts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Prompt",
        "required": "true"
      }
    ],
    "return": "Prompt",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.Prompt() # Prompt | \n\ntry:\n    # Create a new user prompt\n    api_response = api_instance.post_architect_prompts(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_prompts: %s\\n\" % e)"
  },
  "post_architect_schedulegroups": {
    "operationId": "post_architect_schedulegroups",
    "functionName": "post_architect_schedulegroups",
    "signature": "post_architect_schedulegroups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ScheduleGroup",
        "required": "true"
      }
    ],
    "return": "ScheduleGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.ScheduleGroup() # ScheduleGroup | \n\ntry:\n    # Creates a new schedule group\n    api_response = api_instance.post_architect_schedulegroups(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_schedulegroups: %s\\n\" % e)"
  },
  "post_architect_schedules": {
    "operationId": "post_architect_schedules",
    "functionName": "post_architect_schedules",
    "signature": "post_architect_schedules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Schedule",
        "required": "true"
      }
    ],
    "return": "Schedule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.Schedule() # Schedule | \n\ntry:\n    # Create a new schedule.\n    api_response = api_instance.post_architect_schedules(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_schedules: %s\\n\" % e)"
  },
  "post_architect_systemprompt_history": {
    "operationId": "post_architect_systemprompt_history",
    "functionName": "post_architect_systemprompt_history",
    "signature": "post_architect_systemprompt_history(prompt_id)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | promptId\n\ntry:\n    # Generate system prompt history\n    api_response = api_instance.post_architect_systemprompt_history(prompt_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_systemprompt_history: %s\\n\" % e)"
  },
  "post_architect_systemprompt_resources": {
    "operationId": "post_architect_systemprompt_resources",
    "functionName": "post_architect_systemprompt_resources",
    "signature": "post_architect_systemprompt_resources(prompt_id, body)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SystemPromptAsset",
        "required": "true"
      }
    ],
    "return": "SystemPromptAsset",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\nbody = PureCloudPlatformClientV2.SystemPromptAsset() # SystemPromptAsset | \n\ntry:\n    # Create system prompt resource override.\n    api_response = api_instance.post_architect_systemprompt_resources(prompt_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_architect_systemprompt_resources: %s\\n\" % e)"
  },
  "post_flow_history": {
    "operationId": "post_flow_history",
    "functionName": "post_flow_history",
    "signature": "post_flow_history(flow_id)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | Flow ID\n\ntry:\n    # Generate flow history\n    api_response = api_instance.post_flow_history(flow_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flow_history: %s\\n\" % e)"
  },
  "post_flow_instances_settings_loglevels": {
    "operationId": "post_flow_instances_settings_loglevels",
    "functionName": "post_flow_instances_settings_loglevels",
    "signature": "post_flow_instances_settings_loglevels(flow_id, body, expand)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "FlowLogLevelRequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "FlowSettingsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | The flow id to set the loglevel for\nbody = PureCloudPlatformClientV2.FlowLogLevelRequest() # FlowLogLevelRequest | New LogLevel settings\nexpand = ['expand_example'] # list[str] | Expand instructions for the result (optional)\n\ntry:\n    # Set the logLevel for a particular flow id\n    api_response = api_instance.post_flow_instances_settings_loglevels(flow_id, body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flow_instances_settings_loglevels: %s\\n\" % e)"
  },
  "post_flow_versions": {
    "operationId": "post_flow_versions",
    "functionName": "post_flow_versions",
    "signature": "post_flow_versions(flow_id, body)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "object",
        "required": "true"
      }
    ],
    "return": "FlowVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | Flow ID\nbody = NULL # object | \n\ntry:\n    # Create flow version\n    api_response = api_instance.post_flow_versions(flow_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flow_versions: %s\\n\" % e)"
  },
  "post_flows": {
    "operationId": "post_flows",
    "functionName": "post_flows",
    "signature": "post_flows(body, language)",
    "parameters": [
      {
        "name": "body",
        "type": "Flow",
        "required": "true"
      },
      {
        "name": "language",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Flow",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.Flow() # Flow | \nlanguage = 'language_example' # str | Language (optional)\n\ntry:\n    # Create flow\n    api_response = api_instance.post_flows(body, language=language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows: %s\\n\" % e)"
  },
  "post_flows_actions_checkin": {
    "operationId": "post_flows_actions_checkin",
    "functionName": "post_flows_actions_checkin",
    "signature": "post_flows_actions_checkin(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow = 'flow_example' # str | Flow ID\n\ntry:\n    # Check-in flow\n    api_response = api_instance.post_flows_actions_checkin(flow)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_actions_checkin: %s\\n\" % e)"
  },
  "post_flows_actions_checkout": {
    "operationId": "post_flows_actions_checkout",
    "functionName": "post_flows_actions_checkout",
    "signature": "post_flows_actions_checkout(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow = 'flow_example' # str | Flow ID\n\ntry:\n    # Check-out flow\n    api_response = api_instance.post_flows_actions_checkout(flow)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_actions_checkout: %s\\n\" % e)"
  },
  "post_flows_actions_deactivate": {
    "operationId": "post_flows_actions_deactivate",
    "functionName": "post_flows_actions_deactivate",
    "signature": "post_flows_actions_deactivate(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow = 'flow_example' # str | Flow ID\n\ntry:\n    # Deactivate flow\n    api_response = api_instance.post_flows_actions_deactivate(flow)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_actions_deactivate: %s\\n\" % e)"
  },
  "post_flows_actions_publish": {
    "operationId": "post_flows_actions_publish",
    "functionName": "post_flows_actions_publish",
    "signature": "post_flows_actions_publish(flow, version)",
    "parameters": [
      {
        "name": "flow",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Operation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow = 'flow_example' # str | Flow ID\nversion = 'version_example' # str | version (optional)\n\ntry:\n    # Publish flow\n    api_response = api_instance.post_flows_actions_publish(flow, version=version)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_actions_publish: %s\\n\" % e)"
  },
  "post_flows_actions_revert": {
    "operationId": "post_flows_actions_revert",
    "functionName": "post_flows_actions_revert",
    "signature": "post_flows_actions_revert(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow = 'flow_example' # str | Flow ID\n\ntry:\n    # Revert flow\n    api_response = api_instance.post_flows_actions_revert(flow)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_actions_revert: %s\\n\" % e)"
  },
  "post_flows_actions_unlock": {
    "operationId": "post_flows_actions_unlock",
    "functionName": "post_flows_actions_unlock",
    "signature": "post_flows_actions_unlock(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow = 'flow_example' # str | Flow ID\n\ntry:\n    # Unlock flow\n    api_response = api_instance.post_flows_actions_unlock(flow)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_actions_unlock: %s\\n\" % e)"
  },
  "post_flows_datatable_export_jobs": {
    "operationId": "post_flows_datatable_export_jobs",
    "functionName": "post_flows_datatable_export_jobs",
    "signature": "post_flows_datatable_export_jobs(datatable_id)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DataTableExportJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\n\ntry:\n    # Begin an export process for exporting all rows from a datatable\n    api_response = api_instance.post_flows_datatable_export_jobs(datatable_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_datatable_export_jobs: %s\\n\" % e)"
  },
  "post_flows_datatable_import_jobs": {
    "operationId": "post_flows_datatable_import_jobs",
    "functionName": "post_flows_datatable_import_jobs",
    "signature": "post_flows_datatable_import_jobs(datatable_id, body)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DataTableImportJob",
        "required": "true"
      }
    ],
    "return": "DataTableImportJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\nbody = PureCloudPlatformClientV2.DataTableImportJob() # DataTableImportJob | import job information\n\ntry:\n    # Begin an import process for importing rows into a datatable\n    api_response = api_instance.post_flows_datatable_import_jobs(datatable_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_datatable_import_jobs: %s\\n\" % e)"
  },
  "post_flows_datatable_rows": {
    "operationId": "post_flows_datatable_rows",
    "functionName": "post_flows_datatable_rows",
    "signature": "post_flows_datatable_rows(datatable_id, data_table_row)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "data_table_row",
        "type": "object",
        "required": "true"
      }
    ],
    "return": "dict(str, object)",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\ndata_table_row = NULL # object | \n\ntry:\n    # Create a new row entry for the datatable.\n    api_response = api_instance.post_flows_datatable_rows(datatable_id, data_table_row)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_datatable_rows: %s\\n\" % e)"
  },
  "post_flows_datatables": {
    "operationId": "post_flows_datatables",
    "functionName": "post_flows_datatables",
    "signature": "post_flows_datatables(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DataTable",
        "required": "true"
      }
    ],
    "return": "DataTable",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.DataTable() # DataTable | datatable json-schema\n\ntry:\n    # Create a new datatable with the specified json-schema definition\n    api_response = api_instance.post_flows_datatables(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_datatables: %s\\n\" % e)"
  },
  "post_flows_executions": {
    "operationId": "post_flows_executions",
    "functionName": "post_flows_executions",
    "signature": "post_flows_executions(flow_launch_request)",
    "parameters": [
      {
        "name": "flow_launch_request",
        "type": "FlowExecutionLaunchRequest",
        "required": "true"
      }
    ],
    "return": "FlowExecutionLaunchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_launch_request = PureCloudPlatformClientV2.FlowExecutionLaunchRequest() # FlowExecutionLaunchRequest | \n\ntry:\n    # Launch an instance of a flow definition, for flow types that support it such as the 'workflow' type.\n    api_response = api_instance.post_flows_executions(flow_launch_request)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_executions: %s\\n\" % e)"
  },
  "post_flows_instances_jobs": {
    "operationId": "post_flows_instances_jobs",
    "functionName": "post_flows_instances_jobs",
    "signature": "post_flows_instances_jobs(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "ExecutionDataRequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "GetFlowExecutionDataJobResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.ExecutionDataRequest() # ExecutionDataRequest | Requested Flow Ids\nexpand = 'expand_example' # str | Expand various query types. (optional)\n\ntry:\n    # Start a process (job) that will prepare a list of execution data IDs for download.\n    api_response = api_instance.post_flows_instances_jobs(body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_instances_jobs: %s\\n\" % e)"
  },
  "post_flows_instances_query": {
    "operationId": "post_flows_instances_query",
    "functionName": "post_flows_instances_query",
    "signature": "post_flows_instances_query(body, index_only, page_size)",
    "parameters": [
      {
        "name": "body",
        "type": "CriteriaQuery",
        "required": "true"
      },
      {
        "name": "index_only",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "FlowResultEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.CriteriaQuery() # CriteriaQuery | query\nindex_only = True # bool | indexes only (optional)\npage_size = 50 # int | number of results to return (optional) (default to 50)\n\ntry:\n    # Query the database of existing flow histories to look for particular flow criteria\n    api_response = api_instance.post_flows_instances_query(body, index_only=index_only, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_instances_query: %s\\n\" % e)"
  },
  "post_flows_jobs": {
    "operationId": "post_flows_jobs",
    "functionName": "post_flows_jobs",
    "signature": "post_flows_jobs()",
    "return": "RegisterArchitectJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\n\ntry:\n    # Register Architect Job. Returns a URL where a file, such as an Architect flow YAML file, can be PUT which will then initiate the job.\n    api_response = api_instance.post_flows_jobs()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_jobs: %s\\n\" % e)"
  },
  "post_flows_milestones": {
    "operationId": "post_flows_milestones",
    "functionName": "post_flows_milestones",
    "signature": "post_flows_milestones(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowMilestone",
        "required": "false"
      }
    ],
    "return": "FlowMilestone",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.FlowMilestone() # FlowMilestone |  (optional)\n\ntry:\n    # Create a flow milestone\n    api_response = api_instance.post_flows_milestones(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_milestones: %s\\n\" % e)"
  },
  "post_flows_outcomes": {
    "operationId": "post_flows_outcomes",
    "functionName": "post_flows_outcomes",
    "signature": "post_flows_outcomes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowOutcome",
        "required": "false"
      }
    ],
    "return": "FlowOutcome",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.FlowOutcome() # FlowOutcome |  (optional)\n\ntry:\n    # Create a flow outcome\n    api_response = api_instance.post_flows_outcomes(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->post_flows_outcomes: %s\\n\" % e)"
  },
  "put_architect_emergencygroup": {
    "operationId": "put_architect_emergencygroup",
    "functionName": "put_architect_emergencygroup",
    "signature": "put_architect_emergencygroup(emergency_group_id, body)",
    "parameters": [
      {
        "name": "emergency_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EmergencyGroup",
        "required": "true"
      }
    ],
    "return": "EmergencyGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nemergency_group_id = 'emergency_group_id_example' # str | Emergency group ID\nbody = PureCloudPlatformClientV2.EmergencyGroup() # EmergencyGroup | \n\ntry:\n    # Updates a emergency group by ID\n    api_response = api_instance.put_architect_emergencygroup(emergency_group_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_architect_emergencygroup: %s\\n\" % e)"
  },
  "put_architect_ivr": {
    "operationId": "put_architect_ivr",
    "functionName": "put_architect_ivr",
    "signature": "put_architect_ivr(ivr_id, body)",
    "parameters": [
      {
        "name": "ivr_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "IVR",
        "required": "true"
      }
    ],
    "return": "IVR",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nivr_id = 'ivr_id_example' # str | IVR id\nbody = PureCloudPlatformClientV2.IVR() # IVR | \n\ntry:\n    # Update an IVR Config.\n    api_response = api_instance.put_architect_ivr(ivr_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_architect_ivr: %s\\n\" % e)"
  },
  "put_architect_prompt": {
    "operationId": "put_architect_prompt",
    "functionName": "put_architect_prompt",
    "signature": "put_architect_prompt(prompt_id, body)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Prompt",
        "required": "true"
      }
    ],
    "return": "Prompt",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\nbody = PureCloudPlatformClientV2.Prompt() # Prompt | \n\ntry:\n    # Update specified user prompt\n    api_response = api_instance.put_architect_prompt(prompt_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_architect_prompt: %s\\n\" % e)"
  },
  "put_architect_prompt_resource": {
    "operationId": "put_architect_prompt_resource",
    "functionName": "put_architect_prompt_resource",
    "signature": "put_architect_prompt_resource(prompt_id, language_code, body)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PromptAsset",
        "required": "true"
      }
    ],
    "return": "PromptAsset",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\nlanguage_code = 'language_code_example' # str | Language\nbody = PureCloudPlatformClientV2.PromptAsset() # PromptAsset | \n\ntry:\n    # Update specified user prompt resource\n    api_response = api_instance.put_architect_prompt_resource(prompt_id, language_code, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_architect_prompt_resource: %s\\n\" % e)"
  },
  "put_architect_schedule": {
    "operationId": "put_architect_schedule",
    "functionName": "put_architect_schedule",
    "signature": "put_architect_schedule(schedule_id, body)",
    "parameters": [
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Schedule",
        "required": "true"
      }
    ],
    "return": "Schedule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nschedule_id = 'schedule_id_example' # str | Schedule ID\nbody = PureCloudPlatformClientV2.Schedule() # Schedule | \n\ntry:\n    # Update schedule by ID\n    api_response = api_instance.put_architect_schedule(schedule_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_architect_schedule: %s\\n\" % e)"
  },
  "put_architect_schedulegroup": {
    "operationId": "put_architect_schedulegroup",
    "functionName": "put_architect_schedulegroup",
    "signature": "put_architect_schedulegroup(schedule_group_id, body)",
    "parameters": [
      {
        "name": "schedule_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScheduleGroup",
        "required": "true"
      }
    ],
    "return": "ScheduleGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nschedule_group_id = 'schedule_group_id_example' # str | Schedule group ID\nbody = PureCloudPlatformClientV2.ScheduleGroup() # ScheduleGroup | \n\ntry:\n    # Updates a schedule group by ID\n    api_response = api_instance.put_architect_schedulegroup(schedule_group_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_architect_schedulegroup: %s\\n\" % e)"
  },
  "put_architect_systemprompt_resource": {
    "operationId": "put_architect_systemprompt_resource",
    "functionName": "put_architect_systemprompt_resource",
    "signature": "put_architect_systemprompt_resource(prompt_id, language_code, body)",
    "parameters": [
      {
        "name": "prompt_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SystemPromptAsset",
        "required": "true"
      }
    ],
    "return": "SystemPromptAsset",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nprompt_id = 'prompt_id_example' # str | Prompt ID\nlanguage_code = 'language_code_example' # str | Language\nbody = PureCloudPlatformClientV2.SystemPromptAsset() # SystemPromptAsset | \n\ntry:\n    # Updates a system prompt resource override.\n    api_response = api_instance.put_architect_systemprompt_resource(prompt_id, language_code, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_architect_systemprompt_resource: %s\\n\" % e)"
  },
  "put_flow": {
    "operationId": "put_flow",
    "functionName": "put_flow",
    "signature": "put_flow(flow_id, body)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Flow",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | Flow ID\nbody = PureCloudPlatformClientV2.Flow() # Flow | \n\ntry:\n    # Update flow\n    api_response = api_instance.put_flow(flow_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_flow: %s\\n\" % e)"
  },
  "put_flow_instances_settings_loglevels": {
    "operationId": "put_flow_instances_settings_loglevels",
    "functionName": "put_flow_instances_settings_loglevels",
    "signature": "put_flow_instances_settings_loglevels(flow_id, body, expand)",
    "parameters": [
      {
        "name": "flow_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "FlowLogLevelRequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "FlowSettingsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_id = 'flow_id_example' # str | The flow id to edit the loglevel for\nbody = PureCloudPlatformClientV2.FlowLogLevelRequest() # FlowLogLevelRequest | New LogLevel settings\nexpand = ['expand_example'] # list[str] | Expand instructions for the result (optional)\n\ntry:\n    # Edit the logLevel for a particular flow id\n    api_response = api_instance.put_flow_instances_settings_loglevels(flow_id, body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_flow_instances_settings_loglevels: %s\\n\" % e)"
  },
  "put_flows_datatable": {
    "operationId": "put_flows_datatable",
    "functionName": "put_flows_datatable",
    "signature": "put_flows_datatable(datatable_id, body, expand)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DataTable",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DataTable",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\nbody = PureCloudPlatformClientV2.DataTable() # DataTable | datatable json-schema\nexpand = 'expand_example' # str | Expand instructions for the result (optional)\n\ntry:\n    # Updates a specific datatable by id\n    api_response = api_instance.put_flows_datatable(datatable_id, body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_flows_datatable: %s\\n\" % e)"
  },
  "put_flows_datatable_row": {
    "operationId": "put_flows_datatable_row",
    "functionName": "put_flows_datatable_row",
    "signature": "put_flows_datatable_row(datatable_id, row_id, body)",
    "parameters": [
      {
        "name": "datatable_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "row_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "object",
        "required": "false"
      }
    ],
    "return": "dict(str, object)",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\ndatatable_id = 'datatable_id_example' # str | id of datatable\nrow_id = 'row_id_example' # str | the key for the row\nbody = NULL # object | datatable row (optional)\n\ntry:\n    # Update a row entry\n    api_response = api_instance.put_flows_datatable_row(datatable_id, row_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_flows_datatable_row: %s\\n\" % e)"
  },
  "put_flows_instances_settings_loglevels_default": {
    "operationId": "put_flows_instances_settings_loglevels_default",
    "functionName": "put_flows_instances_settings_loglevels_default",
    "signature": "put_flows_instances_settings_loglevels_default(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowLogLevelRequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "FlowSettingsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nbody = PureCloudPlatformClientV2.FlowLogLevelRequest() # FlowLogLevelRequest | New LogLevel settings\nexpand = ['expand_example'] # list[str] | Expand instructions for the result (optional)\n\ntry:\n    # Edit the flow default log level.\n    api_response = api_instance.put_flows_instances_settings_loglevels_default(body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_flows_instances_settings_loglevels_default: %s\\n\" % e)"
  },
  "put_flows_milestone": {
    "operationId": "put_flows_milestone",
    "functionName": "put_flows_milestone",
    "signature": "put_flows_milestone(milestone_id, body)",
    "parameters": [
      {
        "name": "milestone_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "FlowMilestone",
        "required": "false"
      }
    ],
    "return": "FlowMilestone",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nmilestone_id = 'milestone_id_example' # str | flow milestone ID\nbody = PureCloudPlatformClientV2.FlowMilestone() # FlowMilestone |  (optional)\n\ntry:\n    # Updates a flow milestone\n    api_response = api_instance.put_flows_milestone(milestone_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_flows_milestone: %s\\n\" % e)"
  },
  "put_flows_outcome": {
    "operationId": "put_flows_outcome",
    "functionName": "put_flows_outcome",
    "signature": "put_flows_outcome(flow_outcome_id, body)",
    "parameters": [
      {
        "name": "flow_outcome_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "FlowOutcome",
        "required": "false"
      }
    ],
    "return": "Operation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ArchitectApi();\nflow_outcome_id = 'flow_outcome_id_example' # str | flow outcome ID\nbody = PureCloudPlatformClientV2.FlowOutcome() # FlowOutcome |  (optional)\n\ntry:\n    # Updates a flow outcome\n    api_response = api_instance.put_flows_outcome(flow_outcome_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ArchitectApi->put_flows_outcome: %s\\n\" % e)"
  },
  "get_audits_query_realtime_servicemapping": {
    "operationId": "get_audits_query_realtime_servicemapping",
    "functionName": "get_audits_query_realtime_servicemapping",
    "signature": "get_audits_query_realtime_servicemapping()",
    "return": "AuditQueryServiceMapping",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuditApi();\n\ntry:\n    # Get service mapping information used in realtime audits.\n    api_response = api_instance.get_audits_query_realtime_servicemapping()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuditApi->get_audits_query_realtime_servicemapping: %s\\n\" % e)"
  },
  "get_audits_query_servicemapping": {
    "operationId": "get_audits_query_servicemapping",
    "functionName": "get_audits_query_servicemapping",
    "signature": "get_audits_query_servicemapping()",
    "return": "AuditQueryServiceMapping",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuditApi();\n\ntry:\n    # Get service mapping information used in audits.\n    api_response = api_instance.get_audits_query_servicemapping()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuditApi->get_audits_query_servicemapping: %s\\n\" % e)"
  },
  "get_audits_query_transaction_id": {
    "operationId": "get_audits_query_transaction_id",
    "functionName": "get_audits_query_transaction_id",
    "signature": "get_audits_query_transaction_id(transaction_id)",
    "parameters": [
      {
        "name": "transaction_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AuditQueryExecutionStatusResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuditApi();\ntransaction_id = 'transaction_id_example' # str | Transaction ID\n\ntry:\n    # Get status of audit query execution\n    api_response = api_instance.get_audits_query_transaction_id(transaction_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuditApi->get_audits_query_transaction_id: %s\\n\" % e)"
  },
  "get_audits_query_transaction_id_results": {
    "operationId": "get_audits_query_transaction_id_results",
    "functionName": "get_audits_query_transaction_id_results",
    "signature": "get_audits_query_transaction_id_results(transaction_id, cursor, page_size, expand)",
    "parameters": [
      {
        "name": "transaction_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "AuditQueryExecutionResultsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuditApi();\ntransaction_id = 'transaction_id_example' # str | Transaction ID\ncursor = 'cursor_example' # str | Indicates where to resume query results (not required for first page) (optional)\npage_size = 25 # int | Indicates maximum number of results in response. Default page size is 25 results. The maximum page size is 500. (optional) (default to 25)\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Get results of audit query\n    api_response = api_instance.get_audits_query_transaction_id_results(transaction_id, cursor=cursor, page_size=page_size, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuditApi->get_audits_query_transaction_id_results: %s\\n\" % e)"
  },
  "post_audits_query": {
    "operationId": "post_audits_query",
    "functionName": "post_audits_query",
    "signature": "post_audits_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AuditQueryRequest",
        "required": "true"
      }
    ],
    "return": "AuditQueryExecutionStatusResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuditApi();\nbody = PureCloudPlatformClientV2.AuditQueryRequest() # AuditQueryRequest | query\n\ntry:\n    # Create audit query execution\n    api_response = api_instance.post_audits_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuditApi->post_audits_query: %s\\n\" % e)"
  },
  "post_audits_query_realtime": {
    "operationId": "post_audits_query_realtime",
    "functionName": "post_audits_query_realtime",
    "signature": "post_audits_query_realtime(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "AuditRealtimeQueryRequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "AuditRealtimeQueryResultsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuditApi();\nbody = PureCloudPlatformClientV2.AuditRealtimeQueryRequest() # AuditRealtimeQueryRequest | query\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # This endpoint will only retrieve 14 days worth of audits for certain services. Please use /query to get a full list and older audits.\n    api_response = api_instance.post_audits_query_realtime(body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuditApi->post_audits_query_realtime: %s\\n\" % e)"
  },
  "post_audits_query_realtime_related": {
    "operationId": "post_audits_query_realtime_related",
    "functionName": "post_audits_query_realtime_related",
    "signature": "post_audits_query_realtime_related(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "AuditRealtimeRelatedRequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "AuditRealtimeRelatedResultsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuditApi();\nbody = PureCloudPlatformClientV2.AuditRealtimeRelatedRequest() # AuditRealtimeRelatedRequest | query\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Often a single action results in multiple audits. The endpoint retrieves all audits created by the same action as the given audit id.\n    api_response = api_instance.post_audits_query_realtime_related(body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuditApi->post_audits_query_realtime_related: %s\\n\" % e)"
  },
  "delete_authorization_division": {
    "operationId": "delete_authorization_division",
    "functionName": "delete_authorization_division",
    "signature": "delete_authorization_division(division_id, force)",
    "parameters": [
      {
        "name": "division_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ObjectsApi();\ndivision_id = 'division_id_example' # str | Division ID\nforce = False # bool | Force delete this division as well as the grants and objects associated with it (optional) (default to False)\n\ntry:\n    # Delete a division.\n    api_instance.delete_authorization_division(division_id, force=force)\nexcept ApiException as e:\n    print(\"Exception when calling ObjectsApi->delete_authorization_division: %s\\n\" % e)"
  },
  "delete_authorization_role": {
    "operationId": "delete_authorization_role",
    "functionName": "delete_authorization_role",
    "signature": "delete_authorization_role(role_id)",
    "parameters": [
      {
        "name": "role_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nrole_id = 'role_id_example' # str | Role ID\n\ntry:\n    # Delete an organization role.\n    api_instance.delete_authorization_role(role_id)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->delete_authorization_role: %s\\n\" % e)"
  },
  "delete_authorization_subject_division_role": {
    "operationId": "delete_authorization_subject_division_role",
    "functionName": "delete_authorization_subject_division_role",
    "signature": "delete_authorization_subject_division_role(subject_id, division_id, role_id)",
    "parameters": [
      {
        "name": "subject_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "division_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "role_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nsubject_id = 'subject_id_example' # str | Subject ID (user or group)\ndivision_id = 'division_id_example' # str | the id of the division of the grant\nrole_id = 'role_id_example' # str | the id of the role of the grant\n\ntry:\n    # Delete a grant of a role in a division\n    api_instance.delete_authorization_subject_division_role(subject_id, division_id, role_id)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->delete_authorization_subject_division_role: %s\\n\" % e)"
  },
  "get_authorization_division": {
    "operationId": "get_authorization_division",
    "functionName": "get_authorization_division",
    "signature": "get_authorization_division(division_id, object_count)",
    "parameters": [
      {
        "name": "division_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "object_count",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AuthzDivision",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ObjectsApi();\ndivision_id = 'division_id_example' # str | Division ID\nobject_count = False # bool | Get count of objects in this division, grouped by type (optional) (default to False)\n\ntry:\n    # Returns an authorization division.\n    api_response = api_instance.get_authorization_division(division_id, object_count=object_count)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ObjectsApi->get_authorization_division: %s\\n\" % e)"
  },
  "get_authorization_division_grants": {
    "operationId": "get_authorization_division_grants",
    "functionName": "get_authorization_division_grants",
    "signature": "get_authorization_division_grants(division_id, page_number, page_size)",
    "parameters": [
      {
        "name": "division_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "AuthzDivisionGrantEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\ndivision_id = 'division_id_example' # str | Division ID\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Gets all grants for a given division.\n    api_response = api_instance.get_authorization_division_grants(division_id, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->get_authorization_division_grants: %s\\n\" % e)"
  },
  "get_authorization_divisions": {
    "operationId": "get_authorization_divisions",
    "functionName": "get_authorization_divisions",
    "signature": "get_authorization_divisions(page_size, page_number, sort_by, expand, next_page, previous_page, object_count, id, name)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "object_count",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "AuthzDivisionEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ObjectsApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nobject_count = False # bool | Include the count of objects contained in the division (optional) (default to False)\nid = ['id_example'] # list[str] | Optionally request specific divisions by their IDs (optional)\nname = 'name_example' # str | Search term to filter by division name (optional)\n\ntry:\n    # Retrieve a list of all divisions defined for the organization\n    api_response = api_instance.get_authorization_divisions(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page, object_count=object_count, id=id, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ObjectsApi->get_authorization_divisions: %s\\n\" % e)"
  },
  "get_authorization_divisions_home": {
    "operationId": "get_authorization_divisions_home",
    "functionName": "get_authorization_divisions_home",
    "signature": "get_authorization_divisions_home()",
    "return": "AuthzDivision",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ObjectsApi();\n\ntry:\n    # Retrieve the home division for the organization.\n    api_response = api_instance.get_authorization_divisions_home()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ObjectsApi->get_authorization_divisions_home: %s\\n\" % e)"
  },
  "get_authorization_divisions_limit": {
    "operationId": "get_authorization_divisions_limit",
    "functionName": "get_authorization_divisions_limit",
    "signature": "get_authorization_divisions_limit()",
    "return": "int",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ObjectsApi();\n\ntry:\n    # Returns the maximum allowed number of divisions.\n    api_response = api_instance.get_authorization_divisions_limit()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ObjectsApi->get_authorization_divisions_limit: %s\\n\" % e)"
  },
  "get_authorization_divisionspermitted_me": {
    "operationId": "get_authorization_divisionspermitted_me",
    "functionName": "get_authorization_divisionspermitted_me",
    "signature": "get_authorization_divisionspermitted_me(permission, name)",
    "parameters": [
      {
        "name": "permission",
        "type": "str",
        "required": "true"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "list[AuthzDivision]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\npermission = 'permission_example' # str | The permission string, including the object to access, e.g. routing:queue:view\nname = 'name_example' # str | Search term to filter by division name (optional)\n\ntry:\n    # Returns which divisions the current user has the given permission in.\n    api_response = api_instance.get_authorization_divisionspermitted_me(permission, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_authorization_divisionspermitted_me: %s\\n\" % e)"
  },
  "get_authorization_divisionspermitted_paged_me": {
    "operationId": "get_authorization_divisionspermitted_paged_me",
    "functionName": "get_authorization_divisionspermitted_paged_me",
    "signature": "get_authorization_divisionspermitted_paged_me(permission, page_number, page_size)",
    "parameters": [
      {
        "name": "permission",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "DivsPermittedEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\npermission = 'permission_example' # str | The permission string, including the object to access, e.g. routing:queue:view\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Returns which divisions the current user has the given permission in.\n    api_response = api_instance.get_authorization_divisionspermitted_paged_me(permission, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_authorization_divisionspermitted_paged_me: %s\\n\" % e)"
  },
  "get_authorization_divisionspermitted_paged_subject_id": {
    "operationId": "get_authorization_divisionspermitted_paged_subject_id",
    "functionName": "get_authorization_divisionspermitted_paged_subject_id",
    "signature": "get_authorization_divisionspermitted_paged_subject_id(subject_id, permission, page_number, page_size)",
    "parameters": [
      {
        "name": "subject_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "permission",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "DivsPermittedEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nsubject_id = 'subject_id_example' # str | Subject ID (user or group)\npermission = 'permission_example' # str | The permission string, including the object to access, e.g. routing:queue:view\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Returns which divisions the specified user has the given permission in.\n    api_response = api_instance.get_authorization_divisionspermitted_paged_subject_id(subject_id, permission, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_authorization_divisionspermitted_paged_subject_id: %s\\n\" % e)"
  },
  "get_authorization_permissions": {
    "operationId": "get_authorization_permissions",
    "functionName": "get_authorization_permissions",
    "signature": "get_authorization_permissions(page_size, page_number, query_type, query)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "query_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "query",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "PermissionCollectionEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nquery_type = 'query_type_example' # str | Query filter type (optional)\nquery = 'query_example' # str | Comma-separated list of permissions or domains to query (optional)\n\ntry:\n    # Get all permissions.\n    api_response = api_instance.get_authorization_permissions(page_size=page_size, page_number=page_number, query_type=query_type, query=query)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->get_authorization_permissions: %s\\n\" % e)"
  },
  "get_authorization_products": {
    "operationId": "get_authorization_products",
    "functionName": "get_authorization_products",
    "signature": "get_authorization_products()",
    "return": "OrganizationProductEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\n\ntry:\n    # Get the list of enabled products\n    api_response = api_instance.get_authorization_products()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->get_authorization_products: %s\\n\" % e)"
  },
  "get_authorization_role": {
    "operationId": "get_authorization_role",
    "functionName": "get_authorization_role",
    "signature": "get_authorization_role(role_id, user_count, expand)",
    "parameters": [
      {
        "name": "role_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_count",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "DomainOrganizationRole",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nrole_id = 'role_id_example' # str | Role ID\nuser_count = True # bool | Fetch the count of users who have this role granted in at least one division. Setting this value or defaulting to 'true' can lead to slower load times or timeouts for role queries with large member counts. (optional) (default to True)\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. \\\"unusedPermissions\\\" returns the permissions not used for the role (optional)\n\ntry:\n    # Get a single organization role.\n    api_response = api_instance.get_authorization_role(role_id, user_count=user_count, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->get_authorization_role: %s\\n\" % e)"
  },
  "get_authorization_role_comparedefault_right_role_id": {
    "operationId": "get_authorization_role_comparedefault_right_role_id",
    "functionName": "get_authorization_role_comparedefault_right_role_id",
    "signature": "get_authorization_role_comparedefault_right_role_id(left_role_id, right_role_id)",
    "parameters": [
      {
        "name": "left_role_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "right_role_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DomainOrgRoleDifference",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nleft_role_id = 'left_role_id_example' # str | Left Role ID\nright_role_id = 'right_role_id_example' # str | Right Role id\n\ntry:\n    # Get an org role to default role comparison\n    api_response = api_instance.get_authorization_role_comparedefault_right_role_id(left_role_id, right_role_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->get_authorization_role_comparedefault_right_role_id: %s\\n\" % e)"
  },
  "get_authorization_role_subjectgrants": {
    "operationId": "get_authorization_role_subjectgrants",
    "functionName": "get_authorization_role_subjectgrants",
    "signature": "get_authorization_role_subjectgrants(role_id, page_size, page_number, sort_by, expand, next_page, previous_page)",
    "parameters": [
      {
        "name": "role_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SubjectDivisionGrantsEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nrole_id = 'role_id_example' # str | Role ID\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\n\ntry:\n    # Get the subjects' granted divisions in the specified role.\n    api_response = api_instance.get_authorization_role_subjectgrants(role_id, page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->get_authorization_role_subjectgrants: %s\\n\" % e)"
  },
  "get_authorization_role_users": {
    "operationId": "get_authorization_role_users",
    "functionName": "get_authorization_role_users",
    "signature": "get_authorization_role_users(role_id, page_size, page_number)",
    "parameters": [
      {
        "name": "role_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "UserEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nrole_id = 'role_id_example' # str | Role ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a list of the users in a specified role.\n    api_response = api_instance.get_authorization_role_users(role_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->get_authorization_role_users: %s\\n\" % e)"
  },
  "get_authorization_roles": {
    "operationId": "get_authorization_roles",
    "functionName": "get_authorization_roles",
    "signature": "get_authorization_roles(page_size, page_number, sort_by, expand, next_page, previous_page, name, permission, default_role_id, user_count, id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "permission",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "default_role_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "user_count",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "OrganizationRoleEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nname = 'name_example' # str |  (optional)\npermission = ['permission_example'] # list[str] |  (optional)\ndefault_role_id = ['default_role_id_example'] # list[str] |  (optional)\nuser_count = True # bool |  (optional) (default to True)\nid = ['id_example'] # list[str] | id (optional)\n\ntry:\n    # Retrieve a list of all roles defined for the organization\n    api_response = api_instance.get_authorization_roles(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page, name=name, permission=permission, default_role_id=default_role_id, user_count=user_count, id=id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->get_authorization_roles: %s\\n\" % e)"
  },
  "get_authorization_settings": {
    "operationId": "get_authorization_settings",
    "functionName": "get_authorization_settings",
    "signature": "get_authorization_settings()",
    "return": "AuthorizationSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\n\ntry:\n    # Get authorization settings\n    api_response = api_instance.get_authorization_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->get_authorization_settings: %s\\n\" % e)"
  },
  "get_authorization_subject": {
    "operationId": "get_authorization_subject",
    "functionName": "get_authorization_subject",
    "signature": "get_authorization_subject(subject_id, include_duplicates)",
    "parameters": [
      {
        "name": "subject_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_duplicates",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AuthzSubject",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nsubject_id = 'subject_id_example' # str | Subject ID (user or group)\ninclude_duplicates = False # bool | Include multiple entries with the same role and division but different subjects (optional) (default to False)\n\ntry:\n    # Returns a listing of roles and permissions for a user.\n    api_response = api_instance.get_authorization_subject(subject_id, include_duplicates=include_duplicates)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_authorization_subject: %s\\n\" % e)"
  },
  "get_authorization_subjects_me": {
    "operationId": "get_authorization_subjects_me",
    "functionName": "get_authorization_subjects_me",
    "signature": "get_authorization_subjects_me(include_duplicates)",
    "parameters": [
      {
        "name": "include_duplicates",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AuthzSubject",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\ninclude_duplicates = False # bool | Include multiple entries with the same role and division but different subjects (optional) (default to False)\n\ntry:\n    # Returns a listing of roles and permissions for the currently authenticated user.\n    api_response = api_instance.get_authorization_subjects_me(include_duplicates=include_duplicates)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_authorization_subjects_me: %s\\n\" % e)"
  },
  "get_authorization_subjects_rolecounts": {
    "operationId": "get_authorization_subjects_rolecounts",
    "functionName": "get_authorization_subjects_rolecounts",
    "signature": "get_authorization_subjects_rolecounts(id)",
    "parameters": [
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "dict(str, object)",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nid = ['id_example'] # list[str] | id (optional)\n\ntry:\n    # Get the count of roles granted to a list of subjects\n    api_response = api_instance.get_authorization_subjects_rolecounts(id=id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->get_authorization_subjects_rolecounts: %s\\n\" % e)"
  },
  "get_user_roles": {
    "operationId": "get_user_roles",
    "functionName": "get_user_roles",
    "signature": "get_user_roles(subject_id)",
    "parameters": [
      {
        "name": "subject_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UserAuthorization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nsubject_id = 'subject_id_example' # str | User ID\n\ntry:\n    # Returns a listing of roles and permissions for a user.\n    api_response = api_instance.get_user_roles(subject_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_roles: %s\\n\" % e)"
  },
  "patch_authorization_role": {
    "operationId": "patch_authorization_role",
    "functionName": "patch_authorization_role",
    "signature": "patch_authorization_role(role_id, body)",
    "parameters": [
      {
        "name": "role_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainOrganizationRole",
        "required": "true"
      }
    ],
    "return": "DomainOrganizationRole",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nrole_id = 'role_id_example' # str | Role ID\nbody = PureCloudPlatformClientV2.DomainOrganizationRole() # DomainOrganizationRole | Organization role\n\ntry:\n    # Patch Organization Role for needsUpdate Field\n    api_response = api_instance.patch_authorization_role(role_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->patch_authorization_role: %s\\n\" % e)"
  },
  "patch_authorization_settings": {
    "operationId": "patch_authorization_settings",
    "functionName": "patch_authorization_settings",
    "signature": "patch_authorization_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AuthorizationSettings",
        "required": "true"
      }
    ],
    "return": "AuthorizationSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nbody = PureCloudPlatformClientV2.AuthorizationSettings() # AuthorizationSettings | Authorization Settings\n\ntry:\n    # Change authorization settings\n    api_response = api_instance.patch_authorization_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->patch_authorization_settings: %s\\n\" % e)"
  },
  "post_authorization_division_object": {
    "operationId": "post_authorization_division_object",
    "functionName": "post_authorization_division_object",
    "signature": "post_authorization_division_object(division_id, object_type, body)",
    "parameters": [
      {
        "name": "division_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "object_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ObjectsApi();\ndivision_id = 'division_id_example' # str | Division ID\nobject_type = 'object_type_example' # str | The type of the objects. Must be one of the valid object types\nbody = ['body_example'] # list[str] | Object Id List\n\ntry:\n    # Assign a list of objects to a division\n    api_instance.post_authorization_division_object(division_id, object_type, body)\nexcept ApiException as e:\n    print(\"Exception when calling ObjectsApi->post_authorization_division_object: %s\\n\" % e)"
  },
  "post_authorization_division_restore": {
    "operationId": "post_authorization_division_restore",
    "functionName": "post_authorization_division_restore",
    "signature": "post_authorization_division_restore(division_id, body)",
    "parameters": [
      {
        "name": "division_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AuthzDivision",
        "required": "false"
      }
    ],
    "return": "AuthzDivision",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ObjectsApi();\ndivision_id = 'division_id_example' # str | Division ID\nbody = PureCloudPlatformClientV2.AuthzDivision() # AuthzDivision | Recreated division data (optional)\n\ntry:\n    # Recreate a previously deleted division.\n    api_response = api_instance.post_authorization_division_restore(division_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ObjectsApi->post_authorization_division_restore: %s\\n\" % e)"
  },
  "post_authorization_divisions": {
    "operationId": "post_authorization_divisions",
    "functionName": "post_authorization_divisions",
    "signature": "post_authorization_divisions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AuthzDivision",
        "required": "true"
      }
    ],
    "return": "AuthzDivision",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ObjectsApi();\nbody = PureCloudPlatformClientV2.AuthzDivision() # AuthzDivision | Division\n\ntry:\n    # Create a division.\n    api_response = api_instance.post_authorization_divisions(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ObjectsApi->post_authorization_divisions: %s\\n\" % e)"
  },
  "post_authorization_role": {
    "operationId": "post_authorization_role",
    "functionName": "post_authorization_role",
    "signature": "post_authorization_role(role_id, body, subject_type)",
    "parameters": [
      {
        "name": "role_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SubjectDivisions",
        "required": "true"
      },
      {
        "name": "subject_type",
        "type": "str",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nrole_id = 'role_id_example' # str | Role ID\nbody = PureCloudPlatformClientV2.SubjectDivisions() # SubjectDivisions | Subjects and Divisions\nsubject_type = ''PC_USER'' # str | what the type of the subjects are (PC_GROUP, PC_USER or PC_OAUTH_CLIENT) (optional) (default to 'PC_USER')\n\ntry:\n    # Bulk-grant subjects and divisions with an organization role.\n    api_instance.post_authorization_role(role_id, body, subject_type=subject_type)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->post_authorization_role: %s\\n\" % e)"
  },
  "post_authorization_role_comparedefault_right_role_id": {
    "operationId": "post_authorization_role_comparedefault_right_role_id",
    "functionName": "post_authorization_role_comparedefault_right_role_id",
    "signature": "post_authorization_role_comparedefault_right_role_id(left_role_id, right_role_id, body)",
    "parameters": [
      {
        "name": "left_role_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "right_role_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainOrganizationRole",
        "required": "true"
      }
    ],
    "return": "DomainOrgRoleDifference",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nleft_role_id = 'left_role_id_example' # str | Left Role ID\nright_role_id = 'right_role_id_example' # str | Right Role id\nbody = PureCloudPlatformClientV2.DomainOrganizationRole() # DomainOrganizationRole | Organization role\n\ntry:\n    # Get an unsaved org role to default role comparison\n    api_response = api_instance.post_authorization_role_comparedefault_right_role_id(left_role_id, right_role_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->post_authorization_role_comparedefault_right_role_id: %s\\n\" % e)"
  },
  "post_authorization_roles": {
    "operationId": "post_authorization_roles",
    "functionName": "post_authorization_roles",
    "signature": "post_authorization_roles(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DomainOrganizationRoleCreate",
        "required": "true"
      }
    ],
    "return": "DomainOrganizationRole",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nbody = PureCloudPlatformClientV2.DomainOrganizationRoleCreate() # DomainOrganizationRoleCreate | Organization role\n\ntry:\n    # Create an organization role.\n    api_response = api_instance.post_authorization_roles(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->post_authorization_roles: %s\\n\" % e)"
  },
  "post_authorization_roles_default": {
    "operationId": "post_authorization_roles_default",
    "functionName": "post_authorization_roles_default",
    "signature": "post_authorization_roles_default(force)",
    "parameters": [
      {
        "name": "force",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "OrganizationRoleEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nforce = False # bool | Restore default roles (optional) (default to False)\n\ntry:\n    # Restores all default roles\n    api_response = api_instance.post_authorization_roles_default(force=force)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->post_authorization_roles_default: %s\\n\" % e)"
  },
  "post_authorization_subject_bulkadd": {
    "operationId": "post_authorization_subject_bulkadd",
    "functionName": "post_authorization_subject_bulkadd",
    "signature": "post_authorization_subject_bulkadd(subject_id, body, subject_type)",
    "parameters": [
      {
        "name": "subject_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoleDivisionGrants",
        "required": "true"
      },
      {
        "name": "subject_type",
        "type": "str",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nsubject_id = 'subject_id_example' # str | Subject ID (user or group)\nbody = PureCloudPlatformClientV2.RoleDivisionGrants() # RoleDivisionGrants | Pairs of role and division IDs\nsubject_type = ''PC_USER'' # str | what the type of the subject is (PC_GROUP, PC_USER or PC_OAUTH_CLIENT) (optional) (default to 'PC_USER')\n\ntry:\n    # Bulk-grant roles and divisions to a subject.\n    api_instance.post_authorization_subject_bulkadd(subject_id, body, subject_type=subject_type)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_authorization_subject_bulkadd: %s\\n\" % e)"
  },
  "post_authorization_subject_bulkremove": {
    "operationId": "post_authorization_subject_bulkremove",
    "functionName": "post_authorization_subject_bulkremove",
    "signature": "post_authorization_subject_bulkremove(subject_id, body)",
    "parameters": [
      {
        "name": "subject_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoleDivisionGrants",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nsubject_id = 'subject_id_example' # str | Subject ID (user or group)\nbody = PureCloudPlatformClientV2.RoleDivisionGrants() # RoleDivisionGrants | Pairs of role and division IDs\n\ntry:\n    # Bulk-remove grants from a subject.\n    api_instance.post_authorization_subject_bulkremove(subject_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_authorization_subject_bulkremove: %s\\n\" % e)"
  },
  "post_authorization_subject_bulkreplace": {
    "operationId": "post_authorization_subject_bulkreplace",
    "functionName": "post_authorization_subject_bulkreplace",
    "signature": "post_authorization_subject_bulkreplace(subject_id, body, subject_type)",
    "parameters": [
      {
        "name": "subject_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoleDivisionGrants",
        "required": "true"
      },
      {
        "name": "subject_type",
        "type": "str",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nsubject_id = 'subject_id_example' # str | Subject ID (user or group)\nbody = PureCloudPlatformClientV2.RoleDivisionGrants() # RoleDivisionGrants | Pairs of role and division IDs\nsubject_type = ''PC_USER'' # str | what the type of the subject is (PC_GROUP, PC_USER or PC_OAUTH_CLIENT) (optional) (default to 'PC_USER')\n\ntry:\n    # Replace subject's roles and divisions with the exact list supplied in the request.\n    api_instance.post_authorization_subject_bulkreplace(subject_id, body, subject_type=subject_type)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_authorization_subject_bulkreplace: %s\\n\" % e)"
  },
  "post_authorization_subject_division_role": {
    "operationId": "post_authorization_subject_division_role",
    "functionName": "post_authorization_subject_division_role",
    "signature": "post_authorization_subject_division_role(subject_id, division_id, role_id, subject_type)",
    "parameters": [
      {
        "name": "subject_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "division_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "role_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "subject_type",
        "type": "str",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nsubject_id = 'subject_id_example' # str | Subject ID (user or group)\ndivision_id = 'division_id_example' # str | the id of the division to which to make the grant\nrole_id = 'role_id_example' # str | the id of the role to grant\nsubject_type = ''PC_USER'' # str | what the type of the subject is: PC_GROUP, PC_USER or PC_OAUTH_CLIENT (note: for cross-org authorization, please use the Organization Authorization endpoints) (optional) (default to 'PC_USER')\n\ntry:\n    # Make a grant of a role in a division\n    api_instance.post_authorization_subject_division_role(subject_id, division_id, role_id, subject_type=subject_type)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_authorization_subject_division_role: %s\\n\" % e)"
  },
  "put_authorization_division": {
    "operationId": "put_authorization_division",
    "functionName": "put_authorization_division",
    "signature": "put_authorization_division(division_id, body)",
    "parameters": [
      {
        "name": "division_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AuthzDivision",
        "required": "true"
      }
    ],
    "return": "AuthzDivision",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ObjectsApi();\ndivision_id = 'division_id_example' # str | Division ID\nbody = PureCloudPlatformClientV2.AuthzDivision() # AuthzDivision | Updated division data\n\ntry:\n    # Update a division.\n    api_response = api_instance.put_authorization_division(division_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ObjectsApi->put_authorization_division: %s\\n\" % e)"
  },
  "put_authorization_role": {
    "operationId": "put_authorization_role",
    "functionName": "put_authorization_role",
    "signature": "put_authorization_role(role_id, body)",
    "parameters": [
      {
        "name": "role_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainOrganizationRoleUpdate",
        "required": "true"
      }
    ],
    "return": "DomainOrganizationRole",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nrole_id = 'role_id_example' # str | Role ID\nbody = PureCloudPlatformClientV2.DomainOrganizationRoleUpdate() # DomainOrganizationRoleUpdate | Organization role\n\ntry:\n    # Update an organization role.\n    api_response = api_instance.put_authorization_role(role_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->put_authorization_role: %s\\n\" % e)"
  },
  "put_authorization_role_users_add": {
    "operationId": "put_authorization_role_users_add",
    "functionName": "put_authorization_role_users_add",
    "signature": "put_authorization_role_users_add(role_id, body)",
    "parameters": [
      {
        "name": "role_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "list[str]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nrole_id = 'role_id_example' # str | Role ID\nbody = ['body_example'] # list[str] | List of user IDs\n\ntry:\n    # Sets the users for the role\n    api_response = api_instance.put_authorization_role_users_add(role_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->put_authorization_role_users_add: %s\\n\" % e)"
  },
  "put_authorization_role_users_remove": {
    "operationId": "put_authorization_role_users_remove",
    "functionName": "put_authorization_role_users_remove",
    "signature": "put_authorization_role_users_remove(role_id, body)",
    "parameters": [
      {
        "name": "role_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "list[str]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nrole_id = 'role_id_example' # str | Role ID\nbody = ['body_example'] # list[str] | List of user IDs\n\ntry:\n    # Removes the users from the role\n    api_response = api_instance.put_authorization_role_users_remove(role_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->put_authorization_role_users_remove: %s\\n\" % e)"
  },
  "put_authorization_roles_default": {
    "operationId": "put_authorization_roles_default",
    "functionName": "put_authorization_roles_default",
    "signature": "put_authorization_roles_default(body)",
    "parameters": [
      {
        "name": "body",
        "type": "list[DomainOrganizationRole]",
        "required": "true"
      }
    ],
    "return": "OrganizationRoleEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.AuthorizationApi();\nbody = [PureCloudPlatformClientV2.DomainOrganizationRole()] # list[DomainOrganizationRole] | Organization roles list\n\ntry:\n    # Restore specified default roles\n    api_response = api_instance.put_authorization_roles_default(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AuthorizationApi->put_authorization_roles_default: %s\\n\" % e)"
  },
  "put_user_roles": {
    "operationId": "put_user_roles",
    "functionName": "put_user_roles",
    "signature": "put_user_roles(subject_id, body)",
    "parameters": [
      {
        "name": "subject_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "UserAuthorization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nsubject_id = 'subject_id_example' # str | User ID\nbody = ['body_example'] # list[str] | List of roles\n\ntry:\n    # Sets the user's roles\n    api_response = api_instance.put_user_roles(subject_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->put_user_roles: %s\\n\" % e)"
  },
  "get_billing_reports_billableusage": {
    "operationId": "get_billing_reports_billableusage",
    "functionName": "get_billing_reports_billableusage",
    "signature": "get_billing_reports_billableusage(start_date, end_date)",
    "parameters": [
      {
        "name": "start_date",
        "type": "datetime",
        "required": "true"
      },
      {
        "name": "end_date",
        "type": "datetime",
        "required": "true"
      }
    ],
    "return": "BillingUsageReport",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.BillingApi();\nstart_date = '2013-10-20T19:20:30+01:00' # datetime | The period start date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\nend_date = '2013-10-20T19:20:30+01:00' # datetime | The period end date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\n\ntry:\n    # Get a report of the billable license usages\n    api_response = api_instance.get_billing_reports_billableusage(start_date, end_date)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling BillingApi->get_billing_reports_billableusage: %s\\n\" % e)"
  },
  "get_billing_trusteebillingoverview_trustor_org_id": {
    "operationId": "get_billing_trusteebillingoverview_trustor_org_id",
    "functionName": "get_billing_trusteebillingoverview_trustor_org_id",
    "signature": "get_billing_trusteebillingoverview_trustor_org_id(trustor_org_id, billing_period_index)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "billing_period_index",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "TrusteeBillingOverview",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.BillingApi();\ntrustor_org_id = 'trustor_org_id_example' # str | The organization ID of the trustor (customer) organization.\nbilling_period_index = 0 # int | 0 for active period (overview data may change until period closes). 1 for prior completed billing period. 2 for two billing cycles prior, and so on. (optional) (default to 0)\n\ntry:\n    # Get the billing overview for an organization that is managed by a partner.\n    api_response = api_instance.get_billing_trusteebillingoverview_trustor_org_id(trustor_org_id, billing_period_index=billing_period_index)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling BillingApi->get_billing_trusteebillingoverview_trustor_org_id: %s\\n\" % e)"
  },
  "get_carrierservices_integrations_emergencylocations_me": {
    "operationId": "get_carrierservices_integrations_emergencylocations_me",
    "functionName": "get_carrierservices_integrations_emergencylocations_me",
    "signature": "get_carrierservices_integrations_emergencylocations_me(phone_number)",
    "parameters": [
      {
        "name": "phone_number",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EmergencyLocation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CarrierServicesApi();\nphone_number = 'phone_number_example' # str | Phone number in E164 format\n\ntry:\n    # Get location for the logged in user\n    api_response = api_instance.get_carrierservices_integrations_emergencylocations_me(phone_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CarrierServicesApi->get_carrierservices_integrations_emergencylocations_me: %s\\n\" % e)"
  },
  "post_carrierservices_integrations_emergencylocations_me": {
    "operationId": "post_carrierservices_integrations_emergencylocations_me",
    "functionName": "post_carrierservices_integrations_emergencylocations_me",
    "signature": "post_carrierservices_integrations_emergencylocations_me(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EmergencyLocation",
        "required": "false"
      }
    ],
    "return": "EmergencyLocation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CarrierServicesApi();\nbody = PureCloudPlatformClientV2.EmergencyLocation() # EmergencyLocation |  (optional)\n\ntry:\n    # Set current location for the logged in user\n    api_response = api_instance.post_carrierservices_integrations_emergencylocations_me(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CarrierServicesApi->post_carrierservices_integrations_emergencylocations_me: %s\\n\" % e)"
  },
  "delete_chats_room_message": {
    "operationId": "delete_chats_room_message",
    "functionName": "delete_chats_room_message",
    "signature": "delete_chats_room_message(room_jid, message_id)",
    "parameters": [
      {
        "name": "room_jid",
        "type": "str",
        "required": "true"
      },
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nroom_jid = 'room_jid_example' # str | roomId\nmessage_id = 'message_id_example' # str | messageId\n\ntry:\n    # Delete a message in a room\n    api_instance.delete_chats_room_message(room_jid, message_id)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->delete_chats_room_message: %s\\n\" % e)"
  },
  "delete_chats_room_messages_pin": {
    "operationId": "delete_chats_room_messages_pin",
    "functionName": "delete_chats_room_messages_pin",
    "signature": "delete_chats_room_messages_pin(room_jid, pinned_message_id)",
    "parameters": [
      {
        "name": "room_jid",
        "type": "str",
        "required": "true"
      },
      {
        "name": "pinned_message_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nroom_jid = 'room_jid_example' # str | roomJid\npinned_message_id = 'pinned_message_id_example' # str | pinnedMessageId\n\ntry:\n    # Remove a pinned message from a room\n    api_instance.delete_chats_room_messages_pin(room_jid, pinned_message_id)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->delete_chats_room_messages_pin: %s\\n\" % e)"
  },
  "delete_chats_room_participant": {
    "operationId": "delete_chats_room_participant",
    "functionName": "delete_chats_room_participant",
    "signature": "delete_chats_room_participant(room_jid, user_id)",
    "parameters": [
      {
        "name": "room_jid",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nroom_jid = 'room_jid_example' # str | roomJid\nuser_id = 'user_id_example' # str | userId\n\ntry:\n    # Remove a user from a room.\n    api_instance.delete_chats_room_participant(room_jid, user_id)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->delete_chats_room_participant: %s\\n\" % e)"
  },
  "delete_chats_user_message": {
    "operationId": "delete_chats_user_message",
    "functionName": "delete_chats_user_message",
    "signature": "delete_chats_user_message(user_id, message_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nuser_id = 'user_id_example' # str | userId\nmessage_id = 'message_id_example' # str | messageId\n\ntry:\n    # Delete a message to a user\n    api_instance.delete_chats_user_message(user_id, message_id)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->delete_chats_user_message: %s\\n\" % e)"
  },
  "delete_chats_user_messages_pin": {
    "operationId": "delete_chats_user_messages_pin",
    "functionName": "delete_chats_user_messages_pin",
    "signature": "delete_chats_user_messages_pin(user_id, pinned_message_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "pinned_message_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nuser_id = 'user_id_example' # str | userId\npinned_message_id = 'pinned_message_id_example' # str | pinnedMessageId\n\ntry:\n    # Remove a pinned message from a 1on1\n    api_instance.delete_chats_user_messages_pin(user_id, pinned_message_id)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->delete_chats_user_messages_pin: %s\\n\" % e)"
  },
  "get_chats_message": {
    "operationId": "get_chats_message",
    "functionName": "get_chats_message",
    "signature": "get_chats_message(message_id)",
    "parameters": [
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ChatMessageResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nmessage_id = 'message_id_example' # str | messageId\n\ntry:\n    # Get a message\n    api_response = api_instance.get_chats_message(message_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->get_chats_message: %s\\n\" % e)"
  },
  "get_chats_room": {
    "operationId": "get_chats_room",
    "functionName": "get_chats_room",
    "signature": "get_chats_room(room_jid)",
    "parameters": [
      {
        "name": "room_jid",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Room",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nroom_jid = 'room_jid_example' # str | roomJid\n\ntry:\n    # Get a room\n    api_response = api_instance.get_chats_room(room_jid)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->get_chats_room: %s\\n\" % e)"
  },
  "get_chats_room_message": {
    "operationId": "get_chats_room_message",
    "functionName": "get_chats_room_message",
    "signature": "get_chats_room_message(room_jid, message_ids)",
    "parameters": [
      {
        "name": "room_jid",
        "type": "str",
        "required": "true"
      },
      {
        "name": "message_ids",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ChatMessageEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nroom_jid = 'room_jid_example' # str | roomJid\nmessage_ids = 'message_ids_example' # str | messageIds, comma separated\n\ntry:\n    # Get messages by id(s) from a room\n    api_response = api_instance.get_chats_room_message(room_jid, message_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->get_chats_room_message: %s\\n\" % e)"
  },
  "get_chats_room_messages": {
    "operationId": "get_chats_room_messages",
    "functionName": "get_chats_room_messages",
    "signature": "get_chats_room_messages(room_jid, limit, before, after)",
    "parameters": [
      {
        "name": "room_jid",
        "type": "str",
        "required": "true"
      },
      {
        "name": "limit",
        "type": "str",
        "required": "false"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ChatMessageEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nroom_jid = 'room_jid_example' # str | roomJid\nlimit = 'limit_example' # str | The maximum number of messages to retrieve (optional)\nbefore = 'before_example' # str | The cutoff date for messages to retrieve (optional)\nafter = 'after_example' # str | The beginning date for messages to retrieve (optional)\n\ntry:\n    # Get a room's message history\n    api_response = api_instance.get_chats_room_messages(room_jid, limit=limit, before=before, after=after)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->get_chats_room_messages: %s\\n\" % e)"
  },
  "get_chats_room_participant": {
    "operationId": "get_chats_room_participant",
    "functionName": "get_chats_room_participant",
    "signature": "get_chats_room_participant(room_jid, participant_jid)",
    "parameters": [
      {
        "name": "room_jid",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_jid",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "RoomParticipant",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nroom_jid = 'room_jid_example' # str | roomJid\nparticipant_jid = 'participant_jid_example' # str | participantJid\n\ntry:\n    # Get a room participant\n    api_response = api_instance.get_chats_room_participant(room_jid, participant_jid)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->get_chats_room_participant: %s\\n\" % e)"
  },
  "get_chats_room_participants": {
    "operationId": "get_chats_room_participants",
    "functionName": "get_chats_room_participants",
    "signature": "get_chats_room_participants(room_jid)",
    "parameters": [
      {
        "name": "room_jid",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "RoomParticipantsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nroom_jid = 'room_jid_example' # str | roomJid\n\ntry:\n    # Get room participants in a room\n    api_response = api_instance.get_chats_room_participants(room_jid)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->get_chats_room_participants: %s\\n\" % e)"
  },
  "get_chats_settings": {
    "operationId": "get_chats_settings",
    "functionName": "get_chats_settings",
    "signature": "get_chats_settings()",
    "return": "ChatSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\n\ntry:\n    # Get Chat Settings.\n    api_response = api_instance.get_chats_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->get_chats_settings: %s\\n\" % e)"
  },
  "get_chats_thread_messages": {
    "operationId": "get_chats_thread_messages",
    "functionName": "get_chats_thread_messages",
    "signature": "get_chats_thread_messages(thread_id, limit, before, after)",
    "parameters": [
      {
        "name": "thread_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "limit",
        "type": "str",
        "required": "false"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ChatMessageEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nthread_id = 'thread_id_example' # str | threadId\nlimit = 'limit_example' # str | The maximum number of messages to retrieve (optional)\nbefore = 'before_example' # str | The cutoff date for messages to retrieve (optional)\nafter = 'after_example' # str | The beginning date for messages to retrieve (optional)\n\ntry:\n    # Get history by thread\n    api_response = api_instance.get_chats_thread_messages(thread_id, limit=limit, before=before, after=after)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->get_chats_thread_messages: %s\\n\" % e)"
  },
  "get_chats_user": {
    "operationId": "get_chats_user",
    "functionName": "get_chats_user",
    "signature": "get_chats_user(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OneOnOne",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nuser_id = 'user_id_example' # str | userId\n\ntry:\n    # Get information for a 1on1\n    api_response = api_instance.get_chats_user(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->get_chats_user: %s\\n\" % e)"
  },
  "get_chats_user_message": {
    "operationId": "get_chats_user_message",
    "functionName": "get_chats_user_message",
    "signature": "get_chats_user_message(user_id, message_ids)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "message_ids",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ChatMessageEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nuser_id = 'user_id_example' # str | userId\nmessage_ids = 'message_ids_example' # str | messageIds, comma separated\n\ntry:\n    # Get messages by id(s) from a 1on1\n    api_response = api_instance.get_chats_user_message(user_id, message_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->get_chats_user_message: %s\\n\" % e)"
  },
  "get_chats_user_messages": {
    "operationId": "get_chats_user_messages",
    "functionName": "get_chats_user_messages",
    "signature": "get_chats_user_messages(user_id, limit, before, after)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "limit",
        "type": "str",
        "required": "false"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ChatMessageResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nuser_id = 'user_id_example' # str | userId\nlimit = 'limit_example' # str | The maximum number of messages to retrieve (optional)\nbefore = 'before_example' # str | The cutoff date for messages to retrieve (optional)\nafter = 'after_example' # str | The beginning date for messages to retrieve (optional)\n\ntry:\n    # Get 1on1 History between a user\n    api_response = api_instance.get_chats_user_messages(user_id, limit=limit, before=before, after=after)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->get_chats_user_messages: %s\\n\" % e)"
  },
  "get_chats_user_settings": {
    "operationId": "get_chats_user_settings",
    "functionName": "get_chats_user_settings",
    "signature": "get_chats_user_settings(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ChatUserSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Get a user's chat settings\n    api_response = api_instance.get_chats_user_settings(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->get_chats_user_settings: %s\\n\" % e)"
  },
  "get_chats_users_me_settings": {
    "operationId": "get_chats_users_me_settings",
    "functionName": "get_chats_users_me_settings",
    "signature": "get_chats_users_me_settings()",
    "return": "ChatUserSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\n\ntry:\n    # Get a user's chat settings\n    api_response = api_instance.get_chats_users_me_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->get_chats_users_me_settings: %s\\n\" % e)"
  },
  "patch_chats_room": {
    "operationId": "patch_chats_room",
    "functionName": "patch_chats_room",
    "signature": "patch_chats_room(room_jid, body)",
    "parameters": [
      {
        "name": "room_jid",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoomUpdateRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nroom_jid = 'room_jid_example' # str | roomJid\nbody = PureCloudPlatformClientV2.RoomUpdateRequest() # RoomUpdateRequest | Room properties\n\ntry:\n    # Set properties for a room\n    api_instance.patch_chats_room(room_jid, body)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->patch_chats_room: %s\\n\" % e)"
  },
  "patch_chats_room_message": {
    "operationId": "patch_chats_room_message",
    "functionName": "patch_chats_room_message",
    "signature": "patch_chats_room_message(room_jid, message_id, body)",
    "parameters": [
      {
        "name": "room_jid",
        "type": "str",
        "required": "true"
      },
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SendMessageBody",
        "required": "true"
      }
    ],
    "return": "ChatSendMessageResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nroom_jid = 'room_jid_example' # str | roomId\nmessage_id = 'message_id_example' # str | messageId\nbody = PureCloudPlatformClientV2.SendMessageBody() # SendMessageBody | messageBody\n\ntry:\n    # Edit a message in a room\n    api_response = api_instance.patch_chats_room_message(room_jid, message_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->patch_chats_room_message: %s\\n\" % e)"
  },
  "patch_chats_settings": {
    "operationId": "patch_chats_settings",
    "functionName": "patch_chats_settings",
    "signature": "patch_chats_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ChatSettings",
        "required": "true"
      }
    ],
    "return": "ChatSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nbody = PureCloudPlatformClientV2.ChatSettings() # ChatSettings | Chat\n\ntry:\n    # Patch Chat Settings.\n    api_response = api_instance.patch_chats_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->patch_chats_settings: %s\\n\" % e)"
  },
  "patch_chats_user_message": {
    "operationId": "patch_chats_user_message",
    "functionName": "patch_chats_user_message",
    "signature": "patch_chats_user_message(user_id, message_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SendMessageBody",
        "required": "true"
      }
    ],
    "return": "ChatSendMessageResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nuser_id = 'user_id_example' # str | userId\nmessage_id = 'message_id_example' # str | messageId\nbody = PureCloudPlatformClientV2.SendMessageBody() # SendMessageBody | message body\n\ntry:\n    # Edit a message to a user\n    api_response = api_instance.patch_chats_user_message(user_id, message_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->patch_chats_user_message: %s\\n\" % e)"
  },
  "patch_chats_user_settings": {
    "operationId": "patch_chats_user_settings",
    "functionName": "patch_chats_user_settings",
    "signature": "patch_chats_user_settings(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ChatUserSettings",
        "required": "true"
      }
    ],
    "return": "ChatUserSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.ChatUserSettings() # ChatUserSettings | \n\ntry:\n    # Update a user's chat settings\n    api_response = api_instance.patch_chats_user_settings(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->patch_chats_user_settings: %s\\n\" % e)"
  },
  "patch_chats_users_me_settings": {
    "operationId": "patch_chats_users_me_settings",
    "functionName": "patch_chats_users_me_settings",
    "signature": "patch_chats_users_me_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ChatUserSettings",
        "required": "true"
      }
    ],
    "return": "ChatUserSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nbody = PureCloudPlatformClientV2.ChatUserSettings() # ChatUserSettings | \n\ntry:\n    # Update a user's chat settings\n    api_response = api_instance.patch_chats_users_me_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->patch_chats_users_me_settings: %s\\n\" % e)"
  },
  "post_chats_room_messages": {
    "operationId": "post_chats_room_messages",
    "functionName": "post_chats_room_messages",
    "signature": "post_chats_room_messages(room_jid, body)",
    "parameters": [
      {
        "name": "room_jid",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SendMessageBody",
        "required": "true"
      }
    ],
    "return": "ChatSendMessageResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nroom_jid = 'room_jid_example' # str | roomId\nbody = PureCloudPlatformClientV2.SendMessageBody() # SendMessageBody | messageBody\n\ntry:\n    # Send a message to a room\n    api_response = api_instance.post_chats_room_messages(room_jid, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->post_chats_room_messages: %s\\n\" % e)"
  },
  "post_chats_room_messages_pins": {
    "operationId": "post_chats_room_messages_pins",
    "functionName": "post_chats_room_messages_pins",
    "signature": "post_chats_room_messages_pins(room_jid, body)",
    "parameters": [
      {
        "name": "room_jid",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PinnedMessageRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nroom_jid = 'room_jid_example' # str | roomJid\nbody = PureCloudPlatformClientV2.PinnedMessageRequest() # PinnedMessageRequest | Pinned Message Ids\n\ntry:\n    # Add pinned messages for a room, up to a maximum of 5 pinned messages\n    api_instance.post_chats_room_messages_pins(room_jid, body)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->post_chats_room_messages_pins: %s\\n\" % e)"
  },
  "post_chats_room_participant": {
    "operationId": "post_chats_room_participant",
    "functionName": "post_chats_room_participant",
    "signature": "post_chats_room_participant(room_jid, user_id)",
    "parameters": [
      {
        "name": "room_jid",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nroom_jid = 'room_jid_example' # str | roomJid\nuser_id = 'user_id_example' # str | userId\n\ntry:\n    # Join a room\n    api_instance.post_chats_room_participant(room_jid, user_id)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->post_chats_room_participant: %s\\n\" % e)"
  },
  "post_chats_rooms": {
    "operationId": "post_chats_rooms",
    "functionName": "post_chats_rooms",
    "signature": "post_chats_rooms(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateRoomRequest",
        "required": "true"
      }
    ],
    "return": "CreateRoomResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nbody = PureCloudPlatformClientV2.CreateRoomRequest() # CreateRoomRequest | Room properties\n\ntry:\n    # Create an adhoc room\n    api_response = api_instance.post_chats_rooms(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->post_chats_rooms: %s\\n\" % e)"
  },
  "post_chats_user_messages": {
    "operationId": "post_chats_user_messages",
    "functionName": "post_chats_user_messages",
    "signature": "post_chats_user_messages(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SendMessageBody",
        "required": "true"
      }
    ],
    "return": "ChatSendMessageResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nuser_id = 'user_id_example' # str | userId\nbody = PureCloudPlatformClientV2.SendMessageBody() # SendMessageBody | message body\n\ntry:\n    # Send a message to a user\n    api_response = api_instance.post_chats_user_messages(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->post_chats_user_messages: %s\\n\" % e)"
  },
  "post_chats_user_messages_pins": {
    "operationId": "post_chats_user_messages_pins",
    "functionName": "post_chats_user_messages_pins",
    "signature": "post_chats_user_messages_pins(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PinnedMessageRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nuser_id = 'user_id_example' # str | userId\nbody = PureCloudPlatformClientV2.PinnedMessageRequest() # PinnedMessageRequest | Pinned Message Ids\n\ntry:\n    # Add pinned messages for a 1on1, up to a maximum of 5 pinned messages\n    api_instance.post_chats_user_messages_pins(user_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->post_chats_user_messages_pins: %s\\n\" % e)"
  },
  "put_chats_message_reactions": {
    "operationId": "put_chats_message_reactions",
    "functionName": "put_chats_message_reactions",
    "signature": "put_chats_message_reactions(message_id, body)",
    "parameters": [
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ChatReactionUpdate",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nmessage_id = 'message_id_example' # str | messageId\nbody = PureCloudPlatformClientV2.ChatReactionUpdate() # ChatReactionUpdate | reactionUpdate\n\ntry:\n    # Update reactions to a message\n    api_instance.put_chats_message_reactions(message_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->put_chats_message_reactions: %s\\n\" % e)"
  },
  "put_chats_settings": {
    "operationId": "put_chats_settings",
    "functionName": "put_chats_settings",
    "signature": "put_chats_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ChatSettings",
        "required": "true"
      }
    ],
    "return": "ChatSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ChatApi();\nbody = PureCloudPlatformClientV2.ChatSettings() # ChatSettings | Chat\n\ntry:\n    # Update Chat Settings.\n    api_response = api_instance.put_chats_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ChatApi->put_chats_settings: %s\\n\" % e)"
  },
  "delete_coaching_appointment": {
    "operationId": "delete_coaching_appointment",
    "functionName": "delete_coaching_appointment",
    "signature": "delete_coaching_appointment(appointment_id)",
    "parameters": [
      {
        "name": "appointment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CoachingAppointmentReference",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nappointment_id = 'appointment_id_example' # str | The ID of the coaching appointment.\n\ntry:\n    # Delete an existing appointment\n    api_response = api_instance.delete_coaching_appointment(appointment_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->delete_coaching_appointment: %s\\n\" % e)"
  },
  "delete_coaching_appointment_annotation": {
    "operationId": "delete_coaching_appointment_annotation",
    "functionName": "delete_coaching_appointment_annotation",
    "signature": "delete_coaching_appointment_annotation(appointment_id, annotation_id)",
    "parameters": [
      {
        "name": "appointment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "annotation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nappointment_id = 'appointment_id_example' # str | The ID of the coaching appointment.\nannotation_id = 'annotation_id_example' # str | The ID of the annotation.\n\ntry:\n    # Delete an existing annotation\n    api_instance.delete_coaching_appointment_annotation(appointment_id, annotation_id)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->delete_coaching_appointment_annotation: %s\\n\" % e)"
  },
  "get_coaching_appointment": {
    "operationId": "get_coaching_appointment",
    "functionName": "get_coaching_appointment",
    "signature": "get_coaching_appointment(appointment_id)",
    "parameters": [
      {
        "name": "appointment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CoachingAppointmentResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nappointment_id = 'appointment_id_example' # str | The ID of the coaching appointment.\n\ntry:\n    # Retrieve an appointment\n    api_response = api_instance.get_coaching_appointment(appointment_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->get_coaching_appointment: %s\\n\" % e)"
  },
  "get_coaching_appointment_annotation": {
    "operationId": "get_coaching_appointment_annotation",
    "functionName": "get_coaching_appointment_annotation",
    "signature": "get_coaching_appointment_annotation(appointment_id, annotation_id)",
    "parameters": [
      {
        "name": "appointment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "annotation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CoachingAnnotation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nappointment_id = 'appointment_id_example' # str | The ID of the coaching appointment.\nannotation_id = 'annotation_id_example' # str | The ID of the annotation.\n\ntry:\n    # Retrieve an annotation.\n    api_response = api_instance.get_coaching_appointment_annotation(appointment_id, annotation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->get_coaching_appointment_annotation: %s\\n\" % e)"
  },
  "get_coaching_appointment_annotations": {
    "operationId": "get_coaching_appointment_annotations",
    "functionName": "get_coaching_appointment_annotations",
    "signature": "get_coaching_appointment_annotations(appointment_id, page_number, page_size)",
    "parameters": [
      {
        "name": "appointment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "CoachingAnnotationList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nappointment_id = 'appointment_id_example' # str | The ID of the coaching appointment.\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get a list of annotations.\n    api_response = api_instance.get_coaching_appointment_annotations(appointment_id, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->get_coaching_appointment_annotations: %s\\n\" % e)"
  },
  "get_coaching_appointment_statuses": {
    "operationId": "get_coaching_appointment_statuses",
    "functionName": "get_coaching_appointment_statuses",
    "signature": "get_coaching_appointment_statuses(appointment_id, page_number, page_size)",
    "parameters": [
      {
        "name": "appointment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "CoachingAppointmentStatusResponseList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nappointment_id = 'appointment_id_example' # str | The ID of the coaching appointment.\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get the list of status changes for a coaching appointment.\n    api_response = api_instance.get_coaching_appointment_statuses(appointment_id, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->get_coaching_appointment_statuses: %s\\n\" % e)"
  },
  "get_coaching_appointments": {
    "operationId": "get_coaching_appointments",
    "functionName": "get_coaching_appointments",
    "signature": "get_coaching_appointments(user_ids, interval, page_number, page_size, statuses, facilitator_ids, sort_order, relationships, completion_interval, overdue, interval_condition)",
    "parameters": [
      {
        "name": "user_ids",
        "type": "list[str]",
        "required": "true"
      },
      {
        "name": "interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "facilitator_ids",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "relationships",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "completion_interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "str",
        "required": "false"
      },
      {
        "name": "interval_condition",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CoachingAppointmentResponseList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nuser_ids = ['user_ids_example'] # list[str] | The user IDs for which to retrieve appointments\ninterval = 'interval_example' # str | Interval to filter data by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nstatuses = ['statuses_example'] # list[str] | Appointment Statuses to filter by (optional)\nfacilitator_ids = ['facilitator_ids_example'] # list[str] | The facilitator IDs for which to retrieve appointments (optional)\nsort_order = 'sort_order_example' # str | Sort (by due date) either Asc or Desc (optional)\nrelationships = ['relationships_example'] # list[str] | Relationships to filter by (optional)\ncompletion_interval = 'completion_interval_example' # str | Appointment completion start and end to filter by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\noverdue = 'overdue_example' # str | Overdue status to filter by (optional)\ninterval_condition = 'interval_condition_example' # str | Filter condition for interval (optional)\n\ntry:\n    # Get appointments for users and optional date range\n    api_response = api_instance.get_coaching_appointments(user_ids, interval=interval, page_number=page_number, page_size=page_size, statuses=statuses, facilitator_ids=facilitator_ids, sort_order=sort_order, relationships=relationships, completion_interval=completion_interval, overdue=overdue, interval_condition=interval_condition)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->get_coaching_appointments: %s\\n\" % e)"
  },
  "get_coaching_appointments_me": {
    "operationId": "get_coaching_appointments_me",
    "functionName": "get_coaching_appointments_me",
    "signature": "get_coaching_appointments_me(interval, page_number, page_size, statuses, facilitator_ids, sort_order, relationships, completion_interval, overdue, interval_condition)",
    "parameters": [
      {
        "name": "interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "facilitator_ids",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "relationships",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "completion_interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "str",
        "required": "false"
      },
      {
        "name": "interval_condition",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CoachingAppointmentResponseList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\ninterval = 'interval_example' # str | Interval to filter data by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nstatuses = ['statuses_example'] # list[str] | Appointment Statuses to filter by (optional)\nfacilitator_ids = ['facilitator_ids_example'] # list[str] | The facilitator IDs for which to retrieve appointments (optional)\nsort_order = 'sort_order_example' # str | Sort (by due date) either Asc or Desc (optional)\nrelationships = ['relationships_example'] # list[str] | Relationships to filter by (optional)\ncompletion_interval = 'completion_interval_example' # str | Appointment completion start and end to filter by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\noverdue = 'overdue_example' # str | Overdue status to filter by (optional)\ninterval_condition = 'interval_condition_example' # str | Filter condition for interval (optional)\n\ntry:\n    # Get my appointments for a given date range\n    api_response = api_instance.get_coaching_appointments_me(interval=interval, page_number=page_number, page_size=page_size, statuses=statuses, facilitator_ids=facilitator_ids, sort_order=sort_order, relationships=relationships, completion_interval=completion_interval, overdue=overdue, interval_condition=interval_condition)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->get_coaching_appointments_me: %s\\n\" % e)"
  },
  "get_coaching_notification": {
    "operationId": "get_coaching_notification",
    "functionName": "get_coaching_notification",
    "signature": "get_coaching_notification(notification_id, expand)",
    "parameters": [
      {
        "name": "notification_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "CoachingNotification",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nnotification_id = 'notification_id_example' # str | The ID of the notification.\nexpand = ['expand_example'] # list[str] | Indicates a field in the response which should be expanded. (optional)\n\ntry:\n    # Get an existing notification\n    api_response = api_instance.get_coaching_notification(notification_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->get_coaching_notification: %s\\n\" % e)"
  },
  "get_coaching_notifications": {
    "operationId": "get_coaching_notifications",
    "functionName": "get_coaching_notifications",
    "signature": "get_coaching_notifications(page_number, page_size, expand)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "CoachingNotificationList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nexpand = ['expand_example'] # list[str] | Indicates a field in the response which should be expanded. (optional)\n\ntry:\n    # Retrieve the list of your notifications.\n    api_response = api_instance.get_coaching_notifications(page_number=page_number, page_size=page_size, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->get_coaching_notifications: %s\\n\" % e)"
  },
  "patch_coaching_appointment": {
    "operationId": "patch_coaching_appointment",
    "functionName": "patch_coaching_appointment",
    "signature": "patch_coaching_appointment(appointment_id, body)",
    "parameters": [
      {
        "name": "appointment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateCoachingAppointmentRequest",
        "required": "true"
      }
    ],
    "return": "CoachingAppointmentResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nappointment_id = 'appointment_id_example' # str | The ID of the coaching appointment.\nbody = PureCloudPlatformClientV2.UpdateCoachingAppointmentRequest() # UpdateCoachingAppointmentRequest | The new version of the appointment\n\ntry:\n    # Update an existing appointment\n    api_response = api_instance.patch_coaching_appointment(appointment_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->patch_coaching_appointment: %s\\n\" % e)"
  },
  "patch_coaching_appointment_annotation": {
    "operationId": "patch_coaching_appointment_annotation",
    "functionName": "patch_coaching_appointment_annotation",
    "signature": "patch_coaching_appointment_annotation(appointment_id, annotation_id, body)",
    "parameters": [
      {
        "name": "appointment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "annotation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CoachingAnnotation",
        "required": "true"
      }
    ],
    "return": "CoachingAnnotation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nappointment_id = 'appointment_id_example' # str | The ID of the coaching appointment.\nannotation_id = 'annotation_id_example' # str | The ID of the annotation.\nbody = PureCloudPlatformClientV2.CoachingAnnotation() # CoachingAnnotation | The new version of the annotation\n\ntry:\n    # Update an existing annotation.\n    api_response = api_instance.patch_coaching_appointment_annotation(appointment_id, annotation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->patch_coaching_appointment_annotation: %s\\n\" % e)"
  },
  "patch_coaching_appointment_status": {
    "operationId": "patch_coaching_appointment_status",
    "functionName": "patch_coaching_appointment_status",
    "signature": "patch_coaching_appointment_status(appointment_id, body)",
    "parameters": [
      {
        "name": "appointment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CoachingAppointmentStatusRequest",
        "required": "true"
      }
    ],
    "return": "CoachingAppointmentStatusResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nappointment_id = 'appointment_id_example' # str | The ID of the coaching appointment.\nbody = PureCloudPlatformClientV2.CoachingAppointmentStatusRequest() # CoachingAppointmentStatusRequest | Updated status of the coaching appointment\n\ntry:\n    # Update the status of a coaching appointment\n    api_response = api_instance.patch_coaching_appointment_status(appointment_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->patch_coaching_appointment_status: %s\\n\" % e)"
  },
  "patch_coaching_notification": {
    "operationId": "patch_coaching_notification",
    "functionName": "patch_coaching_notification",
    "signature": "patch_coaching_notification(notification_id, body)",
    "parameters": [
      {
        "name": "notification_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CoachingNotification",
        "required": "true"
      }
    ],
    "return": "CoachingNotification",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nnotification_id = 'notification_id_example' # str | The ID of the notification.\nbody = PureCloudPlatformClientV2.CoachingNotification() # CoachingNotification | Change the read state of a notification\n\ntry:\n    # Update an existing notification.\n    api_response = api_instance.patch_coaching_notification(notification_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->patch_coaching_notification: %s\\n\" % e)"
  },
  "post_coaching_appointment_annotations": {
    "operationId": "post_coaching_appointment_annotations",
    "functionName": "post_coaching_appointment_annotations",
    "signature": "post_coaching_appointment_annotations(appointment_id, body)",
    "parameters": [
      {
        "name": "appointment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CoachingAnnotationCreateRequest",
        "required": "true"
      }
    ],
    "return": "CoachingAnnotation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nappointment_id = 'appointment_id_example' # str | The ID of the coaching appointment.\nbody = PureCloudPlatformClientV2.CoachingAnnotationCreateRequest() # CoachingAnnotationCreateRequest | The annotation to add\n\ntry:\n    # Create a new annotation.\n    api_response = api_instance.post_coaching_appointment_annotations(appointment_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->post_coaching_appointment_annotations: %s\\n\" % e)"
  },
  "post_coaching_appointment_conversations": {
    "operationId": "post_coaching_appointment_conversations",
    "functionName": "post_coaching_appointment_conversations",
    "signature": "post_coaching_appointment_conversations(appointment_id, body)",
    "parameters": [
      {
        "name": "appointment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AddConversationRequest",
        "required": "true"
      }
    ],
    "return": "AddConversationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nappointment_id = 'appointment_id_example' # str | The ID of the coaching appointment.\nbody = PureCloudPlatformClientV2.AddConversationRequest() # AddConversationRequest | body\n\ntry:\n    # Add a conversation to an appointment\n    api_response = api_instance.post_coaching_appointment_conversations(appointment_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->post_coaching_appointment_conversations: %s\\n\" % e)"
  },
  "post_coaching_appointments": {
    "operationId": "post_coaching_appointments",
    "functionName": "post_coaching_appointments",
    "signature": "post_coaching_appointments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateCoachingAppointmentRequest",
        "required": "true"
      }
    ],
    "return": "CoachingAppointmentResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nbody = PureCloudPlatformClientV2.CreateCoachingAppointmentRequest() # CreateCoachingAppointmentRequest | The appointment to add\n\ntry:\n    # Create a new appointment\n    api_response = api_instance.post_coaching_appointments(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->post_coaching_appointments: %s\\n\" % e)"
  },
  "post_coaching_appointments_aggregates_query": {
    "operationId": "post_coaching_appointments_aggregates_query",
    "functionName": "post_coaching_appointments_aggregates_query",
    "signature": "post_coaching_appointments_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CoachingAppointmentAggregateRequest",
        "required": "true"
      }
    ],
    "return": "CoachingAppointmentAggregateResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nbody = PureCloudPlatformClientV2.CoachingAppointmentAggregateRequest() # CoachingAppointmentAggregateRequest | Aggregate Request\n\ntry:\n    # Retrieve aggregated appointment data\n    api_response = api_instance.post_coaching_appointments_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->post_coaching_appointments_aggregates_query: %s\\n\" % e)"
  },
  "post_coaching_scheduleslots_query": {
    "operationId": "post_coaching_scheduleslots_query",
    "functionName": "post_coaching_scheduleslots_query",
    "signature": "post_coaching_scheduleslots_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CoachingSlotsRequest",
        "required": "true"
      }
    ],
    "return": "CoachingSlotsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.CoachingApi();\nbody = PureCloudPlatformClientV2.CoachingSlotsRequest() # CoachingSlotsRequest | The slot search request\n\ntry:\n    # Get list of possible slots where a coaching appointment can be scheduled.\n    api_response = api_instance.post_coaching_scheduleslots_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling CoachingApi->post_coaching_scheduleslots_query: %s\\n\" % e)"
  },
  "delete_contentmanagement_document": {
    "operationId": "delete_contentmanagement_document",
    "functionName": "delete_contentmanagement_document",
    "signature": "delete_contentmanagement_document(document_id, override)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "override",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\ndocument_id = 'document_id_example' # str | Document ID\noverride = True # bool | Override any lock on the document (optional)\n\ntry:\n    # Delete a document.\n    api_instance.delete_contentmanagement_document(document_id, override=override)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->delete_contentmanagement_document: %s\\n\" % e)"
  },
  "delete_contentmanagement_share": {
    "operationId": "delete_contentmanagement_share",
    "functionName": "delete_contentmanagement_share",
    "signature": "delete_contentmanagement_share(share_id)",
    "parameters": [
      {
        "name": "share_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nshare_id = 'share_id_example' # str | Share ID\n\ntry:\n    # Deletes an existing share.\n    api_instance.delete_contentmanagement_share(share_id)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->delete_contentmanagement_share: %s\\n\" % e)"
  },
  "delete_contentmanagement_status_status_id": {
    "operationId": "delete_contentmanagement_status_status_id",
    "functionName": "delete_contentmanagement_status_status_id",
    "signature": "delete_contentmanagement_status_status_id(status_id)",
    "parameters": [
      {
        "name": "status_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nstatus_id = 'status_id_example' # str | Status ID\n\ntry:\n    # Cancel the command for this status\n    api_instance.delete_contentmanagement_status_status_id(status_id)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->delete_contentmanagement_status_status_id: %s\\n\" % e)"
  },
  "delete_contentmanagement_workspace": {
    "operationId": "delete_contentmanagement_workspace",
    "functionName": "delete_contentmanagement_workspace",
    "signature": "delete_contentmanagement_workspace(workspace_id, move_children_to_workspace_id)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "move_children_to_workspace_id",
        "type": "str",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\nmove_children_to_workspace_id = 'move_children_to_workspace_id_example' # str | New location for objects in deleted workspace. (optional)\n\ntry:\n    # Delete a workspace\n    api_instance.delete_contentmanagement_workspace(workspace_id, move_children_to_workspace_id=move_children_to_workspace_id)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->delete_contentmanagement_workspace: %s\\n\" % e)"
  },
  "delete_contentmanagement_workspace_member": {
    "operationId": "delete_contentmanagement_workspace_member",
    "functionName": "delete_contentmanagement_workspace_member",
    "signature": "delete_contentmanagement_workspace_member(workspace_id, member_id)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "member_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\nmember_id = 'member_id_example' # str | Member ID\n\ntry:\n    # Delete a member from a workspace\n    api_instance.delete_contentmanagement_workspace_member(workspace_id, member_id)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->delete_contentmanagement_workspace_member: %s\\n\" % e)"
  },
  "delete_contentmanagement_workspace_tagvalue": {
    "operationId": "delete_contentmanagement_workspace_tagvalue",
    "functionName": "delete_contentmanagement_workspace_tagvalue",
    "signature": "delete_contentmanagement_workspace_tagvalue(workspace_id, tag_id)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "tag_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\ntag_id = 'tag_id_example' # str | Tag ID\n\ntry:\n    # Delete workspace tag\n    api_instance.delete_contentmanagement_workspace_tagvalue(workspace_id, tag_id)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->delete_contentmanagement_workspace_tagvalue: %s\\n\" % e)"
  },
  "get_contentmanagement_document": {
    "operationId": "get_contentmanagement_document",
    "functionName": "get_contentmanagement_document",
    "signature": "get_contentmanagement_document(document_id, expand)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "Document",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\ndocument_id = 'document_id_example' # str | Document ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Get a document.\n    api_response = api_instance.get_contentmanagement_document(document_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_document: %s\\n\" % e)"
  },
  "get_contentmanagement_document_content": {
    "operationId": "get_contentmanagement_document_content",
    "functionName": "get_contentmanagement_document_content",
    "signature": "get_contentmanagement_document_content(document_id, disposition, content_type)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "disposition",
        "type": "str",
        "required": "false"
      },
      {
        "name": "content_type",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DownloadResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\ndocument_id = 'document_id_example' # str | Document ID\ndisposition = 'disposition_example' # str | Request how the content will be downloaded: a file attachment or inline. Default is attachment. (optional)\ncontent_type = 'content_type_example' # str | The requested format for the specified document. If supported, the document will be returned in that format. Example contentType=audio/wav (optional)\n\ntry:\n    # Download a document.\n    api_response = api_instance.get_contentmanagement_document_content(document_id, disposition=disposition, content_type=content_type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_document_content: %s\\n\" % e)"
  },
  "get_contentmanagement_documents": {
    "operationId": "get_contentmanagement_documents",
    "functionName": "get_contentmanagement_documents",
    "signature": "get_contentmanagement_documents(workspace_id, name, expand, page_size, page_number, sort_by, sort_order)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DocumentEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\nname = 'name_example' # str | Name (optional)\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = 'sort_by_example' # str | name or dateCreated (optional)\nsort_order = ''ascending'' # str | ascending or descending (optional) (default to 'ascending')\n\ntry:\n    # Get a list of documents.\n    api_response = api_instance.get_contentmanagement_documents(workspace_id, name=name, expand=expand, page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_documents: %s\\n\" % e)"
  },
  "get_contentmanagement_query": {
    "operationId": "get_contentmanagement_query",
    "functionName": "get_contentmanagement_query",
    "signature": "get_contentmanagement_query(query_phrase, page_size, page_number, sort_by, sort_order, expand)",
    "parameters": [
      {
        "name": "query_phrase",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "QueryResults",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nquery_phrase = 'query_phrase_example' # str | Phrase tokens are ANDed together over all searchable fields\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''name'' # str | name or dateCreated (optional) (default to 'name')\nsort_order = ''ascending'' # str | ascending or descending (optional) (default to 'ascending')\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Query content\n    api_response = api_instance.get_contentmanagement_query(query_phrase, page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_query: %s\\n\" % e)"
  },
  "get_contentmanagement_securityprofile": {
    "operationId": "get_contentmanagement_securityprofile",
    "functionName": "get_contentmanagement_securityprofile",
    "signature": "get_contentmanagement_securityprofile(security_profile_id)",
    "parameters": [
      {
        "name": "security_profile_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SecurityProfile",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nsecurity_profile_id = 'security_profile_id_example' # str | Security Profile Id\n\ntry:\n    # Get a Security Profile\n    api_response = api_instance.get_contentmanagement_securityprofile(security_profile_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_securityprofile: %s\\n\" % e)"
  },
  "get_contentmanagement_securityprofiles": {
    "operationId": "get_contentmanagement_securityprofiles",
    "functionName": "get_contentmanagement_securityprofiles",
    "signature": "get_contentmanagement_securityprofiles()",
    "return": "SecurityProfileEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\n\ntry:\n    # Get a List of Security Profiles\n    api_response = api_instance.get_contentmanagement_securityprofiles()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_securityprofiles: %s\\n\" % e)"
  },
  "get_contentmanagement_share": {
    "operationId": "get_contentmanagement_share",
    "functionName": "get_contentmanagement_share",
    "signature": "get_contentmanagement_share(share_id, expand)",
    "parameters": [
      {
        "name": "share_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "Share",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nshare_id = 'share_id_example' # str | Share ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Retrieve details about an existing share.\n    api_response = api_instance.get_contentmanagement_share(share_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_share: %s\\n\" % e)"
  },
  "get_contentmanagement_shared_shared_id": {
    "operationId": "get_contentmanagement_shared_shared_id",
    "functionName": "get_contentmanagement_shared_shared_id",
    "signature": "get_contentmanagement_shared_shared_id(shared_id, redirect, disposition, content_type, expand)",
    "parameters": [
      {
        "name": "shared_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "redirect",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "disposition",
        "type": "str",
        "required": "false"
      },
      {
        "name": "content_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SharedResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nshared_id = 'shared_id_example' # str | Shared ID\nredirect = True # bool | Turn on or off redirect (optional) (default to True)\ndisposition = ''attachment'' # str | Request how the share content will be downloaded: attached as a file or inline. Default is attachment. (optional) (default to 'attachment')\ncontent_type = 'content_type_example' # str | The requested format for the specified document. If supported, the document will be returned in that format. Example contentType=audio/wav (optional)\nexpand = 'expand_example' # str | Expand some document fields (optional)\n\ntry:\n    # Get shared documents. Securely download a shared document.\n    api_response = api_instance.get_contentmanagement_shared_shared_id(shared_id, redirect=redirect, disposition=disposition, content_type=content_type, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_shared_shared_id: %s\\n\" % e)"
  },
  "get_contentmanagement_shares": {
    "operationId": "get_contentmanagement_shares",
    "functionName": "get_contentmanagement_shares",
    "signature": "get_contentmanagement_shares(entity_id, expand, page_size, page_number)",
    "parameters": [
      {
        "name": "entity_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "ShareEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nentity_id = 'entity_id_example' # str | Filters the shares returned to only the entity specified by the value of this parameter. (optional)\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Gets a list of shares.  You must specify at least one filter (e.g. entityId).\n    api_response = api_instance.get_contentmanagement_shares(entity_id=entity_id, expand=expand, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_shares: %s\\n\" % e)"
  },
  "get_contentmanagement_status": {
    "operationId": "get_contentmanagement_status",
    "functionName": "get_contentmanagement_status",
    "signature": "get_contentmanagement_status(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "CommandStatusEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a list of statuses for pending operations\n    api_response = api_instance.get_contentmanagement_status(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_status: %s\\n\" % e)"
  },
  "get_contentmanagement_status_status_id": {
    "operationId": "get_contentmanagement_status_status_id",
    "functionName": "get_contentmanagement_status_status_id",
    "signature": "get_contentmanagement_status_status_id(status_id)",
    "parameters": [
      {
        "name": "status_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CommandStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nstatus_id = 'status_id_example' # str | Status ID\n\ntry:\n    # Get a status.\n    api_response = api_instance.get_contentmanagement_status_status_id(status_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_status_status_id: %s\\n\" % e)"
  },
  "get_contentmanagement_usage": {
    "operationId": "get_contentmanagement_usage",
    "functionName": "get_contentmanagement_usage",
    "signature": "get_contentmanagement_usage()",
    "return": "Usage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\n\ntry:\n    # Get usage details.\n    api_response = api_instance.get_contentmanagement_usage()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_usage: %s\\n\" % e)"
  },
  "get_contentmanagement_workspace": {
    "operationId": "get_contentmanagement_workspace",
    "functionName": "get_contentmanagement_workspace",
    "signature": "get_contentmanagement_workspace(workspace_id, expand)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "Workspace",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Get a workspace.\n    api_response = api_instance.get_contentmanagement_workspace(workspace_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_workspace: %s\\n\" % e)"
  },
  "get_contentmanagement_workspace_documents": {
    "operationId": "get_contentmanagement_workspace_documents",
    "functionName": "get_contentmanagement_workspace_documents",
    "signature": "get_contentmanagement_workspace_documents(workspace_id, expand, page_size, page_number, sort_by, sort_order)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DocumentEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = 'sort_by_example' # str | name or dateCreated (optional)\nsort_order = ''ascending'' # str | ascending or descending (optional) (default to 'ascending')\n\ntry:\n    # Get a list of documents.\n    api_response = api_instance.get_contentmanagement_workspace_documents(workspace_id, expand=expand, page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_workspace_documents: %s\\n\" % e)"
  },
  "get_contentmanagement_workspace_member": {
    "operationId": "get_contentmanagement_workspace_member",
    "functionName": "get_contentmanagement_workspace_member",
    "signature": "get_contentmanagement_workspace_member(workspace_id, member_id, expand)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "member_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "WorkspaceMember",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\nmember_id = 'member_id_example' # str | Member ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Get a workspace member\n    api_response = api_instance.get_contentmanagement_workspace_member(workspace_id, member_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_workspace_member: %s\\n\" % e)"
  },
  "get_contentmanagement_workspace_members": {
    "operationId": "get_contentmanagement_workspace_members",
    "functionName": "get_contentmanagement_workspace_members",
    "signature": "get_contentmanagement_workspace_members(workspace_id, page_size, page_number, expand)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "WorkspaceMemberEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Get a list workspace members\n    api_response = api_instance.get_contentmanagement_workspace_members(workspace_id, page_size=page_size, page_number=page_number, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_workspace_members: %s\\n\" % e)"
  },
  "get_contentmanagement_workspace_tagvalue": {
    "operationId": "get_contentmanagement_workspace_tagvalue",
    "functionName": "get_contentmanagement_workspace_tagvalue",
    "signature": "get_contentmanagement_workspace_tagvalue(workspace_id, tag_id, expand)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "tag_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "TagValue",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\ntag_id = 'tag_id_example' # str | Tag ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Get a workspace tag\n    api_response = api_instance.get_contentmanagement_workspace_tagvalue(workspace_id, tag_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_workspace_tagvalue: %s\\n\" % e)"
  },
  "get_contentmanagement_workspace_tagvalues": {
    "operationId": "get_contentmanagement_workspace_tagvalues",
    "functionName": "get_contentmanagement_workspace_tagvalues",
    "signature": "get_contentmanagement_workspace_tagvalues(workspace_id, value, page_size, page_number, expand)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "value",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "TagValueEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\nvalue = 'value_example' # str | filter the list of tags returned (optional)\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Get a list of workspace tags\n    api_response = api_instance.get_contentmanagement_workspace_tagvalues(workspace_id, value=value, page_size=page_size, page_number=page_number, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_workspace_tagvalues: %s\\n\" % e)"
  },
  "get_contentmanagement_workspaces": {
    "operationId": "get_contentmanagement_workspaces",
    "functionName": "get_contentmanagement_workspaces",
    "signature": "get_contentmanagement_workspaces(page_size, page_number, access, expand)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "access",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "WorkspaceEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\naccess = ['access_example'] # list[str] | Requested access level. (optional)\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Get a list of workspaces.\n    api_response = api_instance.get_contentmanagement_workspaces(page_size=page_size, page_number=page_number, access=access, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->get_contentmanagement_workspaces: %s\\n\" % e)"
  },
  "post_contentmanagement_document": {
    "operationId": "post_contentmanagement_document",
    "functionName": "post_contentmanagement_document",
    "signature": "post_contentmanagement_document(document_id, body, expand, override)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DocumentUpdate",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "override",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Document",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\ndocument_id = 'document_id_example' # str | Document ID\nbody = PureCloudPlatformClientV2.DocumentUpdate() # DocumentUpdate | Document\nexpand = 'expand_example' # str | Expand some document fields (optional)\noverride = True # bool | Override any lock on the document (optional)\n\ntry:\n    # Update a document.\n    api_response = api_instance.post_contentmanagement_document(document_id, body, expand=expand, override=override)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->post_contentmanagement_document: %s\\n\" % e)"
  },
  "post_contentmanagement_document_content": {
    "operationId": "post_contentmanagement_document_content",
    "functionName": "post_contentmanagement_document_content",
    "signature": "post_contentmanagement_document_content(document_id, body, override)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ReplaceRequest",
        "required": "true"
      },
      {
        "name": "override",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "ReplaceResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\ndocument_id = 'document_id_example' # str | Document ID\nbody = PureCloudPlatformClientV2.ReplaceRequest() # ReplaceRequest | Replace Request\noverride = True # bool | Override any lock on the document (optional)\n\ntry:\n    # Replace the contents of a document.\n    api_response = api_instance.post_contentmanagement_document_content(document_id, body, override=override)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->post_contentmanagement_document_content: %s\\n\" % e)"
  },
  "post_contentmanagement_documents": {
    "operationId": "post_contentmanagement_documents",
    "functionName": "post_contentmanagement_documents",
    "signature": "post_contentmanagement_documents(body, copy_source, move_source, override)",
    "parameters": [
      {
        "name": "body",
        "type": "DocumentUpload",
        "required": "true"
      },
      {
        "name": "copy_source",
        "type": "str",
        "required": "false"
      },
      {
        "name": "move_source",
        "type": "str",
        "required": "false"
      },
      {
        "name": "override",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Document",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nbody = PureCloudPlatformClientV2.DocumentUpload() # DocumentUpload | Document\ncopy_source = 'copy_source_example' # str | Copy a document within a workspace or to a new workspace. Provide a document ID as the copy source. (optional)\nmove_source = 'move_source_example' # str | Move a document to a new workspace. Provide a document ID as the move source. (optional)\noverride = True # bool | Override any lock on the source document (optional)\n\ntry:\n    # Add a document.\n    api_response = api_instance.post_contentmanagement_documents(body, copy_source=copy_source, move_source=move_source, override=override)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->post_contentmanagement_documents: %s\\n\" % e)"
  },
  "post_contentmanagement_query": {
    "operationId": "post_contentmanagement_query",
    "functionName": "post_contentmanagement_query",
    "signature": "post_contentmanagement_query(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "QueryRequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "QueryResults",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nbody = PureCloudPlatformClientV2.QueryRequest() # QueryRequest | Allows for a filtered query returning facet information\nexpand = 'expand_example' # str | Expand some document fields (optional)\n\ntry:\n    # Query content\n    api_response = api_instance.post_contentmanagement_query(body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->post_contentmanagement_query: %s\\n\" % e)"
  },
  "post_contentmanagement_shares": {
    "operationId": "post_contentmanagement_shares",
    "functionName": "post_contentmanagement_shares",
    "signature": "post_contentmanagement_shares(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateShareRequest",
        "required": "true"
      }
    ],
    "return": "CreateShareResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nbody = PureCloudPlatformClientV2.CreateShareRequest() # CreateShareRequest | CreateShareRequest - entity id and type and a single member or list of members are required\n\ntry:\n    # Creates a new share or updates an existing share if the entity has already been shared\n    api_response = api_instance.post_contentmanagement_shares(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->post_contentmanagement_shares: %s\\n\" % e)"
  },
  "post_contentmanagement_workspace_tagvalues": {
    "operationId": "post_contentmanagement_workspace_tagvalues",
    "functionName": "post_contentmanagement_workspace_tagvalues",
    "signature": "post_contentmanagement_workspace_tagvalues(workspace_id, body)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TagValue",
        "required": "true"
      }
    ],
    "return": "TagValue",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\nbody = PureCloudPlatformClientV2.TagValue() # TagValue | tag\n\ntry:\n    # Create a workspace tag\n    api_response = api_instance.post_contentmanagement_workspace_tagvalues(workspace_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->post_contentmanagement_workspace_tagvalues: %s\\n\" % e)"
  },
  "post_contentmanagement_workspace_tagvalues_query": {
    "operationId": "post_contentmanagement_workspace_tagvalues_query",
    "functionName": "post_contentmanagement_workspace_tagvalues_query",
    "signature": "post_contentmanagement_workspace_tagvalues_query(workspace_id, body, expand)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TagQueryRequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "TagValueEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\nbody = PureCloudPlatformClientV2.TagQueryRequest() # TagQueryRequest | query\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Perform a prefix query on tags in the workspace\n    api_response = api_instance.post_contentmanagement_workspace_tagvalues_query(workspace_id, body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->post_contentmanagement_workspace_tagvalues_query: %s\\n\" % e)"
  },
  "post_contentmanagement_workspaces": {
    "operationId": "post_contentmanagement_workspaces",
    "functionName": "post_contentmanagement_workspaces",
    "signature": "post_contentmanagement_workspaces(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WorkspaceCreate",
        "required": "true"
      }
    ],
    "return": "Workspace",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nbody = PureCloudPlatformClientV2.WorkspaceCreate() # WorkspaceCreate | Workspace\n\ntry:\n    # Create a group workspace\n    api_response = api_instance.post_contentmanagement_workspaces(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->post_contentmanagement_workspaces: %s\\n\" % e)"
  },
  "put_contentmanagement_workspace": {
    "operationId": "put_contentmanagement_workspace",
    "functionName": "put_contentmanagement_workspace",
    "signature": "put_contentmanagement_workspace(workspace_id, body)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Workspace",
        "required": "true"
      }
    ],
    "return": "Workspace",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\nbody = PureCloudPlatformClientV2.Workspace() # Workspace | Workspace\n\ntry:\n    # Update a workspace\n    api_response = api_instance.put_contentmanagement_workspace(workspace_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->put_contentmanagement_workspace: %s\\n\" % e)"
  },
  "put_contentmanagement_workspace_member": {
    "operationId": "put_contentmanagement_workspace_member",
    "functionName": "put_contentmanagement_workspace_member",
    "signature": "put_contentmanagement_workspace_member(workspace_id, member_id, body)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "member_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WorkspaceMember",
        "required": "true"
      }
    ],
    "return": "WorkspaceMember",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\nmember_id = 'member_id_example' # str | Member ID\nbody = PureCloudPlatformClientV2.WorkspaceMember() # WorkspaceMember | Workspace Member\n\ntry:\n    # Add a member to a workspace\n    api_response = api_instance.put_contentmanagement_workspace_member(workspace_id, member_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->put_contentmanagement_workspace_member: %s\\n\" % e)"
  },
  "put_contentmanagement_workspace_tagvalue": {
    "operationId": "put_contentmanagement_workspace_tagvalue",
    "functionName": "put_contentmanagement_workspace_tagvalue",
    "signature": "put_contentmanagement_workspace_tagvalue(workspace_id, tag_id, body)",
    "parameters": [
      {
        "name": "workspace_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "tag_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TagValue",
        "required": "true"
      }
    ],
    "return": "TagValue",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ContentManagementApi();\nworkspace_id = 'workspace_id_example' # str | Workspace ID\ntag_id = 'tag_id_example' # str | Tag ID\nbody = PureCloudPlatformClientV2.TagValue() # TagValue | Workspace\n\ntry:\n    # Update a workspace tag. Will update all documents with the new tag value.\n    api_response = api_instance.put_contentmanagement_workspace_tagvalue(workspace_id, tag_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ContentManagementApi->put_contentmanagement_workspace_tagvalue: %s\\n\" % e)"
  },
  "delete_conversation_participant_code": {
    "operationId": "delete_conversation_participant_code",
    "functionName": "delete_conversation_participant_code",
    "signature": "delete_conversation_participant_code(conversation_id, participant_id, add_communication_code)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "add_communication_code",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\nadd_communication_code = 'add_communication_code_example' # str | addCommunicationCode\n\ntry:\n    # Delete a code used to add a communication to this participant\n    api_instance.delete_conversation_participant_code(conversation_id, participant_id, add_communication_code)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->delete_conversation_participant_code: %s\\n\" % e)"
  },
  "delete_conversation_participant_flaggedreason": {
    "operationId": "delete_conversation_participant_flaggedreason",
    "functionName": "delete_conversation_participant_flaggedreason",
    "signature": "delete_conversation_participant_flaggedreason(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\n\ntry:\n    # Remove flagged reason from conversation participant.\n    api_instance.delete_conversation_participant_flaggedreason(conversation_id, participant_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->delete_conversation_participant_flaggedreason: %s\\n\" % e)"
  },
  "delete_conversations_call_participant_consult": {
    "operationId": "delete_conversations_call_participant_consult",
    "functionName": "delete_conversations_call_participant_consult",
    "signature": "delete_conversations_call_participant_consult(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\n\ntry:\n    # Cancel the transfer\n    api_instance.delete_conversations_call_participant_consult(conversation_id, participant_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->delete_conversations_call_participant_consult: %s\\n\" % e)"
  },
  "delete_conversations_email_messages_draft_attachment": {
    "operationId": "delete_conversations_email_messages_draft_attachment",
    "functionName": "delete_conversations_email_messages_draft_attachment",
    "signature": "delete_conversations_email_messages_draft_attachment(conversation_id, attachment_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "attachment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nattachment_id = 'attachment_id_example' # str | attachmentId\n\ntry:\n    # Delete attachment from draft\n    api_instance.delete_conversations_email_messages_draft_attachment(conversation_id, attachment_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->delete_conversations_email_messages_draft_attachment: %s\\n\" % e)"
  },
  "delete_conversations_messages_cachedmedia_cached_media_item_id": {
    "operationId": "delete_conversations_messages_cachedmedia_cached_media_item_id",
    "functionName": "delete_conversations_messages_cachedmedia_cached_media_item_id",
    "signature": "delete_conversations_messages_cachedmedia_cached_media_item_id(cached_media_item_id)",
    "parameters": [
      {
        "name": "cached_media_item_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\ncached_media_item_id = 'cached_media_item_id_example' # str | cachedMediaItemId\n\ntry:\n    # Remove a cached media item asychronously\n    api_instance.delete_conversations_messages_cachedmedia_cached_media_item_id(cached_media_item_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->delete_conversations_messages_cachedmedia_cached_media_item_id: %s\\n\" % e)"
  },
  "delete_conversations_messaging_integrations_facebook_integration_id": {
    "operationId": "delete_conversations_messaging_integrations_facebook_integration_id",
    "functionName": "delete_conversations_messaging_integrations_facebook_integration_id",
    "signature": "delete_conversations_messaging_integrations_facebook_integration_id(integration_id)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | Integration ID\n\ntry:\n    # Delete a Facebook messaging integration\n    api_instance.delete_conversations_messaging_integrations_facebook_integration_id(integration_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->delete_conversations_messaging_integrations_facebook_integration_id: %s\\n\" % e)"
  },
  "delete_conversations_messaging_integrations_instagram_integration_id": {
    "operationId": "delete_conversations_messaging_integrations_instagram_integration_id",
    "functionName": "delete_conversations_messaging_integrations_instagram_integration_id",
    "signature": "delete_conversations_messaging_integrations_instagram_integration_id(integration_id)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | Integration ID\n\ntry:\n    # Delete Instagram messaging integration\n    api_instance.delete_conversations_messaging_integrations_instagram_integration_id(integration_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->delete_conversations_messaging_integrations_instagram_integration_id: %s\\n\" % e)"
  },
  "delete_conversations_messaging_integrations_open_integration_id": {
    "operationId": "delete_conversations_messaging_integrations_open_integration_id",
    "functionName": "delete_conversations_messaging_integrations_open_integration_id",
    "signature": "delete_conversations_messaging_integrations_open_integration_id(integration_id)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | Integration ID\n\ntry:\n    # Delete an Open messaging integration\n    api_instance.delete_conversations_messaging_integrations_open_integration_id(integration_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->delete_conversations_messaging_integrations_open_integration_id: %s\\n\" % e)"
  },
  "delete_conversations_messaging_integrations_whatsapp_integration_id": {
    "operationId": "delete_conversations_messaging_integrations_whatsapp_integration_id",
    "functionName": "delete_conversations_messaging_integrations_whatsapp_integration_id",
    "signature": "delete_conversations_messaging_integrations_whatsapp_integration_id(integration_id)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WhatsAppIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | Integration ID\n\ntry:\n    # Delete a WhatsApp messaging integration\n    api_response = api_instance.delete_conversations_messaging_integrations_whatsapp_integration_id(integration_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->delete_conversations_messaging_integrations_whatsapp_integration_id: %s\\n\" % e)"
  },
  "delete_conversations_messaging_setting": {
    "operationId": "delete_conversations_messaging_setting",
    "functionName": "delete_conversations_messaging_setting",
    "signature": "delete_conversations_messaging_setting(message_setting_id)",
    "parameters": [
      {
        "name": "message_setting_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nmessage_setting_id = 'message_setting_id_example' # str | Message Setting ID\n\ntry:\n    # Delete a messaging setting\n    api_instance.delete_conversations_messaging_setting(message_setting_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->delete_conversations_messaging_setting: %s\\n\" % e)"
  },
  "delete_conversations_messaging_settings_default": {
    "operationId": "delete_conversations_messaging_settings_default",
    "functionName": "delete_conversations_messaging_settings_default",
    "signature": "delete_conversations_messaging_settings_default()",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Delete the organization's default setting, a global default will be applied to integrations without settings\n    api_instance.delete_conversations_messaging_settings_default()\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->delete_conversations_messaging_settings_default: %s\\n\" % e)"
  },
  "delete_conversations_messaging_supportedcontent_supported_content_id": {
    "operationId": "delete_conversations_messaging_supportedcontent_supported_content_id",
    "functionName": "delete_conversations_messaging_supportedcontent_supported_content_id",
    "signature": "delete_conversations_messaging_supportedcontent_supported_content_id(supported_content_id)",
    "parameters": [
      {
        "name": "supported_content_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nsupported_content_id = 'supported_content_id_example' # str | Supported Content ID\n\ntry:\n    # Delete a supported content profile\n    api_instance.delete_conversations_messaging_supportedcontent_supported_content_id(supported_content_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->delete_conversations_messaging_supportedcontent_supported_content_id: %s\\n\" % e)"
  },
  "get_conversation": {
    "operationId": "get_conversation",
    "functionName": "get_conversation",
    "signature": "get_conversation(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\n\ntry:\n    # Get conversation\n    api_response = api_instance.get_conversation(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversation: %s\\n\" % e)"
  },
  "get_conversation_participant_secureivrsession": {
    "operationId": "get_conversation_participant_secureivrsession",
    "functionName": "get_conversation_participant_secureivrsession",
    "signature": "get_conversation_participant_secureivrsession(conversation_id, participant_id, secure_session_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "secure_session_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SecureSession",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\nsecure_session_id = 'secure_session_id_example' # str | secure IVR session ID\n\ntry:\n    # Fetch info on a secure session\n    api_response = api_instance.get_conversation_participant_secureivrsession(conversation_id, participant_id, secure_session_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversation_participant_secureivrsession: %s\\n\" % e)"
  },
  "get_conversation_participant_secureivrsessions": {
    "operationId": "get_conversation_participant_secureivrsessions",
    "functionName": "get_conversation_participant_secureivrsessions",
    "signature": "get_conversation_participant_secureivrsessions(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SecureSessionEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\n\ntry:\n    # Get a list of secure sessions for this participant.\n    api_response = api_instance.get_conversation_participant_secureivrsessions(conversation_id, participant_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversation_participant_secureivrsessions: %s\\n\" % e)"
  },
  "get_conversation_participant_wrapup": {
    "operationId": "get_conversation_participant_wrapup",
    "functionName": "get_conversation_participant_wrapup",
    "signature": "get_conversation_participant_wrapup(conversation_id, participant_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation participant. \n    api_response = api_instance.get_conversation_participant_wrapup(conversation_id, participant_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversation_participant_wrapup: %s\\n\" % e)"
  },
  "get_conversation_participant_wrapupcodes": {
    "operationId": "get_conversation_participant_wrapupcodes",
    "functionName": "get_conversation_participant_wrapupcodes",
    "signature": "get_conversation_participant_wrapupcodes(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[WrapupCode]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\n\ntry:\n    # Get list of wrapup codes for this conversation participant\n    api_response = api_instance.get_conversation_participant_wrapupcodes(conversation_id, participant_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversation_participant_wrapupcodes: %s\\n\" % e)"
  },
  "get_conversation_secureattributes": {
    "operationId": "get_conversation_secureattributes",
    "functionName": "get_conversation_secureattributes",
    "signature": "get_conversation_secureattributes(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ConversationSecureAttributes",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\n\ntry:\n    # Get the secure attributes on a conversation.\n    api_response = api_instance.get_conversation_secureattributes(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversation_secureattributes: %s\\n\" % e)"
  },
  "get_conversations": {
    "operationId": "get_conversations",
    "functionName": "get_conversations",
    "signature": "get_conversations(communication_type)",
    "parameters": [
      {
        "name": "communication_type",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ConversationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\ncommunication_type = 'communication_type_example' # str | Call or Chat communication filtering (optional)\n\ntry:\n    # Get active conversations for the logged in user\n    api_response = api_instance.get_conversations(communication_type=communication_type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations: %s\\n\" % e)"
  },
  "get_conversations_call": {
    "operationId": "get_conversations_call",
    "functionName": "get_conversations_call",
    "signature": "get_conversations_call(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CallConversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\n\ntry:\n    # Get call conversation\n    api_response = api_instance.get_conversations_call(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_call: %s\\n\" % e)"
  },
  "get_conversations_call_participant_communication_wrapup": {
    "operationId": "get_conversations_call_participant_communication_wrapup",
    "functionName": "get_conversations_call_participant_communication_wrapup",
    "signature": "get_conversations_call_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation communication. \n    api_response = api_instance.get_conversations_call_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_call_participant_communication_wrapup: %s\\n\" % e)"
  },
  "get_conversations_call_participant_wrapup": {
    "operationId": "get_conversations_call_participant_wrapup",
    "functionName": "get_conversations_call_participant_wrapup",
    "signature": "get_conversations_call_participant_wrapup(conversation_id, participant_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation participant. \n    api_response = api_instance.get_conversations_call_participant_wrapup(conversation_id, participant_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_call_participant_wrapup: %s\\n\" % e)"
  },
  "get_conversations_call_participant_wrapupcodes": {
    "operationId": "get_conversations_call_participant_wrapupcodes",
    "functionName": "get_conversations_call_participant_wrapupcodes",
    "signature": "get_conversations_call_participant_wrapupcodes(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[WrapupCode]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\n\ntry:\n    # Get list of wrapup codes for this conversation participant\n    api_response = api_instance.get_conversations_call_participant_wrapupcodes(conversation_id, participant_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_call_participant_wrapupcodes: %s\\n\" % e)"
  },
  "get_conversations_callback": {
    "operationId": "get_conversations_callback",
    "functionName": "get_conversations_callback",
    "signature": "get_conversations_callback(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CallbackConversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\n\ntry:\n    # Get callback conversation\n    api_response = api_instance.get_conversations_callback(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_callback: %s\\n\" % e)"
  },
  "get_conversations_callback_participant_communication_wrapup": {
    "operationId": "get_conversations_callback_participant_communication_wrapup",
    "functionName": "get_conversations_callback_participant_communication_wrapup",
    "signature": "get_conversations_callback_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation communication. \n    api_response = api_instance.get_conversations_callback_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_callback_participant_communication_wrapup: %s\\n\" % e)"
  },
  "get_conversations_callback_participant_wrapup": {
    "operationId": "get_conversations_callback_participant_wrapup",
    "functionName": "get_conversations_callback_participant_wrapup",
    "signature": "get_conversations_callback_participant_wrapup(conversation_id, participant_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation participant. \n    api_response = api_instance.get_conversations_callback_participant_wrapup(conversation_id, participant_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_callback_participant_wrapup: %s\\n\" % e)"
  },
  "get_conversations_callback_participant_wrapupcodes": {
    "operationId": "get_conversations_callback_participant_wrapupcodes",
    "functionName": "get_conversations_callback_participant_wrapupcodes",
    "signature": "get_conversations_callback_participant_wrapupcodes(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[WrapupCode]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\n\ntry:\n    # Get list of wrapup codes for this conversation participant\n    api_response = api_instance.get_conversations_callback_participant_wrapupcodes(conversation_id, participant_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_callback_participant_wrapupcodes: %s\\n\" % e)"
  },
  "get_conversations_callbacks": {
    "operationId": "get_conversations_callbacks",
    "functionName": "get_conversations_callbacks",
    "signature": "get_conversations_callbacks()",
    "return": "CallbackConversationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get active callback conversations for the logged in user\n    api_response = api_instance.get_conversations_callbacks()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_callbacks: %s\\n\" % e)"
  },
  "get_conversations_calls": {
    "operationId": "get_conversations_calls",
    "functionName": "get_conversations_calls",
    "signature": "get_conversations_calls()",
    "return": "CallConversationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get active call conversations for the logged in user\n    api_response = api_instance.get_conversations_calls()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_calls: %s\\n\" % e)"
  },
  "get_conversations_calls_history": {
    "operationId": "get_conversations_calls_history",
    "functionName": "get_conversations_calls_history",
    "signature": "get_conversations_calls_history(page_size, page_number, interval, expand)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "CallHistoryConversationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\npage_size = 25 # int | Page size, maximum 50 (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\ninterval = 'interval_example' # str | Interval string; format is ISO-8601. Separate start and end times with forward slash '/' (optional)\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Get call history\n    api_response = api_instance.get_conversations_calls_history(page_size=page_size, page_number=page_number, interval=interval, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_calls_history: %s\\n\" % e)"
  },
  "get_conversations_calls_maximumconferenceparties": {
    "operationId": "get_conversations_calls_maximumconferenceparties",
    "functionName": "get_conversations_calls_maximumconferenceparties",
    "signature": "get_conversations_calls_maximumconferenceparties()",
    "return": "MaxParticipants",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get the maximum number of participants that this user can have on a conference\n    api_response = api_instance.get_conversations_calls_maximumconferenceparties()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_calls_maximumconferenceparties: %s\\n\" % e)"
  },
  "get_conversations_chat": {
    "operationId": "get_conversations_chat",
    "functionName": "get_conversations_chat",
    "signature": "get_conversations_chat(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ChatConversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\n\ntry:\n    # Get chat conversation\n    api_response = api_instance.get_conversations_chat(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_chat: %s\\n\" % e)"
  },
  "get_conversations_chat_message": {
    "operationId": "get_conversations_chat_message",
    "functionName": "get_conversations_chat_message",
    "signature": "get_conversations_chat_message(conversation_id, message_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WebChatMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nmessage_id = 'message_id_example' # str | messageId\n\ntry:\n    # Get a web chat conversation message\n    api_response = api_instance.get_conversations_chat_message(conversation_id, message_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_chat_message: %s\\n\" % e)"
  },
  "get_conversations_chat_messages": {
    "operationId": "get_conversations_chat_messages",
    "functionName": "get_conversations_chat_messages",
    "signature": "get_conversations_chat_messages(conversation_id, after, before, sort_order, max_results)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "max_results",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "WebChatMessageEntityList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nafter = 'after_example' # str | If specified, get the messages chronologically after the id of this message (optional)\nbefore = 'before_example' # str | If specified, get the messages chronologically before the id of this message (optional)\nsort_order = ''ascending'' # str | Sort order (optional) (default to 'ascending')\nmax_results = 100 # int | Limit the returned number of messages, up to a maximum of 100 (optional) (default to 100)\n\ntry:\n    # Get the messages of a chat conversation.\n    api_response = api_instance.get_conversations_chat_messages(conversation_id, after=after, before=before, sort_order=sort_order, max_results=max_results)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_chat_messages: %s\\n\" % e)"
  },
  "get_conversations_chat_participant_communication_wrapup": {
    "operationId": "get_conversations_chat_participant_communication_wrapup",
    "functionName": "get_conversations_chat_participant_communication_wrapup",
    "signature": "get_conversations_chat_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation communication. \n    api_response = api_instance.get_conversations_chat_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_chat_participant_communication_wrapup: %s\\n\" % e)"
  },
  "get_conversations_chat_participant_wrapup": {
    "operationId": "get_conversations_chat_participant_wrapup",
    "functionName": "get_conversations_chat_participant_wrapup",
    "signature": "get_conversations_chat_participant_wrapup(conversation_id, participant_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation participant. \n    api_response = api_instance.get_conversations_chat_participant_wrapup(conversation_id, participant_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_chat_participant_wrapup: %s\\n\" % e)"
  },
  "get_conversations_chat_participant_wrapupcodes": {
    "operationId": "get_conversations_chat_participant_wrapupcodes",
    "functionName": "get_conversations_chat_participant_wrapupcodes",
    "signature": "get_conversations_chat_participant_wrapupcodes(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[WrapupCode]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\n\ntry:\n    # Get list of wrapup codes for this conversation participant\n    api_response = api_instance.get_conversations_chat_participant_wrapupcodes(conversation_id, participant_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_chat_participant_wrapupcodes: %s\\n\" % e)"
  },
  "get_conversations_chats": {
    "operationId": "get_conversations_chats",
    "functionName": "get_conversations_chats",
    "signature": "get_conversations_chats()",
    "return": "ChatConversationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get active chat conversations for the logged in user\n    api_response = api_instance.get_conversations_chats()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_chats: %s\\n\" % e)"
  },
  "get_conversations_cobrowsesession": {
    "operationId": "get_conversations_cobrowsesession",
    "functionName": "get_conversations_cobrowsesession",
    "signature": "get_conversations_cobrowsesession(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CobrowseConversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\n\ntry:\n    # Get cobrowse conversation\n    api_response = api_instance.get_conversations_cobrowsesession(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_cobrowsesession: %s\\n\" % e)"
  },
  "get_conversations_cobrowsesession_participant_communication_wrapup": {
    "operationId": "get_conversations_cobrowsesession_participant_communication_wrapup",
    "functionName": "get_conversations_cobrowsesession_participant_communication_wrapup",
    "signature": "get_conversations_cobrowsesession_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation communication. \n    api_response = api_instance.get_conversations_cobrowsesession_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_cobrowsesession_participant_communication_wrapup: %s\\n\" % e)"
  },
  "get_conversations_cobrowsesession_participant_wrapup": {
    "operationId": "get_conversations_cobrowsesession_participant_wrapup",
    "functionName": "get_conversations_cobrowsesession_participant_wrapup",
    "signature": "get_conversations_cobrowsesession_participant_wrapup(conversation_id, participant_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation participant. \n    api_response = api_instance.get_conversations_cobrowsesession_participant_wrapup(conversation_id, participant_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_cobrowsesession_participant_wrapup: %s\\n\" % e)"
  },
  "get_conversations_cobrowsesession_participant_wrapupcodes": {
    "operationId": "get_conversations_cobrowsesession_participant_wrapupcodes",
    "functionName": "get_conversations_cobrowsesession_participant_wrapupcodes",
    "signature": "get_conversations_cobrowsesession_participant_wrapupcodes(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[WrapupCode]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\n\ntry:\n    # Get list of wrapup codes for this conversation participant\n    api_response = api_instance.get_conversations_cobrowsesession_participant_wrapupcodes(conversation_id, participant_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_cobrowsesession_participant_wrapupcodes: %s\\n\" % e)"
  },
  "get_conversations_cobrowsesessions": {
    "operationId": "get_conversations_cobrowsesessions",
    "functionName": "get_conversations_cobrowsesessions",
    "signature": "get_conversations_cobrowsesessions()",
    "return": "CobrowseConversationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get active cobrowse conversations for the logged in user\n    api_response = api_instance.get_conversations_cobrowsesessions()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_cobrowsesessions: %s\\n\" % e)"
  },
  "get_conversations_email": {
    "operationId": "get_conversations_email",
    "functionName": "get_conversations_email",
    "signature": "get_conversations_email(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EmailConversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\n\ntry:\n    # Get email conversation\n    api_response = api_instance.get_conversations_email(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_email: %s\\n\" % e)"
  },
  "get_conversations_email_message": {
    "operationId": "get_conversations_email_message",
    "functionName": "get_conversations_email_message",
    "signature": "get_conversations_email_message(conversation_id, message_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EmailMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nmessage_id = 'message_id_example' # str | messageId\n\ntry:\n    # Get conversation message\n    api_response = api_instance.get_conversations_email_message(conversation_id, message_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_email_message: %s\\n\" % e)"
  },
  "get_conversations_email_messages": {
    "operationId": "get_conversations_email_messages",
    "functionName": "get_conversations_email_messages",
    "signature": "get_conversations_email_messages(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EmailMessagePreviewListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\n\ntry:\n    # Get conversation messages\n    api_response = api_instance.get_conversations_email_messages(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_email_messages: %s\\n\" % e)"
  },
  "get_conversations_email_messages_draft": {
    "operationId": "get_conversations_email_messages_draft",
    "functionName": "get_conversations_email_messages_draft",
    "signature": "get_conversations_email_messages_draft(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EmailMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\n\ntry:\n    # Get conversation draft reply\n    api_response = api_instance.get_conversations_email_messages_draft(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_email_messages_draft: %s\\n\" % e)"
  },
  "get_conversations_email_participant_communication_wrapup": {
    "operationId": "get_conversations_email_participant_communication_wrapup",
    "functionName": "get_conversations_email_participant_communication_wrapup",
    "signature": "get_conversations_email_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation communication. \n    api_response = api_instance.get_conversations_email_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_email_participant_communication_wrapup: %s\\n\" % e)"
  },
  "get_conversations_email_participant_wrapup": {
    "operationId": "get_conversations_email_participant_wrapup",
    "functionName": "get_conversations_email_participant_wrapup",
    "signature": "get_conversations_email_participant_wrapup(conversation_id, participant_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation participant. \n    api_response = api_instance.get_conversations_email_participant_wrapup(conversation_id, participant_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_email_participant_wrapup: %s\\n\" % e)"
  },
  "get_conversations_email_participant_wrapupcodes": {
    "operationId": "get_conversations_email_participant_wrapupcodes",
    "functionName": "get_conversations_email_participant_wrapupcodes",
    "signature": "get_conversations_email_participant_wrapupcodes(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[WrapupCode]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\n\ntry:\n    # Get list of wrapup codes for this conversation participant\n    api_response = api_instance.get_conversations_email_participant_wrapupcodes(conversation_id, participant_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_email_participant_wrapupcodes: %s\\n\" % e)"
  },
  "get_conversations_email_settings": {
    "operationId": "get_conversations_email_settings",
    "functionName": "get_conversations_email_settings",
    "signature": "get_conversations_email_settings(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EmailsSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\n\ntry:\n    # Get emails settings for a given conversation\n    api_response = api_instance.get_conversations_email_settings(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_email_settings: %s\\n\" % e)"
  },
  "get_conversations_emails": {
    "operationId": "get_conversations_emails",
    "functionName": "get_conversations_emails",
    "signature": "get_conversations_emails()",
    "return": "EmailConversationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get active email conversations for the logged in user\n    api_response = api_instance.get_conversations_emails()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_emails: %s\\n\" % e)"
  },
  "get_conversations_keyconfiguration": {
    "operationId": "get_conversations_keyconfiguration",
    "functionName": "get_conversations_keyconfiguration",
    "signature": "get_conversations_keyconfiguration(keyconfigurations_id)",
    "parameters": [
      {
        "name": "keyconfigurations_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ConversationEncryptionConfiguration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nkeyconfigurations_id = 'keyconfigurations_id_example' # str | Key Configurations Id\n\ntry:\n    # Get the encryption key configurations\n    api_response = api_instance.get_conversations_keyconfiguration(keyconfigurations_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_keyconfiguration: %s\\n\" % e)"
  },
  "get_conversations_keyconfigurations": {
    "operationId": "get_conversations_keyconfigurations",
    "functionName": "get_conversations_keyconfigurations",
    "signature": "get_conversations_keyconfigurations()",
    "return": "ConversationEncryptionConfigurationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get a list of key configurations data\n    api_response = api_instance.get_conversations_keyconfigurations()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_keyconfigurations: %s\\n\" % e)"
  },
  "get_conversations_message": {
    "operationId": "get_conversations_message",
    "functionName": "get_conversations_message",
    "signature": "get_conversations_message(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MessageConversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\n\ntry:\n    # Get message conversation\n    api_response = api_instance.get_conversations_message(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_message: %s\\n\" % e)"
  },
  "get_conversations_message_communication_messages_media_media_id": {
    "operationId": "get_conversations_message_communication_messages_media_media_id",
    "functionName": "get_conversations_message_communication_messages_media_media_id",
    "signature": "get_conversations_message_communication_messages_media_media_id(conversation_id, communication_id, media_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "media_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MessageMediaData",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\ncommunication_id = 'communication_id_example' # str | communicationId\nmedia_id = 'media_id_example' # str | mediaId\n\ntry:\n    # Get media\n    api_response = api_instance.get_conversations_message_communication_messages_media_media_id(conversation_id, communication_id, media_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_message_communication_messages_media_media_id: %s\\n\" % e)"
  },
  "get_conversations_message_details": {
    "operationId": "get_conversations_message_details",
    "functionName": "get_conversations_message_details",
    "signature": "get_conversations_message_details(message_id, use_normalized_message)",
    "parameters": [
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "use_normalized_message",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "MessageData",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nmessage_id = 'message_id_example' # str | messageId\nuse_normalized_message = False # bool | If true, response removes deprecated fields (textBody, media, stickers) (optional) (default to False)\n\ntry:\n    # Get message\n    api_response = api_instance.get_conversations_message_details(message_id, use_normalized_message=use_normalized_message)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_message_details: %s\\n\" % e)"
  },
  "get_conversations_message_message": {
    "operationId": "get_conversations_message_message",
    "functionName": "get_conversations_message_message",
    "signature": "get_conversations_message_message(conversation_id, message_id, use_normalized_message)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "use_normalized_message",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "MessageData",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nmessage_id = 'message_id_example' # str | messageId\nuse_normalized_message = False # bool | If true, response removes deprecated fields (textBody, media, stickers) (optional) (default to False)\n\ntry:\n    # Get conversation message\n    api_response = api_instance.get_conversations_message_message(conversation_id, message_id, use_normalized_message=use_normalized_message)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_message_message: %s\\n\" % e)"
  },
  "get_conversations_message_participant_communication_wrapup": {
    "operationId": "get_conversations_message_participant_communication_wrapup",
    "functionName": "get_conversations_message_participant_communication_wrapup",
    "signature": "get_conversations_message_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation communication. \n    api_response = api_instance.get_conversations_message_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_message_participant_communication_wrapup: %s\\n\" % e)"
  },
  "get_conversations_message_participant_wrapup": {
    "operationId": "get_conversations_message_participant_wrapup",
    "functionName": "get_conversations_message_participant_wrapup",
    "signature": "get_conversations_message_participant_wrapup(conversation_id, participant_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation participant. \n    api_response = api_instance.get_conversations_message_participant_wrapup(conversation_id, participant_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_message_participant_wrapup: %s\\n\" % e)"
  },
  "get_conversations_message_participant_wrapupcodes": {
    "operationId": "get_conversations_message_participant_wrapupcodes",
    "functionName": "get_conversations_message_participant_wrapupcodes",
    "signature": "get_conversations_message_participant_wrapupcodes(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[WrapupCode]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\n\ntry:\n    # Get list of wrapup codes for this conversation participant\n    api_response = api_instance.get_conversations_message_participant_wrapupcodes(conversation_id, participant_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_message_participant_wrapupcodes: %s\\n\" % e)"
  },
  "get_conversations_messages": {
    "operationId": "get_conversations_messages",
    "functionName": "get_conversations_messages",
    "signature": "get_conversations_messages()",
    "return": "MessageConversationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get active message conversations for the logged in user\n    api_response = api_instance.get_conversations_messages()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messages: %s\\n\" % e)"
  },
  "get_conversations_messages_cachedmedia": {
    "operationId": "get_conversations_messages_cachedmedia",
    "functionName": "get_conversations_messages_cachedmedia",
    "signature": "get_conversations_messages_cachedmedia(page_size, page_number, url)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "url",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CachedMediaItemEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nurl = 'url_example' # str | URL to search for (optional)\n\ntry:\n    # Get a list of cached media items\n    api_response = api_instance.get_conversations_messages_cachedmedia(page_size=page_size, page_number=page_number, url=url)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messages_cachedmedia: %s\\n\" % e)"
  },
  "get_conversations_messages_cachedmedia_cached_media_item_id": {
    "operationId": "get_conversations_messages_cachedmedia_cached_media_item_id",
    "functionName": "get_conversations_messages_cachedmedia_cached_media_item_id",
    "signature": "get_conversations_messages_cachedmedia_cached_media_item_id(cached_media_item_id)",
    "parameters": [
      {
        "name": "cached_media_item_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CachedMediaItem",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\ncached_media_item_id = 'cached_media_item_id_example' # str | cachedMediaItemId\n\ntry:\n    # Get a cached media item\n    api_response = api_instance.get_conversations_messages_cachedmedia_cached_media_item_id(cached_media_item_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messages_cachedmedia_cached_media_item_id: %s\\n\" % e)"
  },
  "get_conversations_messaging_facebook_app": {
    "operationId": "get_conversations_messaging_facebook_app",
    "functionName": "get_conversations_messaging_facebook_app",
    "signature": "get_conversations_messaging_facebook_app()",
    "return": "FacebookAppCredentials",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get Genesys Facebook App Id\n    api_response = api_instance.get_conversations_messaging_facebook_app()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_facebook_app: %s\\n\" % e)"
  },
  "get_conversations_messaging_facebook_permissions": {
    "operationId": "get_conversations_messaging_facebook_permissions",
    "functionName": "get_conversations_messaging_facebook_permissions",
    "signature": "get_conversations_messaging_facebook_permissions()",
    "return": "FacebookPermissionEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get a list of Facebook Permissions\n    api_response = api_instance.get_conversations_messaging_facebook_permissions()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_facebook_permissions: %s\\n\" % e)"
  },
  "get_conversations_messaging_integrations": {
    "operationId": "get_conversations_messaging_integrations",
    "functionName": "get_conversations_messaging_integrations",
    "signature": "get_conversations_messaging_integrations(page_size, page_number, expand, supported_content_id, messaging_setting_id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "supported_content_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "messaging_setting_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "MessagingIntegrationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nexpand = ['expand_example'] # list[str] | Expand instructions for the return value. (optional)\nsupported_content_id = 'supported_content_id_example' # str | Filter integrations returned based on the supported content ID (optional)\nmessaging_setting_id = 'messaging_setting_id_example' # str | Filter integrations returned based on the setting ID (optional)\n\ntry:\n    # Get a list of Integrations\n    api_response = api_instance.get_conversations_messaging_integrations(page_size=page_size, page_number=page_number, expand=expand, supported_content_id=supported_content_id, messaging_setting_id=messaging_setting_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_integrations: %s\\n\" % e)"
  },
  "get_conversations_messaging_integrations_facebook": {
    "operationId": "get_conversations_messaging_integrations_facebook",
    "functionName": "get_conversations_messaging_integrations_facebook",
    "signature": "get_conversations_messaging_integrations_facebook(page_size, page_number, expand, supported_content_id, messaging_setting_id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "supported_content_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "messaging_setting_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "FacebookIntegrationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nexpand = 'expand_example' # str | Expand instructions for the return value. (optional)\nsupported_content_id = 'supported_content_id_example' # str | Filter integrations returned based on the supported content ID (optional)\nmessaging_setting_id = 'messaging_setting_id_example' # str | Filter integrations returned based on the setting ID (optional)\n\ntry:\n    # Get a list of Facebook Integrations\n    api_response = api_instance.get_conversations_messaging_integrations_facebook(page_size=page_size, page_number=page_number, expand=expand, supported_content_id=supported_content_id, messaging_setting_id=messaging_setting_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_integrations_facebook: %s\\n\" % e)"
  },
  "get_conversations_messaging_integrations_facebook_integration_id": {
    "operationId": "get_conversations_messaging_integrations_facebook_integration_id",
    "functionName": "get_conversations_messaging_integrations_facebook_integration_id",
    "signature": "get_conversations_messaging_integrations_facebook_integration_id(integration_id, expand)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "FacebookIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | Integration ID\nexpand = 'expand_example' # str | Expand instructions for the return value. (optional)\n\ntry:\n    # Get a Facebook messaging integration\n    api_response = api_instance.get_conversations_messaging_integrations_facebook_integration_id(integration_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_integrations_facebook_integration_id: %s\\n\" % e)"
  },
  "get_conversations_messaging_integrations_instagram": {
    "operationId": "get_conversations_messaging_integrations_instagram",
    "functionName": "get_conversations_messaging_integrations_instagram",
    "signature": "get_conversations_messaging_integrations_instagram(page_size, page_number, expand, supported_content_id, messaging_setting_id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "supported_content_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "messaging_setting_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "InstagramIntegrationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nexpand = 'expand_example' # str | Expand instructions for the return value. (optional)\nsupported_content_id = 'supported_content_id_example' # str | Filter integrations returned based on the supported content ID (optional)\nmessaging_setting_id = 'messaging_setting_id_example' # str | Filter integrations returned based on the setting ID (optional)\n\ntry:\n    # Get a list of Instagram Integrations\n    api_response = api_instance.get_conversations_messaging_integrations_instagram(page_size=page_size, page_number=page_number, expand=expand, supported_content_id=supported_content_id, messaging_setting_id=messaging_setting_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_integrations_instagram: %s\\n\" % e)"
  },
  "get_conversations_messaging_integrations_instagram_integration_id": {
    "operationId": "get_conversations_messaging_integrations_instagram_integration_id",
    "functionName": "get_conversations_messaging_integrations_instagram_integration_id",
    "signature": "get_conversations_messaging_integrations_instagram_integration_id(integration_id, expand)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "InstagramIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | Integration ID\nexpand = 'expand_example' # str | Expand instructions for the return value. (optional)\n\ntry:\n    # Get Instagram messaging integration\n    api_response = api_instance.get_conversations_messaging_integrations_instagram_integration_id(integration_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_integrations_instagram_integration_id: %s\\n\" % e)"
  },
  "get_conversations_messaging_integrations_open": {
    "operationId": "get_conversations_messaging_integrations_open",
    "functionName": "get_conversations_messaging_integrations_open",
    "signature": "get_conversations_messaging_integrations_open(page_size, page_number, expand, supported_content_id, messaging_setting_id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "supported_content_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "messaging_setting_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OpenIntegrationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nexpand = 'expand_example' # str | Expand instructions for the return value. (optional)\nsupported_content_id = 'supported_content_id_example' # str | Filter integrations returned based on the supported content ID (optional)\nmessaging_setting_id = 'messaging_setting_id_example' # str | Filter integrations returned based on the setting ID (optional)\n\ntry:\n    # Get a list of Open messaging integrations\n    api_response = api_instance.get_conversations_messaging_integrations_open(page_size=page_size, page_number=page_number, expand=expand, supported_content_id=supported_content_id, messaging_setting_id=messaging_setting_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_integrations_open: %s\\n\" % e)"
  },
  "get_conversations_messaging_integrations_open_integration_id": {
    "operationId": "get_conversations_messaging_integrations_open_integration_id",
    "functionName": "get_conversations_messaging_integrations_open_integration_id",
    "signature": "get_conversations_messaging_integrations_open_integration_id(integration_id, expand)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OpenIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | Integration ID\nexpand = 'expand_example' # str | Expand instructions for the return value. (optional)\n\ntry:\n    # Get an Open messaging integration\n    api_response = api_instance.get_conversations_messaging_integrations_open_integration_id(integration_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_integrations_open_integration_id: %s\\n\" % e)"
  },
  "get_conversations_messaging_integrations_whatsapp": {
    "operationId": "get_conversations_messaging_integrations_whatsapp",
    "functionName": "get_conversations_messaging_integrations_whatsapp",
    "signature": "get_conversations_messaging_integrations_whatsapp(page_size, page_number, expand, supported_content_id, messaging_setting_id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "supported_content_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "messaging_setting_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WhatsAppIntegrationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nexpand = 'expand_example' # str | Expand instructions for the return value. (optional)\nsupported_content_id = 'supported_content_id_example' # str | Filter integrations returned based on the supported content ID (optional)\nmessaging_setting_id = 'messaging_setting_id_example' # str | Filter integrations returned based on the setting ID (optional)\n\ntry:\n    # Get a list of WhatsApp Integrations\n    api_response = api_instance.get_conversations_messaging_integrations_whatsapp(page_size=page_size, page_number=page_number, expand=expand, supported_content_id=supported_content_id, messaging_setting_id=messaging_setting_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_integrations_whatsapp: %s\\n\" % e)"
  },
  "get_conversations_messaging_integrations_whatsapp_integration_id": {
    "operationId": "get_conversations_messaging_integrations_whatsapp_integration_id",
    "functionName": "get_conversations_messaging_integrations_whatsapp_integration_id",
    "signature": "get_conversations_messaging_integrations_whatsapp_integration_id(integration_id, expand)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WhatsAppIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | Integration ID\nexpand = 'expand_example' # str | Expand instructions for the return value. (optional)\n\ntry:\n    # Get a WhatsApp messaging integration\n    api_response = api_instance.get_conversations_messaging_integrations_whatsapp_integration_id(integration_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_integrations_whatsapp_integration_id: %s\\n\" % e)"
  },
  "get_conversations_messaging_setting": {
    "operationId": "get_conversations_messaging_setting",
    "functionName": "get_conversations_messaging_setting",
    "signature": "get_conversations_messaging_setting(message_setting_id)",
    "parameters": [
      {
        "name": "message_setting_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MessagingSetting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nmessage_setting_id = 'message_setting_id_example' # str | Message Setting ID\n\ntry:\n    # Get a messaging setting\n    api_response = api_instance.get_conversations_messaging_setting(message_setting_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_setting: %s\\n\" % e)"
  },
  "get_conversations_messaging_settings": {
    "operationId": "get_conversations_messaging_settings",
    "functionName": "get_conversations_messaging_settings",
    "signature": "get_conversations_messaging_settings(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "MessagingConfigListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a list of messaging settings\n    api_response = api_instance.get_conversations_messaging_settings(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_settings: %s\\n\" % e)"
  },
  "get_conversations_messaging_settings_default": {
    "operationId": "get_conversations_messaging_settings_default",
    "functionName": "get_conversations_messaging_settings_default",
    "signature": "get_conversations_messaging_settings_default()",
    "return": "MessagingSetting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get the organization's default settings that will be used as the default when creating an integration.\n    api_response = api_instance.get_conversations_messaging_settings_default()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_settings_default: %s\\n\" % e)"
  },
  "get_conversations_messaging_supportedcontent": {
    "operationId": "get_conversations_messaging_supportedcontent",
    "functionName": "get_conversations_messaging_supportedcontent",
    "signature": "get_conversations_messaging_supportedcontent(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "SupportedContentListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a list of Supported Content profiles\n    api_response = api_instance.get_conversations_messaging_supportedcontent(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_supportedcontent: %s\\n\" % e)"
  },
  "get_conversations_messaging_supportedcontent_default": {
    "operationId": "get_conversations_messaging_supportedcontent_default",
    "functionName": "get_conversations_messaging_supportedcontent_default",
    "signature": "get_conversations_messaging_supportedcontent_default()",
    "return": "SupportedContent",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get the organization's default supported content profile that will be used as the default when creating an integration.\n    api_response = api_instance.get_conversations_messaging_supportedcontent_default()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_supportedcontent_default: %s\\n\" % e)"
  },
  "get_conversations_messaging_supportedcontent_supported_content_id": {
    "operationId": "get_conversations_messaging_supportedcontent_supported_content_id",
    "functionName": "get_conversations_messaging_supportedcontent_supported_content_id",
    "signature": "get_conversations_messaging_supportedcontent_supported_content_id(supported_content_id)",
    "parameters": [
      {
        "name": "supported_content_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nsupported_content_id = 'supported_content_id_example' # str | Supported Content ID\n\ntry:\n    # Get a supported content profile\n    api_response = api_instance.get_conversations_messaging_supportedcontent_supported_content_id(supported_content_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_supportedcontent_supported_content_id: %s\\n\" % e)"
  },
  "get_conversations_messaging_threadingtimeline": {
    "operationId": "get_conversations_messaging_threadingtimeline",
    "functionName": "get_conversations_messaging_threadingtimeline",
    "signature": "get_conversations_messaging_threadingtimeline()",
    "return": "ConversationThreadingWindow",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get conversation threading window timeline for each messaging type\n    api_response = api_instance.get_conversations_messaging_threadingtimeline()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_messaging_threadingtimeline: %s\\n\" % e)"
  },
  "get_conversations_screenshare_participant_communication_wrapup": {
    "operationId": "get_conversations_screenshare_participant_communication_wrapup",
    "functionName": "get_conversations_screenshare_participant_communication_wrapup",
    "signature": "get_conversations_screenshare_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation communication. \n    api_response = api_instance.get_conversations_screenshare_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_screenshare_participant_communication_wrapup: %s\\n\" % e)"
  },
  "get_conversations_settings": {
    "operationId": "get_conversations_settings",
    "functionName": "get_conversations_settings",
    "signature": "get_conversations_settings()",
    "return": "Settings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\n\ntry:\n    # Get Settings\n    api_response = api_instance.get_conversations_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_settings: %s\\n\" % e)"
  },
  "get_conversations_social_participant_communication_wrapup": {
    "operationId": "get_conversations_social_participant_communication_wrapup",
    "functionName": "get_conversations_social_participant_communication_wrapup",
    "signature": "get_conversations_social_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation communication. \n    api_response = api_instance.get_conversations_social_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_social_participant_communication_wrapup: %s\\n\" % e)"
  },
  "get_conversations_video_details": {
    "operationId": "get_conversations_video_details",
    "functionName": "get_conversations_video_details",
    "signature": "get_conversations_video_details(conference_id)",
    "parameters": [
      {
        "name": "conference_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "VideoConferenceDetails",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconference_id = 'conference_id_example' # str | conferenceId\n\ntry:\n    # Get video conference details (e.g. the current number of active participants).\n    api_response = api_instance.get_conversations_video_details(conference_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_video_details: %s\\n\" % e)"
  },
  "get_conversations_video_participant_communication_wrapup": {
    "operationId": "get_conversations_video_participant_communication_wrapup",
    "functionName": "get_conversations_video_participant_communication_wrapup",
    "signature": "get_conversations_video_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nprovisional = False # bool | Indicates if the wrap-up code is provisional. (optional) (default to False)\n\ntry:\n    # Get the wrap-up for this conversation communication. \n    api_response = api_instance.get_conversations_video_participant_communication_wrapup(conversation_id, participant_id, communication_id, provisional=provisional)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_video_participant_communication_wrapup: %s\\n\" % e)"
  },
  "get_conversations_videos_meeting": {
    "operationId": "get_conversations_videos_meeting",
    "functionName": "get_conversations_videos_meeting",
    "signature": "get_conversations_videos_meeting(meeting_id)",
    "parameters": [
      {
        "name": "meeting_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MeetingIdRecord",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nmeeting_id = 'meeting_id_example' # str | meetingId\n\ntry:\n    # Gets a record for a given meetingId\n    api_response = api_instance.get_conversations_videos_meeting(meeting_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->get_conversations_videos_meeting: %s\\n\" % e)"
  },
  "patch_conversation_participant": {
    "operationId": "patch_conversation_participant",
    "functionName": "patch_conversation_participant",
    "signature": "patch_conversation_participant(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\nbody = PureCloudPlatformClientV2.MediaParticipantRequest() # MediaParticipantRequest | Update request\n\ntry:\n    # Update a participant.\n    api_instance.patch_conversation_participant(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversation_participant: %s\\n\" % e)"
  },
  "patch_conversation_participant_attributes": {
    "operationId": "patch_conversation_participant_attributes",
    "functionName": "patch_conversation_participant_attributes",
    "signature": "patch_conversation_participant_attributes(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\nbody = PureCloudPlatformClientV2.ParticipantAttributes() # ParticipantAttributes | Participant attributes\n\ntry:\n    # Update the attributes on a conversation participant.\n    api_instance.patch_conversation_participant_attributes(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversation_participant_attributes: %s\\n\" % e)"
  },
  "patch_conversation_secureattributes": {
    "operationId": "patch_conversation_secureattributes",
    "functionName": "patch_conversation_secureattributes",
    "signature": "patch_conversation_secureattributes(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConversationSecureAttributes",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nbody = PureCloudPlatformClientV2.ConversationSecureAttributes() # ConversationSecureAttributes | Conversation Secure Attributes\n\ntry:\n    # Update the secure attributes on a conversation.\n    api_response = api_instance.patch_conversation_secureattributes(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversation_secureattributes: %s\\n\" % e)"
  },
  "patch_conversation_utilizationlabel": {
    "operationId": "patch_conversation_utilizationlabel",
    "functionName": "patch_conversation_utilizationlabel",
    "signature": "patch_conversation_utilizationlabel(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConversationUtilizationLabelUpdate",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nbody = PureCloudPlatformClientV2.ConversationUtilizationLabelUpdate() # ConversationUtilizationLabelUpdate | Conversation Utilization Label\n\ntry:\n    # Update the utilization label on a conversation. When there is no value provided, the system default label is applied\n    api_response = api_instance.patch_conversation_utilizationlabel(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversation_utilizationlabel: %s\\n\" % e)"
  },
  "patch_conversations_aftercallwork_conversation_id_participant_communication": {
    "operationId": "patch_conversations_aftercallwork_conversation_id_participant_communication",
    "functionName": "patch_conversations_aftercallwork_conversation_id_participant_communication",
    "signature": "patch_conversations_aftercallwork_conversation_id_participant_communication(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AfterCallWorkUpdate",
        "required": "true"
      }
    ],
    "return": "AfterCallWorkUpdate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.AfterCallWorkUpdate() # AfterCallWorkUpdate | AfterCallWorkUpdate\n\ntry:\n    # Update after-call work for this conversation communication.\n    api_response = api_instance.patch_conversations_aftercallwork_conversation_id_participant_communication(conversation_id, participant_id, communication_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_aftercallwork_conversation_id_participant_communication: %s\\n\" % e)"
  },
  "patch_conversations_call": {
    "operationId": "patch_conversations_call",
    "functionName": "patch_conversations_call",
    "signature": "patch_conversations_call(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.Conversation() # Conversation | Conversation\n\ntry:\n    # Update a conversation by setting its recording state, merging in other conversations to create a conference, or disconnecting all of the participants\n    api_response = api_instance.patch_conversations_call(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_call: %s\\n\" % e)"
  },
  "patch_conversations_call_participant": {
    "operationId": "patch_conversations_call_participant",
    "functionName": "patch_conversations_call_participant",
    "signature": "patch_conversations_call_participant(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.MediaParticipantRequest() # MediaParticipantRequest | Participant request\n\ntry:\n    # Update conversation participant\n    api_instance.patch_conversations_call_participant(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_call_participant: %s\\n\" % e)"
  },
  "patch_conversations_call_participant_attributes": {
    "operationId": "patch_conversations_call_participant_attributes",
    "functionName": "patch_conversations_call_participant_attributes",
    "signature": "patch_conversations_call_participant_attributes(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "true"
      }
    ],
    "return": "ParticipantAttributes",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.ParticipantAttributes() # ParticipantAttributes | Participant attributes\n\ntry:\n    # Update the attributes on a conversation participant.\n    api_response = api_instance.patch_conversations_call_participant_attributes(conversation_id, participant_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_call_participant_attributes: %s\\n\" % e)"
  },
  "patch_conversations_call_participant_communication": {
    "operationId": "patch_conversations_call_participant_communication",
    "functionName": "patch_conversations_call_participant_communication",
    "signature": "patch_conversations_call_participant_communication(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.MediaParticipantRequest() # MediaParticipantRequest | Participant\n\ntry:\n    # Update conversation participant's communication by disconnecting it.\n    api_response = api_instance.patch_conversations_call_participant_communication(conversation_id, participant_id, communication_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_call_participant_communication: %s\\n\" % e)"
  },
  "patch_conversations_call_participant_consult": {
    "operationId": "patch_conversations_call_participant_consult",
    "functionName": "patch_conversations_call_participant_consult",
    "signature": "patch_conversations_call_participant_consult(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConsultTransferUpdate",
        "required": "true"
      }
    ],
    "return": "ConsultTransferResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.ConsultTransferUpdate() # ConsultTransferUpdate | new speak to\n\ntry:\n    # Change who can speak\n    api_response = api_instance.patch_conversations_call_participant_consult(conversation_id, participant_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_call_participant_consult: %s\\n\" % e)"
  },
  "patch_conversations_callback": {
    "operationId": "patch_conversations_callback",
    "functionName": "patch_conversations_callback",
    "signature": "patch_conversations_callback(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.Conversation() # Conversation | Conversation\n\ntry:\n    # Update a conversation by disconnecting all of the participants\n    api_response = api_instance.patch_conversations_callback(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_callback: %s\\n\" % e)"
  },
  "patch_conversations_callback_participant": {
    "operationId": "patch_conversations_callback_participant",
    "functionName": "patch_conversations_callback_participant",
    "signature": "patch_conversations_callback_participant(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.MediaParticipantRequest() # MediaParticipantRequest | Participant\n\ntry:\n    # Update conversation participant\n    api_instance.patch_conversations_callback_participant(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_callback_participant: %s\\n\" % e)"
  },
  "patch_conversations_callback_participant_attributes": {
    "operationId": "patch_conversations_callback_participant_attributes",
    "functionName": "patch_conversations_callback_participant_attributes",
    "signature": "patch_conversations_callback_participant_attributes(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "true"
      }
    ],
    "return": "ParticipantAttributes",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.ParticipantAttributes() # ParticipantAttributes | Attributes\n\ntry:\n    # Update the attributes on a conversation participant.\n    api_response = api_instance.patch_conversations_callback_participant_attributes(conversation_id, participant_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_callback_participant_attributes: %s\\n\" % e)"
  },
  "patch_conversations_callback_participant_communication": {
    "operationId": "patch_conversations_callback_participant_communication",
    "functionName": "patch_conversations_callback_participant_communication",
    "signature": "patch_conversations_callback_participant_communication(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.MediaParticipantRequest() # MediaParticipantRequest | Participant\n\ntry:\n    # Update conversation participant's communication by disconnecting it.\n    api_response = api_instance.patch_conversations_callback_participant_communication(conversation_id, participant_id, communication_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_callback_participant_communication: %s\\n\" % e)"
  },
  "patch_conversations_callbacks": {
    "operationId": "patch_conversations_callbacks",
    "functionName": "patch_conversations_callbacks",
    "signature": "patch_conversations_callbacks(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PatchCallbackRequest",
        "required": "true"
      }
    ],
    "return": "PatchCallbackResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.PatchCallbackRequest() # PatchCallbackRequest | PatchCallbackRequest\n\ntry:\n    # Update a scheduled callback\n    api_response = api_instance.patch_conversations_callbacks(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_callbacks: %s\\n\" % e)"
  },
  "patch_conversations_chat": {
    "operationId": "patch_conversations_chat",
    "functionName": "patch_conversations_chat",
    "signature": "patch_conversations_chat(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.Conversation() # Conversation | Conversation\n\ntry:\n    # Update a conversation by disconnecting all of the participants\n    api_response = api_instance.patch_conversations_chat(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_chat: %s\\n\" % e)"
  },
  "patch_conversations_chat_participant": {
    "operationId": "patch_conversations_chat_participant",
    "functionName": "patch_conversations_chat_participant",
    "signature": "patch_conversations_chat_participant(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.MediaParticipantRequest() # MediaParticipantRequest | Update request\n\ntry:\n    # Update conversation participant\n    api_instance.patch_conversations_chat_participant(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_chat_participant: %s\\n\" % e)"
  },
  "patch_conversations_chat_participant_attributes": {
    "operationId": "patch_conversations_chat_participant_attributes",
    "functionName": "patch_conversations_chat_participant_attributes",
    "signature": "patch_conversations_chat_participant_attributes(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "true"
      }
    ],
    "return": "ParticipantAttributes",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.ParticipantAttributes() # ParticipantAttributes | Participant attributes\n\ntry:\n    # Update the attributes on a conversation participant.\n    api_response = api_instance.patch_conversations_chat_participant_attributes(conversation_id, participant_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_chat_participant_attributes: %s\\n\" % e)"
  },
  "patch_conversations_chat_participant_communication": {
    "operationId": "patch_conversations_chat_participant_communication",
    "functionName": "patch_conversations_chat_participant_communication",
    "signature": "patch_conversations_chat_participant_communication(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.MediaParticipantRequest() # MediaParticipantRequest | Participant\n\ntry:\n    # Update conversation participant's communication by disconnecting it.\n    api_response = api_instance.patch_conversations_chat_participant_communication(conversation_id, participant_id, communication_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_chat_participant_communication: %s\\n\" % e)"
  },
  "patch_conversations_cobrowsesession": {
    "operationId": "patch_conversations_cobrowsesession",
    "functionName": "patch_conversations_cobrowsesession",
    "signature": "patch_conversations_cobrowsesession(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.Conversation() # Conversation | Conversation\n\ntry:\n    # Update a conversation by disconnecting all of the participants\n    api_response = api_instance.patch_conversations_cobrowsesession(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_cobrowsesession: %s\\n\" % e)"
  },
  "patch_conversations_cobrowsesession_participant": {
    "operationId": "patch_conversations_cobrowsesession_participant",
    "functionName": "patch_conversations_cobrowsesession_participant",
    "signature": "patch_conversations_cobrowsesession_participant(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.MediaParticipantRequest() # MediaParticipantRequest |  (optional)\n\ntry:\n    # Update conversation participant\n    api_instance.patch_conversations_cobrowsesession_participant(conversation_id, participant_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_cobrowsesession_participant: %s\\n\" % e)"
  },
  "patch_conversations_cobrowsesession_participant_attributes": {
    "operationId": "patch_conversations_cobrowsesession_participant_attributes",
    "functionName": "patch_conversations_cobrowsesession_participant_attributes",
    "signature": "patch_conversations_cobrowsesession_participant_attributes(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "false"
      }
    ],
    "return": "ParticipantAttributes",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.ParticipantAttributes() # ParticipantAttributes |  (optional)\n\ntry:\n    # Update the attributes on a conversation participant.\n    api_response = api_instance.patch_conversations_cobrowsesession_participant_attributes(conversation_id, participant_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_cobrowsesession_participant_attributes: %s\\n\" % e)"
  },
  "patch_conversations_cobrowsesession_participant_communication": {
    "operationId": "patch_conversations_cobrowsesession_participant_communication",
    "functionName": "patch_conversations_cobrowsesession_participant_communication",
    "signature": "patch_conversations_cobrowsesession_participant_communication(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.MediaParticipantRequest() # MediaParticipantRequest | Participant\n\ntry:\n    # Update conversation participant's communication by disconnecting it.\n    api_response = api_instance.patch_conversations_cobrowsesession_participant_communication(conversation_id, participant_id, communication_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_cobrowsesession_participant_communication: %s\\n\" % e)"
  },
  "patch_conversations_email": {
    "operationId": "patch_conversations_email",
    "functionName": "patch_conversations_email",
    "signature": "patch_conversations_email(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.Conversation() # Conversation | Conversation\n\ntry:\n    # Update a conversation by disconnecting all of the participants\n    api_response = api_instance.patch_conversations_email(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_email: %s\\n\" % e)"
  },
  "patch_conversations_email_messages_draft": {
    "operationId": "patch_conversations_email_messages_draft",
    "functionName": "patch_conversations_email_messages_draft",
    "signature": "patch_conversations_email_messages_draft(conversation_id, auto_fill, discard, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "auto_fill",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "discard",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "DraftManipulationRequest",
        "required": "false"
      }
    ],
    "return": "EmailMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nauto_fill = True # bool | autoFill (optional)\ndiscard = True # bool | discard (optional)\nbody = PureCloudPlatformClientV2.DraftManipulationRequest() # DraftManipulationRequest | Draft Manipulation Request (optional)\n\ntry:\n    # Reset conversation draft to its initial state and/or auto-fill draft content\n    api_response = api_instance.patch_conversations_email_messages_draft(conversation_id, auto_fill=auto_fill, discard=discard, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_email_messages_draft: %s\\n\" % e)"
  },
  "patch_conversations_email_participant": {
    "operationId": "patch_conversations_email_participant",
    "functionName": "patch_conversations_email_participant",
    "signature": "patch_conversations_email_participant(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.MediaParticipantRequest() # MediaParticipantRequest | Update request\n\ntry:\n    # Update conversation participant\n    api_instance.patch_conversations_email_participant(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_email_participant: %s\\n\" % e)"
  },
  "patch_conversations_email_participant_attributes": {
    "operationId": "patch_conversations_email_participant_attributes",
    "functionName": "patch_conversations_email_participant_attributes",
    "signature": "patch_conversations_email_participant_attributes(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "true"
      }
    ],
    "return": "ParticipantAttributes",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.ParticipantAttributes() # ParticipantAttributes | Participant attributes\n\ntry:\n    # Update the attributes on a conversation participant.\n    api_response = api_instance.patch_conversations_email_participant_attributes(conversation_id, participant_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_email_participant_attributes: %s\\n\" % e)"
  },
  "patch_conversations_email_participant_communication": {
    "operationId": "patch_conversations_email_participant_communication",
    "functionName": "patch_conversations_email_participant_communication",
    "signature": "patch_conversations_email_participant_communication(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.MediaParticipantRequest() # MediaParticipantRequest | Participant\n\ntry:\n    # Update conversation participant's communication by disconnecting it.\n    api_response = api_instance.patch_conversations_email_participant_communication(conversation_id, participant_id, communication_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_email_participant_communication: %s\\n\" % e)"
  },
  "patch_conversations_message": {
    "operationId": "patch_conversations_message",
    "functionName": "patch_conversations_message",
    "signature": "patch_conversations_message(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.Conversation() # Conversation | Conversation\n\ntry:\n    # Update a conversation by disconnecting all of the participants\n    api_response = api_instance.patch_conversations_message(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_message: %s\\n\" % e)"
  },
  "patch_conversations_message_participant": {
    "operationId": "patch_conversations_message_participant",
    "functionName": "patch_conversations_message_participant",
    "signature": "patch_conversations_message_participant(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.MediaParticipantRequest() # MediaParticipantRequest |  (optional)\n\ntry:\n    # Update conversation participant\n    api_instance.patch_conversations_message_participant(conversation_id, participant_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_message_participant: %s\\n\" % e)"
  },
  "patch_conversations_message_participant_attributes": {
    "operationId": "patch_conversations_message_participant_attributes",
    "functionName": "patch_conversations_message_participant_attributes",
    "signature": "patch_conversations_message_participant_attributes(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "false"
      }
    ],
    "return": "ParticipantAttributes",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.ParticipantAttributes() # ParticipantAttributes |  (optional)\n\ntry:\n    # Update the attributes on a conversation participant.\n    api_response = api_instance.patch_conversations_message_participant_attributes(conversation_id, participant_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_message_participant_attributes: %s\\n\" % e)"
  },
  "patch_conversations_message_participant_communication": {
    "operationId": "patch_conversations_message_participant_communication",
    "functionName": "patch_conversations_message_participant_communication",
    "signature": "patch_conversations_message_participant_communication(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.MediaParticipantRequest() # MediaParticipantRequest | Participant\n\ntry:\n    # Update conversation participant's communication by disconnecting it.\n    api_response = api_instance.patch_conversations_message_participant_communication(conversation_id, participant_id, communication_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_message_participant_communication: %s\\n\" % e)"
  },
  "patch_conversations_messaging_integrations_facebook_integration_id": {
    "operationId": "patch_conversations_messaging_integrations_facebook_integration_id",
    "functionName": "patch_conversations_messaging_integrations_facebook_integration_id",
    "signature": "patch_conversations_messaging_integrations_facebook_integration_id(integration_id, body)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "FacebookIntegrationUpdateRequest",
        "required": "true"
      }
    ],
    "return": "FacebookIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | Integration ID\nbody = PureCloudPlatformClientV2.FacebookIntegrationUpdateRequest() # FacebookIntegrationUpdateRequest | FacebookIntegrationUpdateRequest\n\ntry:\n    # Update Facebook messaging integration\n    api_response = api_instance.patch_conversations_messaging_integrations_facebook_integration_id(integration_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_messaging_integrations_facebook_integration_id: %s\\n\" % e)"
  },
  "patch_conversations_messaging_integrations_instagram_integration_id": {
    "operationId": "patch_conversations_messaging_integrations_instagram_integration_id",
    "functionName": "patch_conversations_messaging_integrations_instagram_integration_id",
    "signature": "patch_conversations_messaging_integrations_instagram_integration_id(integration_id, body)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "InstagramIntegrationUpdateRequest",
        "required": "true"
      }
    ],
    "return": "InstagramIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | Integration ID\nbody = PureCloudPlatformClientV2.InstagramIntegrationUpdateRequest() # InstagramIntegrationUpdateRequest | InstagramIntegrationUpdateRequest\n\ntry:\n    # Update Instagram messaging integration\n    api_response = api_instance.patch_conversations_messaging_integrations_instagram_integration_id(integration_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_messaging_integrations_instagram_integration_id: %s\\n\" % e)"
  },
  "patch_conversations_messaging_integrations_open_integration_id": {
    "operationId": "patch_conversations_messaging_integrations_open_integration_id",
    "functionName": "patch_conversations_messaging_integrations_open_integration_id",
    "signature": "patch_conversations_messaging_integrations_open_integration_id(integration_id, body)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OpenIntegrationUpdateRequest",
        "required": "true"
      }
    ],
    "return": "OpenIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | Integration ID\nbody = PureCloudPlatformClientV2.OpenIntegrationUpdateRequest() # OpenIntegrationUpdateRequest | OpenIntegrationUpdateRequest\n\ntry:\n    # Update an Open messaging integration\n    api_response = api_instance.patch_conversations_messaging_integrations_open_integration_id(integration_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_messaging_integrations_open_integration_id: %s\\n\" % e)"
  },
  "patch_conversations_messaging_integrations_whatsapp_embeddedsignup_integration_id": {
    "operationId": "patch_conversations_messaging_integrations_whatsapp_embeddedsignup_integration_id",
    "functionName": "patch_conversations_messaging_integrations_whatsapp_embeddedsignup_integration_id",
    "signature": "patch_conversations_messaging_integrations_whatsapp_embeddedsignup_integration_id(integration_id, body)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WhatsAppEmbeddedSignupIntegrationActivationRequest",
        "required": "true"
      }
    ],
    "return": "WhatsAppIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | Integration ID\nbody = PureCloudPlatformClientV2.WhatsAppEmbeddedSignupIntegrationActivationRequest() # WhatsAppEmbeddedSignupIntegrationActivationRequest | WhatsAppEmbeddedSignupIntegrationActivationRequest\n\ntry:\n    # Activate a WhatsApp messaging integration created using the WhatsApp embedded signup flow\n    api_response = api_instance.patch_conversations_messaging_integrations_whatsapp_embeddedsignup_integration_id(integration_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_messaging_integrations_whatsapp_embeddedsignup_integration_id: %s\\n\" % e)"
  },
  "patch_conversations_messaging_integrations_whatsapp_integration_id": {
    "operationId": "patch_conversations_messaging_integrations_whatsapp_integration_id",
    "functionName": "patch_conversations_messaging_integrations_whatsapp_integration_id",
    "signature": "patch_conversations_messaging_integrations_whatsapp_integration_id(integration_id, body)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WhatsAppIntegrationUpdateRequest",
        "required": "true"
      }
    ],
    "return": "WhatsAppIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | Integration ID\nbody = PureCloudPlatformClientV2.WhatsAppIntegrationUpdateRequest() # WhatsAppIntegrationUpdateRequest | WhatsAppIntegrationUpdateRequest\n\ntry:\n    # Update a WhatsApp messaging integration\n    api_response = api_instance.patch_conversations_messaging_integrations_whatsapp_integration_id(integration_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_messaging_integrations_whatsapp_integration_id: %s\\n\" % e)"
  },
  "patch_conversations_messaging_setting": {
    "operationId": "patch_conversations_messaging_setting",
    "functionName": "patch_conversations_messaging_setting",
    "signature": "patch_conversations_messaging_setting(message_setting_id, body)",
    "parameters": [
      {
        "name": "message_setting_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MessagingSettingPatchRequest",
        "required": "true"
      }
    ],
    "return": "MessagingSetting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nmessage_setting_id = 'message_setting_id_example' # str | Message Setting ID\nbody = PureCloudPlatformClientV2.MessagingSettingPatchRequest() # MessagingSettingPatchRequest | MessagingSetting\n\ntry:\n    # Update a messaging setting\n    api_response = api_instance.patch_conversations_messaging_setting(message_setting_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_messaging_setting: %s\\n\" % e)"
  },
  "patch_conversations_messaging_supportedcontent_supported_content_id": {
    "operationId": "patch_conversations_messaging_supportedcontent_supported_content_id",
    "functionName": "patch_conversations_messaging_supportedcontent_supported_content_id",
    "signature": "patch_conversations_messaging_supportedcontent_supported_content_id(supported_content_id, body)",
    "parameters": [
      {
        "name": "supported_content_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SupportedContent",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nsupported_content_id = 'supported_content_id_example' # str | Supported Content ID\nbody = PureCloudPlatformClientV2.SupportedContent() # SupportedContent | SupportedContent\n\ntry:\n    # Update a supported content profile\n    api_response = api_instance.patch_conversations_messaging_supportedcontent_supported_content_id(supported_content_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_messaging_supportedcontent_supported_content_id: %s\\n\" % e)"
  },
  "patch_conversations_settings": {
    "operationId": "patch_conversations_settings",
    "functionName": "patch_conversations_settings",
    "signature": "patch_conversations_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Settings",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.Settings() # Settings | Settings\n\ntry:\n    # Update Settings\n    api_instance.patch_conversations_settings(body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->patch_conversations_settings: %s\\n\" % e)"
  },
  "post_conversation_assign": {
    "operationId": "post_conversation_assign",
    "functionName": "post_conversation_assign",
    "signature": "post_conversation_assign(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConversationUser",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nbody = PureCloudPlatformClientV2.ConversationUser() # ConversationUser | Targeted user\n\ntry:\n    # Attempts to manually assign a specified conversation to a specified user.  Ignores bullseye ring, PAR score, skills, and languages.\n    api_response = api_instance.post_conversation_assign(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversation_assign: %s\\n\" % e)"
  },
  "post_conversation_barge": {
    "operationId": "post_conversation_barge",
    "functionName": "post_conversation_barge",
    "signature": "post_conversation_barge(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\n\ntry:\n    # Barge a conversation creating a barged in conference of connected participants.\n    api_instance.post_conversation_barge(conversation_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversation_barge: %s\\n\" % e)"
  },
  "post_conversation_cobrowse": {
    "operationId": "post_conversation_cobrowse",
    "functionName": "post_conversation_cobrowse",
    "signature": "post_conversation_cobrowse(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CobrowseWebMessagingSession",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\n\ntry:\n    # Creates a cobrowse session. Requires \\\"conversation:cobrowse:add\\\" (for web messaging) or \\\"conversation:cobrowsevoice:add\\\" permission.\n    api_response = api_instance.post_conversation_cobrowse(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversation_cobrowse: %s\\n\" % e)"
  },
  "post_conversation_disconnect": {
    "operationId": "post_conversation_disconnect",
    "functionName": "post_conversation_disconnect",
    "signature": "post_conversation_disconnect(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\n\ntry:\n    # Performs a full conversation teardown. Issues disconnect requests for any connected media. Applies a system wrap-up code to any participants that are pending wrap-up. This is not intended to be the normal way of ending interactions but is available in the event of problems with the application to allow a resynchronization of state across all components. It is recommended that users submit a support case if they are relying on this endpoint systematically as there is likely something that needs investigation.\n    api_response = api_instance.post_conversation_disconnect(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversation_disconnect: %s\\n\" % e)"
  },
  "post_conversation_participant_callbacks": {
    "operationId": "post_conversation_participant_callbacks",
    "functionName": "post_conversation_participant_callbacks",
    "signature": "post_conversation_participant_callbacks(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateCallbackOnConversationCommand",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\nbody = PureCloudPlatformClientV2.CreateCallbackOnConversationCommand() # CreateCallbackOnConversationCommand |  (optional)\n\ntry:\n    # Create a new callback for the specified participant on the conversation.\n    api_instance.post_conversation_participant_callbacks(conversation_id, participant_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversation_participant_callbacks: %s\\n\" % e)"
  },
  "post_conversation_participant_digits": {
    "operationId": "post_conversation_participant_digits",
    "functionName": "post_conversation_participant_digits",
    "signature": "post_conversation_participant_digits(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Digits",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\nbody = PureCloudPlatformClientV2.Digits() # Digits | Digits (optional)\n\ntry:\n    # Sends DTMF to the participant\n    api_instance.post_conversation_participant_digits(conversation_id, participant_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversation_participant_digits: %s\\n\" % e)"
  },
  "post_conversation_participant_replace": {
    "operationId": "post_conversation_participant_replace",
    "functionName": "post_conversation_participant_replace",
    "signature": "post_conversation_participant_replace(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\nbody = PureCloudPlatformClientV2.TransferRequest() # TransferRequest | Transfer request\n\ntry:\n    # Replace this participant with the specified user and/or address\n    api_instance.post_conversation_participant_replace(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversation_participant_replace: %s\\n\" % e)"
  },
  "post_conversation_participant_replace_agent": {
    "operationId": "post_conversation_participant_replace_agent",
    "functionName": "post_conversation_participant_replace_agent",
    "signature": "post_conversation_participant_replace_agent(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferToAgentRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\nbody = PureCloudPlatformClientV2.TransferToAgentRequest() # TransferToAgentRequest | Transfer request\n\ntry:\n    # Replace this participant with the specified agent\n    api_instance.post_conversation_participant_replace_agent(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversation_participant_replace_agent: %s\\n\" % e)"
  },
  "post_conversation_participant_replace_external": {
    "operationId": "post_conversation_participant_replace_external",
    "functionName": "post_conversation_participant_replace_external",
    "signature": "post_conversation_participant_replace_external(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferToExternalRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\nbody = PureCloudPlatformClientV2.TransferToExternalRequest() # TransferToExternalRequest | Transfer request\n\ntry:\n    # Replace this participant with the an external contact\n    api_instance.post_conversation_participant_replace_external(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversation_participant_replace_external: %s\\n\" % e)"
  },
  "post_conversation_participant_replace_queue": {
    "operationId": "post_conversation_participant_replace_queue",
    "functionName": "post_conversation_participant_replace_queue",
    "signature": "post_conversation_participant_replace_queue(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferToQueueRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\nbody = PureCloudPlatformClientV2.TransferToQueueRequest() # TransferToQueueRequest | Transfer request\n\ntry:\n    # Replace this participant with the specified queue\n    api_instance.post_conversation_participant_replace_queue(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversation_participant_replace_queue: %s\\n\" % e)"
  },
  "post_conversation_participant_secureivrsessions": {
    "operationId": "post_conversation_participant_secureivrsessions",
    "functionName": "post_conversation_participant_secureivrsessions",
    "signature": "post_conversation_participant_secureivrsessions(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateSecureSession",
        "required": "false"
      }
    ],
    "return": "SecureSession",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\nbody = PureCloudPlatformClientV2.CreateSecureSession() # CreateSecureSession |  (optional)\n\ntry:\n    # Create secure IVR session. Only a participant in the conversation can invoke a secure IVR.\n    api_response = api_instance.post_conversation_participant_secureivrsessions(conversation_id, participant_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversation_participant_secureivrsessions: %s\\n\" % e)"
  },
  "post_conversation_summary_feedback": {
    "operationId": "post_conversation_summary_feedback",
    "functionName": "post_conversation_summary_feedback",
    "signature": "post_conversation_summary_feedback(conversation_id, summary_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "summary_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "FeedbackAddRequest",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\nsummary_id = 'summary_id_example' # str | Summary ID\nbody = PureCloudPlatformClientV2.FeedbackAddRequest() # FeedbackAddRequest |  (optional)\n\ntry:\n    # Submit feedback for the summary.\n    api_instance.post_conversation_summary_feedback(conversation_id, summary_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversation_summary_feedback: %s\\n\" % e)"
  },
  "post_conversations_call": {
    "operationId": "post_conversations_call",
    "functionName": "post_conversations_call",
    "signature": "post_conversations_call(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CallCommand",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.CallCommand() # CallCommand | Conversation\n\ntry:\n    # Place a new call as part of a callback conversation.\n    api_response = api_instance.post_conversations_call(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_call: %s\\n\" % e)"
  },
  "post_conversations_call_participant_barge": {
    "operationId": "post_conversations_call_participant_barge",
    "functionName": "post_conversations_call_participant_barge",
    "signature": "post_conversations_call_participant_barge(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\n\ntry:\n    # Barge a given participant's call creating a barged in conference of connected participants.\n    api_instance.post_conversations_call_participant_barge(conversation_id, participant_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_call_participant_barge: %s\\n\" % e)"
  },
  "post_conversations_call_participant_coach": {
    "operationId": "post_conversations_call_participant_coach",
    "functionName": "post_conversations_call_participant_coach",
    "signature": "post_conversations_call_participant_coach(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\n\ntry:\n    # Listen in on the conversation from the point of view of a given participant while speaking to just the given participant.\n    api_instance.post_conversations_call_participant_coach(conversation_id, participant_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_call_participant_coach: %s\\n\" % e)"
  },
  "post_conversations_call_participant_communication_wrapup": {
    "operationId": "post_conversations_call_participant_communication_wrapup",
    "functionName": "post_conversations_call_participant_communication_wrapup",
    "signature": "post_conversations_call_participant_communication_wrapup(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WrapupInput",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.WrapupInput() # WrapupInput | Wrap-up (optional)\n\ntry:\n    # Apply wrap-up for this conversation communication\n    api_instance.post_conversations_call_participant_communication_wrapup(conversation_id, participant_id, communication_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_call_participant_communication_wrapup: %s\\n\" % e)"
  },
  "post_conversations_call_participant_consult": {
    "operationId": "post_conversations_call_participant_consult",
    "functionName": "post_conversations_call_participant_consult",
    "signature": "post_conversations_call_participant_consult(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConsultTransfer",
        "required": "true"
      }
    ],
    "return": "ConsultTransferResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.ConsultTransfer() # ConsultTransfer | Destination address & initial speak to\n\ntry:\n    # Initiate and update consult transfer\n    api_response = api_instance.post_conversations_call_participant_consult(conversation_id, participant_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_call_participant_consult: %s\\n\" % e)"
  },
  "post_conversations_call_participant_consult_agent": {
    "operationId": "post_conversations_call_participant_consult_agent",
    "functionName": "post_conversations_call_participant_consult_agent",
    "signature": "post_conversations_call_participant_consult_agent(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConsultTransferToAgent",
        "required": "true"
      }
    ],
    "return": "ConsultTransferResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.ConsultTransferToAgent() # ConsultTransferToAgent | Destination agent & initial speak to\n\ntry:\n    # Initiate a consult transfer to an agent\n    api_response = api_instance.post_conversations_call_participant_consult_agent(conversation_id, participant_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_call_participant_consult_agent: %s\\n\" % e)"
  },
  "post_conversations_call_participant_consult_external": {
    "operationId": "post_conversations_call_participant_consult_external",
    "functionName": "post_conversations_call_participant_consult_external",
    "signature": "post_conversations_call_participant_consult_external(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConsultTransferToExternal",
        "required": "true"
      }
    ],
    "return": "ConsultTransferResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.ConsultTransferToExternal() # ConsultTransferToExternal | Destination address & initial speak to\n\ntry:\n    # Initiate a consult transfer to an external contact\n    api_response = api_instance.post_conversations_call_participant_consult_external(conversation_id, participant_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_call_participant_consult_external: %s\\n\" % e)"
  },
  "post_conversations_call_participant_consult_queue": {
    "operationId": "post_conversations_call_participant_consult_queue",
    "functionName": "post_conversations_call_participant_consult_queue",
    "signature": "post_conversations_call_participant_consult_queue(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConsultTransferToQueue",
        "required": "true"
      }
    ],
    "return": "ConsultTransferResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.ConsultTransferToQueue() # ConsultTransferToQueue | Destination queue & initial speak to\n\ntry:\n    # Initiate a consult transfer to a queue\n    api_response = api_instance.post_conversations_call_participant_consult_queue(conversation_id, participant_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_call_participant_consult_queue: %s\\n\" % e)"
  },
  "post_conversations_call_participant_monitor": {
    "operationId": "post_conversations_call_participant_monitor",
    "functionName": "post_conversations_call_participant_monitor",
    "signature": "post_conversations_call_participant_monitor(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\n\ntry:\n    # Listen in on the conversation from the point of view of a given participant.\n    api_instance.post_conversations_call_participant_monitor(conversation_id, participant_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_call_participant_monitor: %s\\n\" % e)"
  },
  "post_conversations_call_participant_replace": {
    "operationId": "post_conversations_call_participant_replace",
    "functionName": "post_conversations_call_participant_replace",
    "signature": "post_conversations_call_participant_replace(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.TransferRequest() # TransferRequest | Transfer request\n\ntry:\n    # Replace this participant with the specified user and/or address\n    api_instance.post_conversations_call_participant_replace(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_call_participant_replace: %s\\n\" % e)"
  },
  "post_conversations_call_participants": {
    "operationId": "post_conversations_call_participants",
    "functionName": "post_conversations_call_participants",
    "signature": "post_conversations_call_participants(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.Conversation() # Conversation | Conversation\n\ntry:\n    # Add participants to a conversation\n    api_response = api_instance.post_conversations_call_participants(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_call_participants: %s\\n\" % e)"
  },
  "post_conversations_callback_participant_communication_wrapup": {
    "operationId": "post_conversations_callback_participant_communication_wrapup",
    "functionName": "post_conversations_callback_participant_communication_wrapup",
    "signature": "post_conversations_callback_participant_communication_wrapup(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WrapupInput",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.WrapupInput() # WrapupInput | Wrap-up (optional)\n\ntry:\n    # Apply wrap-up for this conversation communication\n    api_instance.post_conversations_callback_participant_communication_wrapup(conversation_id, participant_id, communication_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_callback_participant_communication_wrapup: %s\\n\" % e)"
  },
  "post_conversations_callback_participant_replace": {
    "operationId": "post_conversations_callback_participant_replace",
    "functionName": "post_conversations_callback_participant_replace",
    "signature": "post_conversations_callback_participant_replace(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.TransferRequest() # TransferRequest | Transfer request\n\ntry:\n    # Replace this participant with the specified user and/or address\n    api_instance.post_conversations_callback_participant_replace(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_callback_participant_replace: %s\\n\" % e)"
  },
  "post_conversations_callbacks": {
    "operationId": "post_conversations_callbacks",
    "functionName": "post_conversations_callbacks",
    "signature": "post_conversations_callbacks(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateCallbackCommand",
        "required": "true"
      }
    ],
    "return": "CreateCallbackResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.CreateCallbackCommand() # CreateCallbackCommand | Callback\n\ntry:\n    # Create a Callback\n    api_response = api_instance.post_conversations_callbacks(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_callbacks: %s\\n\" % e)"
  },
  "post_conversations_callbacks_bulk_disconnect": {
    "operationId": "post_conversations_callbacks_bulk_disconnect",
    "functionName": "post_conversations_callbacks_bulk_disconnect",
    "signature": "post_conversations_callbacks_bulk_disconnect(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkCallbackDisconnectRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.BulkCallbackDisconnectRequest() # BulkCallbackDisconnectRequest | BulkCallbackDisconnectRequest\n\ntry:\n    # Disconnect multiple scheduled callbacks\n    api_instance.post_conversations_callbacks_bulk_disconnect(body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_callbacks_bulk_disconnect: %s\\n\" % e)"
  },
  "post_conversations_callbacks_bulk_update": {
    "operationId": "post_conversations_callbacks_bulk_update",
    "functionName": "post_conversations_callbacks_bulk_update",
    "signature": "post_conversations_callbacks_bulk_update(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkCallbackPatchRequest",
        "required": "true"
      }
    ],
    "return": "BulkCallbackPatchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.BulkCallbackPatchRequest() # BulkCallbackPatchRequest | BulkCallbackPatchRequest\n\ntry:\n    # Update multiple scheduled callbacks\n    api_response = api_instance.post_conversations_callbacks_bulk_update(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_callbacks_bulk_update: %s\\n\" % e)"
  },
  "post_conversations_calls": {
    "operationId": "post_conversations_calls",
    "functionName": "post_conversations_calls",
    "signature": "post_conversations_calls(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateCallRequest",
        "required": "true"
      }
    ],
    "return": "CreateCallResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.CreateCallRequest() # CreateCallRequest | Call request\n\ntry:\n    # Create a call conversation\n    api_response = api_instance.post_conversations_calls(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_calls: %s\\n\" % e)"
  },
  "post_conversations_chat_communication_messages": {
    "operationId": "post_conversations_chat_communication_messages",
    "functionName": "post_conversations_chat_communication_messages",
    "signature": "post_conversations_chat_communication_messages(conversation_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateWebChatMessageRequest",
        "required": "true"
      }
    ],
    "return": "WebChatMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.CreateWebChatMessageRequest() # CreateWebChatMessageRequest | Message\n\ntry:\n    # Send a message on behalf of a communication in a chat conversation.\n    api_response = api_instance.post_conversations_chat_communication_messages(conversation_id, communication_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_chat_communication_messages: %s\\n\" % e)"
  },
  "post_conversations_chat_communication_typing": {
    "operationId": "post_conversations_chat_communication_typing",
    "functionName": "post_conversations_chat_communication_typing",
    "signature": "post_conversations_chat_communication_typing(conversation_id, communication_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WebChatTyping",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\ncommunication_id = 'communication_id_example' # str | communicationId\n\ntry:\n    # Send a typing-indicator on behalf of a communication in a chat conversation.\n    api_response = api_instance.post_conversations_chat_communication_typing(conversation_id, communication_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_chat_communication_typing: %s\\n\" % e)"
  },
  "post_conversations_chat_participant_communication_wrapup": {
    "operationId": "post_conversations_chat_participant_communication_wrapup",
    "functionName": "post_conversations_chat_participant_communication_wrapup",
    "signature": "post_conversations_chat_participant_communication_wrapup(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WrapupInput",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.WrapupInput() # WrapupInput | Wrap-up (optional)\n\ntry:\n    # Apply wrap-up for this conversation communication\n    api_instance.post_conversations_chat_participant_communication_wrapup(conversation_id, participant_id, communication_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_chat_participant_communication_wrapup: %s\\n\" % e)"
  },
  "post_conversations_chat_participant_replace": {
    "operationId": "post_conversations_chat_participant_replace",
    "functionName": "post_conversations_chat_participant_replace",
    "signature": "post_conversations_chat_participant_replace(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.TransferRequest() # TransferRequest | Transfer request\n\ntry:\n    # Replace this participant with the specified user and/or address\n    api_instance.post_conversations_chat_participant_replace(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_chat_participant_replace: %s\\n\" % e)"
  },
  "post_conversations_chats": {
    "operationId": "post_conversations_chats",
    "functionName": "post_conversations_chats",
    "signature": "post_conversations_chats(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateWebChatRequest",
        "required": "true"
      }
    ],
    "return": "ChatConversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.CreateWebChatRequest() # CreateWebChatRequest | Create web chat request\n\ntry:\n    # Create a web chat conversation\n    api_response = api_instance.post_conversations_chats(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_chats: %s\\n\" % e)"
  },
  "post_conversations_cobrowsesession_participant_communication_wrapup": {
    "operationId": "post_conversations_cobrowsesession_participant_communication_wrapup",
    "functionName": "post_conversations_cobrowsesession_participant_communication_wrapup",
    "signature": "post_conversations_cobrowsesession_participant_communication_wrapup(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WrapupInput",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.WrapupInput() # WrapupInput | Wrap-up (optional)\n\ntry:\n    # Apply wrap-up for this conversation communication\n    api_instance.post_conversations_cobrowsesession_participant_communication_wrapup(conversation_id, participant_id, communication_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_cobrowsesession_participant_communication_wrapup: %s\\n\" % e)"
  },
  "post_conversations_cobrowsesession_participant_replace": {
    "operationId": "post_conversations_cobrowsesession_participant_replace",
    "functionName": "post_conversations_cobrowsesession_participant_replace",
    "signature": "post_conversations_cobrowsesession_participant_replace(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.TransferRequest() # TransferRequest |  (optional)\n\ntry:\n    # Replace this participant with the specified user and/or address\n    api_instance.post_conversations_cobrowsesession_participant_replace(conversation_id, participant_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_cobrowsesession_participant_replace: %s\\n\" % e)"
  },
  "post_conversations_email_inboundmessages": {
    "operationId": "post_conversations_email_inboundmessages",
    "functionName": "post_conversations_email_inboundmessages",
    "signature": "post_conversations_email_inboundmessages(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "InboundMessageRequest",
        "required": "true"
      }
    ],
    "return": "EmailConversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.InboundMessageRequest() # InboundMessageRequest | Send external email reply\n\ntry:\n    # Send an email to an external conversation. An external conversation is one where the provider is not PureCloud based. This endpoint allows the sender of the external email to reply or send a new message to the existing conversation. The new message will be treated as part of the existing conversation and chained to it.\n    api_response = api_instance.post_conversations_email_inboundmessages(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_email_inboundmessages: %s\\n\" % e)"
  },
  "post_conversations_email_messages": {
    "operationId": "post_conversations_email_messages",
    "functionName": "post_conversations_email_messages",
    "signature": "post_conversations_email_messages(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EmailMessage",
        "required": "true"
      }
    ],
    "return": "EmailMessageReply",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.EmailMessage() # EmailMessage | Reply\n\ntry:\n    # Send an email reply\n    api_response = api_instance.post_conversations_email_messages(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_email_messages: %s\\n\" % e)"
  },
  "post_conversations_email_messages_draft_attachments_copy": {
    "operationId": "post_conversations_email_messages_draft_attachments_copy",
    "functionName": "post_conversations_email_messages_draft_attachments_copy",
    "signature": "post_conversations_email_messages_draft_attachments_copy(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CopyAttachmentsRequest",
        "required": "true"
      }
    ],
    "return": "EmailMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.CopyAttachmentsRequest() # CopyAttachmentsRequest | Copy Attachment Request\n\ntry:\n    # Copy attachments from an email message to the current draft.\n    api_response = api_instance.post_conversations_email_messages_draft_attachments_copy(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_email_messages_draft_attachments_copy: %s\\n\" % e)"
  },
  "post_conversations_email_participant_communication_wrapup": {
    "operationId": "post_conversations_email_participant_communication_wrapup",
    "functionName": "post_conversations_email_participant_communication_wrapup",
    "signature": "post_conversations_email_participant_communication_wrapup(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WrapupInput",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.WrapupInput() # WrapupInput | Wrap-up (optional)\n\ntry:\n    # Apply wrap-up for this conversation communication\n    api_instance.post_conversations_email_participant_communication_wrapup(conversation_id, participant_id, communication_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_email_participant_communication_wrapup: %s\\n\" % e)"
  },
  "post_conversations_email_participant_replace": {
    "operationId": "post_conversations_email_participant_replace",
    "functionName": "post_conversations_email_participant_replace",
    "signature": "post_conversations_email_participant_replace(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.TransferRequest() # TransferRequest | Transfer request\n\ntry:\n    # Replace this participant with the specified user and/or address\n    api_instance.post_conversations_email_participant_replace(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_email_participant_replace: %s\\n\" % e)"
  },
  "post_conversations_email_reconnect": {
    "operationId": "post_conversations_email_reconnect",
    "functionName": "post_conversations_email_reconnect",
    "signature": "post_conversations_email_reconnect(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\n\ntry:\n    # Reconnect the user to the most recently disconnected customer on a fully disconnected email conversation\n    api_instance.post_conversations_email_reconnect(conversation_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_email_reconnect: %s\\n\" % e)"
  },
  "post_conversations_emails": {
    "operationId": "post_conversations_emails",
    "functionName": "post_conversations_emails",
    "signature": "post_conversations_emails(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateEmailRequest",
        "required": "true"
      }
    ],
    "return": "EmailConversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.CreateEmailRequest() # CreateEmailRequest | Create email request\n\ntry:\n    # Create an email conversation\n    api_response = api_instance.post_conversations_emails(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_emails: %s\\n\" % e)"
  },
  "post_conversations_emails_agentless": {
    "operationId": "post_conversations_emails_agentless",
    "functionName": "post_conversations_emails_agentless",
    "signature": "post_conversations_emails_agentless(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AgentlessEmailSendRequestDto",
        "required": "true"
      }
    ],
    "return": "AgentlessEmailSendResponseDto",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.AgentlessEmailSendRequestDto() # AgentlessEmailSendRequestDto | Create agentless email request\n\ntry:\n    # Create an email conversation, per API\n    api_response = api_instance.post_conversations_emails_agentless(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_emails_agentless: %s\\n\" % e)"
  },
  "post_conversations_faxes": {
    "operationId": "post_conversations_faxes",
    "functionName": "post_conversations_faxes",
    "signature": "post_conversations_faxes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FaxSendRequest",
        "required": "true"
      }
    ],
    "return": "FaxSendResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.FaxSendRequest() # FaxSendRequest | Fax\n\ntry:\n    # Create Fax Conversation\n    api_response = api_instance.post_conversations_faxes(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_faxes: %s\\n\" % e)"
  },
  "post_conversations_keyconfigurations": {
    "operationId": "post_conversations_keyconfigurations",
    "functionName": "post_conversations_keyconfigurations",
    "signature": "post_conversations_keyconfigurations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "ConversationEncryptionConfiguration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.ConversationEncryptionConfiguration() # ConversationEncryptionConfiguration | Encryption Configuration\n\ntry:\n    # Setup configurations for encryption key creation\n    api_response = api_instance.post_conversations_keyconfigurations(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_keyconfigurations: %s\\n\" % e)"
  },
  "post_conversations_keyconfigurations_validate": {
    "operationId": "post_conversations_keyconfigurations_validate",
    "functionName": "post_conversations_keyconfigurations_validate",
    "signature": "post_conversations_keyconfigurations_validate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "ConversationEncryptionConfiguration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.ConversationEncryptionConfiguration() # ConversationEncryptionConfiguration | Encryption Configuration\n\ntry:\n    # Validate encryption key configurations without saving it\n    api_response = api_instance.post_conversations_keyconfigurations_validate(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_keyconfigurations_validate: %s\\n\" % e)"
  },
  "post_conversations_message_communication_messages": {
    "operationId": "post_conversations_message_communication_messages",
    "functionName": "post_conversations_message_communication_messages",
    "signature": "post_conversations_message_communication_messages(conversation_id, communication_id, body, use_normalized_message)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AdditionalMessage",
        "required": "true"
      },
      {
        "name": "use_normalized_message",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "MessageData",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.AdditionalMessage() # AdditionalMessage | Message\nuse_normalized_message = False # bool | If true, response removes deprecated fields (textBody, media, stickers) (optional) (default to False)\n\ntry:\n    # Send message\n    api_response = api_instance.post_conversations_message_communication_messages(conversation_id, communication_id, body, use_normalized_message=use_normalized_message)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_message_communication_messages: %s\\n\" % e)"
  },
  "post_conversations_message_communication_messages_media": {
    "operationId": "post_conversations_message_communication_messages_media",
    "functionName": "post_conversations_message_communication_messages_media",
    "signature": "post_conversations_message_communication_messages_media(conversation_id, communication_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MessageMediaData",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\ncommunication_id = 'communication_id_example' # str | communicationId\n\ntry:\n    # Create media\n    api_response = api_instance.post_conversations_message_communication_messages_media(conversation_id, communication_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_message_communication_messages_media: %s\\n\" % e)"
  },
  "post_conversations_message_communication_typing": {
    "operationId": "post_conversations_message_communication_typing",
    "functionName": "post_conversations_message_communication_typing",
    "signature": "post_conversations_message_communication_typing(conversation_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MessageTypingEventRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.MessageTypingEventRequest() # MessageTypingEventRequest | MessageTypingEvent\n\ntry:\n    # Send message typing event\n    api_instance.post_conversations_message_communication_typing(conversation_id, communication_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_message_communication_typing: %s\\n\" % e)"
  },
  "post_conversations_message_inbound_open_event": {
    "operationId": "post_conversations_message_inbound_open_event",
    "functionName": "post_conversations_message_inbound_open_event",
    "signature": "post_conversations_message_inbound_open_event(integration_id, body)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OpenInboundNormalizedEvent",
        "required": "true"
      }
    ],
    "return": "OpenEventNormalizedMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | integrationId\nbody = PureCloudPlatformClientV2.OpenInboundNormalizedEvent() # OpenInboundNormalizedEvent | NormalizedMessage\n\ntry:\n    # Send an inbound Open Event Message\n    api_response = api_instance.post_conversations_message_inbound_open_event(integration_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_message_inbound_open_event: %s\\n\" % e)"
  },
  "post_conversations_message_inbound_open_message": {
    "operationId": "post_conversations_message_inbound_open_message",
    "functionName": "post_conversations_message_inbound_open_message",
    "signature": "post_conversations_message_inbound_open_message(integration_id, body)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OpenInboundNormalizedMessage",
        "required": "true"
      }
    ],
    "return": "OpenMessageNormalizedMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | integrationId\nbody = PureCloudPlatformClientV2.OpenInboundNormalizedMessage() # OpenInboundNormalizedMessage | NormalizedMessage\n\ntry:\n    # Send inbound Open Message\n    api_response = api_instance.post_conversations_message_inbound_open_message(integration_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_message_inbound_open_message: %s\\n\" % e)"
  },
  "post_conversations_message_inbound_open_receipt": {
    "operationId": "post_conversations_message_inbound_open_receipt",
    "functionName": "post_conversations_message_inbound_open_receipt",
    "signature": "post_conversations_message_inbound_open_receipt(integration_id, body)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OpenInboundNormalizedReceipt",
        "required": "true"
      }
    ],
    "return": "OpenReceiptNormalizedMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nintegration_id = 'integration_id_example' # str | integrationId\nbody = PureCloudPlatformClientV2.OpenInboundNormalizedReceipt() # OpenInboundNormalizedReceipt | NormalizedMessage\n\ntry:\n    # Send an inbound Open Receipt Message\n    api_response = api_instance.post_conversations_message_inbound_open_receipt(integration_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_message_inbound_open_receipt: %s\\n\" % e)"
  },
  "post_conversations_message_messages_bulk": {
    "operationId": "post_conversations_message_messages_bulk",
    "functionName": "post_conversations_message_messages_bulk",
    "signature": "post_conversations_message_messages_bulk(conversation_id, use_normalized_message, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "use_normalized_message",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "TextMessageListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | \nuse_normalized_message = False # bool | If true, response removes deprecated fields (textBody, media, stickers) (optional) (default to False)\nbody = ['body_example'] # list[str] | messageIds (optional)\n\ntry:\n    # Get messages in batch\n    api_response = api_instance.post_conversations_message_messages_bulk(conversation_id, use_normalized_message=use_normalized_message, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_message_messages_bulk: %s\\n\" % e)"
  },
  "post_conversations_message_participant_communication_wrapup": {
    "operationId": "post_conversations_message_participant_communication_wrapup",
    "functionName": "post_conversations_message_participant_communication_wrapup",
    "signature": "post_conversations_message_participant_communication_wrapup(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WrapupInput",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.WrapupInput() # WrapupInput | Wrap-up (optional)\n\ntry:\n    # Apply wrap-up for this conversation communication\n    api_instance.post_conversations_message_participant_communication_wrapup(conversation_id, participant_id, communication_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_message_participant_communication_wrapup: %s\\n\" % e)"
  },
  "post_conversations_message_participant_monitor": {
    "operationId": "post_conversations_message_participant_monitor",
    "functionName": "post_conversations_message_participant_monitor",
    "signature": "post_conversations_message_participant_monitor(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\n\ntry:\n    # Listen in on the conversation from the point of view of a given participant.\n    api_instance.post_conversations_message_participant_monitor(conversation_id, participant_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_message_participant_monitor: %s\\n\" % e)"
  },
  "post_conversations_message_participant_replace": {
    "operationId": "post_conversations_message_participant_replace",
    "functionName": "post_conversations_message_participant_replace",
    "signature": "post_conversations_message_participant_replace(conversation_id, participant_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\nbody = PureCloudPlatformClientV2.TransferRequest() # TransferRequest | Transfer request\n\ntry:\n    # Replace this participant with the specified user and/or address\n    api_instance.post_conversations_message_participant_replace(conversation_id, participant_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_message_participant_replace: %s\\n\" % e)"
  },
  "post_conversations_messages": {
    "operationId": "post_conversations_messages",
    "functionName": "post_conversations_messages",
    "signature": "post_conversations_messages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateOutboundMessagingConversationRequest",
        "required": "true"
      }
    ],
    "return": "MessageConversation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.CreateOutboundMessagingConversationRequest() # CreateOutboundMessagingConversationRequest | Create outbound messaging conversation\n\ntry:\n    # Create an outbound messaging conversation.\n    api_response = api_instance.post_conversations_messages(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_messages: %s\\n\" % e)"
  },
  "post_conversations_messages_agentless": {
    "operationId": "post_conversations_messages_agentless",
    "functionName": "post_conversations_messages_agentless",
    "signature": "post_conversations_messages_agentless(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SendAgentlessOutboundMessageRequest",
        "required": "true"
      }
    ],
    "return": "SendAgentlessOutboundMessageResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.SendAgentlessOutboundMessageRequest() # SendAgentlessOutboundMessageRequest | Create agentless outbound messaging request\n\ntry:\n    # Send an agentless outbound message\n    api_response = api_instance.post_conversations_messages_agentless(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_messages_agentless: %s\\n\" % e)"
  },
  "post_conversations_messages_inbound_open": {
    "operationId": "post_conversations_messages_inbound_open",
    "functionName": "post_conversations_messages_inbound_open",
    "signature": "post_conversations_messages_inbound_open(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OpenNormalizedMessage",
        "required": "true"
      }
    ],
    "return": "OpenNormalizedMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.OpenNormalizedMessage() # OpenNormalizedMessage | NormalizedMessage\n\ntry:\n    # Send an inbound Open Message\n    api_response = api_instance.post_conversations_messages_inbound_open(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_messages_inbound_open: %s\\n\" % e)"
  },
  "post_conversations_messaging_integrations_facebook": {
    "operationId": "post_conversations_messaging_integrations_facebook",
    "functionName": "post_conversations_messaging_integrations_facebook",
    "signature": "post_conversations_messaging_integrations_facebook(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FacebookIntegrationRequest",
        "required": "true"
      }
    ],
    "return": "FacebookIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.FacebookIntegrationRequest() # FacebookIntegrationRequest | FacebookIntegrationRequest\n\ntry:\n    # Create a Facebook Integration\n    api_response = api_instance.post_conversations_messaging_integrations_facebook(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_messaging_integrations_facebook: %s\\n\" % e)"
  },
  "post_conversations_messaging_integrations_instagram": {
    "operationId": "post_conversations_messaging_integrations_instagram",
    "functionName": "post_conversations_messaging_integrations_instagram",
    "signature": "post_conversations_messaging_integrations_instagram(body)",
    "parameters": [
      {
        "name": "body",
        "type": "InstagramIntegrationRequest",
        "required": "true"
      }
    ],
    "return": "InstagramIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.InstagramIntegrationRequest() # InstagramIntegrationRequest | InstagramIntegrationRequest\n\ntry:\n    # Create Instagram Integration\n    api_response = api_instance.post_conversations_messaging_integrations_instagram(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_messaging_integrations_instagram: %s\\n\" % e)"
  },
  "post_conversations_messaging_integrations_open": {
    "operationId": "post_conversations_messaging_integrations_open",
    "functionName": "post_conversations_messaging_integrations_open",
    "signature": "post_conversations_messaging_integrations_open(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OpenIntegrationRequest",
        "required": "true"
      }
    ],
    "return": "OpenIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.OpenIntegrationRequest() # OpenIntegrationRequest | OpenIntegrationRequest\n\ntry:\n    # Create an Open messaging integration\n    api_response = api_instance.post_conversations_messaging_integrations_open(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_messaging_integrations_open: %s\\n\" % e)"
  },
  "post_conversations_messaging_integrations_whatsapp": {
    "operationId": "post_conversations_messaging_integrations_whatsapp",
    "functionName": "post_conversations_messaging_integrations_whatsapp",
    "signature": "post_conversations_messaging_integrations_whatsapp(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WhatsAppIntegrationRequest",
        "required": "true"
      }
    ],
    "return": "WhatsAppIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.WhatsAppIntegrationRequest() # WhatsAppIntegrationRequest | WhatsAppIntegrationRequest\n\ntry:\n    # [This API is deprecated. Use POST /api/v2/conversations/messaging/integrations/whatsapp/embeddedsignup instead] Create a WhatsApp Integration\n    api_response = api_instance.post_conversations_messaging_integrations_whatsapp(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_messaging_integrations_whatsapp: %s\\n\" % e)"
  },
  "post_conversations_messaging_integrations_whatsapp_embeddedsignup": {
    "operationId": "post_conversations_messaging_integrations_whatsapp_embeddedsignup",
    "functionName": "post_conversations_messaging_integrations_whatsapp_embeddedsignup",
    "signature": "post_conversations_messaging_integrations_whatsapp_embeddedsignup(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WhatsAppEmbeddedSignupIntegrationRequest",
        "required": "true"
      }
    ],
    "return": "WhatsAppIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.WhatsAppEmbeddedSignupIntegrationRequest() # WhatsAppEmbeddedSignupIntegrationRequest | WhatsAppEmbeddedSignupIntegrationRequest\n\ntry:\n    # Create a WhatsApp Integration using the WhatsApp embedded signup flow\n    api_response = api_instance.post_conversations_messaging_integrations_whatsapp_embeddedsignup(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_messaging_integrations_whatsapp_embeddedsignup: %s\\n\" % e)"
  },
  "post_conversations_messaging_settings": {
    "operationId": "post_conversations_messaging_settings",
    "functionName": "post_conversations_messaging_settings",
    "signature": "post_conversations_messaging_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "MessagingSettingRequest",
        "required": "true"
      }
    ],
    "return": "MessagingSetting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.MessagingSettingRequest() # MessagingSettingRequest | MessagingSetting\n\ntry:\n    # Create a messaging setting\n    api_response = api_instance.post_conversations_messaging_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_messaging_settings: %s\\n\" % e)"
  },
  "post_conversations_messaging_supportedcontent": {
    "operationId": "post_conversations_messaging_supportedcontent",
    "functionName": "post_conversations_messaging_supportedcontent",
    "signature": "post_conversations_messaging_supportedcontent(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SupportedContent",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.SupportedContent() # SupportedContent | SupportedContent\n\ntry:\n    # Create a Supported Content profile\n    api_response = api_instance.post_conversations_messaging_supportedcontent(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_messaging_supportedcontent: %s\\n\" % e)"
  },
  "post_conversations_participants_attributes_search": {
    "operationId": "post_conversations_participants_attributes_search",
    "functionName": "post_conversations_participants_attributes_search",
    "signature": "post_conversations_participants_attributes_search(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationParticipantSearchRequest",
        "required": "true"
      }
    ],
    "return": "JsonCursorSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SearchApi();\nbody = PureCloudPlatformClientV2.ConversationParticipantSearchRequest() # ConversationParticipantSearchRequest | Search request options\n\ntry:\n    # Search conversations\n    api_response = api_instance.post_conversations_participants_attributes_search(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SearchApi->post_conversations_participants_attributes_search: %s\\n\" % e)"
  },
  "post_conversations_screenshare_participant_communication_wrapup": {
    "operationId": "post_conversations_screenshare_participant_communication_wrapup",
    "functionName": "post_conversations_screenshare_participant_communication_wrapup",
    "signature": "post_conversations_screenshare_participant_communication_wrapup(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WrapupInput",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.WrapupInput() # WrapupInput | Wrap-up (optional)\n\ntry:\n    # Apply wrap-up for this conversation communication\n    api_instance.post_conversations_screenshare_participant_communication_wrapup(conversation_id, participant_id, communication_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_screenshare_participant_communication_wrapup: %s\\n\" % e)"
  },
  "post_conversations_social_participant_communication_wrapup": {
    "operationId": "post_conversations_social_participant_communication_wrapup",
    "functionName": "post_conversations_social_participant_communication_wrapup",
    "signature": "post_conversations_social_participant_communication_wrapup(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WrapupInput",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.WrapupInput() # WrapupInput | Wrap-up (optional)\n\ntry:\n    # Apply wrap-up for this conversation communication\n    api_instance.post_conversations_social_participant_communication_wrapup(conversation_id, participant_id, communication_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_social_participant_communication_wrapup: %s\\n\" % e)"
  },
  "post_conversations_video_participant_communication_wrapup": {
    "operationId": "post_conversations_video_participant_communication_wrapup",
    "functionName": "post_conversations_video_participant_communication_wrapup",
    "signature": "post_conversations_video_participant_communication_wrapup(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WrapupInput",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.WrapupInput() # WrapupInput | Wrap-up (optional)\n\ntry:\n    # Apply wrap-up for this conversation communication\n    api_instance.post_conversations_video_participant_communication_wrapup(conversation_id, participant_id, communication_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_video_participant_communication_wrapup: %s\\n\" % e)"
  },
  "post_conversations_videos_meetings": {
    "operationId": "post_conversations_videos_meetings",
    "functionName": "post_conversations_videos_meetings",
    "signature": "post_conversations_videos_meetings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GenerateMeetingIdRequest",
        "required": "true"
      }
    ],
    "return": "MeetingIdRecord",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.GenerateMeetingIdRequest() # GenerateMeetingIdRequest | MeetingIdRequest\n\ntry:\n    # Generate a meetingId for a given conferenceId\n    api_response = api_instance.post_conversations_videos_meetings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->post_conversations_videos_meetings: %s\\n\" % e)"
  },
  "put_conversation_participant_flaggedreason": {
    "operationId": "put_conversation_participant_flaggedreason",
    "functionName": "put_conversation_participant_flaggedreason",
    "signature": "put_conversation_participant_flaggedreason(conversation_id, participant_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nparticipant_id = 'participant_id_example' # str | participant ID\n\ntry:\n    # Set flagged reason on conversation participant to indicate bad conversation quality.\n    api_instance.put_conversation_participant_flaggedreason(conversation_id, participant_id)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversation_participant_flaggedreason: %s\\n\" % e)"
  },
  "put_conversation_secureattributes": {
    "operationId": "put_conversation_secureattributes",
    "functionName": "put_conversation_secureattributes",
    "signature": "put_conversation_secureattributes(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConversationSecureAttributes",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nbody = PureCloudPlatformClientV2.ConversationSecureAttributes() # ConversationSecureAttributes | Conversation Secure Attributes\n\ntry:\n    # Set the secure attributes on a conversation.\n    api_response = api_instance.put_conversation_secureattributes(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversation_secureattributes: %s\\n\" % e)"
  },
  "put_conversation_tags": {
    "operationId": "put_conversation_tags",
    "functionName": "put_conversation_tags",
    "signature": "put_conversation_tags(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConversationTagsUpdate",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversation ID\nbody = PureCloudPlatformClientV2.ConversationTagsUpdate() # ConversationTagsUpdate | Conversation Tags\n\ntry:\n    # Update the tags on a conversation.\n    api_response = api_instance.put_conversation_tags(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversation_tags: %s\\n\" % e)"
  },
  "put_conversations_call_participant_communication_uuidata": {
    "operationId": "put_conversations_call_participant_communication_uuidata",
    "functionName": "put_conversations_call_participant_communication_uuidata",
    "signature": "put_conversations_call_participant_communication_uuidata(conversation_id, participant_id, communication_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "participant_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetUuiDataRequest",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nparticipant_id = 'participant_id_example' # str | participantId\ncommunication_id = 'communication_id_example' # str | communicationId\nbody = PureCloudPlatformClientV2.SetUuiDataRequest() # SetUuiDataRequest | UUIData Request\n\ntry:\n    # Set uuiData to be sent on future commands.\n    api_response = api_instance.put_conversations_call_participant_communication_uuidata(conversation_id, participant_id, communication_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_call_participant_communication_uuidata: %s\\n\" % e)"
  },
  "put_conversations_call_recordingstate": {
    "operationId": "put_conversations_call_recordingstate",
    "functionName": "put_conversations_call_recordingstate",
    "signature": "put_conversations_call_recordingstate(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.SetRecordingState() # SetRecordingState | SetRecordingState\n\ntry:\n    # Update a conversation by setting its recording state\n    api_response = api_instance.put_conversations_call_recordingstate(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_call_recordingstate: %s\\n\" % e)"
  },
  "put_conversations_callback_recordingstate": {
    "operationId": "put_conversations_callback_recordingstate",
    "functionName": "put_conversations_callback_recordingstate",
    "signature": "put_conversations_callback_recordingstate(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.SetRecordingState() # SetRecordingState | SetRecordingState\n\ntry:\n    # Update a conversation by setting its recording state\n    api_response = api_instance.put_conversations_callback_recordingstate(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_callback_recordingstate: %s\\n\" % e)"
  },
  "put_conversations_chat_recordingstate": {
    "operationId": "put_conversations_chat_recordingstate",
    "functionName": "put_conversations_chat_recordingstate",
    "signature": "put_conversations_chat_recordingstate(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.SetRecordingState() # SetRecordingState | SetRecordingState\n\ntry:\n    # Update a conversation by setting its recording state\n    api_response = api_instance.put_conversations_chat_recordingstate(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_chat_recordingstate: %s\\n\" % e)"
  },
  "put_conversations_cobrowsesession_recordingstate": {
    "operationId": "put_conversations_cobrowsesession_recordingstate",
    "functionName": "put_conversations_cobrowsesession_recordingstate",
    "signature": "put_conversations_cobrowsesession_recordingstate(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.SetRecordingState() # SetRecordingState | SetRecordingState\n\ntry:\n    # Update a conversation by setting its recording state\n    api_response = api_instance.put_conversations_cobrowsesession_recordingstate(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_cobrowsesession_recordingstate: %s\\n\" % e)"
  },
  "put_conversations_email_messages_draft": {
    "operationId": "put_conversations_email_messages_draft",
    "functionName": "put_conversations_email_messages_draft",
    "signature": "put_conversations_email_messages_draft(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EmailMessage",
        "required": "true"
      }
    ],
    "return": "EmailMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.EmailMessage() # EmailMessage | Draft\n\ntry:\n    # Update conversation draft reply\n    api_response = api_instance.put_conversations_email_messages_draft(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_email_messages_draft: %s\\n\" % e)"
  },
  "put_conversations_email_recordingstate": {
    "operationId": "put_conversations_email_recordingstate",
    "functionName": "put_conversations_email_recordingstate",
    "signature": "put_conversations_email_recordingstate(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.SetRecordingState() # SetRecordingState | SetRecordingState\n\ntry:\n    # Update a conversation by setting its recording state\n    api_response = api_instance.put_conversations_email_recordingstate(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_email_recordingstate: %s\\n\" % e)"
  },
  "put_conversations_keyconfiguration": {
    "operationId": "put_conversations_keyconfiguration",
    "functionName": "put_conversations_keyconfiguration",
    "signature": "put_conversations_keyconfiguration(keyconfigurations_id, body)",
    "parameters": [
      {
        "name": "keyconfigurations_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConversationEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "ConversationEncryptionConfiguration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nkeyconfigurations_id = 'keyconfigurations_id_example' # str | Key Configurations Id\nbody = PureCloudPlatformClientV2.ConversationEncryptionConfiguration() # ConversationEncryptionConfiguration | Encryption key configuration metadata\n\ntry:\n    # Update the encryption key configurations\n    api_response = api_instance.put_conversations_keyconfiguration(keyconfigurations_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_keyconfiguration: %s\\n\" % e)"
  },
  "put_conversations_message_recordingstate": {
    "operationId": "put_conversations_message_recordingstate",
    "functionName": "put_conversations_message_recordingstate",
    "signature": "put_conversations_message_recordingstate(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.SetRecordingState() # SetRecordingState | SetRecordingState\n\ntry:\n    # Update a conversation by setting its recording state\n    api_response = api_instance.put_conversations_message_recordingstate(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_message_recordingstate: %s\\n\" % e)"
  },
  "put_conversations_messaging_settings_default": {
    "operationId": "put_conversations_messaging_settings_default",
    "functionName": "put_conversations_messaging_settings_default",
    "signature": "put_conversations_messaging_settings_default(body)",
    "parameters": [
      {
        "name": "body",
        "type": "MessagingSettingDefaultRequest",
        "required": "true"
      }
    ],
    "return": "MessagingSetting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.MessagingSettingDefaultRequest() # MessagingSettingDefaultRequest | MessagingSetting\n\ntry:\n    # Set the organization's default setting that may be applied to to integrations without settings\n    api_response = api_instance.put_conversations_messaging_settings_default(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_messaging_settings_default: %s\\n\" % e)"
  },
  "put_conversations_messaging_supportedcontent_default": {
    "operationId": "put_conversations_messaging_supportedcontent_default",
    "functionName": "put_conversations_messaging_supportedcontent_default",
    "signature": "put_conversations_messaging_supportedcontent_default(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SupportedContentReference",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.SupportedContentReference() # SupportedContentReference | SupportedContent\n\ntry:\n    # Set the organization's default supported content profile that may be assigned to an integration when it is created.\n    api_response = api_instance.put_conversations_messaging_supportedcontent_default(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_messaging_supportedcontent_default: %s\\n\" % e)"
  },
  "put_conversations_messaging_threadingtimeline": {
    "operationId": "put_conversations_messaging_threadingtimeline",
    "functionName": "put_conversations_messaging_threadingtimeline",
    "signature": "put_conversations_messaging_threadingtimeline(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationThreadingWindow",
        "required": "true"
      }
    ],
    "return": "ConversationThreadingWindow",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nbody = PureCloudPlatformClientV2.ConversationThreadingWindow() # ConversationThreadingWindow | ConversationThreadingWindowRequest\n\ntry:\n    # Update conversation threading window timeline for each messaging type\n    api_response = api_instance.put_conversations_messaging_threadingtimeline(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_messaging_threadingtimeline: %s\\n\" % e)"
  },
  "put_conversations_screenshare_recordingstate": {
    "operationId": "put_conversations_screenshare_recordingstate",
    "functionName": "put_conversations_screenshare_recordingstate",
    "signature": "put_conversations_screenshare_recordingstate(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.SetRecordingState() # SetRecordingState | SetRecordingState\n\ntry:\n    # Update a conversation by setting its recording state\n    api_response = api_instance.put_conversations_screenshare_recordingstate(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_screenshare_recordingstate: %s\\n\" % e)"
  },
  "put_conversations_social_recordingstate": {
    "operationId": "put_conversations_social_recordingstate",
    "functionName": "put_conversations_social_recordingstate",
    "signature": "put_conversations_social_recordingstate(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.SetRecordingState() # SetRecordingState | SetRecordingState\n\ntry:\n    # Update a conversation by setting its recording state\n    api_response = api_instance.put_conversations_social_recordingstate(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_social_recordingstate: %s\\n\" % e)"
  },
  "put_conversations_video_recordingstate": {
    "operationId": "put_conversations_video_recordingstate",
    "functionName": "put_conversations_video_recordingstate",
    "signature": "put_conversations_video_recordingstate(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ConversationsApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.SetRecordingState() # SetRecordingState | SetRecordingState\n\ntry:\n    # Update a conversation by setting its recording state\n    api_response = api_instance.put_conversations_video_recordingstate(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ConversationsApi->put_conversations_video_recordingstate: %s\\n\" % e)"
  },
  "get_dataextensions_coretype": {
    "operationId": "get_dataextensions_coretype",
    "functionName": "get_dataextensions_coretype",
    "signature": "get_dataextensions_coretype(coretype_name)",
    "parameters": [
      {
        "name": "coretype_name",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Coretype",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.DataExtensionsApi();\ncoretype_name = 'coretype_name_example' # str | The core type's name\n\ntry:\n    # Get a specific named core type.\n    api_response = api_instance.get_dataextensions_coretype(coretype_name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling DataExtensionsApi->get_dataextensions_coretype: %s\\n\" % e)"
  },
  "get_dataextensions_coretypes": {
    "operationId": "get_dataextensions_coretypes",
    "functionName": "get_dataextensions_coretypes",
    "signature": "get_dataextensions_coretypes()",
    "return": "CoretypeListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.DataExtensionsApi();\n\ntry:\n    # Get the core types from which all schemas are built.\n    api_response = api_instance.get_dataextensions_coretypes()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling DataExtensionsApi->get_dataextensions_coretypes: %s\\n\" % e)"
  },
  "get_dataextensions_limits": {
    "operationId": "get_dataextensions_limits",
    "functionName": "get_dataextensions_limits",
    "signature": "get_dataextensions_limits()",
    "return": "SchemaQuantityLimits",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.DataExtensionsApi();\n\ntry:\n    # Get quantitative limits on schemas\n    api_response = api_instance.get_dataextensions_limits()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling DataExtensionsApi->get_dataextensions_limits: %s\\n\" % e)"
  },
  "get_download": {
    "operationId": "get_download",
    "functionName": "get_download",
    "signature": "get_download(download_id, content_disposition, issue_redirect, redirect_to_auth)",
    "parameters": [
      {
        "name": "download_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "content_disposition",
        "type": "str",
        "required": "false"
      },
      {
        "name": "issue_redirect",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "redirect_to_auth",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "UrlResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.DownloadsApi();\ndownload_id = 'download_id_example' # str | Download ID\ncontent_disposition = 'content_disposition_example' # str |  (optional)\nissue_redirect = True # bool |  (optional) (default to True)\nredirect_to_auth = True # bool |  (optional) (default to True)\n\ntry:\n    # Issues a redirect to a signed secure download URL for specified download\n    api_response = api_instance.get_download(download_id, content_disposition=content_disposition, issue_redirect=issue_redirect, redirect_to_auth=redirect_to_auth)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling DownloadsApi->get_download: %s\\n\" % e)"
  },
  "get_emails_settings": {
    "operationId": "get_emails_settings",
    "functionName": "get_emails_settings",
    "signature": "get_emails_settings()",
    "return": "EmailSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SettingsApi();\n\ntry:\n    # Get email Contact Center settings\n    api_response = api_instance.get_emails_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SettingsApi->get_emails_settings: %s\\n\" % e)"
  },
  "patch_emails_settings": {
    "operationId": "patch_emails_settings",
    "functionName": "patch_emails_settings",
    "signature": "patch_emails_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EmailSettings",
        "required": "false"
      }
    ],
    "return": "EmailSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SettingsApi();\nbody = PureCloudPlatformClientV2.EmailSettings() # EmailSettings |  (optional)\n\ntry:\n    # Patch email Contact Center settings\n    api_response = api_instance.patch_emails_settings(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SettingsApi->patch_emails_settings: %s\\n\" % e)"
  },
  "post_events_conversations": {
    "operationId": "post_events_conversations",
    "functionName": "post_events_conversations",
    "signature": "post_events_conversations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BatchConversationEventRequest",
        "required": "true"
      }
    ],
    "return": "BatchEventResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.EventsApi();\nbody = PureCloudPlatformClientV2.BatchConversationEventRequest() # BatchConversationEventRequest | batchRequest\n\ntry:\n    # Publish Conversation Batch Events\n    api_response = api_instance.post_events_conversations(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling EventsApi->post_events_conversations: %s\\n\" % e)"
  },
  "post_events_users_presence": {
    "operationId": "post_events_users_presence",
    "functionName": "post_events_users_presence",
    "signature": "post_events_users_presence(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BatchUserPresenceEventRequest",
        "required": "true"
      }
    ],
    "return": "BatchEventResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.EventsApi();\nbody = PureCloudPlatformClientV2.BatchUserPresenceEventRequest() # BatchUserPresenceEventRequest | batchRequest\n\ntry:\n    # Publish User Presence Status Batch Events\n    api_response = api_instance.post_events_users_presence(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling EventsApi->post_events_users_presence: %s\\n\" % e)"
  },
  "post_events_users_routingstatus": {
    "operationId": "post_events_users_routingstatus",
    "functionName": "post_events_users_routingstatus",
    "signature": "post_events_users_routingstatus(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BatchUserRoutingStatusEventRequest",
        "required": "true"
      }
    ],
    "return": "BatchEventResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.EventsApi();\nbody = PureCloudPlatformClientV2.BatchUserRoutingStatusEventRequest() # BatchUserRoutingStatusEventRequest | batchRequest\n\ntry:\n    # Publish Agent Routing Status Batch Events\n    api_response = api_instance.post_events_users_routingstatus(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling EventsApi->post_events_users_routingstatus: %s\\n\" % e)"
  },
  "delete_externalcontacts_contact": {
    "operationId": "delete_externalcontacts_contact",
    "functionName": "delete_externalcontacts_contact",
    "signature": "delete_externalcontacts_contact(contact_id)",
    "parameters": [
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\ncontact_id = 'contact_id_example' # str | ExternalContact ID\n\ntry:\n    # Delete an external contact\n    api_response = api_instance.delete_externalcontacts_contact(contact_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->delete_externalcontacts_contact: %s\\n\" % e)"
  },
  "delete_externalcontacts_contact_note": {
    "operationId": "delete_externalcontacts_contact_note",
    "functionName": "delete_externalcontacts_contact_note",
    "signature": "delete_externalcontacts_contact_note(contact_id, note_id)",
    "parameters": [
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "note_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\ncontact_id = 'contact_id_example' # str | ExternalContact Id\nnote_id = 'note_id_example' # str | Note Id\n\ntry:\n    # Delete a note for an external contact\n    api_response = api_instance.delete_externalcontacts_contact_note(contact_id, note_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->delete_externalcontacts_contact_note: %s\\n\" % e)"
  },
  "delete_externalcontacts_contacts_schema": {
    "operationId": "delete_externalcontacts_contacts_schema",
    "functionName": "delete_externalcontacts_contacts_schema",
    "signature": "delete_externalcontacts_contacts_schema(schema_id)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nschema_id = 'schema_id_example' # str | Schema ID\n\ntry:\n    # Delete a schema\n    api_instance.delete_externalcontacts_contacts_schema(schema_id)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->delete_externalcontacts_contacts_schema: %s\\n\" % e)"
  },
  "delete_externalcontacts_organization": {
    "operationId": "delete_externalcontacts_organization",
    "functionName": "delete_externalcontacts_organization",
    "signature": "delete_externalcontacts_organization(external_organization_id)",
    "parameters": [
      {
        "name": "external_organization_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nexternal_organization_id = 'external_organization_id_example' # str | External Organization ID\n\ntry:\n    # Delete an external organization\n    api_response = api_instance.delete_externalcontacts_organization(external_organization_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->delete_externalcontacts_organization: %s\\n\" % e)"
  },
  "delete_externalcontacts_organization_note": {
    "operationId": "delete_externalcontacts_organization_note",
    "functionName": "delete_externalcontacts_organization_note",
    "signature": "delete_externalcontacts_organization_note(external_organization_id, note_id)",
    "parameters": [
      {
        "name": "external_organization_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "note_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nexternal_organization_id = 'external_organization_id_example' # str | External Organization Id\nnote_id = 'note_id_example' # str | Note Id\n\ntry:\n    # Delete a note for an external organization\n    api_response = api_instance.delete_externalcontacts_organization_note(external_organization_id, note_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->delete_externalcontacts_organization_note: %s\\n\" % e)"
  },
  "delete_externalcontacts_organization_trustor": {
    "operationId": "delete_externalcontacts_organization_trustor",
    "functionName": "delete_externalcontacts_organization_trustor",
    "signature": "delete_externalcontacts_organization_trustor(external_organization_id)",
    "parameters": [
      {
        "name": "external_organization_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nexternal_organization_id = 'external_organization_id_example' # str | External Organization ID\n\ntry:\n    # Unlink the Trustor for this External Organization\n    api_instance.delete_externalcontacts_organization_trustor(external_organization_id)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->delete_externalcontacts_organization_trustor: %s\\n\" % e)"
  },
  "delete_externalcontacts_relationship": {
    "operationId": "delete_externalcontacts_relationship",
    "functionName": "delete_externalcontacts_relationship",
    "signature": "delete_externalcontacts_relationship(relationship_id)",
    "parameters": [
      {
        "name": "relationship_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nrelationship_id = 'relationship_id_example' # str | Relationship Id\n\ntry:\n    # Delete a relationship\n    api_response = api_instance.delete_externalcontacts_relationship(relationship_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->delete_externalcontacts_relationship: %s\\n\" % e)"
  },
  "get_externalcontacts_contact": {
    "operationId": "get_externalcontacts_contact",
    "functionName": "get_externalcontacts_contact",
    "signature": "get_externalcontacts_contact(contact_id, expand)",
    "parameters": [
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ExternalContact",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\ncontact_id = 'contact_id_example' # str | ExternalContact ID\nexpand = ['expand_example'] # list[str] | which fields, if any, to expand (externalOrganization,externalDataSources) (optional)\n\ntry:\n    # Fetch an external contact\n    api_response = api_instance.get_externalcontacts_contact(contact_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_contact: %s\\n\" % e)"
  },
  "get_externalcontacts_contact_identifiers": {
    "operationId": "get_externalcontacts_contact_identifiers",
    "functionName": "get_externalcontacts_contact_identifiers",
    "signature": "get_externalcontacts_contact_identifiers(contact_id)",
    "parameters": [
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\ncontact_id = 'contact_id_example' # str | ExternalContact ID\n\ntry:\n    # List the identifiers for a contact\n    api_response = api_instance.get_externalcontacts_contact_identifiers(contact_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_contact_identifiers: %s\\n\" % e)"
  },
  "get_externalcontacts_contact_journey_sessions": {
    "operationId": "get_externalcontacts_contact_journey_sessions",
    "functionName": "get_externalcontacts_contact_journey_sessions",
    "signature": "get_externalcontacts_contact_journey_sessions(contact_id, page_size, after, include_merged)",
    "parameters": [
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "include_merged",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "SessionListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\ncontact_id = 'contact_id_example' # str | ExternalContact ID\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\ninclude_merged = True # bool | Indicates whether to return sessions from all external contacts in the merge-set of the given one. (optional)\n\ntry:\n    # Retrieve all sessions for a given external contact.\n    api_response = api_instance.get_externalcontacts_contact_journey_sessions(contact_id, page_size=page_size, after=after, include_merged=include_merged)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_externalcontacts_contact_journey_sessions: %s\\n\" % e)"
  },
  "get_externalcontacts_contact_note": {
    "operationId": "get_externalcontacts_contact_note",
    "functionName": "get_externalcontacts_contact_note",
    "signature": "get_externalcontacts_contact_note(contact_id, note_id, expand)",
    "parameters": [
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "note_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "Note",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\ncontact_id = 'contact_id_example' # str | ExternalContact Id\nnote_id = 'note_id_example' # str | Note Id\nexpand = ['expand_example'] # list[str] | which fields, if any, to expand (optional)\n\ntry:\n    # Fetch a note for an external contact\n    api_response = api_instance.get_externalcontacts_contact_note(contact_id, note_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_contact_note: %s\\n\" % e)"
  },
  "get_externalcontacts_contact_notes": {
    "operationId": "get_externalcontacts_contact_notes",
    "functionName": "get_externalcontacts_contact_notes",
    "signature": "get_externalcontacts_contact_notes(contact_id, page_size, page_number, sort_order, expand)",
    "parameters": [
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "NoteListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\ncontact_id = 'contact_id_example' # str | ExternalContact Id\npage_size = 20 # int | Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional) (default to 20)\npage_number = 1 # int | Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional) (default to 1)\nsort_order = 'sort_order_example' # str | The Note field to sort by. Any of: [createDate]. Direction: [asc, desc].  e.g. \\\"createDate:asc\\\", \\\"createDate:desc\\\" (optional)\nexpand = ['expand_example'] # list[str] | which fields, if any, to expand (optional)\n\ntry:\n    # List notes for an external contact\n    api_response = api_instance.get_externalcontacts_contact_notes(contact_id, page_size=page_size, page_number=page_number, sort_order=sort_order, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_contact_notes: %s\\n\" % e)"
  },
  "get_externalcontacts_contact_unresolved": {
    "operationId": "get_externalcontacts_contact_unresolved",
    "functionName": "get_externalcontacts_contact_unresolved",
    "signature": "get_externalcontacts_contact_unresolved(contact_id, expand)",
    "parameters": [
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ExternalContact",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\ncontact_id = 'contact_id_example' # str | ExternalContact ID\nexpand = ['expand_example'] # list[str] | which fields, if any, to expand (externalOrganization,externalDataSources) (optional)\n\ntry:\n    # Fetch an unresolved external contact\n    api_response = api_instance.get_externalcontacts_contact_unresolved(contact_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_contact_unresolved: %s\\n\" % e)"
  },
  "get_externalcontacts_contacts": {
    "operationId": "get_externalcontacts_contacts",
    "functionName": "get_externalcontacts_contacts",
    "signature": "get_externalcontacts_contacts(page_size, page_number, q, sort_order, expand)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "q",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ContactListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\npage_size = 20 # int | Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional) (default to 20)\npage_number = 1 # int | Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional) (default to 1)\nq = 'q_example' # str | User supplied search keywords (no special syntax is currently supported) (optional)\nsort_order = 'sort_order_example' # str | The External Contact field to sort by. Any of: [firstName, lastName, middleName, title]. Direction: [asc, desc]. e.g. \\\"firstName:asc\\\", \\\"title:desc\\\" (optional)\nexpand = ['expand_example'] # list[str] | which fields, if any, to expand (optional)\n\ntry:\n    # Search for external contacts\n    api_response = api_instance.get_externalcontacts_contacts(page_size=page_size, page_number=page_number, q=q, sort_order=sort_order, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_contacts: %s\\n\" % e)"
  },
  "get_externalcontacts_contacts_schema": {
    "operationId": "get_externalcontacts_contacts_schema",
    "functionName": "get_externalcontacts_contacts_schema",
    "signature": "get_externalcontacts_contacts_schema(schema_id)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nschema_id = 'schema_id_example' # str | Schema ID\n\ntry:\n    # Get a schema\n    api_response = api_instance.get_externalcontacts_contacts_schema(schema_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_contacts_schema: %s\\n\" % e)"
  },
  "get_externalcontacts_contacts_schema_version": {
    "operationId": "get_externalcontacts_contacts_schema_version",
    "functionName": "get_externalcontacts_contacts_schema_version",
    "signature": "get_externalcontacts_contacts_schema_version(schema_id, version_id)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nschema_id = 'schema_id_example' # str | Schema ID\nversion_id = 'version_id_example' # str | Schema version\n\ntry:\n    # Get a specific version of a schema\n    api_response = api_instance.get_externalcontacts_contacts_schema_version(schema_id, version_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_contacts_schema_version: %s\\n\" % e)"
  },
  "get_externalcontacts_contacts_schema_versions": {
    "operationId": "get_externalcontacts_contacts_schema_versions",
    "functionName": "get_externalcontacts_contacts_schema_versions",
    "signature": "get_externalcontacts_contacts_schema_versions(schema_id)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nschema_id = 'schema_id_example' # str | Schema ID\n\ntry:\n    # Get all versions of an external contact's schema\n    api_response = api_instance.get_externalcontacts_contacts_schema_versions(schema_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_contacts_schema_versions: %s\\n\" % e)"
  },
  "get_externalcontacts_contacts_schemas": {
    "operationId": "get_externalcontacts_contacts_schemas",
    "functionName": "get_externalcontacts_contacts_schemas",
    "signature": "get_externalcontacts_contacts_schemas()",
    "return": "DataSchemaListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\n\ntry:\n    # Get a list of schemas.\n    api_response = api_instance.get_externalcontacts_contacts_schemas()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_contacts_schemas: %s\\n\" % e)"
  },
  "get_externalcontacts_organization": {
    "operationId": "get_externalcontacts_organization",
    "functionName": "get_externalcontacts_organization",
    "signature": "get_externalcontacts_organization(external_organization_id, expand, include_trustors)",
    "parameters": [
      {
        "name": "external_organization_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "include_trustors",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "ExternalOrganization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nexternal_organization_id = 'external_organization_id_example' # str | External Organization ID\nexpand = ['expand_example'] # list[str] | which fields, if any, to expand (externalDataSources) (optional)\ninclude_trustors = True # bool | (true or false) whether or not to include trustor information embedded in the externalOrganization (optional)\n\ntry:\n    # Fetch an external organization\n    api_response = api_instance.get_externalcontacts_organization(external_organization_id, expand=expand, include_trustors=include_trustors)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_organization: %s\\n\" % e)"
  },
  "get_externalcontacts_organization_contacts": {
    "operationId": "get_externalcontacts_organization_contacts",
    "functionName": "get_externalcontacts_organization_contacts",
    "signature": "get_externalcontacts_organization_contacts(external_organization_id, page_size, page_number, q, sort_order, expand)",
    "parameters": [
      {
        "name": "external_organization_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "q",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ContactListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nexternal_organization_id = 'external_organization_id_example' # str | External Organization ID\npage_size = 20 # int | Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional) (default to 20)\npage_number = 1 # int | Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional) (default to 1)\nq = 'q_example' # str | User supplied search keywords (no special syntax is currently supported) (optional)\nsort_order = 'sort_order_example' # str | The External Contact field to sort by. Any of: [firstName, lastName, middleName, title]. Direction: [asc, desc]. e.g. \\\"firstName:asc\\\", \\\"title:desc\\\" (optional)\nexpand = ['expand_example'] # list[str] | which fields, if any, to expand (optional)\n\ntry:\n    # Search for external contacts in an external organization\n    api_response = api_instance.get_externalcontacts_organization_contacts(external_organization_id, page_size=page_size, page_number=page_number, q=q, sort_order=sort_order, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_organization_contacts: %s\\n\" % e)"
  },
  "get_externalcontacts_organization_note": {
    "operationId": "get_externalcontacts_organization_note",
    "functionName": "get_externalcontacts_organization_note",
    "signature": "get_externalcontacts_organization_note(external_organization_id, note_id, expand)",
    "parameters": [
      {
        "name": "external_organization_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "note_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "Note",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nexternal_organization_id = 'external_organization_id_example' # str | External Organization Id\nnote_id = 'note_id_example' # str | Note Id\nexpand = ['expand_example'] # list[str] | which fields, if any, to expand (optional)\n\ntry:\n    # Fetch a note for an external organization\n    api_response = api_instance.get_externalcontacts_organization_note(external_organization_id, note_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_organization_note: %s\\n\" % e)"
  },
  "get_externalcontacts_organization_notes": {
    "operationId": "get_externalcontacts_organization_notes",
    "functionName": "get_externalcontacts_organization_notes",
    "signature": "get_externalcontacts_organization_notes(external_organization_id, page_size, page_number, sort_order, expand)",
    "parameters": [
      {
        "name": "external_organization_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "NoteListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nexternal_organization_id = 'external_organization_id_example' # str | External Organization Id\npage_size = 20 # int | Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional) (default to 20)\npage_number = 1 # int | Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional) (default to 1)\nsort_order = 'sort_order_example' # str | The Note field to sort by. Any of: [createDate]. Direction: [asc, desc]. e.g. \\\"createDate:asc\\\", \\\"createDate:desc\\\" (optional)\nexpand = ['expand_example'] # list[str] | which fields, if any, to expand (optional)\n\ntry:\n    # List notes for an external organization\n    api_response = api_instance.get_externalcontacts_organization_notes(external_organization_id, page_size=page_size, page_number=page_number, sort_order=sort_order, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_organization_notes: %s\\n\" % e)"
  },
  "get_externalcontacts_organization_relationships": {
    "operationId": "get_externalcontacts_organization_relationships",
    "functionName": "get_externalcontacts_organization_relationships",
    "signature": "get_externalcontacts_organization_relationships(external_organization_id, page_size, page_number, expand, sort_order)",
    "parameters": [
      {
        "name": "external_organization_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "RelationshipListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nexternal_organization_id = 'external_organization_id_example' # str | External Organization ID\npage_size = 20 # int | Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional) (default to 20)\npage_number = 1 # int | Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional) (default to 1)\nexpand = ['expand_example'] # list[str] | which fields, if any, to expand (optional)\nsort_order = 'sort_order_example' # str | The Relationship field to sort by. Any of: [createDate, relationship]. Direction: [asc, desc]. e.g. \\\"createDate:asc\\\", \\\"relationship:desc\\\" (optional)\n\ntry:\n    # Fetch a relationship for an external organization\n    api_response = api_instance.get_externalcontacts_organization_relationships(external_organization_id, page_size=page_size, page_number=page_number, expand=expand, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_organization_relationships: %s\\n\" % e)"
  },
  "get_externalcontacts_organizations": {
    "operationId": "get_externalcontacts_organizations",
    "functionName": "get_externalcontacts_organizations",
    "signature": "get_externalcontacts_organizations(page_size, page_number, q, trustor_id, sort_order, expand, include_trustors)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "q",
        "type": "str",
        "required": "false"
      },
      {
        "name": "trustor_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "include_trustors",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "ExternalOrganizationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\npage_size = 20 # int | Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional) (default to 20)\npage_number = 1 # int | Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional) (default to 1)\nq = 'q_example' # str | Search query (optional)\ntrustor_id = ['trustor_id_example'] # list[str] | Search for external organizations by trustorIds (limit 25). If supplied, the 'q' parameters is ignored. Items are returned in the order requested (optional)\nsort_order = 'sort_order_example' # str | The Organization field to sort by. Any of: [companyType, industry, name]. Direction: [asc, desc]. e.g. \\\"companyType:asc\\\", \\\"industry:desc\\\" (optional)\nexpand = ['expand_example'] # list[str] | which fields, if any, to expand (optional)\ninclude_trustors = True # bool | (true or false) whether or not to include trustor information embedded in the externalOrganization (optional)\n\ntry:\n    # Search for external organizations\n    api_response = api_instance.get_externalcontacts_organizations(page_size=page_size, page_number=page_number, q=q, trustor_id=trustor_id, sort_order=sort_order, expand=expand, include_trustors=include_trustors)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_organizations: %s\\n\" % e)"
  },
  "get_externalcontacts_organizations_schema": {
    "operationId": "get_externalcontacts_organizations_schema",
    "functionName": "get_externalcontacts_organizations_schema",
    "signature": "get_externalcontacts_organizations_schema(schema_id)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nschema_id = 'schema_id_example' # str | Schema ID\n\ntry:\n    # Get a schema\n    api_response = api_instance.get_externalcontacts_organizations_schema(schema_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_organizations_schema: %s\\n\" % e)"
  },
  "get_externalcontacts_organizations_schema_version": {
    "operationId": "get_externalcontacts_organizations_schema_version",
    "functionName": "get_externalcontacts_organizations_schema_version",
    "signature": "get_externalcontacts_organizations_schema_version(schema_id, version_id)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nschema_id = 'schema_id_example' # str | Schema ID\nversion_id = 'version_id_example' # str | Schema version\n\ntry:\n    # Get a specific version of a schema\n    api_response = api_instance.get_externalcontacts_organizations_schema_version(schema_id, version_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_organizations_schema_version: %s\\n\" % e)"
  },
  "get_externalcontacts_organizations_schema_versions": {
    "operationId": "get_externalcontacts_organizations_schema_versions",
    "functionName": "get_externalcontacts_organizations_schema_versions",
    "signature": "get_externalcontacts_organizations_schema_versions(schema_id)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nschema_id = 'schema_id_example' # str | Schema ID\n\ntry:\n    # Get all versions of an external organization's schema\n    api_response = api_instance.get_externalcontacts_organizations_schema_versions(schema_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_organizations_schema_versions: %s\\n\" % e)"
  },
  "get_externalcontacts_organizations_schemas": {
    "operationId": "get_externalcontacts_organizations_schemas",
    "functionName": "get_externalcontacts_organizations_schemas",
    "signature": "get_externalcontacts_organizations_schemas()",
    "return": "DataSchemaListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\n\ntry:\n    # Get a list of schemas.\n    api_response = api_instance.get_externalcontacts_organizations_schemas()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_organizations_schemas: %s\\n\" % e)"
  },
  "get_externalcontacts_relationship": {
    "operationId": "get_externalcontacts_relationship",
    "functionName": "get_externalcontacts_relationship",
    "signature": "get_externalcontacts_relationship(relationship_id, expand)",
    "parameters": [
      {
        "name": "relationship_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "Relationship",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nrelationship_id = 'relationship_id_example' # str | Relationship Id\nexpand = ['expand_example'] # list[str] | which fields, if any, to expand (optional)\n\ntry:\n    # Fetch a relationship\n    api_response = api_instance.get_externalcontacts_relationship(relationship_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_relationship: %s\\n\" % e)"
  },
  "get_externalcontacts_reversewhitepageslookup": {
    "operationId": "get_externalcontacts_reversewhitepageslookup",
    "functionName": "get_externalcontacts_reversewhitepageslookup",
    "signature": "get_externalcontacts_reversewhitepageslookup(lookup_val, expand)",
    "parameters": [
      {
        "name": "lookup_val",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ReverseWhitepagesLookupResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nlookup_val = 'lookup_val_example' # str | User supplied value to lookup contacts/externalOrganizations (supports email addresses, e164 phone numbers, Twitter screen names)\nexpand = ['expand_example'] # list[str] | which field, if any, to expand (optional)\n\ntry:\n    # Look up contacts and externalOrganizations based on an attribute. Maximum of 25 values returned.\n    api_response = api_instance.get_externalcontacts_reversewhitepageslookup(lookup_val, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_reversewhitepageslookup: %s\\n\" % e)"
  },
  "get_externalcontacts_scan_contacts": {
    "operationId": "get_externalcontacts_scan_contacts",
    "functionName": "get_externalcontacts_scan_contacts",
    "signature": "get_externalcontacts_scan_contacts(limit, cursor)",
    "parameters": [
      {
        "name": "limit",
        "type": "int",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CursorContactListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nlimit = 56 # int | The number of contacts per page; must be between 10 and 200, default is 100 (optional)\ncursor = 'cursor_example' # str | Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL (optional)\n\ntry:\n    # Scan for external contacts using paging\n    api_response = api_instance.get_externalcontacts_scan_contacts(limit=limit, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_scan_contacts: %s\\n\" % e)"
  },
  "get_externalcontacts_scan_notes": {
    "operationId": "get_externalcontacts_scan_notes",
    "functionName": "get_externalcontacts_scan_notes",
    "signature": "get_externalcontacts_scan_notes(limit, cursor)",
    "parameters": [
      {
        "name": "limit",
        "type": "int",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CursorNoteListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nlimit = 56 # int | The number of notes per page; must be between 10 and 200, default is 100 (optional)\ncursor = 'cursor_example' # str | Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL (optional)\n\ntry:\n    # Scan for notes using paging\n    api_response = api_instance.get_externalcontacts_scan_notes(limit=limit, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_scan_notes: %s\\n\" % e)"
  },
  "get_externalcontacts_scan_organizations": {
    "operationId": "get_externalcontacts_scan_organizations",
    "functionName": "get_externalcontacts_scan_organizations",
    "signature": "get_externalcontacts_scan_organizations(limit, cursor)",
    "parameters": [
      {
        "name": "limit",
        "type": "int",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CursorOrganizationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nlimit = 56 # int | The number of organizations per page; must be between 10 and 200, default is 100 (optional)\ncursor = 'cursor_example' # str | Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL (optional)\n\ntry:\n    # Scan for external organizations using paging\n    api_response = api_instance.get_externalcontacts_scan_organizations(limit=limit, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_scan_organizations: %s\\n\" % e)"
  },
  "get_externalcontacts_scan_relationships": {
    "operationId": "get_externalcontacts_scan_relationships",
    "functionName": "get_externalcontacts_scan_relationships",
    "signature": "get_externalcontacts_scan_relationships(limit, cursor)",
    "parameters": [
      {
        "name": "limit",
        "type": "int",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CursorRelationshipListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nlimit = 56 # int | The number of relationships per page; must be between 10 and 200, default is 100 (optional)\ncursor = 'cursor_example' # str | Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL (optional)\n\ntry:\n    # Scan for relationships\n    api_response = api_instance.get_externalcontacts_scan_relationships(limit=limit, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->get_externalcontacts_scan_relationships: %s\\n\" % e)"
  },
  "patch_externalcontacts_contact_identifiers": {
    "operationId": "patch_externalcontacts_contact_identifiers",
    "functionName": "patch_externalcontacts_contact_identifiers",
    "signature": "patch_externalcontacts_contact_identifiers(contact_id, body)",
    "parameters": [
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "IdentifierClaimRequest",
        "required": "true"
      }
    ],
    "return": "ContactIdentifier",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\ncontact_id = 'contact_id_example' # str | ExternalContact ID\nbody = PureCloudPlatformClientV2.IdentifierClaimRequest() # IdentifierClaimRequest | ClaimRequest\n\ntry:\n    # Claim or release identifiers for a contact\n    api_response = api_instance.patch_externalcontacts_contact_identifiers(contact_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->patch_externalcontacts_contact_identifiers: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_contacts": {
    "operationId": "post_externalcontacts_bulk_contacts",
    "functionName": "post_externalcontacts_bulk_contacts",
    "signature": "post_externalcontacts_bulk_contacts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkFetchContactsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkIdsRequest() # BulkIdsRequest | Contact ids\n\ntry:\n    # Bulk fetch contacts\n    api_response = api_instance.post_externalcontacts_bulk_contacts(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_contacts: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_contacts_add": {
    "operationId": "post_externalcontacts_bulk_contacts_add",
    "functionName": "post_externalcontacts_bulk_contacts_add",
    "signature": "post_externalcontacts_bulk_contacts_add(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkContactsRequest",
        "required": "true"
      }
    ],
    "return": "BulkContactsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkContactsRequest() # BulkContactsRequest | Contacts\n\ntry:\n    # Bulk add contacts\n    api_response = api_instance.post_externalcontacts_bulk_contacts_add(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_contacts_add: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_contacts_remove": {
    "operationId": "post_externalcontacts_bulk_contacts_remove",
    "functionName": "post_externalcontacts_bulk_contacts_remove",
    "signature": "post_externalcontacts_bulk_contacts_remove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkDeleteResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkIdsRequest() # BulkIdsRequest | Contact ids\n\ntry:\n    # Bulk remove contacts\n    api_response = api_instance.post_externalcontacts_bulk_contacts_remove(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_contacts_remove: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_contacts_unresolved": {
    "operationId": "post_externalcontacts_bulk_contacts_unresolved",
    "functionName": "post_externalcontacts_bulk_contacts_unresolved",
    "signature": "post_externalcontacts_bulk_contacts_unresolved(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkFetchContactsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkIdsRequest() # BulkIdsRequest | Contact ids\n\ntry:\n    # Bulk fetch unresolved ancestor contacts\n    api_response = api_instance.post_externalcontacts_bulk_contacts_unresolved(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_contacts_unresolved: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_contacts_update": {
    "operationId": "post_externalcontacts_bulk_contacts_update",
    "functionName": "post_externalcontacts_bulk_contacts_update",
    "signature": "post_externalcontacts_bulk_contacts_update(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkContactsRequest",
        "required": "true"
      }
    ],
    "return": "BulkContactsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkContactsRequest() # BulkContactsRequest | Contacts\n\ntry:\n    # Bulk update contacts\n    api_response = api_instance.post_externalcontacts_bulk_contacts_update(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_contacts_update: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_notes": {
    "operationId": "post_externalcontacts_bulk_notes",
    "functionName": "post_externalcontacts_bulk_notes",
    "signature": "post_externalcontacts_bulk_notes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkFetchNotesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkIdsRequest() # BulkIdsRequest | Note ids\n\ntry:\n    # Bulk fetch notes\n    api_response = api_instance.post_externalcontacts_bulk_notes(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_notes: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_notes_add": {
    "operationId": "post_externalcontacts_bulk_notes_add",
    "functionName": "post_externalcontacts_bulk_notes_add",
    "signature": "post_externalcontacts_bulk_notes_add(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkNotesRequest",
        "required": "true"
      }
    ],
    "return": "BulkNotesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkNotesRequest() # BulkNotesRequest | Notes\n\ntry:\n    # Bulk add notes\n    api_response = api_instance.post_externalcontacts_bulk_notes_add(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_notes_add: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_notes_remove": {
    "operationId": "post_externalcontacts_bulk_notes_remove",
    "functionName": "post_externalcontacts_bulk_notes_remove",
    "signature": "post_externalcontacts_bulk_notes_remove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkDeleteResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkIdsRequest() # BulkIdsRequest | Note ids\n\ntry:\n    # Bulk remove notes\n    api_response = api_instance.post_externalcontacts_bulk_notes_remove(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_notes_remove: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_notes_update": {
    "operationId": "post_externalcontacts_bulk_notes_update",
    "functionName": "post_externalcontacts_bulk_notes_update",
    "signature": "post_externalcontacts_bulk_notes_update(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkNotesRequest",
        "required": "true"
      }
    ],
    "return": "BulkNotesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkNotesRequest() # BulkNotesRequest | Notes\n\ntry:\n    # Bulk update notes\n    api_response = api_instance.post_externalcontacts_bulk_notes_update(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_notes_update: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_organizations": {
    "operationId": "post_externalcontacts_bulk_organizations",
    "functionName": "post_externalcontacts_bulk_organizations",
    "signature": "post_externalcontacts_bulk_organizations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkFetchOrganizationsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkIdsRequest() # BulkIdsRequest | Organizations ids\n\ntry:\n    # Bulk fetch organizations\n    api_response = api_instance.post_externalcontacts_bulk_organizations(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_organizations: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_organizations_add": {
    "operationId": "post_externalcontacts_bulk_organizations_add",
    "functionName": "post_externalcontacts_bulk_organizations_add",
    "signature": "post_externalcontacts_bulk_organizations_add(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkOrganizationsRequest",
        "required": "true"
      }
    ],
    "return": "BulkOrganizationsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkOrganizationsRequest() # BulkOrganizationsRequest | Organizations\n\ntry:\n    # Bulk add organizations\n    api_response = api_instance.post_externalcontacts_bulk_organizations_add(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_organizations_add: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_organizations_remove": {
    "operationId": "post_externalcontacts_bulk_organizations_remove",
    "functionName": "post_externalcontacts_bulk_organizations_remove",
    "signature": "post_externalcontacts_bulk_organizations_remove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkDeleteResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkIdsRequest() # BulkIdsRequest | Organization ids\n\ntry:\n    # Bulk remove organizations\n    api_response = api_instance.post_externalcontacts_bulk_organizations_remove(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_organizations_remove: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_organizations_update": {
    "operationId": "post_externalcontacts_bulk_organizations_update",
    "functionName": "post_externalcontacts_bulk_organizations_update",
    "signature": "post_externalcontacts_bulk_organizations_update(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkOrganizationsRequest",
        "required": "true"
      }
    ],
    "return": "BulkOrganizationsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkOrganizationsRequest() # BulkOrganizationsRequest | Organizations\n\ntry:\n    # Bulk update organizations\n    api_response = api_instance.post_externalcontacts_bulk_organizations_update(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_organizations_update: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_relationships": {
    "operationId": "post_externalcontacts_bulk_relationships",
    "functionName": "post_externalcontacts_bulk_relationships",
    "signature": "post_externalcontacts_bulk_relationships(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkFetchRelationshipsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkIdsRequest() # BulkIdsRequest | Relationships ids\n\ntry:\n    # Bulk fetch relationships\n    api_response = api_instance.post_externalcontacts_bulk_relationships(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_relationships: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_relationships_add": {
    "operationId": "post_externalcontacts_bulk_relationships_add",
    "functionName": "post_externalcontacts_bulk_relationships_add",
    "signature": "post_externalcontacts_bulk_relationships_add(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkRelationshipsRequest",
        "required": "true"
      }
    ],
    "return": "BulkRelationshipsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkRelationshipsRequest() # BulkRelationshipsRequest | Relationships\n\ntry:\n    # Bulk add relationships\n    api_response = api_instance.post_externalcontacts_bulk_relationships_add(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_relationships_add: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_relationships_remove": {
    "operationId": "post_externalcontacts_bulk_relationships_remove",
    "functionName": "post_externalcontacts_bulk_relationships_remove",
    "signature": "post_externalcontacts_bulk_relationships_remove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkDeleteResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkIdsRequest() # BulkIdsRequest | Relationships ids\n\ntry:\n    # Bulk remove relationships\n    api_response = api_instance.post_externalcontacts_bulk_relationships_remove(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_relationships_remove: %s\\n\" % e)"
  },
  "post_externalcontacts_bulk_relationships_update": {
    "operationId": "post_externalcontacts_bulk_relationships_update",
    "functionName": "post_externalcontacts_bulk_relationships_update",
    "signature": "post_externalcontacts_bulk_relationships_update(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkRelationshipsRequest",
        "required": "true"
      }
    ],
    "return": "BulkRelationshipsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.BulkRelationshipsRequest() # BulkRelationshipsRequest | Relationships\n\ntry:\n    # Bulk update relationships\n    api_response = api_instance.post_externalcontacts_bulk_relationships_update(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_bulk_relationships_update: %s\\n\" % e)"
  },
  "post_externalcontacts_contact_notes": {
    "operationId": "post_externalcontacts_contact_notes",
    "functionName": "post_externalcontacts_contact_notes",
    "signature": "post_externalcontacts_contact_notes(contact_id, body)",
    "parameters": [
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Note",
        "required": "true"
      }
    ],
    "return": "Note",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\ncontact_id = 'contact_id_example' # str | ExternalContact Id\nbody = PureCloudPlatformClientV2.Note() # Note | ExternalContact\n\ntry:\n    # Create a note for an external contact\n    api_response = api_instance.post_externalcontacts_contact_notes(contact_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_contact_notes: %s\\n\" % e)"
  },
  "post_externalcontacts_contact_promotion": {
    "operationId": "post_externalcontacts_contact_promotion",
    "functionName": "post_externalcontacts_contact_promotion",
    "signature": "post_externalcontacts_contact_promotion(contact_id)",
    "parameters": [
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ExternalContact",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\ncontact_id = 'contact_id_example' # str | ExternalContact ID\n\ntry:\n    # Promote an observed contact (ephemeral or identified) to a curated contact\n    api_response = api_instance.post_externalcontacts_contact_promotion(contact_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_contact_promotion: %s\\n\" % e)"
  },
  "post_externalcontacts_contacts": {
    "operationId": "post_externalcontacts_contacts",
    "functionName": "post_externalcontacts_contacts",
    "signature": "post_externalcontacts_contacts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ExternalContact",
        "required": "true"
      }
    ],
    "return": "ExternalContact",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.ExternalContact() # ExternalContact | ExternalContact\n\ntry:\n    # Create an external contact\n    api_response = api_instance.post_externalcontacts_contacts(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_contacts: %s\\n\" % e)"
  },
  "post_externalcontacts_contacts_schemas": {
    "operationId": "post_externalcontacts_contacts_schemas",
    "functionName": "post_externalcontacts_contacts_schemas",
    "signature": "post_externalcontacts_contacts_schemas(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DataSchema",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.DataSchema() # DataSchema | Schema\n\ntry:\n    # Create a schema\n    api_response = api_instance.post_externalcontacts_contacts_schemas(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_contacts_schemas: %s\\n\" % e)"
  },
  "post_externalcontacts_identifierlookup": {
    "operationId": "post_externalcontacts_identifierlookup",
    "functionName": "post_externalcontacts_identifierlookup",
    "signature": "post_externalcontacts_identifierlookup(identifier)",
    "parameters": [
      {
        "name": "identifier",
        "type": "ContactIdentifier",
        "required": "true"
      }
    ],
    "return": "ExternalContact",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nidentifier = PureCloudPlatformClientV2.ContactIdentifier() # ContactIdentifier | \n\ntry:\n    # Fetch a contact using an identifier type and value.\n    api_response = api_instance.post_externalcontacts_identifierlookup(identifier)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_identifierlookup: %s\\n\" % e)"
  },
  "post_externalcontacts_merge_contacts": {
    "operationId": "post_externalcontacts_merge_contacts",
    "functionName": "post_externalcontacts_merge_contacts",
    "signature": "post_externalcontacts_merge_contacts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "MergeRequest",
        "required": "true"
      }
    ],
    "return": "ExternalContact",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.MergeRequest() # MergeRequest | MergeRequest\n\ntry:\n    # Merge two contacts into a new contact record\n    api_response = api_instance.post_externalcontacts_merge_contacts(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_merge_contacts: %s\\n\" % e)"
  },
  "post_externalcontacts_organization_notes": {
    "operationId": "post_externalcontacts_organization_notes",
    "functionName": "post_externalcontacts_organization_notes",
    "signature": "post_externalcontacts_organization_notes(external_organization_id, body)",
    "parameters": [
      {
        "name": "external_organization_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Note",
        "required": "true"
      }
    ],
    "return": "Note",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nexternal_organization_id = 'external_organization_id_example' # str | External Organization Id\nbody = PureCloudPlatformClientV2.Note() # Note | ExternalContact\n\ntry:\n    # Create a note for an external organization\n    api_response = api_instance.post_externalcontacts_organization_notes(external_organization_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_organization_notes: %s\\n\" % e)"
  },
  "post_externalcontacts_organizations": {
    "operationId": "post_externalcontacts_organizations",
    "functionName": "post_externalcontacts_organizations",
    "signature": "post_externalcontacts_organizations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ExternalOrganization",
        "required": "true"
      }
    ],
    "return": "ExternalOrganization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.ExternalOrganization() # ExternalOrganization | ExternalOrganization\n\ntry:\n    # Create an external organization\n    api_response = api_instance.post_externalcontacts_organizations(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_organizations: %s\\n\" % e)"
  },
  "post_externalcontacts_organizations_schemas": {
    "operationId": "post_externalcontacts_organizations_schemas",
    "functionName": "post_externalcontacts_organizations_schemas",
    "signature": "post_externalcontacts_organizations_schemas(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DataSchema",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.DataSchema() # DataSchema | Schema\n\ntry:\n    # Create a schema\n    api_response = api_instance.post_externalcontacts_organizations_schemas(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_organizations_schemas: %s\\n\" % e)"
  },
  "post_externalcontacts_relationships": {
    "operationId": "post_externalcontacts_relationships",
    "functionName": "post_externalcontacts_relationships",
    "signature": "post_externalcontacts_relationships(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Relationship",
        "required": "true"
      }
    ],
    "return": "Relationship",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nbody = PureCloudPlatformClientV2.Relationship() # Relationship | Relationship\n\ntry:\n    # Create a relationship\n    api_response = api_instance.post_externalcontacts_relationships(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->post_externalcontacts_relationships: %s\\n\" % e)"
  },
  "put_externalcontacts_contact": {
    "operationId": "put_externalcontacts_contact",
    "functionName": "put_externalcontacts_contact",
    "signature": "put_externalcontacts_contact(contact_id, body)",
    "parameters": [
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ExternalContact",
        "required": "true"
      }
    ],
    "return": "ExternalContact",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\ncontact_id = 'contact_id_example' # str | ExternalContact ID\nbody = PureCloudPlatformClientV2.ExternalContact() # ExternalContact | ExternalContact\n\ntry:\n    # Update an external contact\n    api_response = api_instance.put_externalcontacts_contact(contact_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->put_externalcontacts_contact: %s\\n\" % e)"
  },
  "put_externalcontacts_contact_note": {
    "operationId": "put_externalcontacts_contact_note",
    "functionName": "put_externalcontacts_contact_note",
    "signature": "put_externalcontacts_contact_note(contact_id, note_id, body)",
    "parameters": [
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "note_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Note",
        "required": "true"
      }
    ],
    "return": "Note",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\ncontact_id = 'contact_id_example' # str | ExternalContact Id\nnote_id = 'note_id_example' # str | Note Id\nbody = PureCloudPlatformClientV2.Note() # Note | Note\n\ntry:\n    # Update a note for an external contact\n    api_response = api_instance.put_externalcontacts_contact_note(contact_id, note_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->put_externalcontacts_contact_note: %s\\n\" % e)"
  },
  "put_externalcontacts_contacts_schema": {
    "operationId": "put_externalcontacts_contacts_schema",
    "functionName": "put_externalcontacts_contacts_schema",
    "signature": "put_externalcontacts_contacts_schema(schema_id, body)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DataSchema",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nschema_id = 'schema_id_example' # str | Schema ID\nbody = PureCloudPlatformClientV2.DataSchema() # DataSchema | Data Schema\n\ntry:\n    # Update a schema\n    api_response = api_instance.put_externalcontacts_contacts_schema(schema_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->put_externalcontacts_contacts_schema: %s\\n\" % e)"
  },
  "put_externalcontacts_conversation": {
    "operationId": "put_externalcontacts_conversation",
    "functionName": "put_externalcontacts_conversation",
    "signature": "put_externalcontacts_conversation(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConversationAssociation",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\nbody = PureCloudPlatformClientV2.ConversationAssociation() # ConversationAssociation | ConversationAssociation\n\ntry:\n    # Associate/disassociate an external contact with a conversation\n    api_instance.put_externalcontacts_conversation(conversation_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->put_externalcontacts_conversation: %s\\n\" % e)"
  },
  "put_externalcontacts_organization": {
    "operationId": "put_externalcontacts_organization",
    "functionName": "put_externalcontacts_organization",
    "signature": "put_externalcontacts_organization(external_organization_id, body)",
    "parameters": [
      {
        "name": "external_organization_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ExternalOrganization",
        "required": "true"
      }
    ],
    "return": "ExternalOrganization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nexternal_organization_id = 'external_organization_id_example' # str | External Organization ID\nbody = PureCloudPlatformClientV2.ExternalOrganization() # ExternalOrganization | ExternalOrganization\n\ntry:\n    # Update an external organization\n    api_response = api_instance.put_externalcontacts_organization(external_organization_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->put_externalcontacts_organization: %s\\n\" % e)"
  },
  "put_externalcontacts_organization_note": {
    "operationId": "put_externalcontacts_organization_note",
    "functionName": "put_externalcontacts_organization_note",
    "signature": "put_externalcontacts_organization_note(external_organization_id, note_id, body)",
    "parameters": [
      {
        "name": "external_organization_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "note_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Note",
        "required": "true"
      }
    ],
    "return": "Note",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nexternal_organization_id = 'external_organization_id_example' # str | External Organization Id\nnote_id = 'note_id_example' # str | Note Id\nbody = PureCloudPlatformClientV2.Note() # Note | Note\n\ntry:\n    # Update a note for an external organization\n    api_response = api_instance.put_externalcontacts_organization_note(external_organization_id, note_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->put_externalcontacts_organization_note: %s\\n\" % e)"
  },
  "put_externalcontacts_organization_trustor_trustor_id": {
    "operationId": "put_externalcontacts_organization_trustor_trustor_id",
    "functionName": "put_externalcontacts_organization_trustor_trustor_id",
    "signature": "put_externalcontacts_organization_trustor_trustor_id(external_organization_id, trustor_id)",
    "parameters": [
      {
        "name": "external_organization_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustor_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ExternalOrganizationTrustorLink",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nexternal_organization_id = 'external_organization_id_example' # str | External Organization ID\ntrustor_id = 'trustor_id_example' # str | Trustor ID\n\ntry:\n    # Links a Trustor with an External Organization\n    api_response = api_instance.put_externalcontacts_organization_trustor_trustor_id(external_organization_id, trustor_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->put_externalcontacts_organization_trustor_trustor_id: %s\\n\" % e)"
  },
  "put_externalcontacts_organizations_schema": {
    "operationId": "put_externalcontacts_organizations_schema",
    "functionName": "put_externalcontacts_organizations_schema",
    "signature": "put_externalcontacts_organizations_schema(schema_id, body)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DataSchema",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nschema_id = 'schema_id_example' # str | Schema ID\nbody = PureCloudPlatformClientV2.DataSchema() # DataSchema | Data Schema\n\ntry:\n    # Update a schema\n    api_response = api_instance.put_externalcontacts_organizations_schema(schema_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->put_externalcontacts_organizations_schema: %s\\n\" % e)"
  },
  "put_externalcontacts_relationship": {
    "operationId": "put_externalcontacts_relationship",
    "functionName": "put_externalcontacts_relationship",
    "signature": "put_externalcontacts_relationship(relationship_id, body)",
    "parameters": [
      {
        "name": "relationship_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Relationship",
        "required": "true"
      }
    ],
    "return": "Relationship",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ExternalContactsApi();\nrelationship_id = 'relationship_id_example' # str | Relationship Id\nbody = PureCloudPlatformClientV2.Relationship() # Relationship | Relationship\n\ntry:\n    # Update a relationship\n    api_response = api_instance.put_externalcontacts_relationship(relationship_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ExternalContactsApi->put_externalcontacts_relationship: %s\\n\" % e)"
  },
  "delete_fax_document": {
    "operationId": "delete_fax_document",
    "functionName": "delete_fax_document",
    "signature": "delete_fax_document(document_id)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FaxApi();\ndocument_id = 'document_id_example' # str | Document ID\n\ntry:\n    # Delete a fax document.\n    api_instance.delete_fax_document(document_id)\nexcept ApiException as e:\n    print(\"Exception when calling FaxApi->delete_fax_document: %s\\n\" % e)"
  },
  "get_fax_document": {
    "operationId": "get_fax_document",
    "functionName": "get_fax_document",
    "signature": "get_fax_document(document_id)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "FaxDocument",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FaxApi();\ndocument_id = 'document_id_example' # str | Document ID\n\ntry:\n    # Get a document.\n    api_response = api_instance.get_fax_document(document_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FaxApi->get_fax_document: %s\\n\" % e)"
  },
  "get_fax_document_content": {
    "operationId": "get_fax_document_content",
    "functionName": "get_fax_document_content",
    "signature": "get_fax_document_content(document_id)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DownloadResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FaxApi();\ndocument_id = 'document_id_example' # str | Document ID\n\ntry:\n    # Download a fax document.\n    api_response = api_instance.get_fax_document_content(document_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FaxApi->get_fax_document_content: %s\\n\" % e)"
  },
  "get_fax_documents": {
    "operationId": "get_fax_documents",
    "functionName": "get_fax_documents",
    "signature": "get_fax_documents(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "FaxDocumentEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FaxApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a list of fax documents.\n    api_response = api_instance.get_fax_documents(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FaxApi->get_fax_documents: %s\\n\" % e)"
  },
  "get_fax_settings": {
    "operationId": "get_fax_settings",
    "functionName": "get_fax_settings",
    "signature": "get_fax_settings()",
    "return": "FaxConfig",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FaxApi();\n\ntry:\n    # Get organization config for given organization\n    api_response = api_instance.get_fax_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FaxApi->get_fax_settings: %s\\n\" % e)"
  },
  "get_fax_summary": {
    "operationId": "get_fax_summary",
    "functionName": "get_fax_summary",
    "signature": "get_fax_summary()",
    "return": "FaxSummary",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FaxApi();\n\ntry:\n    # Get fax summary\n    api_response = api_instance.get_fax_summary()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FaxApi->get_fax_summary: %s\\n\" % e)"
  },
  "put_fax_document": {
    "operationId": "put_fax_document",
    "functionName": "put_fax_document",
    "signature": "put_fax_document(document_id, body)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "FaxDocument",
        "required": "true"
      }
    ],
    "return": "FaxDocument",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FaxApi();\ndocument_id = 'document_id_example' # str | Document ID\nbody = PureCloudPlatformClientV2.FaxDocument() # FaxDocument | Document\n\ntry:\n    # Update a fax document.\n    api_response = api_instance.put_fax_document(document_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FaxApi->put_fax_document: %s\\n\" % e)"
  },
  "put_fax_settings": {
    "operationId": "put_fax_settings",
    "functionName": "put_fax_settings",
    "signature": "put_fax_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FaxConfig",
        "required": "false"
      }
    ],
    "return": "FaxConfig",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.FaxApi();\nbody = PureCloudPlatformClientV2.FaxConfig() # FaxConfig |  (optional)\n\ntry:\n    # Update/write organization config for given organization\n    api_response = api_instance.put_fax_settings(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FaxApi->put_fax_settings: %s\\n\" % e)"
  },
  "delete_employeeperformance_externalmetrics_definition": {
    "operationId": "delete_employeeperformance_externalmetrics_definition",
    "functionName": "delete_employeeperformance_externalmetrics_definition",
    "signature": "delete_employeeperformance_externalmetrics_definition(metric_id)",
    "parameters": [
      {
        "name": "metric_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nmetric_id = 'metric_id_example' # str | Specifies the External Metric Definition ID\n\ntry:\n    # Delete an External Metric Definition\n    api_instance.delete_employeeperformance_externalmetrics_definition(metric_id)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->delete_employeeperformance_externalmetrics_definition: %s\\n\" % e)"
  },
  "get_employeeperformance_externalmetrics_definition": {
    "operationId": "get_employeeperformance_externalmetrics_definition",
    "functionName": "get_employeeperformance_externalmetrics_definition",
    "signature": "get_employeeperformance_externalmetrics_definition(metric_id)",
    "parameters": [
      {
        "name": "metric_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ExternalMetricDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nmetric_id = 'metric_id_example' # str | Specifies the External Metric Definition ID\n\ntry:\n    # Get an External Metric Definition\n    api_response = api_instance.get_employeeperformance_externalmetrics_definition(metric_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_employeeperformance_externalmetrics_definition: %s\\n\" % e)"
  },
  "get_employeeperformance_externalmetrics_definitions": {
    "operationId": "get_employeeperformance_externalmetrics_definitions",
    "functionName": "get_employeeperformance_externalmetrics_definitions",
    "signature": "get_employeeperformance_externalmetrics_definitions(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "ExternalMetricDefinitionListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a list of External Metric Definitions of an organization, sorted by name in ascending order\n    api_response = api_instance.get_employeeperformance_externalmetrics_definitions(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_employeeperformance_externalmetrics_definitions: %s\\n\" % e)"
  },
  "get_gamification_insights": {
    "operationId": "get_gamification_insights",
    "functionName": "get_gamification_insights",
    "signature": "get_gamification_insights(filter_type, filter_id, granularity, comparative_period_start_workday, primary_period_start_workday, page_size, page_number, sort_key, sort_metric_id, sort_order, user_ids)",
    "parameters": [
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "str",
        "required": "true"
      },
      {
        "name": "comparative_period_start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "primary_period_start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_key",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_metric_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "user_ids",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "InsightsSummary",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nfilter_id = 'filter_id_example' # str | ID for the filter type.\ngranularity = 'granularity_example' # str | Granularity\ncomparative_period_start_workday = '2013-10-20' # date | The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nprimary_period_start_workday = '2013-10-20' # date | The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_key = 'sort_key_example' # str | Sort key (optional)\nsort_metric_id = 'sort_metric_id_example' # str | Sort Metric Id (optional)\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\nuser_ids = 'user_ids_example' # str | A list of up to 100 comma-separated user Ids (optional)\n\ntry:\n    # Get insights summary\n    api_response = api_instance.get_gamification_insights(filter_type, filter_id, granularity, comparative_period_start_workday, primary_period_start_workday, page_size=page_size, page_number=page_number, sort_key=sort_key, sort_metric_id=sort_metric_id, sort_order=sort_order, user_ids=user_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_insights: %s\\n\" % e)"
  },
  "get_gamification_insights_details": {
    "operationId": "get_gamification_insights_details",
    "functionName": "get_gamification_insights_details",
    "signature": "get_gamification_insights_details(filter_type, filter_id, granularity, comparative_period_start_workday, primary_period_start_workday)",
    "parameters": [
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "str",
        "required": "true"
      },
      {
        "name": "comparative_period_start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "primary_period_start_workday",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "InsightsDetails",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nfilter_id = 'filter_id_example' # str | ID for the filter type.\ngranularity = 'granularity_example' # str | Granularity\ncomparative_period_start_workday = '2013-10-20' # date | The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nprimary_period_start_workday = '2013-10-20' # date | The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # Get insights details for the current user\n    api_response = api_instance.get_gamification_insights_details(filter_type, filter_id, granularity, comparative_period_start_workday, primary_period_start_workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_insights_details: %s\\n\" % e)"
  },
  "get_gamification_insights_groups_trends": {
    "operationId": "get_gamification_insights_groups_trends",
    "functionName": "get_gamification_insights_groups_trends",
    "signature": "get_gamification_insights_groups_trends(filter_type, filter_id, granularity, comparative_period_start_workday, comparative_period_end_workday, primary_period_start_workday, primary_period_end_workday)",
    "parameters": [
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "str",
        "required": "true"
      },
      {
        "name": "comparative_period_start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "comparative_period_end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "primary_period_start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "primary_period_end_workday",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "InsightsTrend",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nfilter_id = 'filter_id_example' # str | ID for the filter type.\ngranularity = 'granularity_example' # str | Granularity\ncomparative_period_start_workday = '2013-10-20' # date | The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\ncomparative_period_end_workday = '2013-10-20' # date | The end work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nprimary_period_start_workday = '2013-10-20' # date | The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nprimary_period_end_workday = '2013-10-20' # date | The end work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # Get insights overall trend for the current user\n    api_response = api_instance.get_gamification_insights_groups_trends(filter_type, filter_id, granularity, comparative_period_start_workday, comparative_period_end_workday, primary_period_start_workday, primary_period_end_workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_insights_groups_trends: %s\\n\" % e)"
  },
  "get_gamification_insights_groups_trends_all": {
    "operationId": "get_gamification_insights_groups_trends_all",
    "functionName": "get_gamification_insights_groups_trends_all",
    "signature": "get_gamification_insights_groups_trends_all(filter_type, filter_id, granularity, comparative_period_start_workday, comparative_period_end_workday, primary_period_start_workday, primary_period_end_workday)",
    "parameters": [
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "str",
        "required": "true"
      },
      {
        "name": "comparative_period_start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "comparative_period_end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "primary_period_start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "primary_period_end_workday",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "InsightsTrend",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nfilter_id = 'filter_id_example' # str | ID for the filter type.\ngranularity = 'granularity_example' # str | Granularity\ncomparative_period_start_workday = '2013-10-20' # date | The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\ncomparative_period_end_workday = '2013-10-20' # date | The end work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nprimary_period_start_workday = '2013-10-20' # date | The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nprimary_period_end_workday = '2013-10-20' # date | The end work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # Get insights overall trend\n    api_response = api_instance.get_gamification_insights_groups_trends_all(filter_type, filter_id, granularity, comparative_period_start_workday, comparative_period_end_workday, primary_period_start_workday, primary_period_end_workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_insights_groups_trends_all: %s\\n\" % e)"
  },
  "get_gamification_insights_members": {
    "operationId": "get_gamification_insights_members",
    "functionName": "get_gamification_insights_members",
    "signature": "get_gamification_insights_members(filter_type, filter_id, granularity, start_workday)",
    "parameters": [
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "str",
        "required": "true"
      },
      {
        "name": "start_workday",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "InsightsAgents",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nfilter_id = 'filter_id_example' # str | ID for the filter type.\ngranularity = 'granularity_example' # str | Granularity\nstart_workday = '2013-10-20' # date | The start work day. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # Query users in a profile during a period of time\n    api_response = api_instance.get_gamification_insights_members(filter_type, filter_id, granularity, start_workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_insights_members: %s\\n\" % e)"
  },
  "get_gamification_insights_trends": {
    "operationId": "get_gamification_insights_trends",
    "functionName": "get_gamification_insights_trends",
    "signature": "get_gamification_insights_trends(filter_type, filter_id, granularity, comparative_period_start_workday, comparative_period_end_workday, primary_period_start_workday, primary_period_end_workday)",
    "parameters": [
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "str",
        "required": "true"
      },
      {
        "name": "comparative_period_start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "comparative_period_end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "primary_period_start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "primary_period_end_workday",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "UserInsightsTrend",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nfilter_id = 'filter_id_example' # str | ID for the filter type.\ngranularity = 'granularity_example' # str | Granularity\ncomparative_period_start_workday = '2013-10-20' # date | The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\ncomparative_period_end_workday = '2013-10-20' # date | The end work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nprimary_period_start_workday = '2013-10-20' # date | The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nprimary_period_end_workday = '2013-10-20' # date | The end work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # Get insights user trend for the current user\n    api_response = api_instance.get_gamification_insights_trends(filter_type, filter_id, granularity, comparative_period_start_workday, comparative_period_end_workday, primary_period_start_workday, primary_period_end_workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_insights_trends: %s\\n\" % e)"
  },
  "get_gamification_insights_user_details": {
    "operationId": "get_gamification_insights_user_details",
    "functionName": "get_gamification_insights_user_details",
    "signature": "get_gamification_insights_user_details(user_id, filter_type, filter_id, granularity, comparative_period_start_workday, primary_period_start_workday)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "str",
        "required": "true"
      },
      {
        "name": "comparative_period_start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "primary_period_start_workday",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "InsightsDetails",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nuser_id = 'user_id_example' # str | The ID of a user.\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nfilter_id = 'filter_id_example' # str | ID for the filter type.\ngranularity = 'granularity_example' # str | Granularity\ncomparative_period_start_workday = '2013-10-20' # date | The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nprimary_period_start_workday = '2013-10-20' # date | The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # Get insights details for the user\n    api_response = api_instance.get_gamification_insights_user_details(user_id, filter_type, filter_id, granularity, comparative_period_start_workday, primary_period_start_workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_insights_user_details: %s\\n\" % e)"
  },
  "get_gamification_insights_user_trends": {
    "operationId": "get_gamification_insights_user_trends",
    "functionName": "get_gamification_insights_user_trends",
    "signature": "get_gamification_insights_user_trends(user_id, filter_type, filter_id, granularity, comparative_period_start_workday, comparative_period_end_workday, primary_period_start_workday, primary_period_end_workday)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "granularity",
        "type": "str",
        "required": "true"
      },
      {
        "name": "comparative_period_start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "comparative_period_end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "primary_period_start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "primary_period_end_workday",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "UserInsightsTrend",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nuser_id = 'user_id_example' # str | The ID of a user.\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nfilter_id = 'filter_id_example' # str | ID for the filter type.\ngranularity = 'granularity_example' # str | Granularity\ncomparative_period_start_workday = '2013-10-20' # date | The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\ncomparative_period_end_workday = '2013-10-20' # date | The end work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nprimary_period_start_workday = '2013-10-20' # date | The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nprimary_period_end_workday = '2013-10-20' # date | The end work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # Get insights user trend for the user\n    api_response = api_instance.get_gamification_insights_user_trends(user_id, filter_type, filter_id, granularity, comparative_period_start_workday, comparative_period_end_workday, primary_period_start_workday, primary_period_end_workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_insights_user_trends: %s\\n\" % e)"
  },
  "get_gamification_leaderboard": {
    "operationId": "get_gamification_leaderboard",
    "functionName": "get_gamification_leaderboard",
    "signature": "get_gamification_leaderboard(start_workday, end_workday, metric_id)",
    "parameters": [
      {
        "name": "start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "metric_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Leaderboard",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nstart_workday = '2013-10-20' # date | Start workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nend_workday = '2013-10-20' # date | End workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nmetric_id = 'metric_id_example' # str | Metric Id for which the leaderboard is to be generated. The total points is used if nothing is given. (optional)\n\ntry:\n    # Leaderboard of the requesting user's division or performance profile\n    api_response = api_instance.get_gamification_leaderboard(start_workday, end_workday, metric_id=metric_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_leaderboard: %s\\n\" % e)"
  },
  "get_gamification_leaderboard_all": {
    "operationId": "get_gamification_leaderboard_all",
    "functionName": "get_gamification_leaderboard_all",
    "signature": "get_gamification_leaderboard_all(filter_type, filter_id, start_workday, end_workday, metric_id)",
    "parameters": [
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "metric_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Leaderboard",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nfilter_id = 'filter_id_example' # str | ID for the filter type. For example, division or performance profile Id\nstart_workday = '2013-10-20' # date | Start workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nend_workday = '2013-10-20' # date | End workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nmetric_id = 'metric_id_example' # str | Metric Id for which the leaderboard is to be generated. The total points is used if nothing is given. (optional)\n\ntry:\n    # Leaderboard by filter type\n    api_response = api_instance.get_gamification_leaderboard_all(filter_type, filter_id, start_workday, end_workday, metric_id=metric_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_leaderboard_all: %s\\n\" % e)"
  },
  "get_gamification_leaderboard_all_bestpoints": {
    "operationId": "get_gamification_leaderboard_all_bestpoints",
    "functionName": "get_gamification_leaderboard_all_bestpoints",
    "signature": "get_gamification_leaderboard_all_bestpoints(filter_type, filter_id)",
    "parameters": [
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OverallBestPoints",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nfilter_id = 'filter_id_example' # str | ID for the filter type. For example, division or performance profile Id\n\ntry:\n    # Best Points by division or performance profile\n    api_response = api_instance.get_gamification_leaderboard_all_bestpoints(filter_type, filter_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_leaderboard_all_bestpoints: %s\\n\" % e)"
  },
  "get_gamification_leaderboard_bestpoints": {
    "operationId": "get_gamification_leaderboard_bestpoints",
    "functionName": "get_gamification_leaderboard_bestpoints",
    "signature": "get_gamification_leaderboard_bestpoints()",
    "return": "OverallBestPoints",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\n\ntry:\n    # Best Points of the requesting user's current performance profile or division\n    api_response = api_instance.get_gamification_leaderboard_bestpoints()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_leaderboard_bestpoints: %s\\n\" % e)"
  },
  "get_gamification_metricdefinition": {
    "operationId": "get_gamification_metricdefinition",
    "functionName": "get_gamification_metricdefinition",
    "signature": "get_gamification_metricdefinition(metric_definition_id)",
    "parameters": [
      {
        "name": "metric_definition_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MetricDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nmetric_definition_id = 'metric_definition_id_example' # str | metric definition id\n\ntry:\n    # Metric definition by id\n    api_response = api_instance.get_gamification_metricdefinition(metric_definition_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_metricdefinition: %s\\n\" % e)"
  },
  "get_gamification_metricdefinitions": {
    "operationId": "get_gamification_metricdefinitions",
    "functionName": "get_gamification_metricdefinitions",
    "signature": "get_gamification_metricdefinitions()",
    "return": "GetMetricDefinitionsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\n\ntry:\n    # All metric definitions\n    api_response = api_instance.get_gamification_metricdefinitions()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_metricdefinitions: %s\\n\" % e)"
  },
  "get_gamification_profile": {
    "operationId": "get_gamification_profile",
    "functionName": "get_gamification_profile",
    "signature": "get_gamification_profile(profile_id)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PerformanceProfile",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | performanceProfileId\n\ntry:\n    # Performance profile by id\n    api_response = api_instance.get_gamification_profile(profile_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_profile: %s\\n\" % e)"
  },
  "get_gamification_profile_members": {
    "operationId": "get_gamification_profile_members",
    "functionName": "get_gamification_profile_members",
    "signature": "get_gamification_profile_members(profile_id)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MemberListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | Profile Id\n\ntry:\n    # Members of a given performance profile\n    api_response = api_instance.get_gamification_profile_members(profile_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_profile_members: %s\\n\" % e)"
  },
  "get_gamification_profile_metric": {
    "operationId": "get_gamification_profile_metric",
    "functionName": "get_gamification_profile_metric",
    "signature": "get_gamification_profile_metric(profile_id, metric_id, workday)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "metric_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "date",
        "required": "false"
      }
    ],
    "return": "Metric",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | Performance Profile Id\nmetric_id = 'metric_id_example' # str | Metric Id\nworkday = '2013-10-20' # date | The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\n\ntry:\n    # Performance profile gamified metric by id\n    api_response = api_instance.get_gamification_profile_metric(profile_id, metric_id, workday=workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_profile_metric: %s\\n\" % e)"
  },
  "get_gamification_profile_metrics": {
    "operationId": "get_gamification_profile_metrics",
    "functionName": "get_gamification_profile_metrics",
    "signature": "get_gamification_profile_metrics(profile_id, expand, workday, metric_ids)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "workday",
        "type": "date",
        "required": "false"
      },
      {
        "name": "metric_ids",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "GetMetricResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | Performance Profile Id\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\nworkday = '2013-10-20' # date | The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\nmetric_ids = 'metric_ids_example' # str | List of metric ids to filter the response (Optional, comma-separated). (optional)\n\ntry:\n    # All gamified metrics for a given performance profile\n    api_response = api_instance.get_gamification_profile_metrics(profile_id, expand=expand, workday=workday, metric_ids=metric_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_profile_metrics: %s\\n\" % e)"
  },
  "get_gamification_profile_metrics_objectivedetails": {
    "operationId": "get_gamification_profile_metrics_objectivedetails",
    "functionName": "get_gamification_profile_metrics_objectivedetails",
    "signature": "get_gamification_profile_metrics_objectivedetails(profile_id, workday)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "date",
        "required": "false"
      }
    ],
    "return": "GetMetricsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | Performance Profile Id\nworkday = '2013-10-20' # date | The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\n\ntry:\n    # All metrics for a given performance profile with objective details such as order and maxPoints\n    api_response = api_instance.get_gamification_profile_metrics_objectivedetails(profile_id, workday=workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_profile_metrics_objectivedetails: %s\\n\" % e)"
  },
  "get_gamification_profiles": {
    "operationId": "get_gamification_profiles",
    "functionName": "get_gamification_profiles",
    "signature": "get_gamification_profiles()",
    "return": "GetProfilesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\n\ntry:\n    # All performance profiles\n    api_response = api_instance.get_gamification_profiles()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_profiles: %s\\n\" % e)"
  },
  "get_gamification_profiles_user": {
    "operationId": "get_gamification_profiles_user",
    "functionName": "get_gamification_profiles_user",
    "signature": "get_gamification_profiles_user(user_id, workday)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "date",
        "required": "false"
      }
    ],
    "return": "PerformanceProfile",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nuser_id = 'user_id_example' # str | \nworkday = '2013-10-20' # date | Target querying workday. If not provided, then queries the current performance profile. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\n\ntry:\n    # Performance profile of a user\n    api_response = api_instance.get_gamification_profiles_user(user_id, workday=workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_profiles_user: %s\\n\" % e)"
  },
  "get_gamification_profiles_users_me": {
    "operationId": "get_gamification_profiles_users_me",
    "functionName": "get_gamification_profiles_users_me",
    "signature": "get_gamification_profiles_users_me(workday)",
    "parameters": [
      {
        "name": "workday",
        "type": "date",
        "required": "false"
      }
    ],
    "return": "PerformanceProfile",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nworkday = '2013-10-20' # date | Target querying workday. If not provided, then queries the current performance profile. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\n\ntry:\n    # Performance profile of the requesting user\n    api_response = api_instance.get_gamification_profiles_users_me(workday=workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_profiles_users_me: %s\\n\" % e)"
  },
  "get_gamification_scorecards": {
    "operationId": "get_gamification_scorecards",
    "functionName": "get_gamification_scorecards",
    "signature": "get_gamification_scorecards(workday, expand)",
    "parameters": [
      {
        "name": "workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "WorkdayMetricListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nworkday = '2013-10-20' # date | Target querying workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Workday performance metrics of the requesting user\n    api_response = api_instance.get_gamification_scorecards(workday, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards: %s\\n\" % e)"
  },
  "get_gamification_scorecards_attendance": {
    "operationId": "get_gamification_scorecards_attendance",
    "functionName": "get_gamification_scorecards_attendance",
    "signature": "get_gamification_scorecards_attendance(start_workday, end_workday)",
    "parameters": [
      {
        "name": "start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "AttendanceStatusListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nstart_workday = '2013-10-20' # date | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nend_workday = '2013-10-20' # date | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # Attendance status metrics of the requesting user\n    api_response = api_instance.get_gamification_scorecards_attendance(start_workday, end_workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_attendance: %s\\n\" % e)"
  },
  "get_gamification_scorecards_bestpoints": {
    "operationId": "get_gamification_scorecards_bestpoints",
    "functionName": "get_gamification_scorecards_bestpoints",
    "signature": "get_gamification_scorecards_bestpoints()",
    "return": "UserBestPoints",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\n\ntry:\n    # Best points of the requesting user\n    api_response = api_instance.get_gamification_scorecards_bestpoints()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_bestpoints: %s\\n\" % e)"
  },
  "get_gamification_scorecards_points_alltime": {
    "operationId": "get_gamification_scorecards_points_alltime",
    "functionName": "get_gamification_scorecards_points_alltime",
    "signature": "get_gamification_scorecards_points_alltime(end_workday)",
    "parameters": [
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "AllTimePoints",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nend_workday = '2013-10-20' # date | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # All-time points of the requesting user\n    api_response = api_instance.get_gamification_scorecards_points_alltime(end_workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_points_alltime: %s\\n\" % e)"
  },
  "get_gamification_scorecards_points_average": {
    "operationId": "get_gamification_scorecards_points_average",
    "functionName": "get_gamification_scorecards_points_average",
    "signature": "get_gamification_scorecards_points_average(workday)",
    "parameters": [
      {
        "name": "workday",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "SingleWorkdayAveragePoints",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nworkday = '2013-10-20' # date | The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # Average points of the requesting user's division or performance profile\n    api_response = api_instance.get_gamification_scorecards_points_average(workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_points_average: %s\\n\" % e)"
  },
  "get_gamification_scorecards_points_trends": {
    "operationId": "get_gamification_scorecards_points_trends",
    "functionName": "get_gamification_scorecards_points_trends",
    "signature": "get_gamification_scorecards_points_trends(start_workday, end_workday, day_of_week)",
    "parameters": [
      {
        "name": "start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "day_of_week",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WorkdayPointsTrend",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nstart_workday = '2013-10-20' # date | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nend_workday = '2013-10-20' # date | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nday_of_week = 'day_of_week_example' # str | Optional filter to specify which day of weeks to be included in the response (optional)\n\ntry:\n    # Points trends of the requesting user\n    api_response = api_instance.get_gamification_scorecards_points_trends(start_workday, end_workday, day_of_week=day_of_week)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_points_trends: %s\\n\" % e)"
  },
  "get_gamification_scorecards_profile_metric_user_values_trends": {
    "operationId": "get_gamification_scorecards_profile_metric_user_values_trends",
    "functionName": "get_gamification_scorecards_profile_metric_user_values_trends",
    "signature": "get_gamification_scorecards_profile_metric_user_values_trends(profile_id, metric_id, user_id, start_workday, end_workday, reference_workday, time_zone)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "metric_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "reference_workday",
        "type": "date",
        "required": "false"
      },
      {
        "name": "time_zone",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "MetricValueTrendAverage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | performanceProfileId\nmetric_id = 'metric_id_example' # str | metricId\nuser_id = 'user_id_example' # str | \nstart_workday = '2013-10-20' # date | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nend_workday = '2013-10-20' # date | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nreference_workday = '2013-10-20' # date | Reference workday for the trend. Used to determine the associated metric definition. If not set, then the value of endWorkday is used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\ntime_zone = ''UTC'' # str | Timezone for the workday. Defaults to UTC (optional) (default to 'UTC')\n\ntry:\n    # Average performance values trends by metric of a user\n    api_response = api_instance.get_gamification_scorecards_profile_metric_user_values_trends(profile_id, metric_id, user_id, start_workday, end_workday, reference_workday=reference_workday, time_zone=time_zone)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_profile_metric_user_values_trends: %s\\n\" % e)"
  },
  "get_gamification_scorecards_profile_metric_users_values_trends": {
    "operationId": "get_gamification_scorecards_profile_metric_users_values_trends",
    "functionName": "get_gamification_scorecards_profile_metric_users_values_trends",
    "signature": "get_gamification_scorecards_profile_metric_users_values_trends(profile_id, metric_id, filter_type, start_workday, end_workday, filter_id, reference_workday, time_zone)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "metric_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "reference_workday",
        "type": "date",
        "required": "false"
      },
      {
        "name": "time_zone",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "MetricValueTrendAverage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | performanceProfileId\nmetric_id = 'metric_id_example' # str | metricId\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nstart_workday = '2013-10-20' # date | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nend_workday = '2013-10-20' # date | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nfilter_id = 'filter_id_example' # str | ID for the filter type. Only required when filterType is Division. (optional)\nreference_workday = '2013-10-20' # date | Reference workday for the trend. Used to determine the associated metric definition. If not set, then the value of endWorkday is used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\ntime_zone = ''UTC'' # str | Timezone for the workday. Defaults to UTC (optional) (default to 'UTC')\n\ntry:\n    # Average performance values trends by metric of a division or a performance profile\n    api_response = api_instance.get_gamification_scorecards_profile_metric_users_values_trends(profile_id, metric_id, filter_type, start_workday, end_workday, filter_id=filter_id, reference_workday=reference_workday, time_zone=time_zone)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_profile_metric_users_values_trends: %s\\n\" % e)"
  },
  "get_gamification_scorecards_profile_metric_values_trends": {
    "operationId": "get_gamification_scorecards_profile_metric_values_trends",
    "functionName": "get_gamification_scorecards_profile_metric_values_trends",
    "signature": "get_gamification_scorecards_profile_metric_values_trends(profile_id, metric_id, start_workday, end_workday, filter_type, reference_workday, time_zone)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "metric_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "reference_workday",
        "type": "date",
        "required": "false"
      },
      {
        "name": "time_zone",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "MetricValueTrendAverage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | performanceProfileId\nmetric_id = 'metric_id_example' # str | metricId\nstart_workday = '2013-10-20' # date | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nend_workday = '2013-10-20' # date | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nfilter_type = 'filter_type_example' # str | Filter type for the query request. If not set, returns the values trends of the requesting user (optional)\nreference_workday = '2013-10-20' # date | Reference workday for the trend. Used to determine the associated metric definition. If not set, then the value of endWorkday is used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\ntime_zone = ''UTC'' # str | Timezone for the workday. Defaults to UTC (optional) (default to 'UTC')\n\ntry:\n    # Average performance values trends by metric of the requesting user\n    api_response = api_instance.get_gamification_scorecards_profile_metric_values_trends(profile_id, metric_id, start_workday, end_workday, filter_type=filter_type, reference_workday=reference_workday, time_zone=time_zone)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_profile_metric_values_trends: %s\\n\" % e)"
  },
  "get_gamification_scorecards_user": {
    "operationId": "get_gamification_scorecards_user",
    "functionName": "get_gamification_scorecards_user",
    "signature": "get_gamification_scorecards_user(user_id, workday, expand)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "WorkdayMetricListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nuser_id = 'user_id_example' # str | \nworkday = '2013-10-20' # date | Target querying workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Workday performance metrics for a user\n    api_response = api_instance.get_gamification_scorecards_user(user_id, workday, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_user: %s\\n\" % e)"
  },
  "get_gamification_scorecards_user_attendance": {
    "operationId": "get_gamification_scorecards_user_attendance",
    "functionName": "get_gamification_scorecards_user_attendance",
    "signature": "get_gamification_scorecards_user_attendance(user_id, start_workday, end_workday)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "AttendanceStatusListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nuser_id = 'user_id_example' # str | \nstart_workday = '2013-10-20' # date | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nend_workday = '2013-10-20' # date | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # Attendance status metrics for a user\n    api_response = api_instance.get_gamification_scorecards_user_attendance(user_id, start_workday, end_workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_user_attendance: %s\\n\" % e)"
  },
  "get_gamification_scorecards_user_bestpoints": {
    "operationId": "get_gamification_scorecards_user_bestpoints",
    "functionName": "get_gamification_scorecards_user_bestpoints",
    "signature": "get_gamification_scorecards_user_bestpoints(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UserBestPoints",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nuser_id = 'user_id_example' # str | \n\ntry:\n    # Best points of a user\n    api_response = api_instance.get_gamification_scorecards_user_bestpoints(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_user_bestpoints: %s\\n\" % e)"
  },
  "get_gamification_scorecards_user_points_alltime": {
    "operationId": "get_gamification_scorecards_user_points_alltime",
    "functionName": "get_gamification_scorecards_user_points_alltime",
    "signature": "get_gamification_scorecards_user_points_alltime(user_id, end_workday)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "AllTimePoints",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nuser_id = 'user_id_example' # str | \nend_workday = '2013-10-20' # date | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # All-time points for a user\n    api_response = api_instance.get_gamification_scorecards_user_points_alltime(user_id, end_workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_user_points_alltime: %s\\n\" % e)"
  },
  "get_gamification_scorecards_user_points_trends": {
    "operationId": "get_gamification_scorecards_user_points_trends",
    "functionName": "get_gamification_scorecards_user_points_trends",
    "signature": "get_gamification_scorecards_user_points_trends(user_id, start_workday, end_workday, day_of_week)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "day_of_week",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WorkdayPointsTrend",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nuser_id = 'user_id_example' # str | \nstart_workday = '2013-10-20' # date | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nend_workday = '2013-10-20' # date | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nday_of_week = 'day_of_week_example' # str | Optional filter to specify which day of weeks to be included in the response (optional)\n\ntry:\n    # Points trend for a user\n    api_response = api_instance.get_gamification_scorecards_user_points_trends(user_id, start_workday, end_workday, day_of_week=day_of_week)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_user_points_trends: %s\\n\" % e)"
  },
  "get_gamification_scorecards_user_values_trends": {
    "operationId": "get_gamification_scorecards_user_values_trends",
    "functionName": "get_gamification_scorecards_user_values_trends",
    "signature": "get_gamification_scorecards_user_values_trends(user_id, start_workday, end_workday, time_zone)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "time_zone",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WorkdayValuesTrend",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nuser_id = 'user_id_example' # str | \nstart_workday = '2013-10-20' # date | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nend_workday = '2013-10-20' # date | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\ntime_zone = ''UTC'' # str | Timezone for the workday. Defaults to UTC (optional) (default to 'UTC')\n\ntry:\n    # Values trends of a user\n    api_response = api_instance.get_gamification_scorecards_user_values_trends(user_id, start_workday, end_workday, time_zone=time_zone)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_user_values_trends: %s\\n\" % e)"
  },
  "get_gamification_scorecards_users_points_average": {
    "operationId": "get_gamification_scorecards_users_points_average",
    "functionName": "get_gamification_scorecards_users_points_average",
    "signature": "get_gamification_scorecards_users_points_average(filter_type, filter_id, workday)",
    "parameters": [
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "SingleWorkdayAveragePoints",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nfilter_id = 'filter_id_example' # str | ID for the filter type.\nworkday = '2013-10-20' # date | The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # Workday average points by target group\n    api_response = api_instance.get_gamification_scorecards_users_points_average(filter_type, filter_id, workday)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_users_points_average: %s\\n\" % e)"
  },
  "get_gamification_scorecards_users_values_average": {
    "operationId": "get_gamification_scorecards_users_values_average",
    "functionName": "get_gamification_scorecards_users_values_average",
    "signature": "get_gamification_scorecards_users_values_average(filter_type, filter_id, workday, time_zone)",
    "parameters": [
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "time_zone",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SingleWorkdayAverageValues",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nfilter_id = 'filter_id_example' # str | ID for the filter type. For example, division Id\nworkday = '2013-10-20' # date | The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\ntime_zone = ''UTC'' # str | Timezone for the workday. Defaults to UTC (optional) (default to 'UTC')\n\ntry:\n    # Workday average values by target group\n    api_response = api_instance.get_gamification_scorecards_users_values_average(filter_type, filter_id, workday, time_zone=time_zone)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_users_values_average: %s\\n\" % e)"
  },
  "get_gamification_scorecards_users_values_trends": {
    "operationId": "get_gamification_scorecards_users_values_trends",
    "functionName": "get_gamification_scorecards_users_values_trends",
    "signature": "get_gamification_scorecards_users_values_trends(filter_type, filter_id, start_workday, end_workday, time_zone)",
    "parameters": [
      {
        "name": "filter_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "filter_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "time_zone",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WorkdayValuesTrend",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nfilter_type = 'filter_type_example' # str | Filter type for the query request.\nfilter_id = 'filter_id_example' # str | ID for the filter type.\nstart_workday = '2013-10-20' # date | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nend_workday = '2013-10-20' # date | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\ntime_zone = ''UTC'' # str | Timezone for the workday. Defaults to UTC (optional) (default to 'UTC')\n\ntry:\n    # Values trend by target group\n    api_response = api_instance.get_gamification_scorecards_users_values_trends(filter_type, filter_id, start_workday, end_workday, time_zone=time_zone)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_users_values_trends: %s\\n\" % e)"
  },
  "get_gamification_scorecards_values_average": {
    "operationId": "get_gamification_scorecards_values_average",
    "functionName": "get_gamification_scorecards_values_average",
    "signature": "get_gamification_scorecards_values_average(workday, time_zone)",
    "parameters": [
      {
        "name": "workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "time_zone",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SingleWorkdayAverageValues",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nworkday = '2013-10-20' # date | The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\ntime_zone = ''UTC'' # str | Timezone for the workday. Defaults to UTC (optional) (default to 'UTC')\n\ntry:\n    # Average values of the requesting user's division or performance profile\n    api_response = api_instance.get_gamification_scorecards_values_average(workday, time_zone=time_zone)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_values_average: %s\\n\" % e)"
  },
  "get_gamification_scorecards_values_trends": {
    "operationId": "get_gamification_scorecards_values_trends",
    "functionName": "get_gamification_scorecards_values_trends",
    "signature": "get_gamification_scorecards_values_trends(start_workday, end_workday, filter_type, reference_workday, time_zone)",
    "parameters": [
      {
        "name": "start_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "end_workday",
        "type": "date",
        "required": "true"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "reference_workday",
        "type": "date",
        "required": "false"
      },
      {
        "name": "time_zone",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WorkdayValuesTrend",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nstart_workday = '2013-10-20' # date | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nend_workday = '2013-10-20' # date | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nfilter_type = 'filter_type_example' # str | Filter type for the query request. If not set, then the request is for the requesting user. (optional)\nreference_workday = '2013-10-20' # date | Reference workday for the trend. Used to determine the profile of the user as of this date. If not set, then the user's current profile will be used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\ntime_zone = ''UTC'' # str | Timezone for the workday. Defaults to UTC (optional) (default to 'UTC')\n\ntry:\n    # Values trends of the requesting user or group\n    api_response = api_instance.get_gamification_scorecards_values_trends(start_workday, end_workday, filter_type=filter_type, reference_workday=reference_workday, time_zone=time_zone)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_scorecards_values_trends: %s\\n\" % e)"
  },
  "get_gamification_status": {
    "operationId": "get_gamification_status",
    "functionName": "get_gamification_status",
    "signature": "get_gamification_status()",
    "return": "GamificationStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\n\ntry:\n    # Gamification activation status\n    api_response = api_instance.get_gamification_status()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_status: %s\\n\" % e)"
  },
  "get_gamification_template": {
    "operationId": "get_gamification_template",
    "functionName": "get_gamification_template",
    "signature": "get_gamification_template(template_id)",
    "parameters": [
      {
        "name": "template_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ObjectiveTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\ntemplate_id = 'template_id_example' # str | template id\n\ntry:\n    # Objective template by id\n    api_response = api_instance.get_gamification_template(template_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_template: %s\\n\" % e)"
  },
  "get_gamification_templates": {
    "operationId": "get_gamification_templates",
    "functionName": "get_gamification_templates",
    "signature": "get_gamification_templates()",
    "return": "GetTemplatesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\n\ntry:\n    # All objective templates\n    api_response = api_instance.get_gamification_templates()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->get_gamification_templates: %s\\n\" % e)"
  },
  "patch_employeeperformance_externalmetrics_definition": {
    "operationId": "patch_employeeperformance_externalmetrics_definition",
    "functionName": "patch_employeeperformance_externalmetrics_definition",
    "signature": "patch_employeeperformance_externalmetrics_definition(metric_id, body)",
    "parameters": [
      {
        "name": "metric_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ExternalMetricDefinitionUpdateRequest",
        "required": "true"
      }
    ],
    "return": "ExternalMetricDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nmetric_id = 'metric_id_example' # str | Specifies the metric definition ID\nbody = PureCloudPlatformClientV2.ExternalMetricDefinitionUpdateRequest() # ExternalMetricDefinitionUpdateRequest | The External Metric Definition parameters to be updated\n\ntry:\n    # Update External Metric Definition\n    api_response = api_instance.patch_employeeperformance_externalmetrics_definition(metric_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->patch_employeeperformance_externalmetrics_definition: %s\\n\" % e)"
  },
  "post_employeeperformance_externalmetrics_data": {
    "operationId": "post_employeeperformance_externalmetrics_data",
    "functionName": "post_employeeperformance_externalmetrics_data",
    "signature": "post_employeeperformance_externalmetrics_data(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ExternalMetricDataWriteRequest",
        "required": "false"
      }
    ],
    "return": "ExternalMetricDataWriteResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nbody = PureCloudPlatformClientV2.ExternalMetricDataWriteRequest() # ExternalMetricDataWriteRequest | The External Metric Data to be added (optional)\n\ntry:\n    # Write External Metric Data\n    api_response = api_instance.post_employeeperformance_externalmetrics_data(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->post_employeeperformance_externalmetrics_data: %s\\n\" % e)"
  },
  "post_employeeperformance_externalmetrics_definitions": {
    "operationId": "post_employeeperformance_externalmetrics_definitions",
    "functionName": "post_employeeperformance_externalmetrics_definitions",
    "signature": "post_employeeperformance_externalmetrics_definitions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ExternalMetricDefinitionCreateRequest",
        "required": "false"
      }
    ],
    "return": "ExternalMetricDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nbody = PureCloudPlatformClientV2.ExternalMetricDefinitionCreateRequest() # ExternalMetricDefinitionCreateRequest | The External Metric Definition to be created (optional)\n\ntry:\n    # Create External Metric Definition\n    api_response = api_instance.post_employeeperformance_externalmetrics_definitions(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->post_employeeperformance_externalmetrics_definitions: %s\\n\" % e)"
  },
  "post_gamification_profile_activate": {
    "operationId": "post_gamification_profile_activate",
    "functionName": "post_gamification_profile_activate",
    "signature": "post_gamification_profile_activate(profile_id)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PerformanceProfile",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | performanceProfileId\n\ntry:\n    # Activate a performance profile\n    api_response = api_instance.post_gamification_profile_activate(profile_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->post_gamification_profile_activate: %s\\n\" % e)"
  },
  "post_gamification_profile_deactivate": {
    "operationId": "post_gamification_profile_deactivate",
    "functionName": "post_gamification_profile_deactivate",
    "signature": "post_gamification_profile_deactivate(profile_id)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PerformanceProfile",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | performanceProfileId\n\ntry:\n    # Deactivate a performance profile\n    api_response = api_instance.post_gamification_profile_deactivate(profile_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->post_gamification_profile_deactivate: %s\\n\" % e)"
  },
  "post_gamification_profile_members": {
    "operationId": "post_gamification_profile_members",
    "functionName": "post_gamification_profile_members",
    "signature": "post_gamification_profile_members(profile_id, body)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AssignUsers",
        "required": "true"
      }
    ],
    "return": "Assignment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | Profile Id\nbody = PureCloudPlatformClientV2.AssignUsers() # AssignUsers | assignUsers\n\ntry:\n    # Assign members to a given performance profile\n    api_response = api_instance.post_gamification_profile_members(profile_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->post_gamification_profile_members: %s\\n\" % e)"
  },
  "post_gamification_profile_members_validate": {
    "operationId": "post_gamification_profile_members_validate",
    "functionName": "post_gamification_profile_members_validate",
    "signature": "post_gamification_profile_members_validate(profile_id, body)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ValidateAssignUsers",
        "required": "true"
      }
    ],
    "return": "AssignmentValidation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | Profile Id\nbody = PureCloudPlatformClientV2.ValidateAssignUsers() # ValidateAssignUsers | memberAssignments\n\ntry:\n    # Validate member assignment\n    api_response = api_instance.post_gamification_profile_members_validate(profile_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->post_gamification_profile_members_validate: %s\\n\" % e)"
  },
  "post_gamification_profile_metric_link": {
    "operationId": "post_gamification_profile_metric_link",
    "functionName": "post_gamification_profile_metric_link",
    "signature": "post_gamification_profile_metric_link(source_profile_id, source_metric_id, body)",
    "parameters": [
      {
        "name": "source_profile_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "source_metric_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TargetPerformanceProfile",
        "required": "true"
      }
    ],
    "return": "Metric",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nsource_profile_id = 'source_profile_id_example' # str | Source Performance Profile Id\nsource_metric_id = 'source_metric_id_example' # str | Source Metric Id\nbody = PureCloudPlatformClientV2.TargetPerformanceProfile() # TargetPerformanceProfile | linkedMetric\n\ntry:\n    # Creates a linked metric\n    api_response = api_instance.post_gamification_profile_metric_link(source_profile_id, source_metric_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->post_gamification_profile_metric_link: %s\\n\" % e)"
  },
  "post_gamification_profile_metrics": {
    "operationId": "post_gamification_profile_metrics",
    "functionName": "post_gamification_profile_metrics",
    "signature": "post_gamification_profile_metrics(profile_id, body)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateMetric",
        "required": "true"
      }
    ],
    "return": "Metric",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | Performance Profile Id\nbody = PureCloudPlatformClientV2.CreateMetric() # CreateMetric | Metric\n\ntry:\n    # Creates a gamified metric with a given metric definition and metric objective under in a performance profile\n    api_response = api_instance.post_gamification_profile_metrics(profile_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->post_gamification_profile_metrics: %s\\n\" % e)"
  },
  "post_gamification_profiles": {
    "operationId": "post_gamification_profiles",
    "functionName": "post_gamification_profiles",
    "signature": "post_gamification_profiles(body, copy_metrics)",
    "parameters": [
      {
        "name": "body",
        "type": "CreatePerformanceProfile",
        "required": "true"
      },
      {
        "name": "copy_metrics",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "PerformanceProfile",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nbody = PureCloudPlatformClientV2.CreatePerformanceProfile() # CreatePerformanceProfile | performanceProfile\ncopy_metrics = True # bool | Flag to copy metrics. If set to false, there will be no metrics associated with the new profile. If set to true or is absent (the default behavior), all metrics from the default profile will be copied over into the new profile. (optional) (default to True)\n\ntry:\n    # Create a new custom performance profile\n    api_response = api_instance.post_gamification_profiles(body, copy_metrics=copy_metrics)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->post_gamification_profiles: %s\\n\" % e)"
  },
  "post_gamification_profiles_user_query": {
    "operationId": "post_gamification_profiles_user_query",
    "functionName": "post_gamification_profiles_user_query",
    "signature": "post_gamification_profiles_user_query(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserProfilesInDateRangeRequest",
        "required": "true"
      }
    ],
    "return": "UserProfilesInDateRange",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nuser_id = 'user_id_example' # str | The ID of a user.\nbody = PureCloudPlatformClientV2.UserProfilesInDateRangeRequest() # UserProfilesInDateRangeRequest | The date range of work day.\n\ntry:\n    # Query performance profiles in date range for a user\n    api_response = api_instance.post_gamification_profiles_user_query(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->post_gamification_profiles_user_query: %s\\n\" % e)"
  },
  "post_gamification_profiles_users_me_query": {
    "operationId": "post_gamification_profiles_users_me_query",
    "functionName": "post_gamification_profiles_users_me_query",
    "signature": "post_gamification_profiles_users_me_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserProfilesInDateRangeRequest",
        "required": "true"
      }
    ],
    "return": "UserProfilesInDateRange",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nbody = PureCloudPlatformClientV2.UserProfilesInDateRangeRequest() # UserProfilesInDateRangeRequest | The date range of work day.\n\ntry:\n    # Query performance profiles in date range for the current user\n    api_response = api_instance.post_gamification_profiles_users_me_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->post_gamification_profiles_users_me_query: %s\\n\" % e)"
  },
  "put_gamification_profile": {
    "operationId": "put_gamification_profile",
    "functionName": "put_gamification_profile",
    "signature": "put_gamification_profile(profile_id, body)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PerformanceProfile",
        "required": "false"
      }
    ],
    "return": "PerformanceProfile",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | performanceProfileId\nbody = PureCloudPlatformClientV2.PerformanceProfile() # PerformanceProfile | performanceProfile (optional)\n\ntry:\n    # Updates a performance profile\n    api_response = api_instance.put_gamification_profile(profile_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->put_gamification_profile: %s\\n\" % e)"
  },
  "put_gamification_profile_metric": {
    "operationId": "put_gamification_profile_metric",
    "functionName": "put_gamification_profile_metric",
    "signature": "put_gamification_profile_metric(profile_id, metric_id, body)",
    "parameters": [
      {
        "name": "profile_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "metric_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateMetric",
        "required": "true"
      }
    ],
    "return": "Metric",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nprofile_id = 'profile_id_example' # str | Performance Profile Id\nmetric_id = 'metric_id_example' # str | Metric Id\nbody = PureCloudPlatformClientV2.CreateMetric() # CreateMetric | Metric\n\ntry:\n    # Updates a metric in performance profile\n    api_response = api_instance.put_gamification_profile_metric(profile_id, metric_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->put_gamification_profile_metric: %s\\n\" % e)"
  },
  "put_gamification_status": {
    "operationId": "put_gamification_status",
    "functionName": "put_gamification_status",
    "signature": "put_gamification_status(status)",
    "parameters": [
      {
        "name": "status",
        "type": "GamificationStatus",
        "required": "true"
      }
    ],
    "return": "GamificationStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GamificationApi();\nstatus = PureCloudPlatformClientV2.GamificationStatus() # GamificationStatus | Gamification status\n\ntry:\n    # Update gamification activation status\n    api_response = api_instance.put_gamification_status(status)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GamificationApi->put_gamification_status: %s\\n\" % e)"
  },
  "get_gdpr_request": {
    "operationId": "get_gdpr_request",
    "functionName": "get_gdpr_request",
    "signature": "get_gdpr_request(request_id)",
    "parameters": [
      {
        "name": "request_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "GDPRRequest",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GeneralDataProtectionRegulationApi();\nrequest_id = 'request_id_example' # str | Request id\n\ntry:\n    # Get an existing GDPR request\n    api_response = api_instance.get_gdpr_request(request_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GeneralDataProtectionRegulationApi->get_gdpr_request: %s\\n\" % e)"
  },
  "get_gdpr_requests": {
    "operationId": "get_gdpr_requests",
    "functionName": "get_gdpr_requests",
    "signature": "get_gdpr_requests(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "GDPRRequestEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GeneralDataProtectionRegulationApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get all GDPR requests\n    api_response = api_instance.get_gdpr_requests(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GeneralDataProtectionRegulationApi->get_gdpr_requests: %s\\n\" % e)"
  },
  "get_gdpr_subjects": {
    "operationId": "get_gdpr_subjects",
    "functionName": "get_gdpr_subjects",
    "signature": "get_gdpr_subjects(search_type, search_value)",
    "parameters": [
      {
        "name": "search_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "search_value",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "GDPRSubjectEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GeneralDataProtectionRegulationApi();\nsearch_type = 'search_type_example' # str | Search Type\nsearch_value = 'search_value_example' # str | Search Value\n\ntry:\n    # Get GDPR subjects\n    api_response = api_instance.get_gdpr_subjects(search_type, search_value)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GeneralDataProtectionRegulationApi->get_gdpr_subjects: %s\\n\" % e)"
  },
  "post_gdpr_requests": {
    "operationId": "post_gdpr_requests",
    "functionName": "post_gdpr_requests",
    "signature": "post_gdpr_requests(body, delete_confirmed)",
    "parameters": [
      {
        "name": "body",
        "type": "GDPRRequest",
        "required": "true"
      },
      {
        "name": "delete_confirmed",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "GDPRRequest",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GeneralDataProtectionRegulationApi();\nbody = PureCloudPlatformClientV2.GDPRRequest() # GDPRRequest | GDPR request\ndelete_confirmed = False # bool | Confirm delete (optional) (default to False)\n\ntry:\n    # Submit a new GDPR request\n    api_response = api_instance.post_gdpr_requests(body, delete_confirmed=delete_confirmed)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GeneralDataProtectionRegulationApi->post_gdpr_requests: %s\\n\" % e)"
  },
  "get_geolocations_settings": {
    "operationId": "get_geolocations_settings",
    "functionName": "get_geolocations_settings",
    "signature": "get_geolocations_settings()",
    "return": "GeolocationSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GeolocationApi();\n\ntry:\n    # Get a organization's GeolocationSettings\n    api_response = api_instance.get_geolocations_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GeolocationApi->get_geolocations_settings: %s\\n\" % e)"
  },
  "get_user_geolocation": {
    "operationId": "get_user_geolocation",
    "functionName": "get_user_geolocation",
    "signature": "get_user_geolocation(user_id, client_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "client_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Geolocation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | user Id\nclient_id = 'client_id_example' # str | client Id\n\ntry:\n    # Get a user's Geolocation\n    api_response = api_instance.get_user_geolocation(user_id, client_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_geolocation: %s\\n\" % e)"
  },
  "patch_geolocations_settings": {
    "operationId": "patch_geolocations_settings",
    "functionName": "patch_geolocations_settings",
    "signature": "patch_geolocations_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GeolocationSettings",
        "required": "true"
      }
    ],
    "return": "GeolocationSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GeolocationApi();\nbody = PureCloudPlatformClientV2.GeolocationSettings() # GeolocationSettings | Geolocation settings\n\ntry:\n    # Patch a organization's GeolocationSettings\n    api_response = api_instance.patch_geolocations_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GeolocationApi->patch_geolocations_settings: %s\\n\" % e)"
  },
  "patch_user_geolocation": {
    "operationId": "patch_user_geolocation",
    "functionName": "patch_user_geolocation",
    "signature": "patch_user_geolocation(user_id, client_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "client_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Geolocation",
        "required": "true"
      }
    ],
    "return": "Geolocation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | user Id\nclient_id = 'client_id_example' # str | client Id\nbody = PureCloudPlatformClientV2.Geolocation() # Geolocation | Geolocation\n\ntry:\n    # Patch a user's Geolocation\n    api_response = api_instance.patch_user_geolocation(user_id, client_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->patch_user_geolocation: %s\\n\" % e)"
  },
  "delete_greeting": {
    "operationId": "delete_greeting",
    "functionName": "delete_greeting",
    "signature": "delete_greeting(greeting_id)",
    "parameters": [
      {
        "name": "greeting_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\ngreeting_id = 'greeting_id_example' # str | Greeting ID\n\ntry:\n    # Deletes a Greeting with the given GreetingId\n    api_instance.delete_greeting(greeting_id)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->delete_greeting: %s\\n\" % e)"
  },
  "get_greeting": {
    "operationId": "get_greeting",
    "functionName": "get_greeting",
    "signature": "get_greeting(greeting_id)",
    "parameters": [
      {
        "name": "greeting_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\ngreeting_id = 'greeting_id_example' # str | Greeting ID\n\ntry:\n    # Get a Greeting with the given GreetingId\n    api_response = api_instance.get_greeting(greeting_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->get_greeting: %s\\n\" % e)"
  },
  "get_greeting_media": {
    "operationId": "get_greeting_media",
    "functionName": "get_greeting_media",
    "signature": "get_greeting_media(greeting_id, format_id)",
    "parameters": [
      {
        "name": "greeting_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "format_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "GreetingMediaInfo",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\ngreeting_id = 'greeting_id_example' # str | Greeting ID\nformat_id = ''WAV'' # str | The desired media format. (optional) (default to 'WAV')\n\ntry:\n    # Get media playback URI for this greeting\n    api_response = api_instance.get_greeting_media(greeting_id, format_id=format_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->get_greeting_media: %s\\n\" % e)"
  },
  "get_greetings": {
    "operationId": "get_greetings",
    "functionName": "get_greetings",
    "signature": "get_greetings(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "DomainEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Gets an Organization's Greetings\n    api_response = api_instance.get_greetings(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->get_greetings: %s\\n\" % e)"
  },
  "get_greetings_defaults": {
    "operationId": "get_greetings_defaults",
    "functionName": "get_greetings_defaults",
    "signature": "get_greetings_defaults()",
    "return": "DefaultGreetingList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\n\ntry:\n    # Get an Organization's DefaultGreetingList\n    api_response = api_instance.get_greetings_defaults()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->get_greetings_defaults: %s\\n\" % e)"
  },
  "get_group_greetings": {
    "operationId": "get_group_greetings",
    "functionName": "get_group_greetings",
    "signature": "get_group_greetings(group_id, page_size, page_number)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "GreetingListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\ngroup_id = 'group_id_example' # str | Group ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a list of the Group's Greetings\n    api_response = api_instance.get_group_greetings(group_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->get_group_greetings: %s\\n\" % e)"
  },
  "get_group_greetings_defaults": {
    "operationId": "get_group_greetings_defaults",
    "functionName": "get_group_greetings_defaults",
    "signature": "get_group_greetings_defaults(group_id)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DefaultGreetingList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\ngroup_id = 'group_id_example' # str | Group ID\n\ntry:\n    # Grabs the list of Default Greetings given a Group's ID\n    api_response = api_instance.get_group_greetings_defaults(group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->get_group_greetings_defaults: %s\\n\" % e)"
  },
  "get_user_greetings": {
    "operationId": "get_user_greetings",
    "functionName": "get_user_greetings",
    "signature": "get_user_greetings(user_id, page_size, page_number)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "DomainEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\nuser_id = 'user_id_example' # str | User ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a list of the User's Greetings\n    api_response = api_instance.get_user_greetings(user_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->get_user_greetings: %s\\n\" % e)"
  },
  "get_user_greetings_defaults": {
    "operationId": "get_user_greetings_defaults",
    "functionName": "get_user_greetings_defaults",
    "signature": "get_user_greetings_defaults(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DefaultGreetingList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Grabs the list of Default Greetings given a User's ID\n    api_response = api_instance.get_user_greetings_defaults(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->get_user_greetings_defaults: %s\\n\" % e)"
  },
  "post_greetings": {
    "operationId": "post_greetings",
    "functionName": "post_greetings",
    "signature": "post_greetings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Greeting",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\nbody = PureCloudPlatformClientV2.Greeting() # Greeting | The Greeting to create\n\ntry:\n    # Create a Greeting for an Organization\n    api_response = api_instance.post_greetings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->post_greetings: %s\\n\" % e)"
  },
  "post_group_greetings": {
    "operationId": "post_group_greetings",
    "functionName": "post_group_greetings",
    "signature": "post_group_greetings(group_id, body)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Greeting",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\ngroup_id = 'group_id_example' # str | Group ID\nbody = PureCloudPlatformClientV2.Greeting() # Greeting | The Greeting to create\n\ntry:\n    # Creates a Greeting for a Group\n    api_response = api_instance.post_group_greetings(group_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->post_group_greetings: %s\\n\" % e)"
  },
  "post_user_greetings": {
    "operationId": "post_user_greetings",
    "functionName": "post_user_greetings",
    "signature": "post_user_greetings(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Greeting",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.Greeting() # Greeting | The Greeting to create\n\ntry:\n    # Creates a Greeting for a User\n    api_response = api_instance.post_user_greetings(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->post_user_greetings: %s\\n\" % e)"
  },
  "put_greeting": {
    "operationId": "put_greeting",
    "functionName": "put_greeting",
    "signature": "put_greeting(greeting_id, body)",
    "parameters": [
      {
        "name": "greeting_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Greeting",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\ngreeting_id = 'greeting_id_example' # str | Greeting ID\nbody = PureCloudPlatformClientV2.Greeting() # Greeting | The updated Greeting\n\ntry:\n    # Updates the Greeting with the given GreetingId\n    api_response = api_instance.put_greeting(greeting_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->put_greeting: %s\\n\" % e)"
  },
  "put_greetings_defaults": {
    "operationId": "put_greetings_defaults",
    "functionName": "put_greetings_defaults",
    "signature": "put_greetings_defaults(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DefaultGreetingList",
        "required": "true"
      }
    ],
    "return": "DefaultGreetingList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\nbody = PureCloudPlatformClientV2.DefaultGreetingList() # DefaultGreetingList | The updated defaultGreetingList\n\ntry:\n    # Update an Organization's DefaultGreetingList\n    api_response = api_instance.put_greetings_defaults(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->put_greetings_defaults: %s\\n\" % e)"
  },
  "put_group_greetings_defaults": {
    "operationId": "put_group_greetings_defaults",
    "functionName": "put_group_greetings_defaults",
    "signature": "put_group_greetings_defaults(group_id, body)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DefaultGreetingList",
        "required": "true"
      }
    ],
    "return": "DefaultGreetingList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\ngroup_id = 'group_id_example' # str | Group ID\nbody = PureCloudPlatformClientV2.DefaultGreetingList() # DefaultGreetingList | The updated defaultGreetingList\n\ntry:\n    # Updates the DefaultGreetingList of the specified Group\n    api_response = api_instance.put_group_greetings_defaults(group_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->put_group_greetings_defaults: %s\\n\" % e)"
  },
  "put_user_greetings_defaults": {
    "operationId": "put_user_greetings_defaults",
    "functionName": "put_user_greetings_defaults",
    "signature": "put_user_greetings_defaults(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DefaultGreetingList",
        "required": "true"
      }
    ],
    "return": "DefaultGreetingList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GreetingsApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.DefaultGreetingList() # DefaultGreetingList | The updated defaultGreetingList\n\ntry:\n    # Updates the DefaultGreetingList of the specified User\n    api_response = api_instance.put_user_greetings_defaults(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GreetingsApi->put_user_greetings_defaults: %s\\n\" % e)"
  },
  "delete_group": {
    "operationId": "delete_group",
    "functionName": "delete_group",
    "signature": "delete_group(group_id)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\ngroup_id = 'group_id_example' # str | Group ID\n\ntry:\n    # Delete group\n    api_instance.delete_group(group_id)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->delete_group: %s\\n\" % e)"
  },
  "delete_group_dynamicsettings": {
    "operationId": "delete_group_dynamicsettings",
    "functionName": "delete_group_dynamicsettings",
    "signature": "delete_group_dynamicsettings(group_id)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\ngroup_id = 'group_id_example' # str | Group ID\n\ntry:\n    # Remove dynamic group definition\n    api_instance.delete_group_dynamicsettings(group_id)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->delete_group_dynamicsettings: %s\\n\" % e)"
  },
  "delete_group_members": {
    "operationId": "delete_group_members",
    "functionName": "delete_group_members",
    "signature": "delete_group_members(group_id, ids)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "ids",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\ngroup_id = 'group_id_example' # str | Group ID\nids = 'ids_example' # str | Comma separated list of userIds to remove\n\ntry:\n    # Remove members\n    api_response = api_instance.delete_group_members(group_id, ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->delete_group_members: %s\\n\" % e)"
  },
  "get_fieldconfig": {
    "operationId": "get_fieldconfig",
    "functionName": "get_fieldconfig",
    "signature": "get_fieldconfig(type)",
    "parameters": [
      {
        "name": "type",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "FieldConfig",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\ntype = 'type_example' # str | Field type\n\ntry:\n    # Fetch field config for an entity type\n    api_response = api_instance.get_fieldconfig(type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_fieldconfig: %s\\n\" % e)"
  },
  "get_group": {
    "operationId": "get_group",
    "functionName": "get_group",
    "signature": "get_group(group_id)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Group",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\ngroup_id = 'group_id_example' # str | Group ID\n\ntry:\n    # Get group\n    api_response = api_instance.get_group(group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->get_group: %s\\n\" % e)"
  },
  "get_group_dynamicsettings": {
    "operationId": "get_group_dynamicsettings",
    "functionName": "get_group_dynamicsettings",
    "signature": "get_group_dynamicsettings(group_id)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DynamicGroupDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\ngroup_id = 'group_id_example' # str | Group ID\n\ntry:\n    # Get dynamic group definition\n    api_response = api_instance.get_group_dynamicsettings(group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->get_group_dynamicsettings: %s\\n\" % e)"
  },
  "get_group_individuals": {
    "operationId": "get_group_individuals",
    "functionName": "get_group_individuals",
    "signature": "get_group_individuals(group_id)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UserEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\ngroup_id = 'group_id_example' # str | Group ID\n\ntry:\n    # Get all individuals associated with the group\n    api_response = api_instance.get_group_individuals(group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->get_group_individuals: %s\\n\" % e)"
  },
  "get_group_members": {
    "operationId": "get_group_members",
    "functionName": "get_group_members",
    "signature": "get_group_members(group_id, page_size, page_number, sort_order, expand)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "UserEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\ngroup_id = 'group_id_example' # str | Group ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''ASC'' # str | Ascending or descending sort order (optional) (default to 'ASC')\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Get group members, includes individuals, owners, and dynamically included people\n    api_response = api_instance.get_group_members(group_id, page_size=page_size, page_number=page_number, sort_order=sort_order, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->get_group_members: %s\\n\" % e)"
  },
  "get_group_profile": {
    "operationId": "get_group_profile",
    "functionName": "get_group_profile",
    "signature": "get_group_profile(group_id, fields)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "fields",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "GroupProfile",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\ngroup_id = 'group_id_example' # str | groupId\nfields = 'fields_example' # str | Comma separated fields to return.  Allowable values can be found by querying /api/v2/fieldconfig?type=group and using the key for the elements returned by the fieldList (optional)\n\ntry:\n    # Get group profile\n    api_response = api_instance.get_group_profile(group_id, fields=fields)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->get_group_profile: %s\\n\" % e)"
  },
  "get_groups": {
    "operationId": "get_groups",
    "functionName": "get_groups",
    "signature": "get_groups(page_size, page_number, id, jabber_id, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "jabber_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "GroupEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nid = ['id_example'] # list[str] | id (optional)\njabber_id = ['jabber_id_example'] # list[str] | A list of jabberIds to fetch by bulk (cannot be used with the \\\"id\\\" parameter) (optional)\nsort_order = ''ASC'' # str | Ascending or descending sort order (optional) (default to 'ASC')\n\ntry:\n    # Get a group list\n    api_response = api_instance.get_groups(page_size=page_size, page_number=page_number, id=id, jabber_id=jabber_id, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->get_groups: %s\\n\" % e)"
  },
  "get_groups_search": {
    "operationId": "get_groups_search",
    "functionName": "get_groups_search",
    "signature": "get_groups_search(q64, expand)",
    "parameters": [
      {
        "name": "q64",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "GroupsSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SearchApi();\nq64 = 'q64_example' # str | q64\nexpand = ['expand_example'] # list[str] | expand (optional)\n\ntry:\n    # Search groups using the q64 value returned from a previous search\n    api_response = api_instance.get_groups_search(q64, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SearchApi->get_groups_search: %s\\n\" % e)"
  },
  "get_profiles_groups": {
    "operationId": "get_profiles_groups",
    "functionName": "get_profiles_groups",
    "signature": "get_profiles_groups(page_size, page_number, id, jabber_id, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "jabber_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "GroupProfileEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nid = ['id_example'] # list[str] | id (optional)\njabber_id = ['jabber_id_example'] # list[str] | A list of jabberIds to fetch by bulk (cannot be used with the \\\"id\\\" parameter) (optional)\nsort_order = ''ASC'' # str | Ascending or descending sort order (optional) (default to 'ASC')\n\ntry:\n    # Get group profile listing\n    api_response = api_instance.get_profiles_groups(page_size=page_size, page_number=page_number, id=id, jabber_id=jabber_id, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->get_profiles_groups: %s\\n\" % e)"
  },
  "post_group_members": {
    "operationId": "post_group_members",
    "functionName": "post_group_members",
    "signature": "post_group_members(group_id, body)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "GroupMembersUpdate",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\ngroup_id = 'group_id_example' # str | Group ID\nbody = PureCloudPlatformClientV2.GroupMembersUpdate() # GroupMembersUpdate | Add members\n\ntry:\n    # Add members\n    api_response = api_instance.post_group_members(group_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->post_group_members: %s\\n\" % e)"
  },
  "post_groups": {
    "operationId": "post_groups",
    "functionName": "post_groups",
    "signature": "post_groups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GroupCreate",
        "required": "true"
      }
    ],
    "return": "Group",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\nbody = PureCloudPlatformClientV2.GroupCreate() # GroupCreate | Group\n\ntry:\n    # Create a group\n    api_response = api_instance.post_groups(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->post_groups: %s\\n\" % e)"
  },
  "post_groups_dynamicsettings_preview": {
    "operationId": "post_groups_dynamicsettings_preview",
    "functionName": "post_groups_dynamicsettings_preview",
    "signature": "post_groups_dynamicsettings_preview(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DynamicGroupQuery",
        "required": "true"
      }
    ],
    "return": "DynamicGroupQueryPreview",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\nbody = PureCloudPlatformClientV2.DynamicGroupQuery() # DynamicGroupQuery | Group query to preview\n\ntry:\n    # Preview the number of users selected for a dynamic group definition query\n    api_response = api_instance.post_groups_dynamicsettings_preview(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->post_groups_dynamicsettings_preview: %s\\n\" % e)"
  },
  "post_groups_search": {
    "operationId": "post_groups_search",
    "functionName": "post_groups_search",
    "signature": "post_groups_search(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GroupSearchRequest",
        "required": "true"
      }
    ],
    "return": "GroupsSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SearchApi();\nbody = PureCloudPlatformClientV2.GroupSearchRequest() # GroupSearchRequest | Search request options\n\ntry:\n    # Search groups\n    api_response = api_instance.post_groups_search(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SearchApi->post_groups_search: %s\\n\" % e)"
  },
  "put_group": {
    "operationId": "put_group",
    "functionName": "put_group",
    "signature": "put_group(group_id, body)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "GroupUpdate",
        "required": "false"
      }
    ],
    "return": "Group",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\ngroup_id = 'group_id_example' # str | Group ID\nbody = PureCloudPlatformClientV2.GroupUpdate() # GroupUpdate | Group (optional)\n\ntry:\n    # Update group\n    api_response = api_instance.put_group(group_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->put_group: %s\\n\" % e)"
  },
  "put_group_dynamicsettings": {
    "operationId": "put_group_dynamicsettings",
    "functionName": "put_group_dynamicsettings",
    "signature": "put_group_dynamicsettings(group_id, body)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DynamicGroupQuery",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.GroupsApi();\ngroup_id = 'group_id_example' # str | Group ID\nbody = PureCloudPlatformClientV2.DynamicGroupQuery() # DynamicGroupQuery | Create/Update dynamic groups\n\ntry:\n    # Create / Update dynamic group definition\n    api_instance.put_group_dynamicsettings(group_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling GroupsApi->put_group_dynamicsettings: %s\\n\" % e)"
  },
  "delete_identityprovider": {
    "operationId": "delete_identityprovider",
    "functionName": "delete_identityprovider",
    "signature": "delete_identityprovider(provider_id)",
    "parameters": [
      {
        "name": "provider_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nprovider_id = 'provider_id_example' # str | Provider ID\n\ntry:\n    # Delete Identity Provider\n    api_instance.delete_identityprovider(provider_id)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->delete_identityprovider: %s\\n\" % e)"
  },
  "delete_identityproviders_adfs": {
    "operationId": "delete_identityproviders_adfs",
    "functionName": "delete_identityproviders_adfs",
    "signature": "delete_identityproviders_adfs()",
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Delete ADFS Identity Provider\n    api_response = api_instance.delete_identityproviders_adfs()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->delete_identityproviders_adfs: %s\\n\" % e)"
  },
  "delete_identityproviders_cic": {
    "operationId": "delete_identityproviders_cic",
    "functionName": "delete_identityproviders_cic",
    "signature": "delete_identityproviders_cic()",
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Delete Customer Interaction Center (CIC) Identity Provider\n    api_response = api_instance.delete_identityproviders_cic()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->delete_identityproviders_cic: %s\\n\" % e)"
  },
  "delete_identityproviders_generic": {
    "operationId": "delete_identityproviders_generic",
    "functionName": "delete_identityproviders_generic",
    "signature": "delete_identityproviders_generic()",
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Delete Generic SAML Identity Provider\n    api_response = api_instance.delete_identityproviders_generic()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->delete_identityproviders_generic: %s\\n\" % e)"
  },
  "delete_identityproviders_gsuite": {
    "operationId": "delete_identityproviders_gsuite",
    "functionName": "delete_identityproviders_gsuite",
    "signature": "delete_identityproviders_gsuite()",
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Delete G Suite Identity Provider\n    api_response = api_instance.delete_identityproviders_gsuite()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->delete_identityproviders_gsuite: %s\\n\" % e)"
  },
  "delete_identityproviders_identitynow": {
    "operationId": "delete_identityproviders_identitynow",
    "functionName": "delete_identityproviders_identitynow",
    "signature": "delete_identityproviders_identitynow()",
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Delete IdentityNow Provider\n    api_response = api_instance.delete_identityproviders_identitynow()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->delete_identityproviders_identitynow: %s\\n\" % e)"
  },
  "delete_identityproviders_okta": {
    "operationId": "delete_identityproviders_okta",
    "functionName": "delete_identityproviders_okta",
    "signature": "delete_identityproviders_okta()",
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Delete Okta Identity Provider\n    api_response = api_instance.delete_identityproviders_okta()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->delete_identityproviders_okta: %s\\n\" % e)"
  },
  "delete_identityproviders_onelogin": {
    "operationId": "delete_identityproviders_onelogin",
    "functionName": "delete_identityproviders_onelogin",
    "signature": "delete_identityproviders_onelogin()",
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Delete OneLogin Identity Provider\n    api_response = api_instance.delete_identityproviders_onelogin()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->delete_identityproviders_onelogin: %s\\n\" % e)"
  },
  "delete_identityproviders_ping": {
    "operationId": "delete_identityproviders_ping",
    "functionName": "delete_identityproviders_ping",
    "signature": "delete_identityproviders_ping()",
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Delete Ping Identity Provider\n    api_response = api_instance.delete_identityproviders_ping()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->delete_identityproviders_ping: %s\\n\" % e)"
  },
  "delete_identityproviders_purecloud": {
    "operationId": "delete_identityproviders_purecloud",
    "functionName": "delete_identityproviders_purecloud",
    "signature": "delete_identityproviders_purecloud()",
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Delete PureCloud Identity Provider\n    api_response = api_instance.delete_identityproviders_purecloud()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->delete_identityproviders_purecloud: %s\\n\" % e)"
  },
  "delete_identityproviders_pureengage": {
    "operationId": "delete_identityproviders_pureengage",
    "functionName": "delete_identityproviders_pureengage",
    "signature": "delete_identityproviders_pureengage()",
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Delete PureEngage Identity Provider\n    api_response = api_instance.delete_identityproviders_pureengage()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->delete_identityproviders_pureengage: %s\\n\" % e)"
  },
  "delete_identityproviders_salesforce": {
    "operationId": "delete_identityproviders_salesforce",
    "functionName": "delete_identityproviders_salesforce",
    "signature": "delete_identityproviders_salesforce()",
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Delete Salesforce Identity Provider\n    api_response = api_instance.delete_identityproviders_salesforce()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->delete_identityproviders_salesforce: %s\\n\" % e)"
  },
  "get_identityprovider": {
    "operationId": "get_identityprovider",
    "functionName": "get_identityprovider",
    "signature": "get_identityprovider(provider_id)",
    "parameters": [
      {
        "name": "provider_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CustomProvider",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nprovider_id = 'provider_id_example' # str | Provider ID\n\ntry:\n    # Get Identity Provider\n    api_response = api_instance.get_identityprovider(provider_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->get_identityprovider: %s\\n\" % e)"
  },
  "get_identityproviders": {
    "operationId": "get_identityproviders",
    "functionName": "get_identityproviders",
    "signature": "get_identityproviders()",
    "return": "IdentityProviderEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # The list of identity providers\n    api_response = api_instance.get_identityproviders()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->get_identityproviders: %s\\n\" % e)"
  },
  "get_identityproviders_adfs": {
    "operationId": "get_identityproviders_adfs",
    "functionName": "get_identityproviders_adfs",
    "signature": "get_identityproviders_adfs()",
    "return": "ADFS",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Get ADFS Identity Provider\n    api_response = api_instance.get_identityproviders_adfs()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->get_identityproviders_adfs: %s\\n\" % e)"
  },
  "get_identityproviders_cic": {
    "operationId": "get_identityproviders_cic",
    "functionName": "get_identityproviders_cic",
    "signature": "get_identityproviders_cic()",
    "return": "CustomerInteractionCenter",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Get Customer Interaction Center (CIC) Identity Provider\n    api_response = api_instance.get_identityproviders_cic()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->get_identityproviders_cic: %s\\n\" % e)"
  },
  "get_identityproviders_generic": {
    "operationId": "get_identityproviders_generic",
    "functionName": "get_identityproviders_generic",
    "signature": "get_identityproviders_generic()",
    "return": "GenericSAML",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Get Generic SAML Identity Provider\n    api_response = api_instance.get_identityproviders_generic()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->get_identityproviders_generic: %s\\n\" % e)"
  },
  "get_identityproviders_gsuite": {
    "operationId": "get_identityproviders_gsuite",
    "functionName": "get_identityproviders_gsuite",
    "signature": "get_identityproviders_gsuite()",
    "return": "GSuite",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Get G Suite Identity Provider\n    api_response = api_instance.get_identityproviders_gsuite()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->get_identityproviders_gsuite: %s\\n\" % e)"
  },
  "get_identityproviders_identitynow": {
    "operationId": "get_identityproviders_identitynow",
    "functionName": "get_identityproviders_identitynow",
    "signature": "get_identityproviders_identitynow()",
    "return": "IdentityNow",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Get IdentityNow Provider\n    api_response = api_instance.get_identityproviders_identitynow()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->get_identityproviders_identitynow: %s\\n\" % e)"
  },
  "get_identityproviders_okta": {
    "operationId": "get_identityproviders_okta",
    "functionName": "get_identityproviders_okta",
    "signature": "get_identityproviders_okta()",
    "return": "Okta",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Get Okta Identity Provider\n    api_response = api_instance.get_identityproviders_okta()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->get_identityproviders_okta: %s\\n\" % e)"
  },
  "get_identityproviders_onelogin": {
    "operationId": "get_identityproviders_onelogin",
    "functionName": "get_identityproviders_onelogin",
    "signature": "get_identityproviders_onelogin()",
    "return": "OneLogin",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Get OneLogin Identity Provider\n    api_response = api_instance.get_identityproviders_onelogin()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->get_identityproviders_onelogin: %s\\n\" % e)"
  },
  "get_identityproviders_ping": {
    "operationId": "get_identityproviders_ping",
    "functionName": "get_identityproviders_ping",
    "signature": "get_identityproviders_ping()",
    "return": "PingIdentity",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Get Ping Identity Provider\n    api_response = api_instance.get_identityproviders_ping()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->get_identityproviders_ping: %s\\n\" % e)"
  },
  "get_identityproviders_purecloud": {
    "operationId": "get_identityproviders_purecloud",
    "functionName": "get_identityproviders_purecloud",
    "signature": "get_identityproviders_purecloud()",
    "return": "PureCloud",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Get PureCloud Identity Provider\n    api_response = api_instance.get_identityproviders_purecloud()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->get_identityproviders_purecloud: %s\\n\" % e)"
  },
  "get_identityproviders_pureengage": {
    "operationId": "get_identityproviders_pureengage",
    "functionName": "get_identityproviders_pureengage",
    "signature": "get_identityproviders_pureengage()",
    "return": "PureEngage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Get PureEngage Identity Provider\n    api_response = api_instance.get_identityproviders_pureengage()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->get_identityproviders_pureengage: %s\\n\" % e)"
  },
  "get_identityproviders_salesforce": {
    "operationId": "get_identityproviders_salesforce",
    "functionName": "get_identityproviders_salesforce",
    "signature": "get_identityproviders_salesforce()",
    "return": "Salesforce",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\n\ntry:\n    # Get Salesforce Identity Provider\n    api_response = api_instance.get_identityproviders_salesforce()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->get_identityproviders_salesforce: %s\\n\" % e)"
  },
  "post_identityproviders": {
    "operationId": "post_identityproviders",
    "functionName": "post_identityproviders",
    "signature": "post_identityproviders(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CustomProvider",
        "required": "true"
      }
    ],
    "return": "CustomProvider",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nbody = PureCloudPlatformClientV2.CustomProvider() # CustomProvider | Provider\n\ntry:\n    # Create Identity Provider\n    api_response = api_instance.post_identityproviders(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->post_identityproviders: %s\\n\" % e)"
  },
  "put_identityprovider": {
    "operationId": "put_identityprovider",
    "functionName": "put_identityprovider",
    "signature": "put_identityprovider(provider_id, body)",
    "parameters": [
      {
        "name": "provider_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CustomProvider",
        "required": "true"
      }
    ],
    "return": "CustomProvider",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nprovider_id = 'provider_id_example' # str | Provider ID\nbody = PureCloudPlatformClientV2.CustomProvider() # CustomProvider | Provider\n\ntry:\n    # Update Identity Provider\n    api_response = api_instance.put_identityprovider(provider_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->put_identityprovider: %s\\n\" % e)"
  },
  "put_identityproviders_adfs": {
    "operationId": "put_identityproviders_adfs",
    "functionName": "put_identityproviders_adfs",
    "signature": "put_identityproviders_adfs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ADFS",
        "required": "true"
      }
    ],
    "return": "IdentityProvider",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nbody = PureCloudPlatformClientV2.ADFS() # ADFS | Provider\n\ntry:\n    # Update/Create ADFS Identity Provider\n    api_response = api_instance.put_identityproviders_adfs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->put_identityproviders_adfs: %s\\n\" % e)"
  },
  "put_identityproviders_cic": {
    "operationId": "put_identityproviders_cic",
    "functionName": "put_identityproviders_cic",
    "signature": "put_identityproviders_cic(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CustomerInteractionCenter",
        "required": "true"
      }
    ],
    "return": "IdentityProvider",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nbody = PureCloudPlatformClientV2.CustomerInteractionCenter() # CustomerInteractionCenter | Provider\n\ntry:\n    # Update/Create Customer Interaction Center (CIC) Identity Provider\n    api_response = api_instance.put_identityproviders_cic(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->put_identityproviders_cic: %s\\n\" % e)"
  },
  "put_identityproviders_generic": {
    "operationId": "put_identityproviders_generic",
    "functionName": "put_identityproviders_generic",
    "signature": "put_identityproviders_generic(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GenericSAML",
        "required": "true"
      }
    ],
    "return": "IdentityProvider",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nbody = PureCloudPlatformClientV2.GenericSAML() # GenericSAML | Provider\n\ntry:\n    # Update/Create Generic SAML Identity Provider\n    api_response = api_instance.put_identityproviders_generic(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->put_identityproviders_generic: %s\\n\" % e)"
  },
  "put_identityproviders_gsuite": {
    "operationId": "put_identityproviders_gsuite",
    "functionName": "put_identityproviders_gsuite",
    "signature": "put_identityproviders_gsuite(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GSuite",
        "required": "true"
      }
    ],
    "return": "IdentityProvider",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nbody = PureCloudPlatformClientV2.GSuite() # GSuite | Provider\n\ntry:\n    # Update/Create G Suite Identity Provider\n    api_response = api_instance.put_identityproviders_gsuite(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->put_identityproviders_gsuite: %s\\n\" % e)"
  },
  "put_identityproviders_identitynow": {
    "operationId": "put_identityproviders_identitynow",
    "functionName": "put_identityproviders_identitynow",
    "signature": "put_identityproviders_identitynow(body)",
    "parameters": [
      {
        "name": "body",
        "type": "IdentityNow",
        "required": "true"
      }
    ],
    "return": "IdentityNow",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nbody = PureCloudPlatformClientV2.IdentityNow() # IdentityNow | Provider\n\ntry:\n    # Update/Create IdentityNow Provider\n    api_response = api_instance.put_identityproviders_identitynow(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->put_identityproviders_identitynow: %s\\n\" % e)"
  },
  "put_identityproviders_okta": {
    "operationId": "put_identityproviders_okta",
    "functionName": "put_identityproviders_okta",
    "signature": "put_identityproviders_okta(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Okta",
        "required": "true"
      }
    ],
    "return": "IdentityProvider",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nbody = PureCloudPlatformClientV2.Okta() # Okta | Provider\n\ntry:\n    # Update/Create Okta Identity Provider\n    api_response = api_instance.put_identityproviders_okta(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->put_identityproviders_okta: %s\\n\" % e)"
  },
  "put_identityproviders_onelogin": {
    "operationId": "put_identityproviders_onelogin",
    "functionName": "put_identityproviders_onelogin",
    "signature": "put_identityproviders_onelogin(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OneLogin",
        "required": "true"
      }
    ],
    "return": "IdentityProvider",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nbody = PureCloudPlatformClientV2.OneLogin() # OneLogin | Provider\n\ntry:\n    # Update/Create OneLogin Identity Provider\n    api_response = api_instance.put_identityproviders_onelogin(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->put_identityproviders_onelogin: %s\\n\" % e)"
  },
  "put_identityproviders_ping": {
    "operationId": "put_identityproviders_ping",
    "functionName": "put_identityproviders_ping",
    "signature": "put_identityproviders_ping(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PingIdentity",
        "required": "true"
      }
    ],
    "return": "IdentityProvider",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nbody = PureCloudPlatformClientV2.PingIdentity() # PingIdentity | Provider\n\ntry:\n    # Update/Create Ping Identity Provider\n    api_response = api_instance.put_identityproviders_ping(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->put_identityproviders_ping: %s\\n\" % e)"
  },
  "put_identityproviders_purecloud": {
    "operationId": "put_identityproviders_purecloud",
    "functionName": "put_identityproviders_purecloud",
    "signature": "put_identityproviders_purecloud(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PureCloud",
        "required": "true"
      }
    ],
    "return": "IdentityProvider",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nbody = PureCloudPlatformClientV2.PureCloud() # PureCloud | Provider\n\ntry:\n    # Update/Create PureCloud Identity Provider\n    api_response = api_instance.put_identityproviders_purecloud(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->put_identityproviders_purecloud: %s\\n\" % e)"
  },
  "put_identityproviders_pureengage": {
    "operationId": "put_identityproviders_pureengage",
    "functionName": "put_identityproviders_pureengage",
    "signature": "put_identityproviders_pureengage(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PureEngage",
        "required": "true"
      }
    ],
    "return": "IdentityProvider",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nbody = PureCloudPlatformClientV2.PureEngage() # PureEngage | Provider\n\ntry:\n    # Update/Create PureEngage Identity Provider\n    api_response = api_instance.put_identityproviders_pureengage(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->put_identityproviders_pureengage: %s\\n\" % e)"
  },
  "put_identityproviders_salesforce": {
    "operationId": "put_identityproviders_salesforce",
    "functionName": "put_identityproviders_salesforce",
    "signature": "put_identityproviders_salesforce(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Salesforce",
        "required": "true"
      }
    ],
    "return": "IdentityProvider",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IdentityProviderApi();\nbody = PureCloudPlatformClientV2.Salesforce() # Salesforce | Provider\n\ntry:\n    # Update/Create Salesforce Identity Provider\n    api_response = api_instance.put_identityproviders_salesforce(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IdentityProviderApi->put_identityproviders_salesforce: %s\\n\" % e)"
  },
  "get_infrastructureascode_accelerator": {
    "operationId": "get_infrastructureascode_accelerator",
    "functionName": "get_infrastructureascode_accelerator",
    "signature": "get_infrastructureascode_accelerator(accelerator_id, preferred_language)",
    "parameters": [
      {
        "name": "accelerator_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "preferred_language",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "AcceleratorSpecification",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.InfrastructureAsCodeApi();\naccelerator_id = 'accelerator_id_example' # str | Accelerator ID\npreferred_language = ''en-US'' # str | Preferred Language (optional) (default to 'en-US')\n\ntry:\n    # Get information about an accelerator\n    api_response = api_instance.get_infrastructureascode_accelerator(accelerator_id, preferred_language=preferred_language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling InfrastructureAsCodeApi->get_infrastructureascode_accelerator: %s\\n\" % e)"
  },
  "get_infrastructureascode_accelerators": {
    "operationId": "get_infrastructureascode_accelerators",
    "functionName": "get_infrastructureascode_accelerators",
    "signature": "get_infrastructureascode_accelerators(page_size, page_number, sort_by, sort_order, name, description, origin, type, classification, tags)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "description",
        "type": "str",
        "required": "false"
      },
      {
        "name": "origin",
        "type": "str",
        "required": "false"
      },
      {
        "name": "type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "classification",
        "type": "str",
        "required": "false"
      },
      {
        "name": "tags",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "AcceleratorList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.InfrastructureAsCodeApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\nname = 'name_example' # str | Filter by name (optional)\ndescription = 'description_example' # str | Filter by description (optional)\norigin = 'origin_example' # str | Filter by origin (optional)\ntype = 'type_example' # str | Filter by type (optional)\nclassification = 'classification_example' # str | Filter by classification (optional)\ntags = 'tags_example' # str | Filter by tags (optional)\n\ntry:\n    # Get a list of available accelerators\n    api_response = api_instance.get_infrastructureascode_accelerators(page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order, name=name, description=description, origin=origin, type=type, classification=classification, tags=tags)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling InfrastructureAsCodeApi->get_infrastructureascode_accelerators: %s\\n\" % e)"
  },
  "get_infrastructureascode_job": {
    "operationId": "get_infrastructureascode_job",
    "functionName": "get_infrastructureascode_job",
    "signature": "get_infrastructureascode_job(job_id, details)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "details",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "InfrastructureascodeJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.InfrastructureAsCodeApi();\njob_id = 'job_id_example' # str | Job ID\ndetails = False # bool | Include details of execution, including job results or error information (optional) (default to False)\n\ntry:\n    # Get job status and results\n    api_response = api_instance.get_infrastructureascode_job(job_id, details=details)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling InfrastructureAsCodeApi->get_infrastructureascode_job: %s\\n\" % e)"
  },
  "get_infrastructureascode_jobs": {
    "operationId": "get_infrastructureascode_jobs",
    "functionName": "get_infrastructureascode_jobs",
    "signature": "get_infrastructureascode_jobs(max_results, include_errors, sort_by, sort_order, accelerator_id, submitted_by, status)",
    "parameters": [
      {
        "name": "max_results",
        "type": "int",
        "required": "false"
      },
      {
        "name": "include_errors",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "accelerator_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "submitted_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "status",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "InfrastructureascodeJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.InfrastructureAsCodeApi();\nmax_results = 1 # int | Number of jobs to show (optional) (default to 1)\ninclude_errors = False # bool | Include error messages (optional) (default to False)\nsort_by = ''dateSubmitted'' # str | Sort by (optional) (default to 'dateSubmitted')\nsort_order = ''desc'' # str | Sort order (optional) (default to 'desc')\naccelerator_id = 'accelerator_id_example' # str | Find only jobs associated with this accelerator (optional)\nsubmitted_by = 'submitted_by_example' # str | Find only jobs submitted by this user (optional)\nstatus = 'status_example' # str | Find only jobs in this state (optional)\n\ntry:\n    # Get job history\n    api_response = api_instance.get_infrastructureascode_jobs(max_results=max_results, include_errors=include_errors, sort_by=sort_by, sort_order=sort_order, accelerator_id=accelerator_id, submitted_by=submitted_by, status=status)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling InfrastructureAsCodeApi->get_infrastructureascode_jobs: %s\\n\" % e)"
  },
  "post_infrastructureascode_jobs": {
    "operationId": "post_infrastructureascode_jobs",
    "functionName": "post_infrastructureascode_jobs",
    "signature": "post_infrastructureascode_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AcceleratorInput",
        "required": "true"
      }
    ],
    "return": "InfrastructureascodeJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.InfrastructureAsCodeApi();\nbody = PureCloudPlatformClientV2.AcceleratorInput() # AcceleratorInput | \n\ntry:\n    # Create a Job\n    api_response = api_instance.post_infrastructureascode_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling InfrastructureAsCodeApi->post_infrastructureascode_jobs: %s\\n\" % e)"
  },
  "delete_integration": {
    "operationId": "delete_integration",
    "functionName": "delete_integration",
    "signature": "delete_integration(integration_id)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Integration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nintegration_id = 'integration_id_example' # str | Integration Id\n\ntry:\n    # Delete integration.\n    api_response = api_instance.delete_integration(integration_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->delete_integration: %s\\n\" % e)"
  },
  "delete_integrations_action": {
    "operationId": "delete_integrations_action",
    "functionName": "delete_integrations_action",
    "signature": "delete_integrations_action(action_id)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\n\ntry:\n    # Delete an Action\n    api_instance.delete_integrations_action(action_id)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->delete_integrations_action: %s\\n\" % e)"
  },
  "delete_integrations_action_draft": {
    "operationId": "delete_integrations_action_draft",
    "functionName": "delete_integrations_action_draft",
    "signature": "delete_integrations_action_draft(action_id)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\n\ntry:\n    # Delete a Draft\n    api_instance.delete_integrations_action_draft(action_id)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->delete_integrations_action_draft: %s\\n\" % e)"
  },
  "delete_integrations_credential": {
    "operationId": "delete_integrations_credential",
    "functionName": "delete_integrations_credential",
    "signature": "delete_integrations_credential(credential_id)",
    "parameters": [
      {
        "name": "credential_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\ncredential_id = 'credential_id_example' # str | Credential ID\n\ntry:\n    # Delete a set of credentials\n    api_instance.delete_integrations_credential(credential_id)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->delete_integrations_credential: %s\\n\" % e)"
  },
  "get_integration": {
    "operationId": "get_integration",
    "functionName": "get_integration",
    "signature": "get_integration(integration_id, page_size, page_number, sort_by, expand, next_page, previous_page)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Integration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nintegration_id = 'integration_id_example' # str | Integration Id\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\n\ntry:\n    # Get integration.\n    api_response = api_instance.get_integration(integration_id, page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integration: %s\\n\" % e)"
  },
  "get_integration_config_current": {
    "operationId": "get_integration_config_current",
    "functionName": "get_integration_config_current",
    "signature": "get_integration_config_current(integration_id)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "IntegrationConfiguration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nintegration_id = 'integration_id_example' # str | Integration Id\n\ntry:\n    # Get integration configuration.\n    api_response = api_instance.get_integration_config_current(integration_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integration_config_current: %s\\n\" % e)"
  },
  "get_integrations": {
    "operationId": "get_integrations",
    "functionName": "get_integrations",
    "signature": "get_integrations(page_size, page_number, sort_by, expand, next_page, previous_page)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "IntegrationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\n\ntry:\n    # List integrations\n    api_response = api_instance.get_integrations(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations: %s\\n\" % e)"
  },
  "get_integrations_action": {
    "operationId": "get_integrations_action",
    "functionName": "get_integrations_action",
    "signature": "get_integrations_action(action_id, expand, include_config)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "include_config",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Action",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\nexpand = 'expand_example' # str | Indicates a field in the response which should be expanded. (optional)\ninclude_config = False # bool | Return config in response. (optional) (default to False)\n\ntry:\n    # Retrieves a single Action matching id.\n    api_response = api_instance.get_integrations_action(action_id, expand=expand, include_config=include_config)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_action: %s\\n\" % e)"
  },
  "get_integrations_action_draft": {
    "operationId": "get_integrations_action_draft",
    "functionName": "get_integrations_action_draft",
    "signature": "get_integrations_action_draft(action_id, expand, include_config)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "include_config",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Action",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\nexpand = 'expand_example' # str | Indicates a field in the response which should be expanded. (optional)\ninclude_config = False # bool | Return config in response. (optional) (default to False)\n\ntry:\n    # Retrieve a Draft\n    api_response = api_instance.get_integrations_action_draft(action_id, expand=expand, include_config=include_config)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_action_draft: %s\\n\" % e)"
  },
  "get_integrations_action_draft_function": {
    "operationId": "get_integrations_action_draft_function",
    "functionName": "get_integrations_action_draft_function",
    "signature": "get_integrations_action_draft_function(action_id)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "FunctionConfig",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\n\ntry:\n    # Get draft function settings for Action\n    api_response = api_instance.get_integrations_action_draft_function(action_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_action_draft_function: %s\\n\" % e)"
  },
  "get_integrations_action_draft_schema": {
    "operationId": "get_integrations_action_draft_schema",
    "functionName": "get_integrations_action_draft_schema",
    "signature": "get_integrations_action_draft_schema(action_id, file_name)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "file_name",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "JsonSchemaDocument",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\nfile_name = 'file_name_example' # str | Name of schema file to be retrieved for this draft.\n\ntry:\n    # Retrieve schema for a Draft based on filename.\n    api_response = api_instance.get_integrations_action_draft_schema(action_id, file_name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_action_draft_schema: %s\\n\" % e)"
  },
  "get_integrations_action_draft_template": {
    "operationId": "get_integrations_action_draft_template",
    "functionName": "get_integrations_action_draft_template",
    "signature": "get_integrations_action_draft_template(action_id, file_name)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "file_name",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\nfile_name = 'file_name_example' # str | Name of template file to be retrieved for this action draft.\n\ntry:\n    # Retrieve templates for a Draft based on filename.\n    api_response = api_instance.get_integrations_action_draft_template(action_id, file_name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_action_draft_template: %s\\n\" % e)"
  },
  "get_integrations_action_draft_validation": {
    "operationId": "get_integrations_action_draft_validation",
    "functionName": "get_integrations_action_draft_validation",
    "signature": "get_integrations_action_draft_validation(action_id)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DraftValidationResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\n\ntry:\n    # Validate current Draft configuration.\n    api_response = api_instance.get_integrations_action_draft_validation(action_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_action_draft_validation: %s\\n\" % e)"
  },
  "get_integrations_action_function": {
    "operationId": "get_integrations_action_function",
    "functionName": "get_integrations_action_function",
    "signature": "get_integrations_action_function(action_id)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "FunctionConfig",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\n\ntry:\n    # Get published function settings for Action\n    api_response = api_instance.get_integrations_action_function(action_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_action_function: %s\\n\" % e)"
  },
  "get_integrations_action_schema": {
    "operationId": "get_integrations_action_schema",
    "functionName": "get_integrations_action_schema",
    "signature": "get_integrations_action_schema(action_id, file_name)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "file_name",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "JsonSchemaDocument",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\nfile_name = 'file_name_example' # str | Name of schema file to be retrieved for this action.\n\ntry:\n    # Retrieve schema for an action based on filename.\n    api_response = api_instance.get_integrations_action_schema(action_id, file_name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_action_schema: %s\\n\" % e)"
  },
  "get_integrations_action_template": {
    "operationId": "get_integrations_action_template",
    "functionName": "get_integrations_action_template",
    "signature": "get_integrations_action_template(action_id, file_name)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "file_name",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\nfile_name = 'file_name_example' # str | Name of template file to be retrieved for this action.\n\ntry:\n    # Retrieve text of templates for an action based on filename.\n    api_response = api_instance.get_integrations_action_template(action_id, file_name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_action_template: %s\\n\" % e)"
  },
  "get_integrations_actions": {
    "operationId": "get_integrations_actions",
    "functionName": "get_integrations_actions",
    "signature": "get_integrations_actions(page_size, page_number, next_page, previous_page, sort_by, sort_order, category, name, ids, secure, include_auth_actions)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "category",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "ids",
        "type": "str",
        "required": "false"
      },
      {
        "name": "secure",
        "type": "str",
        "required": "false"
      },
      {
        "name": "include_auth_actions",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ActionEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nsort_by = 'sort_by_example' # str | Root level field name to sort on. (optional)\nsort_order = ''asc'' # str | Direction to sort 'sortBy' field. (optional) (default to 'asc')\ncategory = 'category_example' # str | Filter by category name. (optional)\nname = 'name_example' # str | Filter by partial or complete action name. (optional)\nids = 'ids_example' # str | Filter by action Id. Can be a comma separated list to request multiple actions.  Limit of 50 Ids. (optional)\nsecure = 'secure_example' # str | Filter based on 'secure' configuration option. True will only return actions marked as secure. False will return only non-secure actions. Do not use filter if you want all Actions. (optional)\ninclude_auth_actions = ''false'' # str | Whether or not to include authentication actions in the response. These actions are not directly executable. Some integrations create them and will run them as needed to refresh authentication information for other actions. (optional) (default to 'false')\n\ntry:\n    # Retrieves all actions associated with filters passed in via query param.\n    api_response = api_instance.get_integrations_actions(page_size=page_size, page_number=page_number, next_page=next_page, previous_page=previous_page, sort_by=sort_by, sort_order=sort_order, category=category, name=name, ids=ids, secure=secure, include_auth_actions=include_auth_actions)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_actions: %s\\n\" % e)"
  },
  "get_integrations_actions_categories": {
    "operationId": "get_integrations_actions_categories",
    "functionName": "get_integrations_actions_categories",
    "signature": "get_integrations_actions_categories(page_size, page_number, next_page, previous_page, sort_by, sort_order, secure)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "secure",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CategoryEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nsort_by = 'sort_by_example' # str | Root level field name to sort on.  Only 'name' is supported on this endpoint. (optional)\nsort_order = ''asc'' # str | Direction to sort 'sortBy' field. (optional) (default to 'asc')\nsecure = 'secure_example' # str | Filter to only include secure actions. True will only include actions marked secured. False will include only unsecure actions. Do not use filter if you want all Actions. (optional)\n\ntry:\n    # Retrieves all categories of available Actions\n    api_response = api_instance.get_integrations_actions_categories(page_size=page_size, page_number=page_number, next_page=next_page, previous_page=previous_page, sort_by=sort_by, sort_order=sort_order, secure=secure)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_actions_categories: %s\\n\" % e)"
  },
  "get_integrations_actions_certificates": {
    "operationId": "get_integrations_actions_certificates",
    "functionName": "get_integrations_actions_certificates",
    "signature": "get_integrations_actions_certificates(status, type)",
    "parameters": [
      {
        "name": "status",
        "type": "str",
        "required": "false"
      },
      {
        "name": "type",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ActionCertificateListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nstatus = 'status_example' # str | Indicates the validity of the certificate in question. (optional)\ntype = 'type_example' # str | Indicates the type of the certificate. (optional)\n\ntry:\n    # Retrieves the available mTLS client certificates in use. This endpoint will return inconsistent results while a certificate rotation is in progress.\n    api_response = api_instance.get_integrations_actions_certificates(status=status, type=type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_actions_certificates: %s\\n\" % e)"
  },
  "get_integrations_actions_drafts": {
    "operationId": "get_integrations_actions_drafts",
    "functionName": "get_integrations_actions_drafts",
    "signature": "get_integrations_actions_drafts(page_size, page_number, next_page, previous_page, sort_by, sort_order, category, name, ids, secure, include_auth_actions)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "category",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "ids",
        "type": "str",
        "required": "false"
      },
      {
        "name": "secure",
        "type": "str",
        "required": "false"
      },
      {
        "name": "include_auth_actions",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ActionEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nsort_by = 'sort_by_example' # str | Root level field name to sort on. (optional)\nsort_order = ''asc'' # str | Direction to sort 'sortBy' field. (optional) (default to 'asc')\ncategory = 'category_example' # str | Filter by category name. (optional)\nname = 'name_example' # str | Filter by partial or complete action name. (optional)\nids = 'ids_example' # str | Filter by action Id. Can be a comma separated list to request multiple actions.  Limit of 50 Ids. (optional)\nsecure = 'secure_example' # str | Filter based on 'secure' configuration option. True will only return actions marked as secure. False will return only non-secure actions. Do not use filter if you want all Actions. (optional)\ninclude_auth_actions = ''false'' # str | Whether or not to include authentication actions in the response. These actions are not directly executable. Some integrations create them and will run them as needed to refresh authentication information for other actions. (optional) (default to 'false')\n\ntry:\n    # Retrieves all action drafts associated with the filters passed in via query param.\n    api_response = api_instance.get_integrations_actions_drafts(page_size=page_size, page_number=page_number, next_page=next_page, previous_page=previous_page, sort_by=sort_by, sort_order=sort_order, category=category, name=name, ids=ids, secure=secure, include_auth_actions=include_auth_actions)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_actions_drafts: %s\\n\" % e)"
  },
  "get_integrations_actions_functions_runtimes": {
    "operationId": "get_integrations_actions_functions_runtimes",
    "functionName": "get_integrations_actions_functions_runtimes",
    "signature": "get_integrations_actions_functions_runtimes()",
    "return": "list[FunctionRuntime]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\n\ntry:\n    # Get action function settings for Action\n    api_response = api_instance.get_integrations_actions_functions_runtimes()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_actions_functions_runtimes: %s\\n\" % e)"
  },
  "get_integrations_botconnector_integration_id_bot": {
    "operationId": "get_integrations_botconnector_integration_id_bot",
    "functionName": "get_integrations_botconnector_integration_id_bot",
    "signature": "get_integrations_botconnector_integration_id_bot(integration_id, bot_id, version)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "bot_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "BotConnectorBot",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nintegration_id = 'integration_id_example' # str | The integration ID for this group of bots\nbot_id = 'bot_id_example' # str | The botID for this bot\nversion = 'version_example' # str | Specific Version (optional)\n\ntry:\n    # Get a specific botConnector bot, plus versions, for this integration\n    api_response = api_instance.get_integrations_botconnector_integration_id_bot(integration_id, bot_id, version=version)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_botconnector_integration_id_bot: %s\\n\" % e)"
  },
  "get_integrations_botconnector_integration_id_bot_versions": {
    "operationId": "get_integrations_botconnector_integration_id_bot_versions",
    "functionName": "get_integrations_botconnector_integration_id_bot_versions",
    "signature": "get_integrations_botconnector_integration_id_bot_versions(integration_id, bot_id, page_number, page_size)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "bot_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "BotConnectorBotVersionSummaryEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nintegration_id = 'integration_id_example' # str | The integration ID for this bot group\nbot_id = 'bot_id_example' # str | The botID for this bot\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get a list of bot versions for a bot\n    api_response = api_instance.get_integrations_botconnector_integration_id_bot_versions(integration_id, bot_id, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_botconnector_integration_id_bot_versions: %s\\n\" % e)"
  },
  "get_integrations_botconnector_integration_id_bots": {
    "operationId": "get_integrations_botconnector_integration_id_bots",
    "functionName": "get_integrations_botconnector_integration_id_bots",
    "signature": "get_integrations_botconnector_integration_id_bots(integration_id)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "BotList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nintegration_id = 'integration_id_example' # str | The integration ID for this group of bots\n\ntry:\n    # Get a list of botConnector bots for this integration\n    api_response = api_instance.get_integrations_botconnector_integration_id_bots(integration_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_botconnector_integration_id_bots: %s\\n\" % e)"
  },
  "get_integrations_botconnector_integration_id_bots_summaries": {
    "operationId": "get_integrations_botconnector_integration_id_bots_summaries",
    "functionName": "get_integrations_botconnector_integration_id_bots_summaries",
    "signature": "get_integrations_botconnector_integration_id_bots_summaries(integration_id, page_number, page_size)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "BotConnectorBotSummaryEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nintegration_id = 'integration_id_example' # str | The integration ID for this group of bots\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get a summary list of botConnector bots for this integration\n    api_response = api_instance.get_integrations_botconnector_integration_id_bots_summaries(integration_id, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_botconnector_integration_id_bots_summaries: %s\\n\" % e)"
  },
  "get_integrations_clientapps": {
    "operationId": "get_integrations_clientapps",
    "functionName": "get_integrations_clientapps",
    "signature": "get_integrations_clientapps(page_size, page_number, sort_by, expand, next_page, previous_page)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ClientAppEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\n\ntry:\n    # List permitted client app integrations for the logged in user\n    api_response = api_instance.get_integrations_clientapps(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_clientapps: %s\\n\" % e)"
  },
  "get_integrations_clientapps_unifiedcommunications": {
    "operationId": "get_integrations_clientapps_unifiedcommunications",
    "functionName": "get_integrations_clientapps_unifiedcommunications",
    "signature": "get_integrations_clientapps_unifiedcommunications(page_size, page_number, sort_by, expand, next_page, previous_page)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UCIntegrationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\n\ntry:\n    # UC integration client application configuration.\n    api_response = api_instance.get_integrations_clientapps_unifiedcommunications(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_clientapps_unifiedcommunications: %s\\n\" % e)"
  },
  "get_integrations_credential": {
    "operationId": "get_integrations_credential",
    "functionName": "get_integrations_credential",
    "signature": "get_integrations_credential(credential_id)",
    "parameters": [
      {
        "name": "credential_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Credential",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\ncredential_id = 'credential_id_example' # str | Credential ID\n\ntry:\n    # Get a single credential with sensitive fields redacted\n    api_response = api_instance.get_integrations_credential(credential_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_credential: %s\\n\" % e)"
  },
  "get_integrations_credentials": {
    "operationId": "get_integrations_credentials",
    "functionName": "get_integrations_credentials",
    "signature": "get_integrations_credentials(page_number, page_size)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "CredentialInfoListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # List multiple sets of credentials\n    api_response = api_instance.get_integrations_credentials(page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_credentials: %s\\n\" % e)"
  },
  "get_integrations_credentials_types": {
    "operationId": "get_integrations_credentials_types",
    "functionName": "get_integrations_credentials_types",
    "signature": "get_integrations_credentials_types()",
    "return": "CredentialTypeListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\n\ntry:\n    # List all credential types\n    api_response = api_instance.get_integrations_credentials_types()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_credentials_types: %s\\n\" % e)"
  },
  "get_integrations_speech_dialogflow_agent": {
    "operationId": "get_integrations_speech_dialogflow_agent",
    "functionName": "get_integrations_speech_dialogflow_agent",
    "signature": "get_integrations_speech_dialogflow_agent(agent_id)",
    "parameters": [
      {
        "name": "agent_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DialogflowAgent",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nagent_id = 'agent_id_example' # str | The agent ID\n\ntry:\n    # Get details about a Dialogflow agent\n    api_response = api_instance.get_integrations_speech_dialogflow_agent(agent_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_dialogflow_agent: %s\\n\" % e)"
  },
  "get_integrations_speech_dialogflow_agents": {
    "operationId": "get_integrations_speech_dialogflow_agents",
    "functionName": "get_integrations_speech_dialogflow_agents",
    "signature": "get_integrations_speech_dialogflow_agents(page_number, page_size, name)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DialogflowAgentSummaryEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nname = 'name_example' # str | Filter on agent name (optional)\n\ntry:\n    # Get a list of Dialogflow agents in the customers' Google accounts\n    api_response = api_instance.get_integrations_speech_dialogflow_agents(page_number=page_number, page_size=page_size, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_dialogflow_agents: %s\\n\" % e)"
  },
  "get_integrations_speech_dialogflowcx_agent": {
    "operationId": "get_integrations_speech_dialogflowcx_agent",
    "functionName": "get_integrations_speech_dialogflowcx_agent",
    "signature": "get_integrations_speech_dialogflowcx_agent(agent_id)",
    "parameters": [
      {
        "name": "agent_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DialogflowCXAgent",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nagent_id = 'agent_id_example' # str | The agent ID\n\ntry:\n    # Get details about a Dialogflow CX agent\n    api_response = api_instance.get_integrations_speech_dialogflowcx_agent(agent_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_dialogflowcx_agent: %s\\n\" % e)"
  },
  "get_integrations_speech_dialogflowcx_agents": {
    "operationId": "get_integrations_speech_dialogflowcx_agents",
    "functionName": "get_integrations_speech_dialogflowcx_agents",
    "signature": "get_integrations_speech_dialogflowcx_agents(page_number, page_size, name)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DialogflowCXAgentSummaryEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nname = 'name_example' # str | Filter on agent name (optional)\n\ntry:\n    # Get a list of Dialogflow CX agents in the customers' Google accounts\n    api_response = api_instance.get_integrations_speech_dialogflowcx_agents(page_number=page_number, page_size=page_size, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_dialogflowcx_agents: %s\\n\" % e)"
  },
  "get_integrations_speech_lex_bot_alias": {
    "operationId": "get_integrations_speech_lex_bot_alias",
    "functionName": "get_integrations_speech_lex_bot_alias",
    "signature": "get_integrations_speech_lex_bot_alias(alias_id)",
    "parameters": [
      {
        "name": "alias_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LexBotAlias",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nalias_id = 'alias_id_example' # str | The alias ID\n\ntry:\n    # Get details about a Lex bot alias\n    api_response = api_instance.get_integrations_speech_lex_bot_alias(alias_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_lex_bot_alias: %s\\n\" % e)"
  },
  "get_integrations_speech_lex_bot_bot_id_aliases": {
    "operationId": "get_integrations_speech_lex_bot_bot_id_aliases",
    "functionName": "get_integrations_speech_lex_bot_bot_id_aliases",
    "signature": "get_integrations_speech_lex_bot_bot_id_aliases(bot_id, page_number, page_size, status, name)",
    "parameters": [
      {
        "name": "bot_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "status",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "LexBotAliasEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nbot_id = 'bot_id_example' # str | The bot ID\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nstatus = 'status_example' # str | Filter on alias status (optional)\nname = 'name_example' # str | Filter on alias name (optional)\n\ntry:\n    # Get a list of aliases for a bot in the customer's AWS accounts\n    api_response = api_instance.get_integrations_speech_lex_bot_bot_id_aliases(bot_id, page_number=page_number, page_size=page_size, status=status, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_lex_bot_bot_id_aliases: %s\\n\" % e)"
  },
  "get_integrations_speech_lex_bots": {
    "operationId": "get_integrations_speech_lex_bots",
    "functionName": "get_integrations_speech_lex_bots",
    "signature": "get_integrations_speech_lex_bots(page_number, page_size, name)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "LexBotEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nname = 'name_example' # str | Filter on bot name (optional)\n\ntry:\n    # Get a list of Lex bots in the customers' AWS accounts\n    api_response = api_instance.get_integrations_speech_lex_bots(page_number=page_number, page_size=page_size, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_lex_bots: %s\\n\" % e)"
  },
  "get_integrations_speech_lexv2_bot_alias": {
    "operationId": "get_integrations_speech_lexv2_bot_alias",
    "functionName": "get_integrations_speech_lexv2_bot_alias",
    "signature": "get_integrations_speech_lexv2_bot_alias(alias_id)",
    "parameters": [
      {
        "name": "alias_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LexV2BotAlias",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nalias_id = 'alias_id_example' # str | The Alias ID\n\ntry:\n    # Get details about a Lex V2 bot alias\n    api_response = api_instance.get_integrations_speech_lexv2_bot_alias(alias_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_lexv2_bot_alias: %s\\n\" % e)"
  },
  "get_integrations_speech_lexv2_bot_bot_id_aliases": {
    "operationId": "get_integrations_speech_lexv2_bot_bot_id_aliases",
    "functionName": "get_integrations_speech_lexv2_bot_bot_id_aliases",
    "signature": "get_integrations_speech_lexv2_bot_bot_id_aliases(bot_id, page_number, page_size, status, name)",
    "parameters": [
      {
        "name": "bot_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "status",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "LexV2BotAliasEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nbot_id = 'bot_id_example' # str | The Bot ID\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nstatus = 'status_example' # str | Filter on alias status (optional)\nname = 'name_example' # str | Filter on alias name (optional)\n\ntry:\n    # Get a list of aliases for a Lex V2 bot\n    api_response = api_instance.get_integrations_speech_lexv2_bot_bot_id_aliases(bot_id, page_number=page_number, page_size=page_size, status=status, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_lexv2_bot_bot_id_aliases: %s\\n\" % e)"
  },
  "get_integrations_speech_lexv2_bots": {
    "operationId": "get_integrations_speech_lexv2_bots",
    "functionName": "get_integrations_speech_lexv2_bots",
    "signature": "get_integrations_speech_lexv2_bots(page_number, page_size, name)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "LexV2BotEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nname = 'name_example' # str | Filter on bot name (optional)\n\ntry:\n    # Get a list of Lex V2 bots\n    api_response = api_instance.get_integrations_speech_lexv2_bots(page_number=page_number, page_size=page_size, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_lexv2_bots: %s\\n\" % e)"
  },
  "get_integrations_speech_nuance_nuance_integration_id_bot": {
    "operationId": "get_integrations_speech_nuance_nuance_integration_id_bot",
    "functionName": "get_integrations_speech_nuance_nuance_integration_id_bot",
    "signature": "get_integrations_speech_nuance_nuance_integration_id_bot(nuance_integration_id, bot_id, expand, target_channel)",
    "parameters": [
      {
        "name": "nuance_integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "bot_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "target_channel",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "NuanceBot",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nnuance_integration_id = 'nuance_integration_id_example' # str | The integration ID for this group of bots\nbot_id = 'bot_id_example' # str | The Nuance bot ID to get\nexpand = ['expand_example'] # list[str] | expand (optional)\ntarget_channel = 'target_channel_example' # str | targetChannel (optional)\n\ntry:\n    # Get a Nuance bot in the specified Integration\n    api_response = api_instance.get_integrations_speech_nuance_nuance_integration_id_bot(nuance_integration_id, bot_id, expand=expand, target_channel=target_channel)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_nuance_nuance_integration_id_bot: %s\\n\" % e)"
  },
  "get_integrations_speech_nuance_nuance_integration_id_bot_job": {
    "operationId": "get_integrations_speech_nuance_nuance_integration_id_bot_job",
    "functionName": "get_integrations_speech_nuance_nuance_integration_id_bot_job",
    "signature": "get_integrations_speech_nuance_nuance_integration_id_bot_job(nuance_integration_id, bot_id, job_id)",
    "parameters": [
      {
        "name": "nuance_integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "bot_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nnuance_integration_id = 'nuance_integration_id_example' # str | The integration ID for this group of bots\nbot_id = 'bot_id_example' # str | The Nuance bot ID\njob_id = 'job_id_example' # str | The asynchronous job ID\n\ntry:\n    # Get the status of an asynchronous Nuance bot GET job\n    api_response = api_instance.get_integrations_speech_nuance_nuance_integration_id_bot_job(nuance_integration_id, bot_id, job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_nuance_nuance_integration_id_bot_job: %s\\n\" % e)"
  },
  "get_integrations_speech_nuance_nuance_integration_id_bot_job_results": {
    "operationId": "get_integrations_speech_nuance_nuance_integration_id_bot_job_results",
    "functionName": "get_integrations_speech_nuance_nuance_integration_id_bot_job_results",
    "signature": "get_integrations_speech_nuance_nuance_integration_id_bot_job_results(nuance_integration_id, bot_id, job_id)",
    "parameters": [
      {
        "name": "nuance_integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "bot_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "NuanceBot",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nnuance_integration_id = 'nuance_integration_id_example' # str | The integration ID for this group of bots\nbot_id = 'bot_id_example' # str | The Nuance bot ID\njob_id = 'job_id_example' # str | The asynchronous job ID\n\ntry:\n    # Get the result of an asynchronous Nuance bot GET job\n    api_response = api_instance.get_integrations_speech_nuance_nuance_integration_id_bot_job_results(nuance_integration_id, bot_id, job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_nuance_nuance_integration_id_bot_job_results: %s\\n\" % e)"
  },
  "get_integrations_speech_nuance_nuance_integration_id_bots": {
    "operationId": "get_integrations_speech_nuance_nuance_integration_id_bots",
    "functionName": "get_integrations_speech_nuance_nuance_integration_id_bots",
    "signature": "get_integrations_speech_nuance_nuance_integration_id_bots(nuance_integration_id, page_number, page_size, only_registered_bots)",
    "parameters": [
      {
        "name": "nuance_integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "only_registered_bots",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "NuanceBotEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nnuance_integration_id = 'nuance_integration_id_example' # str | The integration ID for this group of bots\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nonly_registered_bots = True # bool | Limit bots to the ones configured for Genesys Cloud usage (optional) (default to True)\n\ntry:\n    # Get a list of Nuance bots available in the specified Integration\n    api_response = api_instance.get_integrations_speech_nuance_nuance_integration_id_bots(nuance_integration_id, page_number=page_number, page_size=page_size, only_registered_bots=only_registered_bots)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_nuance_nuance_integration_id_bots: %s\\n\" % e)"
  },
  "get_integrations_speech_nuance_nuance_integration_id_bots_job": {
    "operationId": "get_integrations_speech_nuance_nuance_integration_id_bots_job",
    "functionName": "get_integrations_speech_nuance_nuance_integration_id_bots_job",
    "signature": "get_integrations_speech_nuance_nuance_integration_id_bots_job(nuance_integration_id, job_id)",
    "parameters": [
      {
        "name": "nuance_integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AsyncJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nnuance_integration_id = 'nuance_integration_id_example' # str | The integration ID for this group of bots\njob_id = 'job_id_example' # str | The asynchronous job ID\n\ntry:\n    # Get the status of an asynchronous Nuance bots GET job\n    api_response = api_instance.get_integrations_speech_nuance_nuance_integration_id_bots_job(nuance_integration_id, job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_nuance_nuance_integration_id_bots_job: %s\\n\" % e)"
  },
  "get_integrations_speech_nuance_nuance_integration_id_bots_job_results": {
    "operationId": "get_integrations_speech_nuance_nuance_integration_id_bots_job_results",
    "functionName": "get_integrations_speech_nuance_nuance_integration_id_bots_job_results",
    "signature": "get_integrations_speech_nuance_nuance_integration_id_bots_job_results(nuance_integration_id, job_id)",
    "parameters": [
      {
        "name": "nuance_integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "NuanceBotEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nnuance_integration_id = 'nuance_integration_id_example' # str | The integration ID for this group of bots\njob_id = 'job_id_example' # str | The asynchronous job ID\n\ntry:\n    # Get the result of an asynchronous Nuance bots GET job\n    api_response = api_instance.get_integrations_speech_nuance_nuance_integration_id_bots_job_results(nuance_integration_id, job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_nuance_nuance_integration_id_bots_job_results: %s\\n\" % e)"
  },
  "get_integrations_speech_stt_engine": {
    "operationId": "get_integrations_speech_stt_engine",
    "functionName": "get_integrations_speech_stt_engine",
    "signature": "get_integrations_speech_stt_engine(engine_id)",
    "parameters": [
      {
        "name": "engine_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SttEngineEntity",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nengine_id = 'engine_id_example' # str | The engine ID\n\ntry:\n    # Get details about a STT engine\n    api_response = api_instance.get_integrations_speech_stt_engine(engine_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_stt_engine: %s\\n\" % e)"
  },
  "get_integrations_speech_stt_engines": {
    "operationId": "get_integrations_speech_stt_engines",
    "functionName": "get_integrations_speech_stt_engines",
    "signature": "get_integrations_speech_stt_engines(page_number, page_size, name)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SttEngineEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nname = 'name_example' # str | Filter on engine name (optional)\n\ntry:\n    # Get a list of STT engines enabled for org\n    api_response = api_instance.get_integrations_speech_stt_engines(page_number=page_number, page_size=page_size, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_stt_engines: %s\\n\" % e)"
  },
  "get_integrations_speech_tts_engine": {
    "operationId": "get_integrations_speech_tts_engine",
    "functionName": "get_integrations_speech_tts_engine",
    "signature": "get_integrations_speech_tts_engine(engine_id, include_voices)",
    "parameters": [
      {
        "name": "engine_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_voices",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "TtsEngineEntity",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nengine_id = 'engine_id_example' # str | The engine ID\ninclude_voices = False # bool | Include voices for the engine (optional) (default to False)\n\ntry:\n    # Get details about a TTS engine\n    api_response = api_instance.get_integrations_speech_tts_engine(engine_id, include_voices=include_voices)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_tts_engine: %s\\n\" % e)"
  },
  "get_integrations_speech_tts_engine_voice": {
    "operationId": "get_integrations_speech_tts_engine_voice",
    "functionName": "get_integrations_speech_tts_engine_voice",
    "signature": "get_integrations_speech_tts_engine_voice(engine_id, voice_id)",
    "parameters": [
      {
        "name": "engine_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "voice_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TtsVoiceEntity",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nengine_id = 'engine_id_example' # str | The engine ID\nvoice_id = 'voice_id_example' # str | The voice ID\n\ntry:\n    # Get details about a specific voice for a TTS engine\n    api_response = api_instance.get_integrations_speech_tts_engine_voice(engine_id, voice_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_tts_engine_voice: %s\\n\" % e)"
  },
  "get_integrations_speech_tts_engine_voices": {
    "operationId": "get_integrations_speech_tts_engine_voices",
    "functionName": "get_integrations_speech_tts_engine_voices",
    "signature": "get_integrations_speech_tts_engine_voices(engine_id, page_number, page_size)",
    "parameters": [
      {
        "name": "engine_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "TtsVoiceEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nengine_id = 'engine_id_example' # str | The engine ID\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get a list of voices for a TTS engine\n    api_response = api_instance.get_integrations_speech_tts_engine_voices(engine_id, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_tts_engine_voices: %s\\n\" % e)"
  },
  "get_integrations_speech_tts_engines": {
    "operationId": "get_integrations_speech_tts_engines",
    "functionName": "get_integrations_speech_tts_engines",
    "signature": "get_integrations_speech_tts_engines(page_number, page_size, include_voices, name, language)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "include_voices",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "language",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TtsEngineEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\ninclude_voices = False # bool | Include voices for the engine (optional) (default to False)\nname = 'name_example' # str | Filter on engine name (optional)\nlanguage = 'language_example' # str | Filter on supported language. If includeVoices=true then the voices are also filtered. (optional)\n\ntry:\n    # Get a list of TTS engines enabled for org\n    api_response = api_instance.get_integrations_speech_tts_engines(page_number=page_number, page_size=page_size, include_voices=include_voices, name=name, language=language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_tts_engines: %s\\n\" % e)"
  },
  "get_integrations_speech_tts_settings": {
    "operationId": "get_integrations_speech_tts_settings",
    "functionName": "get_integrations_speech_tts_settings",
    "signature": "get_integrations_speech_tts_settings()",
    "return": "TtsSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\n\ntry:\n    # Get TTS settings for an org\n    api_response = api_instance.get_integrations_speech_tts_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_speech_tts_settings: %s\\n\" % e)"
  },
  "get_integrations_type": {
    "operationId": "get_integrations_type",
    "functionName": "get_integrations_type",
    "signature": "get_integrations_type(type_id)",
    "parameters": [
      {
        "name": "type_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "IntegrationType",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\ntype_id = 'type_id_example' # str | Integration Type Id\n\ntry:\n    # Get integration type.\n    api_response = api_instance.get_integrations_type(type_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_type: %s\\n\" % e)"
  },
  "get_integrations_type_configschema": {
    "operationId": "get_integrations_type_configschema",
    "functionName": "get_integrations_type_configschema",
    "signature": "get_integrations_type_configschema(type_id, config_type)",
    "parameters": [
      {
        "name": "type_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "config_type",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "JsonSchemaDocument",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\ntype_id = 'type_id_example' # str | Integration Type Id\nconfig_type = 'config_type_example' # str | Config schema type\n\ntry:\n    # Get properties config schema for an integration type.\n    api_response = api_instance.get_integrations_type_configschema(type_id, config_type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_type_configschema: %s\\n\" % e)"
  },
  "get_integrations_types": {
    "operationId": "get_integrations_types",
    "functionName": "get_integrations_types",
    "signature": "get_integrations_types(page_size, page_number, sort_by, expand, next_page, previous_page)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "IntegrationTypeEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\n\ntry:\n    # List integration types\n    api_response = api_instance.get_integrations_types(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_types: %s\\n\" % e)"
  },
  "get_integrations_unifiedcommunications_clientapp": {
    "operationId": "get_integrations_unifiedcommunications_clientapp",
    "functionName": "get_integrations_unifiedcommunications_clientapp",
    "signature": "get_integrations_unifiedcommunications_clientapp(uc_integration_id)",
    "parameters": [
      {
        "name": "uc_integration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UnifiedCommunicationsIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nuc_integration_id = 'uc_integration_id_example' # str | 3rd Party Service Type\n\ntry:\n    # UC integration client application configuration.\n    api_response = api_instance.get_integrations_unifiedcommunications_clientapp(uc_integration_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_unifiedcommunications_clientapp: %s\\n\" % e)"
  },
  "get_integrations_unifiedcommunications_clientapps": {
    "operationId": "get_integrations_unifiedcommunications_clientapps",
    "functionName": "get_integrations_unifiedcommunications_clientapps",
    "signature": "get_integrations_unifiedcommunications_clientapps(page_size, page_number, sort_by, expand, next_page, previous_page)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UnifiedCommunicationsIntegrationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\n\ntry:\n    # List UC integration client application configurations.\n    api_response = api_instance.get_integrations_unifiedcommunications_clientapps(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_unifiedcommunications_clientapps: %s\\n\" % e)"
  },
  "get_integrations_userapps": {
    "operationId": "get_integrations_userapps",
    "functionName": "get_integrations_userapps",
    "signature": "get_integrations_userapps(page_size, page_number, sort_by, expand, next_page, previous_page, app_host)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "app_host",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UserAppEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\napp_host = 'app_host_example' # str | The type of UserApp to filter by (optional)\n\ntry:\n    # List permitted user app integrations for the logged in user\n    api_response = api_instance.get_integrations_userapps(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page, app_host=app_host)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->get_integrations_userapps: %s\\n\" % e)"
  },
  "patch_integration": {
    "operationId": "patch_integration",
    "functionName": "patch_integration",
    "signature": "patch_integration(integration_id, page_size, page_number, sort_by, expand, next_page, previous_page, body)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Integration",
        "required": "false"
      }
    ],
    "return": "Integration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nintegration_id = 'integration_id_example' # str | Integration Id\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nbody = PureCloudPlatformClientV2.Integration() # Integration | Integration Update (optional)\n\ntry:\n    # Update an integration.\n    api_response = api_instance.patch_integration(integration_id, page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->patch_integration: %s\\n\" % e)"
  },
  "patch_integrations_action": {
    "operationId": "patch_integrations_action",
    "functionName": "patch_integrations_action",
    "signature": "patch_integrations_action(action_id, body)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateActionInput",
        "required": "true"
      }
    ],
    "return": "Action",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\nbody = PureCloudPlatformClientV2.UpdateActionInput() # UpdateActionInput | Input used to patch the Action.\n\ntry:\n    # Patch an Action\n    api_response = api_instance.patch_integrations_action(action_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->patch_integrations_action: %s\\n\" % e)"
  },
  "patch_integrations_action_draft": {
    "operationId": "patch_integrations_action_draft",
    "functionName": "patch_integrations_action_draft",
    "signature": "patch_integrations_action_draft(action_id, body)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateDraftInput",
        "required": "true"
      }
    ],
    "return": "Action",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\nbody = PureCloudPlatformClientV2.UpdateDraftInput() # UpdateDraftInput | Input used to patch the Action Draft.\n\ntry:\n    # Update an existing Draft\n    api_response = api_instance.patch_integrations_action_draft(action_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->patch_integrations_action_draft: %s\\n\" % e)"
  },
  "post_integrations": {
    "operationId": "post_integrations",
    "functionName": "post_integrations",
    "signature": "post_integrations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateIntegrationRequest",
        "required": "false"
      }
    ],
    "return": "Integration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nbody = PureCloudPlatformClientV2.CreateIntegrationRequest() # CreateIntegrationRequest | Integration (optional)\n\ntry:\n    # Create an integration.\n    api_response = api_instance.post_integrations(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->post_integrations: %s\\n\" % e)"
  },
  "post_integrations_action_draft": {
    "operationId": "post_integrations_action_draft",
    "functionName": "post_integrations_action_draft",
    "signature": "post_integrations_action_draft(action_id)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Action",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\n\ntry:\n    # Create a new Draft from existing Action\n    api_response = api_instance.post_integrations_action_draft(action_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->post_integrations_action_draft: %s\\n\" % e)"
  },
  "post_integrations_action_draft_function_upload": {
    "operationId": "post_integrations_action_draft_function_upload",
    "functionName": "post_integrations_action_draft_function_upload",
    "signature": "post_integrations_action_draft_function_upload(action_id, body)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "FunctionUploadRequest",
        "required": "true"
      }
    ],
    "return": "FunctionUploadResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UploadsApi();\naction_id = 'action_id_example' # str | actionId\nbody = PureCloudPlatformClientV2.FunctionUploadRequest() # FunctionUploadRequest | Input used to request URL upload.\n\ntry:\n    # Create upload presigned URL for draft function package file.\n    api_response = api_instance.post_integrations_action_draft_function_upload(action_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UploadsApi->post_integrations_action_draft_function_upload: %s\\n\" % e)"
  },
  "post_integrations_action_draft_publish": {
    "operationId": "post_integrations_action_draft_publish",
    "functionName": "post_integrations_action_draft_publish",
    "signature": "post_integrations_action_draft_publish(action_id, body)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PublishDraftInput",
        "required": "true"
      }
    ],
    "return": "Action",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\nbody = PureCloudPlatformClientV2.PublishDraftInput() # PublishDraftInput | Input used to patch the Action.\n\ntry:\n    # Publish a Draft and make it the active Action configuration\n    api_response = api_instance.post_integrations_action_draft_publish(action_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->post_integrations_action_draft_publish: %s\\n\" % e)"
  },
  "post_integrations_action_draft_test": {
    "operationId": "post_integrations_action_draft_test",
    "functionName": "post_integrations_action_draft_test",
    "signature": "post_integrations_action_draft_test(action_id, body)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "object",
        "required": "true"
      }
    ],
    "return": "TestExecutionResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\nbody = NULL # object | Map of parameters used for variable substitution.\n\ntry:\n    # Test the execution of a draft. Responses will show execution steps broken out with intermediate results to help in debugging.\n    api_response = api_instance.post_integrations_action_draft_test(action_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->post_integrations_action_draft_test: %s\\n\" % e)"
  },
  "post_integrations_action_execute": {
    "operationId": "post_integrations_action_execute",
    "functionName": "post_integrations_action_execute",
    "signature": "post_integrations_action_execute(action_id, body)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "object",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\nbody = NULL # object | Map of parameters used for variable substitution.\n\ntry:\n    # Execute Action and return response from 3rd party.  Responses will follow the schemas defined on the Action for success and error.\n    api_response = api_instance.post_integrations_action_execute(action_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->post_integrations_action_execute: %s\\n\" % e)"
  },
  "post_integrations_action_test": {
    "operationId": "post_integrations_action_test",
    "functionName": "post_integrations_action_test",
    "signature": "post_integrations_action_test(action_id, body)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "object",
        "required": "true"
      }
    ],
    "return": "TestExecutionResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\nbody = NULL # object | Map of parameters used for variable substitution.\n\ntry:\n    # Test the execution of an action. Responses will show execution steps broken out with intermediate results to help in debugging.\n    api_response = api_instance.post_integrations_action_test(action_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->post_integrations_action_test: %s\\n\" % e)"
  },
  "post_integrations_actions": {
    "operationId": "post_integrations_actions",
    "functionName": "post_integrations_actions",
    "signature": "post_integrations_actions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PostActionInput",
        "required": "true"
      }
    ],
    "return": "Action",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nbody = PureCloudPlatformClientV2.PostActionInput() # PostActionInput | Input used to create Action.\n\ntry:\n    # Create a new Action. Not supported for 'Function Integration' actions. Function integrations must be created as drafts to allow managing of uploading required ZIP function package before they may be used as a published action.\n    api_response = api_instance.post_integrations_actions(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->post_integrations_actions: %s\\n\" % e)"
  },
  "post_integrations_actions_drafts": {
    "operationId": "post_integrations_actions_drafts",
    "functionName": "post_integrations_actions_drafts",
    "signature": "post_integrations_actions_drafts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PostActionInput",
        "required": "true"
      }
    ],
    "return": "Action",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nbody = PureCloudPlatformClientV2.PostActionInput() # PostActionInput | Input used to create Action Draft.\n\ntry:\n    # Create a new Draft\n    api_response = api_instance.post_integrations_actions_drafts(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->post_integrations_actions_drafts: %s\\n\" % e)"
  },
  "post_integrations_credentials": {
    "operationId": "post_integrations_credentials",
    "functionName": "post_integrations_credentials",
    "signature": "post_integrations_credentials(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Credential",
        "required": "false"
      }
    ],
    "return": "CredentialInfo",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nbody = PureCloudPlatformClientV2.Credential() # Credential | Credential (optional)\n\ntry:\n    # Create a set of credentials\n    api_response = api_instance.post_integrations_credentials(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->post_integrations_credentials: %s\\n\" % e)"
  },
  "post_integrations_speech_nuance_nuance_integration_id_bot_jobs": {
    "operationId": "post_integrations_speech_nuance_nuance_integration_id_bot_jobs",
    "functionName": "post_integrations_speech_nuance_nuance_integration_id_bot_jobs",
    "signature": "post_integrations_speech_nuance_nuance_integration_id_bot_jobs(nuance_integration_id, bot_id, expand, body)",
    "parameters": [
      {
        "name": "nuance_integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "bot_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "body",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "AsyncJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nnuance_integration_id = 'nuance_integration_id_example' # str | The integration ID for this group of bots\nbot_id = 'bot_id_example' # str | The Nuance bot ID\nexpand = ['expand_example'] # list[str] | expand (optional)\nbody = 'body_example' # str | targetChannel (optional)\n\ntry:\n    # Get a Nuance bot in the specified Integration asynchronously\n    api_response = api_instance.post_integrations_speech_nuance_nuance_integration_id_bot_jobs(nuance_integration_id, bot_id, expand=expand, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->post_integrations_speech_nuance_nuance_integration_id_bot_jobs: %s\\n\" % e)"
  },
  "post_integrations_speech_nuance_nuance_integration_id_bots_jobs": {
    "operationId": "post_integrations_speech_nuance_nuance_integration_id_bots_jobs",
    "functionName": "post_integrations_speech_nuance_nuance_integration_id_bots_jobs",
    "signature": "post_integrations_speech_nuance_nuance_integration_id_bots_jobs(nuance_integration_id, page_number, page_size, only_registered_bots)",
    "parameters": [
      {
        "name": "nuance_integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "only_registered_bots",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AsyncJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nnuance_integration_id = 'nuance_integration_id_example' # str | The integration ID for this group of bots\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nonly_registered_bots = True # bool | Limit bots to the ones configured for Genesys Cloud usage (optional) (default to True)\n\ntry:\n    # Get a list of Nuance bots in the specified Integration asynchronously\n    api_response = api_instance.post_integrations_speech_nuance_nuance_integration_id_bots_jobs(nuance_integration_id, page_number=page_number, page_size=page_size, only_registered_bots=only_registered_bots)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->post_integrations_speech_nuance_nuance_integration_id_bots_jobs: %s\\n\" % e)"
  },
  "post_integrations_speech_nuance_nuance_integration_id_bots_launch_validate": {
    "operationId": "post_integrations_speech_nuance_nuance_integration_id_bots_launch_validate",
    "functionName": "post_integrations_speech_nuance_nuance_integration_id_bots_launch_validate",
    "signature": "post_integrations_speech_nuance_nuance_integration_id_bots_launch_validate(nuance_integration_id, settings)",
    "parameters": [
      {
        "name": "nuance_integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "settings",
        "type": "BotExecutionConfiguration",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nnuance_integration_id = 'nuance_integration_id_example' # str | The integration ID for this group of bots\nsettings = PureCloudPlatformClientV2.BotExecutionConfiguration() # BotExecutionConfiguration | \n\ntry:\n    # Try out a single credential for a Nuance bot to know if the secret is correct\n    api_instance.post_integrations_speech_nuance_nuance_integration_id_bots_launch_validate(nuance_integration_id, settings)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->post_integrations_speech_nuance_nuance_integration_id_bots_launch_validate: %s\\n\" % e)"
  },
  "put_integration_config_current": {
    "operationId": "put_integration_config_current",
    "functionName": "put_integration_config_current",
    "signature": "put_integration_config_current(integration_id, body)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "IntegrationConfiguration",
        "required": "false"
      }
    ],
    "return": "IntegrationConfiguration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nintegration_id = 'integration_id_example' # str | Integration Id\nbody = PureCloudPlatformClientV2.IntegrationConfiguration() # IntegrationConfiguration | Integration Configuration (optional)\n\ntry:\n    # Update integration configuration.\n    api_response = api_instance.put_integration_config_current(integration_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->put_integration_config_current: %s\\n\" % e)"
  },
  "put_integrations_action_draft_function": {
    "operationId": "put_integrations_action_draft_function",
    "functionName": "put_integrations_action_draft_function",
    "signature": "put_integrations_action_draft_function(action_id, body)",
    "parameters": [
      {
        "name": "action_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Function",
        "required": "true"
      }
    ],
    "return": "FunctionConfig",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\naction_id = 'action_id_example' # str | actionId\nbody = PureCloudPlatformClientV2.Function() # Function | Input used to update function settings.\n\ntry:\n    # Update draft function settings.\n    api_response = api_instance.put_integrations_action_draft_function(action_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->put_integrations_action_draft_function: %s\\n\" % e)"
  },
  "put_integrations_botconnector_integration_id_bots": {
    "operationId": "put_integrations_botconnector_integration_id_bots",
    "functionName": "put_integrations_botconnector_integration_id_bots",
    "signature": "put_integrations_botconnector_integration_id_bots(integration_id, bot_list)",
    "parameters": [
      {
        "name": "integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "bot_list",
        "type": "BotList",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nintegration_id = 'integration_id_example' # str | The integration ID for this group of bots\nbot_list = PureCloudPlatformClientV2.BotList() # BotList | \n\ntry:\n    # Set a list of botConnector bots plus versions for this integration\n    api_instance.put_integrations_botconnector_integration_id_bots(integration_id, bot_list)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->put_integrations_botconnector_integration_id_bots: %s\\n\" % e)"
  },
  "put_integrations_credential": {
    "operationId": "put_integrations_credential",
    "functionName": "put_integrations_credential",
    "signature": "put_integrations_credential(credential_id, body)",
    "parameters": [
      {
        "name": "credential_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Credential",
        "required": "false"
      }
    ],
    "return": "CredentialInfo",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\ncredential_id = 'credential_id_example' # str | Credential ID\nbody = PureCloudPlatformClientV2.Credential() # Credential | Credential (optional)\n\ntry:\n    # Update a set of credentials\n    api_response = api_instance.put_integrations_credential(credential_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->put_integrations_credential: %s\\n\" % e)"
  },
  "put_integrations_speech_nuance_nuance_integration_id_bots_launch_settings": {
    "operationId": "put_integrations_speech_nuance_nuance_integration_id_bots_launch_settings",
    "functionName": "put_integrations_speech_nuance_nuance_integration_id_bots_launch_settings",
    "signature": "put_integrations_speech_nuance_nuance_integration_id_bots_launch_settings(nuance_integration_id, settings)",
    "parameters": [
      {
        "name": "nuance_integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "settings",
        "type": "NuanceBotLaunchSettings",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nnuance_integration_id = 'nuance_integration_id_example' # str | The integration ID for this group of bots\nsettings = PureCloudPlatformClientV2.NuanceBotLaunchSettings() # NuanceBotLaunchSettings | \n\ntry:\n    # Update the Nuance bot list for the specific bots made available to Genesys Cloud in the specified Integration\n    api_instance.put_integrations_speech_nuance_nuance_integration_id_bots_launch_settings(nuance_integration_id, settings)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->put_integrations_speech_nuance_nuance_integration_id_bots_launch_settings: %s\\n\" % e)"
  },
  "put_integrations_speech_tts_settings": {
    "operationId": "put_integrations_speech_tts_settings",
    "functionName": "put_integrations_speech_tts_settings",
    "signature": "put_integrations_speech_tts_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TtsSettings",
        "required": "true"
      }
    ],
    "return": "TtsSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nbody = PureCloudPlatformClientV2.TtsSettings() # TtsSettings | Updated TtsSettings\n\ntry:\n    # Update TTS settings for an org\n    api_response = api_instance.put_integrations_speech_tts_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->put_integrations_speech_tts_settings: %s\\n\" % e)"
  },
  "put_integrations_unifiedcommunication_thirdpartypresences": {
    "operationId": "put_integrations_unifiedcommunication_thirdpartypresences",
    "functionName": "put_integrations_unifiedcommunication_thirdpartypresences",
    "signature": "put_integrations_unifiedcommunication_thirdpartypresences(uc_integration_id, body)",
    "parameters": [
      {
        "name": "uc_integration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[UCThirdPartyPresence]",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.IntegrationsApi();\nuc_integration_id = 'uc_integration_id_example' # str | UC Integration ID\nbody = [PureCloudPlatformClientV2.UCThirdPartyPresence()] # list[UCThirdPartyPresence] | List of User presences\n\ntry:\n    # Bulk integration presence ingestion\n    api_response = api_instance.put_integrations_unifiedcommunication_thirdpartypresences(uc_integration_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->put_integrations_unifiedcommunication_thirdpartypresences: %s\\n\" % e)"
  },
  "delete_journey_actionmap": {
    "operationId": "delete_journey_actionmap",
    "functionName": "delete_journey_actionmap",
    "signature": "delete_journey_actionmap(action_map_id)",
    "parameters": [
      {
        "name": "action_map_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\naction_map_id = 'action_map_id_example' # str | ID of the action map.\n\ntry:\n    # Delete single action map.\n    api_instance.delete_journey_actionmap(action_map_id)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->delete_journey_actionmap: %s\\n\" % e)"
  },
  "delete_journey_actiontemplate": {
    "operationId": "delete_journey_actiontemplate",
    "functionName": "delete_journey_actiontemplate",
    "signature": "delete_journey_actiontemplate(action_template_id, hard_delete)",
    "parameters": [
      {
        "name": "action_template_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "hard_delete",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\naction_template_id = 'action_template_id_example' # str | ID of the action template.\nhard_delete = True # bool | Determines whether Action Template should be soft-deleted (have it's state set to deleted) or hard-deleted (permanently removed). Set to false (soft-delete) by default. (optional)\n\ntry:\n    # Delete a single action template.\n    api_instance.delete_journey_actiontemplate(action_template_id, hard_delete=hard_delete)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->delete_journey_actiontemplate: %s\\n\" % e)"
  },
  "delete_journey_outcome": {
    "operationId": "delete_journey_outcome",
    "functionName": "delete_journey_outcome",
    "signature": "delete_journey_outcome(outcome_id)",
    "parameters": [
      {
        "name": "outcome_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\noutcome_id = 'outcome_id_example' # str | ID of the outcome.\n\ntry:\n    # Delete an outcome.\n    api_instance.delete_journey_outcome(outcome_id)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->delete_journey_outcome: %s\\n\" % e)"
  },
  "delete_journey_outcomes_predictor": {
    "operationId": "delete_journey_outcomes_predictor",
    "functionName": "delete_journey_outcomes_predictor",
    "signature": "delete_journey_outcomes_predictor(predictor_id)",
    "parameters": [
      {
        "name": "predictor_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\npredictor_id = 'predictor_id_example' # str | ID of predictor\n\ntry:\n    # Delete an outcome predictor.\n    api_instance.delete_journey_outcomes_predictor(predictor_id)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->delete_journey_outcomes_predictor: %s\\n\" % e)"
  },
  "delete_journey_segment": {
    "operationId": "delete_journey_segment",
    "functionName": "delete_journey_segment",
    "signature": "delete_journey_segment(segment_id)",
    "parameters": [
      {
        "name": "segment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nsegment_id = 'segment_id_example' # str | ID of the segment.\n\ntry:\n    # Delete a segment.\n    api_instance.delete_journey_segment(segment_id)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->delete_journey_segment: %s\\n\" % e)"
  },
  "delete_journey_view": {
    "operationId": "delete_journey_view",
    "functionName": "delete_journey_view",
    "signature": "delete_journey_view(view_id)",
    "parameters": [
      {
        "name": "view_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nview_id = 'view_id_example' # str | viewId\n\ntry:\n    # Delete a Journey View by ID\n    api_instance.delete_journey_view(view_id)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->delete_journey_view: %s\\n\" % e)"
  },
  "get_journey_actionmap": {
    "operationId": "get_journey_actionmap",
    "functionName": "get_journey_actionmap",
    "signature": "get_journey_actionmap(action_map_id)",
    "parameters": [
      {
        "name": "action_map_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ActionMap",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\naction_map_id = 'action_map_id_example' # str | ID of the action map.\n\ntry:\n    # Retrieve a single action map.\n    api_response = api_instance.get_journey_actionmap(action_map_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_actionmap: %s\\n\" % e)"
  },
  "get_journey_actionmaps": {
    "operationId": "get_journey_actionmaps",
    "functionName": "get_journey_actionmaps",
    "signature": "get_journey_actionmaps(page_number, page_size, sort_by, filter_field, filter_value, action_map_ids, query_fields, query_value)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "filter_field",
        "type": "str",
        "required": "false"
      },
      {
        "name": "filter_value",
        "type": "str",
        "required": "false"
      },
      {
        "name": "action_map_ids",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "query_fields",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "query_value",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ActionMapListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = 'sort_by_example' # str | Field(s) to sort by. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate). (optional)\nfilter_field = 'filter_field_example' # str | Field to filter by (e.g. filterField=weight or filterField=action.actionTemplate.id). Requires 'filterField' to also be set. (optional)\nfilter_value = 'filter_value_example' # str | Value to filter by. Requires 'filterValue' to also be set. (optional)\naction_map_ids = ['action_map_ids_example'] # list[str] | IDs of action maps to return. Use of this parameter is not compatible with pagination, filtering, sorting or querying. A maximum of 100 action maps are allowed per request. (optional)\nquery_fields = ['query_fields_example'] # list[str] | Action Map field(s) to query on. Requires 'queryValue' to also be set. (optional)\nquery_value = 'query_value_example' # str | Value to query on. Requires 'queryFields' to also be set. (optional)\n\ntry:\n    # Retrieve all action maps.\n    api_response = api_instance.get_journey_actionmaps(page_number=page_number, page_size=page_size, sort_by=sort_by, filter_field=filter_field, filter_value=filter_value, action_map_ids=action_map_ids, query_fields=query_fields, query_value=query_value)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_actionmaps: %s\\n\" % e)"
  },
  "get_journey_actionmaps_estimates_job": {
    "operationId": "get_journey_actionmaps_estimates_job",
    "functionName": "get_journey_actionmaps_estimates_job",
    "signature": "get_journey_actionmaps_estimates_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\njob_id = 'job_id_example' # str | ID of the job.\n\ntry:\n    # Get status of job.\n    api_response = api_instance.get_journey_actionmaps_estimates_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_actionmaps_estimates_job: %s\\n\" % e)"
  },
  "get_journey_actionmaps_estimates_job_results": {
    "operationId": "get_journey_actionmaps_estimates_job_results",
    "functionName": "get_journey_actionmaps_estimates_job_results",
    "signature": "get_journey_actionmaps_estimates_job_results(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ActionMapEstimateResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\njob_id = 'job_id_example' # str | ID of the job.\n\ntry:\n    # Get estimates from completed job.\n    api_response = api_instance.get_journey_actionmaps_estimates_job_results(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_actionmaps_estimates_job_results: %s\\n\" % e)"
  },
  "get_journey_actiontarget": {
    "operationId": "get_journey_actiontarget",
    "functionName": "get_journey_actiontarget",
    "signature": "get_journey_actiontarget(action_target_id)",
    "parameters": [
      {
        "name": "action_target_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ActionTarget",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\naction_target_id = 'action_target_id_example' # str | ID of the action target.\n\ntry:\n    # Retrieve a single action target.\n    api_response = api_instance.get_journey_actiontarget(action_target_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_actiontarget: %s\\n\" % e)"
  },
  "get_journey_actiontargets": {
    "operationId": "get_journey_actiontargets",
    "functionName": "get_journey_actiontargets",
    "signature": "get_journey_actiontargets(page_number, page_size)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "ActionTargetListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Retrieve all action targets.\n    api_response = api_instance.get_journey_actiontargets(page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_actiontargets: %s\\n\" % e)"
  },
  "get_journey_actiontemplate": {
    "operationId": "get_journey_actiontemplate",
    "functionName": "get_journey_actiontemplate",
    "signature": "get_journey_actiontemplate(action_template_id)",
    "parameters": [
      {
        "name": "action_template_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ActionTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\naction_template_id = 'action_template_id_example' # str | ID of the action template.\n\ntry:\n    # Retrieve a single action template.\n    api_response = api_instance.get_journey_actiontemplate(action_template_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_actiontemplate: %s\\n\" % e)"
  },
  "get_journey_actiontemplates": {
    "operationId": "get_journey_actiontemplates",
    "functionName": "get_journey_actiontemplates",
    "signature": "get_journey_actiontemplates(page_number, page_size, sort_by, media_type, state, query_fields, query_value)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "media_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "state",
        "type": "str",
        "required": "false"
      },
      {
        "name": "query_fields",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "query_value",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ActionTemplateListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = 'sort_by_example' # str | Field(s) to sort by. Prefix with '-' for descending (e.g. sortBy=name,-createdDate). (optional)\nmedia_type = 'media_type_example' # str | Media type (optional)\nstate = 'state_example' # str | Action template state. (optional)\nquery_fields = ['query_fields_example'] # list[str] | ActionTemplate field(s) to query on. Requires 'queryValue' to also be set. (optional)\nquery_value = 'query_value_example' # str | Value to query on. Requires 'queryFields' to also be set. (optional)\n\ntry:\n    # Retrieve all action templates.\n    api_response = api_instance.get_journey_actiontemplates(page_number=page_number, page_size=page_size, sort_by=sort_by, media_type=media_type, state=state, query_fields=query_fields, query_value=query_value)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_actiontemplates: %s\\n\" % e)"
  },
  "get_journey_deployment_customer_ping": {
    "operationId": "get_journey_deployment_customer_ping",
    "functionName": "get_journey_deployment_customer_ping",
    "signature": "get_journey_deployment_customer_ping(deployment_id, customer_cookie_id, dl, dt, app_namespace, session_id, since_last_beacon_milliseconds)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "customer_cookie_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "dl",
        "type": "str",
        "required": "false"
      },
      {
        "name": "dt",
        "type": "str",
        "required": "false"
      },
      {
        "name": "app_namespace",
        "type": "str",
        "required": "false"
      },
      {
        "name": "session_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "since_last_beacon_milliseconds",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "DeploymentPing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\ndeployment_id = 'deployment_id_example' # str | The ID of the deployment sending the ping.\ncustomer_cookie_id = 'customer_cookie_id_example' # str | ID of the customer associated with the ping.\ndl = 'dl_example' # str | Document Location: 1) Web Page URL if overridden or URL fragment identifier (window.location.hash). OR  2) Application screen name that the ping request was sent from in the app. e.g. 'home' or 'help. Pings without this parameter will not return actions. (optional)\ndt = 'dt_example' # str | Document Title.  A human readable name for the page or screen (optional)\napp_namespace = 'app_namespace_example' # str | Namespace of the application (e.g. com.genesys.bancodinero). Used for domain filtering in application sessions (optional)\nsession_id = 'session_id_example' # str | UUID of the customer session. Use the same Session Id for all pings, AppEvents and ActionEvents in the session (optional)\nsince_last_beacon_milliseconds = 56 # int | How long (milliseconds) since the last app event or beacon was sent. The response may return a pollInternvalMilliseconds to reduce the frequency of pings. (optional)\n\ntry:\n    # Send a ping.\n    api_response = api_instance.get_journey_deployment_customer_ping(deployment_id, customer_cookie_id, dl=dl, dt=dt, app_namespace=app_namespace, session_id=session_id, since_last_beacon_milliseconds=since_last_beacon_milliseconds)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_deployment_customer_ping: %s\\n\" % e)"
  },
  "get_journey_outcome": {
    "operationId": "get_journey_outcome",
    "functionName": "get_journey_outcome",
    "signature": "get_journey_outcome(outcome_id)",
    "parameters": [
      {
        "name": "outcome_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Outcome",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\noutcome_id = 'outcome_id_example' # str | ID of the outcome.\n\ntry:\n    # Retrieve a single outcome.\n    api_response = api_instance.get_journey_outcome(outcome_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_outcome: %s\\n\" % e)"
  },
  "get_journey_outcomes": {
    "operationId": "get_journey_outcomes",
    "functionName": "get_journey_outcomes",
    "signature": "get_journey_outcomes(page_number, page_size, sort_by, outcome_ids, query_fields, query_value)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "outcome_ids",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "query_fields",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "query_value",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OutcomeListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = 'sort_by_example' # str | Field(s) to sort by. The response can be sorted by any first level property on the Outcome response. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate). (optional)\noutcome_ids = ['outcome_ids_example'] # list[str] | IDs of outcomes to return. Use of this parameter is not compatible with pagination, sorting or querying. A maximum of 20 outcomes are allowed per request. (optional)\nquery_fields = ['query_fields_example'] # list[str] | Outcome field(s) to query on. Requires 'queryValue' to also be set. (optional)\nquery_value = 'query_value_example' # str | Value to query on. Requires 'queryFields' to also be set. (optional)\n\ntry:\n    # Retrieve all outcomes.\n    api_response = api_instance.get_journey_outcomes(page_number=page_number, page_size=page_size, sort_by=sort_by, outcome_ids=outcome_ids, query_fields=query_fields, query_value=query_value)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_outcomes: %s\\n\" % e)"
  },
  "get_journey_outcomes_attributions_job": {
    "operationId": "get_journey_outcomes_attributions_job",
    "functionName": "get_journey_outcomes_attributions_job",
    "signature": "get_journey_outcomes_attributions_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OutcomeAttributionJobStateResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\njob_id = 'job_id_example' # str | ID of the job.\n\ntry:\n    # Get job status.\n    api_response = api_instance.get_journey_outcomes_attributions_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_outcomes_attributions_job: %s\\n\" % e)"
  },
  "get_journey_outcomes_attributions_job_results": {
    "operationId": "get_journey_outcomes_attributions_job_results",
    "functionName": "get_journey_outcomes_attributions_job_results",
    "signature": "get_journey_outcomes_attributions_job_results(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OutcomeAttributionResponseListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\njob_id = 'job_id_example' # str | ID of the job.\n\ntry:\n    # Get outcome attribution entities from completed job.\n    api_response = api_instance.get_journey_outcomes_attributions_job_results(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_outcomes_attributions_job_results: %s\\n\" % e)"
  },
  "get_journey_outcomes_predictor": {
    "operationId": "get_journey_outcomes_predictor",
    "functionName": "get_journey_outcomes_predictor",
    "signature": "get_journey_outcomes_predictor(predictor_id)",
    "parameters": [
      {
        "name": "predictor_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OutcomePredictor",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\npredictor_id = 'predictor_id_example' # str | ID of predictor\n\ntry:\n    # Retrieve a single outcome predictor.\n    api_response = api_instance.get_journey_outcomes_predictor(predictor_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_outcomes_predictor: %s\\n\" % e)"
  },
  "get_journey_outcomes_predictors": {
    "operationId": "get_journey_outcomes_predictors",
    "functionName": "get_journey_outcomes_predictors",
    "signature": "get_journey_outcomes_predictors()",
    "return": "OutcomePredictorListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\n\ntry:\n    # Retrieve all outcome predictors.\n    api_response = api_instance.get_journey_outcomes_predictors()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_outcomes_predictors: %s\\n\" % e)"
  },
  "get_journey_segment": {
    "operationId": "get_journey_segment",
    "functionName": "get_journey_segment",
    "signature": "get_journey_segment(segment_id)",
    "parameters": [
      {
        "name": "segment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "JourneySegment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nsegment_id = 'segment_id_example' # str | ID of the segment.\n\ntry:\n    # Retrieve a single segment.\n    api_response = api_instance.get_journey_segment(segment_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_segment: %s\\n\" % e)"
  },
  "get_journey_segments": {
    "operationId": "get_journey_segments",
    "functionName": "get_journey_segments",
    "signature": "get_journey_segments(sort_by, page_size, page_number, is_active, segment_ids, query_fields, query_value)",
    "parameters": [
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "is_active",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "segment_ids",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "query_fields",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "query_value",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SegmentListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nsort_by = 'sort_by_example' # str | Field(s) to sort by. The response can be sorted by any first level property on the Outcome response. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate). (optional)\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nis_active = True # bool | Determines whether or not to show only active segments. (optional)\nsegment_ids = ['segment_ids_example'] # list[str] | IDs of segments to return. Use of this parameter is not compatible with pagination, sorting or querying. A maximum of 100 segments are allowed per request. (optional)\nquery_fields = ['query_fields_example'] # list[str] | Segment field(s) to query on. Requires 'queryValue' to also be set. (optional)\nquery_value = 'query_value_example' # str | Value to query on. Requires 'queryFields' to also be set. (optional)\n\ntry:\n    # Retrieve all segments.\n    api_response = api_instance.get_journey_segments(sort_by=sort_by, page_size=page_size, page_number=page_number, is_active=is_active, segment_ids=segment_ids, query_fields=query_fields, query_value=query_value)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_segments: %s\\n\" % e)"
  },
  "get_journey_session": {
    "operationId": "get_journey_session",
    "functionName": "get_journey_session",
    "signature": "get_journey_session(session_id)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Session",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nsession_id = 'session_id_example' # str | ID of the session.\n\ntry:\n    # Retrieve a single session.\n    api_response = api_instance.get_journey_session(session_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_session: %s\\n\" % e)"
  },
  "get_journey_session_events": {
    "operationId": "get_journey_session_events",
    "functionName": "get_journey_session_events",
    "signature": "get_journey_session_events(session_id, page_size, after)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "EventListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nsession_id = 'session_id_example' # str | System-generated UUID that represents the session the event is a part of.\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\n\ntry:\n    # Retrieve all events for a given session.\n    api_response = api_instance.get_journey_session_events(session_id, page_size=page_size, after=after)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_session_events: %s\\n\" % e)"
  },
  "get_journey_session_outcomescores": {
    "operationId": "get_journey_session_outcomescores",
    "functionName": "get_journey_session_outcomescores",
    "signature": "get_journey_session_outcomescores(session_id)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OutcomeScoresResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nsession_id = 'session_id_example' # str | ID of the session.\n\ntry:\n    # Retrieve latest outcome score associated with a session for all outcomes.\n    api_response = api_instance.get_journey_session_outcomescores(session_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_session_outcomescores: %s\\n\" % e)"
  },
  "get_journey_view": {
    "operationId": "get_journey_view",
    "functionName": "get_journey_view",
    "signature": "get_journey_view(view_id)",
    "parameters": [
      {
        "name": "view_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "JourneyView",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nview_id = 'view_id_example' # str | viewId\n\ntry:\n    # Get a Journey View by ID\n    api_response = api_instance.get_journey_view(view_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_view: %s\\n\" % e)"
  },
  "get_journey_view_version": {
    "operationId": "get_journey_view_version",
    "functionName": "get_journey_view_version",
    "signature": "get_journey_view_version(view_id, version_id)",
    "parameters": [
      {
        "name": "view_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "JourneyView",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nview_id = 'view_id_example' # str | viewId\nversion_id = 'version_id_example' # str | versionId\n\ntry:\n    # Get a Journey View by ID and version\n    api_response = api_instance.get_journey_view_version(view_id, version_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_view_version: %s\\n\" % e)"
  },
  "get_journey_view_version_job": {
    "operationId": "get_journey_view_version_job",
    "functionName": "get_journey_view_version_job",
    "signature": "get_journey_view_version_job(view_id, journey_version_id, job_id)",
    "parameters": [
      {
        "name": "view_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "journey_version_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "JourneyViewJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nview_id = 'view_id_example' # str | Journey View Id\njourney_version_id = 'journey_version_id_example' # str | Journey View Version\njob_id = 'job_id_example' # str | JobId\n\ntry:\n    # Get the job for a journey view version.\n    api_response = api_instance.get_journey_view_version_job(view_id, journey_version_id, job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_view_version_job: %s\\n\" % e)"
  },
  "get_journey_view_version_job_results": {
    "operationId": "get_journey_view_version_job_results",
    "functionName": "get_journey_view_version_job_results",
    "signature": "get_journey_view_version_job_results(view_id, journey_view_version, job_id)",
    "parameters": [
      {
        "name": "view_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "journey_view_version",
        "type": "str",
        "required": "true"
      },
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "JourneyViewResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nview_id = 'view_id_example' # str | JourneyViewResult id\njourney_view_version = 'journey_view_version_example' # str | Journey View Version\njob_id = 'job_id_example' # str | Id of the executing job\n\ntry:\n    # Get the result of a job for a journey view version.\n    api_response = api_instance.get_journey_view_version_job_results(view_id, journey_view_version, job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_view_version_job_results: %s\\n\" % e)"
  },
  "get_journey_view_version_jobs_latest": {
    "operationId": "get_journey_view_version_jobs_latest",
    "functionName": "get_journey_view_version_jobs_latest",
    "signature": "get_journey_view_version_jobs_latest(view_id, journey_version_id)",
    "parameters": [
      {
        "name": "view_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "journey_version_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "JourneyViewJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nview_id = 'view_id_example' # str | Journey View Id\njourney_version_id = 'journey_version_id_example' # str | Journey View Version\n\ntry:\n    # Get the latest job of a journey view version.\n    api_response = api_instance.get_journey_view_version_jobs_latest(view_id, journey_version_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_view_version_jobs_latest: %s\\n\" % e)"
  },
  "get_journey_views": {
    "operationId": "get_journey_views",
    "functionName": "get_journey_views",
    "signature": "get_journey_views()",
    "return": "JourneyViewListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\n\ntry:\n    # Get a list of Journey Views\n    api_response = api_instance.get_journey_views()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_views: %s\\n\" % e)"
  },
  "get_journey_views_eventdefinition": {
    "operationId": "get_journey_views_eventdefinition",
    "functionName": "get_journey_views_eventdefinition",
    "signature": "get_journey_views_eventdefinition(event_definition_id)",
    "parameters": [
      {
        "name": "event_definition_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "JourneyEventDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nevent_definition_id = 'event_definition_id_example' # str | Event Definition ID\n\ntry:\n    # Get an Event Definition\n    api_response = api_instance.get_journey_views_eventdefinition(event_definition_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_views_eventdefinition: %s\\n\" % e)"
  },
  "get_journey_views_eventdefinitions": {
    "operationId": "get_journey_views_eventdefinitions",
    "functionName": "get_journey_views_eventdefinitions",
    "signature": "get_journey_views_eventdefinitions()",
    "return": "JourneyEventDefinitionListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\n\ntry:\n    # Get a list of Event Definitions\n    api_response = api_instance.get_journey_views_eventdefinitions()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->get_journey_views_eventdefinitions: %s\\n\" % e)"
  },
  "patch_journey_actionmap": {
    "operationId": "patch_journey_actionmap",
    "functionName": "patch_journey_actionmap",
    "signature": "patch_journey_actionmap(action_map_id, body)",
    "parameters": [
      {
        "name": "action_map_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchActionMap",
        "required": "false"
      }
    ],
    "return": "ActionMap",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\naction_map_id = 'action_map_id_example' # str | ID of the action map.\nbody = PureCloudPlatformClientV2.PatchActionMap() # PatchActionMap |  (optional)\n\ntry:\n    # Update single action map.\n    api_response = api_instance.patch_journey_actionmap(action_map_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->patch_journey_actionmap: %s\\n\" % e)"
  },
  "patch_journey_actiontarget": {
    "operationId": "patch_journey_actiontarget",
    "functionName": "patch_journey_actiontarget",
    "signature": "patch_journey_actiontarget(action_target_id, body)",
    "parameters": [
      {
        "name": "action_target_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchActionTarget",
        "required": "false"
      }
    ],
    "return": "ActionTarget",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\naction_target_id = 'action_target_id_example' # str | ID of the action target.\nbody = PureCloudPlatformClientV2.PatchActionTarget() # PatchActionTarget |  (optional)\n\ntry:\n    # Update a single action target.\n    api_response = api_instance.patch_journey_actiontarget(action_target_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->patch_journey_actiontarget: %s\\n\" % e)"
  },
  "patch_journey_actiontemplate": {
    "operationId": "patch_journey_actiontemplate",
    "functionName": "patch_journey_actiontemplate",
    "signature": "patch_journey_actiontemplate(action_template_id, body)",
    "parameters": [
      {
        "name": "action_template_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchActionTemplate",
        "required": "false"
      }
    ],
    "return": "ActionTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\naction_template_id = 'action_template_id_example' # str | ID of the action template.\nbody = PureCloudPlatformClientV2.PatchActionTemplate() # PatchActionTemplate |  (optional)\n\ntry:\n    # Update a single action template.\n    api_response = api_instance.patch_journey_actiontemplate(action_template_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->patch_journey_actiontemplate: %s\\n\" % e)"
  },
  "patch_journey_outcome": {
    "operationId": "patch_journey_outcome",
    "functionName": "patch_journey_outcome",
    "signature": "patch_journey_outcome(outcome_id, body)",
    "parameters": [
      {
        "name": "outcome_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchOutcome",
        "required": "false"
      }
    ],
    "return": "Outcome",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\noutcome_id = 'outcome_id_example' # str | ID of the outcome.\nbody = PureCloudPlatformClientV2.PatchOutcome() # PatchOutcome |  (optional)\n\ntry:\n    # Update an outcome.\n    api_response = api_instance.patch_journey_outcome(outcome_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->patch_journey_outcome: %s\\n\" % e)"
  },
  "patch_journey_segment": {
    "operationId": "patch_journey_segment",
    "functionName": "patch_journey_segment",
    "signature": "patch_journey_segment(segment_id, body)",
    "parameters": [
      {
        "name": "segment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchSegment",
        "required": "false"
      }
    ],
    "return": "JourneySegment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nsegment_id = 'segment_id_example' # str | ID of the segment.\nbody = PureCloudPlatformClientV2.PatchSegment() # PatchSegment |  (optional)\n\ntry:\n    # Update a segment.\n    api_response = api_instance.patch_journey_segment(segment_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->patch_journey_segment: %s\\n\" % e)"
  },
  "post_journey_actionmaps": {
    "operationId": "post_journey_actionmaps",
    "functionName": "post_journey_actionmaps",
    "signature": "post_journey_actionmaps(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ActionMap",
        "required": "false"
      }
    ],
    "return": "ActionMap",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nbody = PureCloudPlatformClientV2.ActionMap() # ActionMap |  (optional)\n\ntry:\n    # Create an action map.\n    api_response = api_instance.post_journey_actionmaps(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_actionmaps: %s\\n\" % e)"
  },
  "post_journey_actionmaps_estimates_jobs": {
    "operationId": "post_journey_actionmaps_estimates_jobs",
    "functionName": "post_journey_actionmaps_estimates_jobs",
    "signature": "post_journey_actionmaps_estimates_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ActionMapEstimateRequest",
        "required": "true"
      }
    ],
    "return": "EstimateJobAsyncResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nbody = PureCloudPlatformClientV2.ActionMapEstimateRequest() # ActionMapEstimateRequest | audience estimator request\n\ntry:\n    # Query for estimates\n    api_response = api_instance.post_journey_actionmaps_estimates_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_actionmaps_estimates_jobs: %s\\n\" % e)"
  },
  "post_journey_actiontemplates": {
    "operationId": "post_journey_actiontemplates",
    "functionName": "post_journey_actiontemplates",
    "signature": "post_journey_actiontemplates(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ActionTemplate",
        "required": "false"
      }
    ],
    "return": "ActionTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nbody = PureCloudPlatformClientV2.ActionTemplate() # ActionTemplate |  (optional)\n\ntry:\n    # Create a single action template.\n    api_response = api_instance.post_journey_actiontemplates(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_actiontemplates: %s\\n\" % e)"
  },
  "post_journey_deployment_actionevent": {
    "operationId": "post_journey_deployment_actionevent",
    "functionName": "post_journey_deployment_actionevent",
    "signature": "post_journey_deployment_actionevent(deployment_id, body)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ActionEventRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\ndeployment_id = 'deployment_id_example' # str | The ID of the deployment sending the beacon.\nbody = PureCloudPlatformClientV2.ActionEventRequest() # ActionEventRequest | \n\ntry:\n    # Sends an action event, which is used for changing the state of actions that have been offered to the user.\n    api_instance.post_journey_deployment_actionevent(deployment_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_deployment_actionevent: %s\\n\" % e)"
  },
  "post_journey_deployment_appevents": {
    "operationId": "post_journey_deployment_appevents",
    "functionName": "post_journey_deployment_appevents",
    "signature": "post_journey_deployment_appevents(deployment_id, body)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AppEventRequest",
        "required": "false"
      }
    ],
    "return": "AppEventResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\ndeployment_id = 'deployment_id_example' # str | The ID of the deployment sending the app event.\nbody = PureCloudPlatformClientV2.AppEventRequest() # AppEventRequest |  (optional)\n\ntry:\n    # Send a journey app event, used for tracking customer activity on an application.\n    api_response = api_instance.post_journey_deployment_appevents(deployment_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_deployment_appevents: %s\\n\" % e)"
  },
  "post_journey_flows_paths_query": {
    "operationId": "post_journey_flows_paths_query",
    "functionName": "post_journey_flows_paths_query",
    "signature": "post_journey_flows_paths_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowPathsQuery",
        "required": "false"
      }
    ],
    "return": "FlowPaths",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nbody = PureCloudPlatformClientV2.FlowPathsQuery() # FlowPathsQuery |  (optional)\n\ntry:\n    # Query for flow paths.\n    api_response = api_instance.post_journey_flows_paths_query(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_flows_paths_query: %s\\n\" % e)"
  },
  "post_journey_outcomes": {
    "operationId": "post_journey_outcomes",
    "functionName": "post_journey_outcomes",
    "signature": "post_journey_outcomes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OutcomeRequest",
        "required": "false"
      }
    ],
    "return": "Outcome",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nbody = PureCloudPlatformClientV2.OutcomeRequest() # OutcomeRequest |  (optional)\n\ntry:\n    # Create an outcome.\n    api_response = api_instance.post_journey_outcomes(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_outcomes: %s\\n\" % e)"
  },
  "post_journey_outcomes_attributions_jobs": {
    "operationId": "post_journey_outcomes_attributions_jobs",
    "functionName": "post_journey_outcomes_attributions_jobs",
    "signature": "post_journey_outcomes_attributions_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OutcomeAttributionListing",
        "required": "false"
      }
    ],
    "return": "OutcomeAttributionAsyncResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nbody = PureCloudPlatformClientV2.OutcomeAttributionListing() # OutcomeAttributionListing | outcome attribution request (optional)\n\ntry:\n    # Create Outcome Attributions\n    api_response = api_instance.post_journey_outcomes_attributions_jobs(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_outcomes_attributions_jobs: %s\\n\" % e)"
  },
  "post_journey_outcomes_predictors": {
    "operationId": "post_journey_outcomes_predictors",
    "functionName": "post_journey_outcomes_predictors",
    "signature": "post_journey_outcomes_predictors(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OutcomePredictorRequest",
        "required": "false"
      }
    ],
    "return": "OutcomePredictor",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nbody = PureCloudPlatformClientV2.OutcomePredictorRequest() # OutcomePredictorRequest |  (optional)\n\ntry:\n    # Create an outcome predictor.\n    api_response = api_instance.post_journey_outcomes_predictors(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_outcomes_predictors: %s\\n\" % e)"
  },
  "post_journey_segments": {
    "operationId": "post_journey_segments",
    "functionName": "post_journey_segments",
    "signature": "post_journey_segments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "JourneySegmentRequest",
        "required": "false"
      }
    ],
    "return": "JourneySegment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nbody = PureCloudPlatformClientV2.JourneySegmentRequest() # JourneySegmentRequest |  (optional)\n\ntry:\n    # Create a segment.\n    api_response = api_instance.post_journey_segments(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_segments: %s\\n\" % e)"
  },
  "post_journey_view_version_jobs": {
    "operationId": "post_journey_view_version_jobs",
    "functionName": "post_journey_view_version_jobs",
    "signature": "post_journey_view_version_jobs(view_id, journey_version_id)",
    "parameters": [
      {
        "name": "view_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "journey_version_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "JourneyViewJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nview_id = 'view_id_example' # str | Journey View Id\njourney_version_id = 'journey_version_id_example' # str | Journey View Version\n\ntry:\n    # Submit a job request for a journey view version.\n    api_response = api_instance.post_journey_view_version_jobs(view_id, journey_version_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_view_version_jobs: %s\\n\" % e)"
  },
  "post_journey_view_versions": {
    "operationId": "post_journey_view_versions",
    "functionName": "post_journey_view_versions",
    "signature": "post_journey_view_versions(view_id, body)",
    "parameters": [
      {
        "name": "view_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "JourneyView",
        "required": "true"
      }
    ],
    "return": "JourneyView",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nview_id = 'view_id_example' # str | viewId\nbody = PureCloudPlatformClientV2.JourneyView() # JourneyView | JourneyView\n\ntry:\n    # Update a Journey View by ID\n    api_response = api_instance.post_journey_view_versions(view_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_view_versions: %s\\n\" % e)"
  },
  "post_journey_views": {
    "operationId": "post_journey_views",
    "functionName": "post_journey_views",
    "signature": "post_journey_views(body)",
    "parameters": [
      {
        "name": "body",
        "type": "JourneyView",
        "required": "true"
      }
    ],
    "return": "JourneyView",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nbody = PureCloudPlatformClientV2.JourneyView() # JourneyView | JourneyView\n\ntry:\n    # Create a new Journey View\n    api_response = api_instance.post_journey_views(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_views: %s\\n\" % e)"
  },
  "post_journey_views_encodings_validate": {
    "operationId": "post_journey_views_encodings_validate",
    "functionName": "post_journey_views_encodings_validate",
    "signature": "post_journey_views_encodings_validate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "list[Label]",
        "required": "false"
      }
    ],
    "return": "EntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.JourneyApi();\nbody = [PureCloudPlatformClientV2.Label()] # list[Label] |  (optional)\n\ntry:\n    # Validate whether an encoding exist for a label/value combination.\n    api_response = api_instance.post_journey_views_encodings_validate(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling JourneyApi->post_journey_views_encodings_validate: %s\\n\" % e)"
  },
  "delete_knowledge_knowledgebase": {
    "operationId": "delete_knowledge_knowledgebase",
    "functionName": "delete_knowledge_knowledgebase",
    "signature": "delete_knowledge_knowledgebase(knowledge_base_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\n\ntry:\n    # Delete knowledge base\n    api_response = api_instance.delete_knowledge_knowledgebase(knowledge_base_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->delete_knowledge_knowledgebase: %s\\n\" % e)"
  },
  "delete_knowledge_knowledgebase_category": {
    "operationId": "delete_knowledge_knowledgebase_category",
    "functionName": "delete_knowledge_knowledgebase_category",
    "signature": "delete_knowledge_knowledgebase_category(knowledge_base_id, category_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "category_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CategoryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\ncategory_id = 'category_id_example' # str | Category ID\n\ntry:\n    # Delete category\n    api_response = api_instance.delete_knowledge_knowledgebase_category(knowledge_base_id, category_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->delete_knowledge_knowledgebase_category: %s\\n\" % e)"
  },
  "delete_knowledge_knowledgebase_document": {
    "operationId": "delete_knowledge_knowledgebase_document",
    "functionName": "delete_knowledge_knowledgebase_document",
    "signature": "delete_knowledge_knowledgebase_document(knowledge_base_id, document_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID.\ndocument_id = 'document_id_example' # str | Document ID.\n\ntry:\n    # Delete document.\n    api_instance.delete_knowledge_knowledgebase_document(knowledge_base_id, document_id)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->delete_knowledge_knowledgebase_document: %s\\n\" % e)"
  },
  "delete_knowledge_knowledgebase_document_variation": {
    "operationId": "delete_knowledge_knowledgebase_document_variation",
    "functionName": "delete_knowledge_knowledgebase_document_variation",
    "signature": "delete_knowledge_knowledgebase_document_variation(document_variation_id, document_id, knowledge_base_id)",
    "parameters": [
      {
        "name": "document_variation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\ndocument_variation_id = 'document_variation_id_example' # str | Globally unique identifier for a document variation.\ndocument_id = 'document_id_example' # str | Globally unique identifier for a document.\nknowledge_base_id = 'knowledge_base_id_example' # str | Globally unique identifier for a knowledge base.\n\ntry:\n    # Delete a variation for a document.\n    api_instance.delete_knowledge_knowledgebase_document_variation(document_variation_id, document_id, knowledge_base_id)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->delete_knowledge_knowledgebase_document_variation: %s\\n\" % e)"
  },
  "delete_knowledge_knowledgebase_export_job": {
    "operationId": "delete_knowledge_knowledgebase_export_job",
    "functionName": "delete_knowledge_knowledgebase_export_job",
    "signature": "delete_knowledge_knowledgebase_export_job(knowledge_base_id, export_job_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "export_job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nexport_job_id = 'export_job_id_example' # str | Export job ID\n\ntry:\n    # Delete export job\n    api_instance.delete_knowledge_knowledgebase_export_job(knowledge_base_id, export_job_id)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->delete_knowledge_knowledgebase_export_job: %s\\n\" % e)"
  },
  "delete_knowledge_knowledgebase_import_job": {
    "operationId": "delete_knowledge_knowledgebase_import_job",
    "functionName": "delete_knowledge_knowledgebase_import_job",
    "signature": "delete_knowledge_knowledgebase_import_job(knowledge_base_id, import_job_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "import_job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nimport_job_id = 'import_job_id_example' # str | Import job ID\n\ntry:\n    # Delete import job\n    api_instance.delete_knowledge_knowledgebase_import_job(knowledge_base_id, import_job_id)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->delete_knowledge_knowledgebase_import_job: %s\\n\" % e)"
  },
  "delete_knowledge_knowledgebase_label": {
    "operationId": "delete_knowledge_knowledgebase_label",
    "functionName": "delete_knowledge_knowledgebase_label",
    "signature": "delete_knowledge_knowledgebase_label(knowledge_base_id, label_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "label_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LabelResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlabel_id = 'label_id_example' # str | Label ID\n\ntry:\n    # Delete label\n    api_response = api_instance.delete_knowledge_knowledgebase_label(knowledge_base_id, label_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->delete_knowledge_knowledgebase_label: %s\\n\" % e)"
  },
  "delete_knowledge_knowledgebase_language_category": {
    "operationId": "delete_knowledge_knowledgebase_language_category",
    "functionName": "delete_knowledge_knowledgebase_language_category",
    "signature": "delete_knowledge_knowledgebase_language_category(category_id, knowledge_base_id, language_code)",
    "parameters": [
      {
        "name": "category_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeCategory",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\ncategory_id = 'category_id_example' # str | Category ID\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\n\ntry:\n    # Delete category\n    api_response = api_instance.delete_knowledge_knowledgebase_language_category(category_id, knowledge_base_id, language_code)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->delete_knowledge_knowledgebase_language_category: %s\\n\" % e)"
  },
  "delete_knowledge_knowledgebase_language_document": {
    "operationId": "delete_knowledge_knowledgebase_language_document",
    "functionName": "delete_knowledge_knowledgebase_language_document",
    "signature": "delete_knowledge_knowledgebase_language_document(document_id, knowledge_base_id, language_code)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocument",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\ndocument_id = 'document_id_example' # str | Document ID\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\n\ntry:\n    # Delete document\n    api_response = api_instance.delete_knowledge_knowledgebase_language_document(document_id, knowledge_base_id, language_code)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->delete_knowledge_knowledgebase_language_document: %s\\n\" % e)"
  },
  "delete_knowledge_knowledgebase_language_documents_import": {
    "operationId": "delete_knowledge_knowledgebase_language_documents_import",
    "functionName": "delete_knowledge_knowledgebase_language_documents_import",
    "signature": "delete_knowledge_knowledgebase_language_documents_import(knowledge_base_id, language_code, import_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "import_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nimport_id = 'import_id_example' # str | Import ID\n\ntry:\n    # Delete import operation\n    api_instance.delete_knowledge_knowledgebase_language_documents_import(knowledge_base_id, language_code, import_id)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->delete_knowledge_knowledgebase_language_documents_import: %s\\n\" % e)"
  },
  "get_knowledge_guest_session_categories": {
    "operationId": "get_knowledge_guest_session_categories",
    "functionName": "get_knowledge_guest_session_categories",
    "signature": "get_knowledge_guest_session_categories(session_id, before, after, page_size, parent_id, is_root, name, sort_by, expand, include_document_count)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "parent_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "is_root",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "include_document_count",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "GuestCategoryResponseListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nsession_id = 'session_id_example' # str | Knowledge guest session ID.\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\nparent_id = 'parent_id_example' # str | If specified, retrieves the children categories by parent category ID. (optional)\nis_root = True # bool | If specified, retrieves only the root categories. (optional)\nname = 'name_example' # str | Filter to return the categories that starts with the given category name. (optional)\nsort_by = ''Name'' # str | Name: sort by category names alphabetically; Hierarchy: sort by the full path of hierarchical category names alphabetically (optional) (default to 'Name')\nexpand = 'expand_example' # str | The specified entity attribute will be filled. Supported value:\\\"Ancestors\\\": every ancestors will be filled via the parent attribute recursively,but only the id, name, parentId will be present for the ancestors. (optional)\ninclude_document_count = True # bool | If specified, retrieves the number of documents related to category. (optional)\n\ntry:\n    # Get categories\n    api_response = api_instance.get_knowledge_guest_session_categories(session_id, before=before, after=after, page_size=page_size, parent_id=parent_id, is_root=is_root, name=name, sort_by=sort_by, expand=expand, include_document_count=include_document_count)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_guest_session_categories: %s\\n\" % e)"
  },
  "get_knowledge_guest_session_document": {
    "operationId": "get_knowledge_guest_session_document",
    "functionName": "get_knowledge_guest_session_document",
    "signature": "get_knowledge_guest_session_document(session_id, document_id)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeGuestDocumentResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nsession_id = 'session_id_example' # str | Knowledge guest session ID.\ndocument_id = 'document_id_example' # str | Document ID\n\ntry:\n    # Get a knowledge document by ID.\n    api_response = api_instance.get_knowledge_guest_session_document(session_id, document_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_guest_session_document: %s\\n\" % e)"
  },
  "get_knowledge_guest_session_documents": {
    "operationId": "get_knowledge_guest_session_documents",
    "functionName": "get_knowledge_guest_session_documents",
    "signature": "get_knowledge_guest_session_documents(session_id, category_id, page_size)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "category_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "KnowledgeGuestDocumentResponseListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nsession_id = 'session_id_example' # str | Knowledge guest session ID.\ncategory_id = ['category_id_example'] # list[str] | If specified, retrieves documents associated with category ids, comma separated values expected. (optional)\npage_size = 56 # int | Number of entities to return. Maximum of 200. (optional)\n\ntry:\n    # Get documents.\n    api_response = api_instance.get_knowledge_guest_session_documents(session_id, category_id=category_id, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_guest_session_documents: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase": {
    "operationId": "get_knowledge_knowledgebase",
    "functionName": "get_knowledge_knowledgebase",
    "signature": "get_knowledge_knowledgebase(knowledge_base_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\n\ntry:\n    # Get knowledge base\n    api_response = api_instance.get_knowledge_knowledgebase(knowledge_base_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_categories": {
    "operationId": "get_knowledge_knowledgebase_categories",
    "functionName": "get_knowledge_knowledgebase_categories",
    "signature": "get_knowledge_knowledgebase_categories(knowledge_base_id, before, after, page_size, parent_id, is_root, name, sort_by, expand, include_document_count)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "parent_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "is_root",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "include_document_count",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "CategoryResponseListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\nparent_id = 'parent_id_example' # str | If specified, retrieves the children categories by parent category ID. (optional)\nis_root = True # bool | If specified, retrieves only the root categories. (optional)\nname = 'name_example' # str | Filter to return the categories that starts with the given category name. (optional)\nsort_by = ''Name'' # str | Name: sort by category names alphabetically; Hierarchy: sort by the full path of hierarchical category names alphabetically (optional) (default to 'Name')\nexpand = 'expand_example' # str | The specified entity attribute will be filled. Supported value:\\\"Ancestors\\\": every ancestors will be filled via the parent attribute recursively,but only the id, name, parentId will be present for the ancestors. (optional)\ninclude_document_count = True # bool | If specified, retrieves the number of documents related to category. (optional)\n\ntry:\n    # Get categories\n    api_response = api_instance.get_knowledge_knowledgebase_categories(knowledge_base_id, before=before, after=after, page_size=page_size, parent_id=parent_id, is_root=is_root, name=name, sort_by=sort_by, expand=expand, include_document_count=include_document_count)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_categories: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_category": {
    "operationId": "get_knowledge_knowledgebase_category",
    "functionName": "get_knowledge_knowledgebase_category",
    "signature": "get_knowledge_knowledgebase_category(knowledge_base_id, category_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "category_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CategoryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\ncategory_id = 'category_id_example' # str | Category ID\n\ntry:\n    # Get category\n    api_response = api_instance.get_knowledge_knowledgebase_category(knowledge_base_id, category_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_category: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_document": {
    "operationId": "get_knowledge_knowledgebase_document",
    "functionName": "get_knowledge_knowledgebase_document",
    "signature": "get_knowledge_knowledgebase_document(knowledge_base_id, document_id, expand, state)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "state",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID.\ndocument_id = 'document_id_example' # str | Document ID.\nexpand = ['expand_example'] # list[str] | The specified entity attributes will be filled. Comma separated values expected. Max No. of variations that can be returned on expand is 20. (optional)\nstate = 'state_example' # str | \\\"when state is \\\"Draft\\\", draft version of the document is returned,otherwise by default published version is returned in the response. (optional)\n\ntry:\n    # Get document.\n    api_response = api_instance.get_knowledge_knowledgebase_document(knowledge_base_id, document_id, expand=expand, state=state)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_document: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_document_feedback": {
    "operationId": "get_knowledge_knowledgebase_document_feedback",
    "functionName": "get_knowledge_knowledgebase_document_feedback",
    "signature": "get_knowledge_knowledgebase_document_feedback(knowledge_base_id, document_id, before, after, page_size, only_commented, document_version_id, document_variation_id, app_type, query_type, user_id, queue_id, state)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "only_commented",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "document_version_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "document_variation_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "app_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "query_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "queue_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "state",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentFeedbackResponseListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID.\ndocument_id = 'document_id_example' # str | Document ID.\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\nonly_commented = True # bool | If true, only feedback records that have comment are returned. If false, feedback records with and without comment are returned. Default: false. (optional)\ndocument_version_id = 'document_version_id_example' # str | Document version ID to filter by. Supported only if onlyCommented=true is set. (optional)\ndocument_variation_id = 'document_variation_id_example' # str | Document variation ID to filter by. Supported only if onlyCommented=true is set. (optional)\napp_type = 'app_type_example' # str | Application type to filter by. Supported only if onlyCommented=true is set. (optional)\nquery_type = 'query_type_example' # str | Query type to filter by. Supported only if onlyCommented=true is set. (optional)\nuser_id = 'user_id_example' # str | The ID of the user, who created the feedback, to filter by. Supported only if onlyCommented=true is set. (optional)\nqueue_id = 'queue_id_example' # str | Queue ID to filter by. Supported only if onlyCommented=true is set. (optional)\nstate = 'state_example' # str | State to filter by. Supported only if onlyCommented=true is set. Default: Final (optional)\n\ntry:\n    # Get a list of feedback records given on a document\n    api_response = api_instance.get_knowledge_knowledgebase_document_feedback(knowledge_base_id, document_id, before=before, after=after, page_size=page_size, only_commented=only_commented, document_version_id=document_version_id, document_variation_id=document_variation_id, app_type=app_type, query_type=query_type, user_id=user_id, queue_id=queue_id, state=state)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_document_feedback: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_document_feedback_feedback_id": {
    "operationId": "get_knowledge_knowledgebase_document_feedback_feedback_id",
    "functionName": "get_knowledge_knowledgebase_document_feedback_feedback_id",
    "signature": "get_knowledge_knowledgebase_document_feedback_feedback_id(knowledge_base_id, document_id, feedback_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "feedback_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocumentFeedbackResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID.\ndocument_id = 'document_id_example' # str | Document ID.\nfeedback_id = 'feedback_id_example' # str | Feedback ID.\n\ntry:\n    # Get a single feedback record given on a document\n    api_response = api_instance.get_knowledge_knowledgebase_document_feedback_feedback_id(knowledge_base_id, document_id, feedback_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_document_feedback_feedback_id: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_document_variation": {
    "operationId": "get_knowledge_knowledgebase_document_variation",
    "functionName": "get_knowledge_knowledgebase_document_variation",
    "signature": "get_knowledge_knowledgebase_document_variation(document_variation_id, document_id, knowledge_base_id, document_state)",
    "parameters": [
      {
        "name": "document_variation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_state",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DocumentVariation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\ndocument_variation_id = 'document_variation_id_example' # str | Globally unique identifier for a document variation.\ndocument_id = 'document_id_example' # str | Globally unique identifier for a document.\nknowledge_base_id = 'knowledge_base_id_example' # str | Globally unique identifier for a knowledge base.\ndocument_state = 'document_state_example' # str | The state of the document. (optional)\n\ntry:\n    # Get a variation for a document.\n    api_response = api_instance.get_knowledge_knowledgebase_document_variation(document_variation_id, document_id, knowledge_base_id, document_state=document_state)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_document_variation: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_document_variations": {
    "operationId": "get_knowledge_knowledgebase_document_variations",
    "functionName": "get_knowledge_knowledgebase_document_variations",
    "signature": "get_knowledge_knowledgebase_document_variations(knowledge_base_id, document_id, before, after, page_size, document_state)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "document_state",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DocumentVariationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Globally unique identifier for the knowledge base.\ndocument_id = 'document_id_example' # str | Globally unique identifier for the document.\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\ndocument_state = 'document_state_example' # str | The state of the document. (optional)\n\ntry:\n    # Get variations for a document.\n    api_response = api_instance.get_knowledge_knowledgebase_document_variations(knowledge_base_id, document_id, before=before, after=after, page_size=page_size, document_state=document_state)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_document_variations: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_document_version": {
    "operationId": "get_knowledge_knowledgebase_document_version",
    "functionName": "get_knowledge_knowledgebase_document_version",
    "signature": "get_knowledge_knowledgebase_document_version(knowledge_base_id, document_id, version_id, expand)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Globally unique identifier for the knowledge base.\ndocument_id = 'document_id_example' # str | Globally unique identifier for the document.\nversion_id = 'version_id_example' # str | Globally unique identifier for the document version.\nexpand = ['expand_example'] # list[str] | The specified entity attributes will be filled. Comma separated values expected. (optional)\n\ntry:\n    # Get document version.\n    api_response = api_instance.get_knowledge_knowledgebase_document_version(knowledge_base_id, document_id, version_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_document_version: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_document_version_variation": {
    "operationId": "get_knowledge_knowledgebase_document_version_variation",
    "functionName": "get_knowledge_knowledgebase_document_version_variation",
    "signature": "get_knowledge_knowledgebase_document_version_variation(knowledge_base_id, document_id, version_id, variation_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "variation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocumentVersionVariation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Globally unique identifier for the knowledge base.\ndocument_id = 'document_id_example' # str | Globally unique identifier for the document.\nversion_id = 'version_id_example' # str | Globally unique identifier for the document version.\nvariation_id = 'variation_id_example' # str | Globally unique identifier for the document version variation.\n\ntry:\n    # Get variation for the given document version.\n    api_response = api_instance.get_knowledge_knowledgebase_document_version_variation(knowledge_base_id, document_id, version_id, variation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_document_version_variation: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_document_version_variations": {
    "operationId": "get_knowledge_knowledgebase_document_version_variations",
    "functionName": "get_knowledge_knowledgebase_document_version_variations",
    "signature": "get_knowledge_knowledgebase_document_version_variations(knowledge_base_id, document_id, version_id, before, after, page_size)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentVersionVariationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Globally unique identifier for the knowledge base.\ndocument_id = 'document_id_example' # str | Globally unique identifier for the document.\nversion_id = 'version_id_example' # str | Globally unique identifier for the document version.\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\n\ntry:\n    # Get variations for the given document version.\n    api_response = api_instance.get_knowledge_knowledgebase_document_version_variations(knowledge_base_id, document_id, version_id, before=before, after=after, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_document_version_variations: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_document_versions": {
    "operationId": "get_knowledge_knowledgebase_document_versions",
    "functionName": "get_knowledge_knowledgebase_document_versions",
    "signature": "get_knowledge_knowledgebase_document_versions(knowledge_base_id, document_id, before, after, page_size, expand)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentVersionListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Globally unique identifier for the knowledge base.\ndocument_id = 'document_id_example' # str | Globally unique identifier for the document.\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\nexpand = ['expand_example'] # list[str] | The specified entity attributes will be filled. Comma separated values expected. (optional)\n\ntry:\n    # Get document versions.\n    api_response = api_instance.get_knowledge_knowledgebase_document_versions(knowledge_base_id, document_id, before=before, after=after, page_size=page_size, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_document_versions: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_documents": {
    "operationId": "get_knowledge_knowledgebase_documents",
    "functionName": "get_knowledge_knowledgebase_documents",
    "signature": "get_knowledge_knowledgebase_documents(knowledge_base_id, before, after, page_size, interval, document_id, category_id, include_subcategories, include_drafts, label_ids, expand, external_ids)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "document_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "category_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "include_subcategories",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_drafts",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "label_ids",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "external_ids",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentResponseListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\ninterval = 'interval_example' # str | Retrieves the documents modified in specified date and time range. If the after and before cursor parameters are within this interval, it would return valid data, otherwise it throws an error.The dates in the interval are represented in ISO-8601 format: YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ (optional)\ndocument_id = ['document_id_example'] # list[str] | Retrieves the specified documents, comma separated values expected. (optional)\ncategory_id = ['category_id_example'] # list[str] | If specified, retrieves documents associated with category ids, comma separated values expected. (optional)\ninclude_subcategories = True # bool | Works along with 'categoryId' query parameter. If specified, retrieves documents associated with category ids and its children categories. (optional)\ninclude_drafts = True # bool | If includeDrafts is true, Documents in the draft state are also returned in the response. (optional)\nlabel_ids = ['label_ids_example'] # list[str] | If specified, retrieves documents associated with label ids, comma separated values expected. (optional)\nexpand = ['expand_example'] # list[str] | The specified entity attributes will be filled. Comma separated values expected. (optional)\nexternal_ids = ['external_ids_example'] # list[str] | If specified, retrieves documents associated with external ids, comma separated values expected. (optional)\n\ntry:\n    # Get documents.\n    api_response = api_instance.get_knowledge_knowledgebase_documents(knowledge_base_id, before=before, after=after, page_size=page_size, interval=interval, document_id=document_id, category_id=category_id, include_subcategories=include_subcategories, include_drafts=include_drafts, label_ids=label_ids, expand=expand, external_ids=external_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_documents: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_export_job": {
    "operationId": "get_knowledge_knowledgebase_export_job",
    "functionName": "get_knowledge_knowledgebase_export_job",
    "signature": "get_knowledge_knowledgebase_export_job(knowledge_base_id, export_job_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "export_job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeExportJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nexport_job_id = 'export_job_id_example' # str | Export job ID\n\ntry:\n    # Get export job report\n    api_response = api_instance.get_knowledge_knowledgebase_export_job(knowledge_base_id, export_job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_export_job: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_import_job": {
    "operationId": "get_knowledge_knowledgebase_import_job",
    "functionName": "get_knowledge_knowledgebase_import_job",
    "signature": "get_knowledge_knowledgebase_import_job(knowledge_base_id, import_job_id, expand)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "import_job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "KnowledgeImportJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nimport_job_id = 'import_job_id_example' # str | Import job ID\nexpand = ['expand_example'] # list[str] | If expand contains 'urls' downloadURL and failedEntitiesURL will be filled. (optional)\n\ntry:\n    # Get import job report\n    api_response = api_instance.get_knowledge_knowledgebase_import_job(knowledge_base_id, import_job_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_import_job: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_label": {
    "operationId": "get_knowledge_knowledgebase_label",
    "functionName": "get_knowledge_knowledgebase_label",
    "signature": "get_knowledge_knowledgebase_label(knowledge_base_id, label_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "label_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LabelResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlabel_id = 'label_id_example' # str | Label ID\n\ntry:\n    # Get label\n    api_response = api_instance.get_knowledge_knowledgebase_label(knowledge_base_id, label_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_label: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_labels": {
    "operationId": "get_knowledge_knowledgebase_labels",
    "functionName": "get_knowledge_knowledgebase_labels",
    "signature": "get_knowledge_knowledgebase_labels(knowledge_base_id, before, after, page_size, name, include_document_count)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "include_document_count",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "LabelListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\nname = 'name_example' # str | Filter to return the labels that contains the given phrase in the name. (optional)\ninclude_document_count = True # bool | If specified, retrieves the number of documents related to label. (optional)\n\ntry:\n    # Get labels\n    api_response = api_instance.get_knowledge_knowledgebase_labels(knowledge_base_id, before=before, after=after, page_size=page_size, name=name, include_document_count=include_document_count)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_labels: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_language_categories": {
    "operationId": "get_knowledge_knowledgebase_language_categories",
    "functionName": "get_knowledge_knowledgebase_language_categories",
    "signature": "get_knowledge_knowledgebase_language_categories(knowledge_base_id, language_code, before, after, limit, page_size, name)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CategoryListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\nlimit = 'limit_example' # str | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\nname = 'name_example' # str | Filter to return the categories that starts with the given category name. (optional)\n\ntry:\n    # Get categories\n    api_response = api_instance.get_knowledge_knowledgebase_language_categories(knowledge_base_id, language_code, before=before, after=after, limit=limit, page_size=page_size, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_language_categories: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_language_category": {
    "operationId": "get_knowledge_knowledgebase_language_category",
    "functionName": "get_knowledge_knowledgebase_language_category",
    "signature": "get_knowledge_knowledgebase_language_category(category_id, knowledge_base_id, language_code)",
    "parameters": [
      {
        "name": "category_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeExtendedCategory",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\ncategory_id = 'category_id_example' # str | Category ID\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\n\ntry:\n    # Get category\n    api_response = api_instance.get_knowledge_knowledgebase_language_category(category_id, knowledge_base_id, language_code)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_language_category: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_language_document": {
    "operationId": "get_knowledge_knowledgebase_language_document",
    "functionName": "get_knowledge_knowledgebase_language_document",
    "signature": "get_knowledge_knowledgebase_language_document(document_id, knowledge_base_id, language_code)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocument",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\ndocument_id = 'document_id_example' # str | Document ID\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\n\ntry:\n    # Get document\n    api_response = api_instance.get_knowledge_knowledgebase_language_document(document_id, knowledge_base_id, language_code)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_language_document: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_language_document_upload": {
    "operationId": "get_knowledge_knowledgebase_language_document_upload",
    "functionName": "get_knowledge_knowledgebase_language_document_upload",
    "signature": "get_knowledge_knowledgebase_language_document_upload(document_id, knowledge_base_id, language_code, upload_id)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "upload_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocumentContentUpload",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\ndocument_id = 'document_id_example' # str | Document ID\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nupload_id = 'upload_id_example' # str | UploadId\n\ntry:\n    # Get document content upload status\n    api_response = api_instance.get_knowledge_knowledgebase_language_document_upload(document_id, knowledge_base_id, language_code, upload_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_language_document_upload: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_language_documents": {
    "operationId": "get_knowledge_knowledgebase_language_documents",
    "functionName": "get_knowledge_knowledgebase_language_documents",
    "signature": "get_knowledge_knowledgebase_language_documents(knowledge_base_id, language_code, before, after, limit, page_size, categories, title, sort_by, sort_order, document_ids)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "categories",
        "type": "str",
        "required": "false"
      },
      {
        "name": "title",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "document_ids",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "DocumentListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\nlimit = 'limit_example' # str | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\ncategories = 'categories_example' # str | Filter by categories ids, comma separated values expected. (optional)\ntitle = 'title_example' # str | Filter by document title. (optional)\nsort_by = 'sort_by_example' # str | Sort by. (optional)\nsort_order = 'sort_order_example' # str | Sort Order. (optional)\ndocument_ids = ['document_ids_example'] # list[str] | Comma-separated list of document identifiers to fetch by. (optional)\n\ntry:\n    # Get documents\n    api_response = api_instance.get_knowledge_knowledgebase_language_documents(knowledge_base_id, language_code, before=before, after=after, limit=limit, page_size=page_size, categories=categories, title=title, sort_by=sort_by, sort_order=sort_order, document_ids=document_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_language_documents: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_language_documents_import": {
    "operationId": "get_knowledge_knowledgebase_language_documents_import",
    "functionName": "get_knowledge_knowledgebase_language_documents_import",
    "signature": "get_knowledge_knowledgebase_language_documents_import(knowledge_base_id, language_code, import_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "import_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeImport",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nimport_id = 'import_id_example' # str | Import ID\n\ntry:\n    # Get import operation report\n    api_response = api_instance.get_knowledge_knowledgebase_language_documents_import(knowledge_base_id, language_code, import_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_language_documents_import: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_language_training": {
    "operationId": "get_knowledge_knowledgebase_language_training",
    "functionName": "get_knowledge_knowledgebase_language_training",
    "signature": "get_knowledge_knowledgebase_language_training(knowledge_base_id, language_code, training_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "training_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeTraining",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\ntraining_id = 'training_id_example' # str | Training ID\n\ntry:\n    # Get training detail\n    api_response = api_instance.get_knowledge_knowledgebase_language_training(knowledge_base_id, language_code, training_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_language_training: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_language_trainings": {
    "operationId": "get_knowledge_knowledgebase_language_trainings",
    "functionName": "get_knowledge_knowledgebase_language_trainings",
    "signature": "get_knowledge_knowledgebase_language_trainings(knowledge_base_id, language_code, before, after, limit, page_size, knowledge_documents_state)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "knowledge_documents_state",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TrainingListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\nlimit = 'limit_example' # str | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\nknowledge_documents_state = 'knowledge_documents_state_example' # str | Return the training with the specified state of the trained documents. (optional)\n\ntry:\n    # Get all trainings information for a knowledgebase\n    api_response = api_instance.get_knowledge_knowledgebase_language_trainings(knowledge_base_id, language_code, before=before, after=after, limit=limit, page_size=page_size, knowledge_documents_state=knowledge_documents_state)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_language_trainings: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_operations": {
    "operationId": "get_knowledge_knowledgebase_operations",
    "functionName": "get_knowledge_knowledgebase_operations",
    "signature": "get_knowledge_knowledgebase_operations(knowledge_base_id, before, after, page_size, user_id, type, status, interval, source_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "user_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "status",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "source_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "OperationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\nuser_id = ['user_id_example'] # list[str] | If specified, retrieves operations associated with user ids, comma separated values expected. (optional)\ntype = ['type_example'] # list[str] | If specified, retrieves operations with specified operation type, comma separated values expected. (optional)\nstatus = ['status_example'] # list[str] | If specified, retrieves operations with specified operation status, comma separated values expected. (optional)\ninterval = 'interval_example' # str | Retrieves the operations modified in specified date and time range. If the after and before cursor parameters are within this interval, it would return valid data, otherwise it throws an error.The dates in the interval are represented in ISO-8601 format: YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ (optional)\nsource_id = ['source_id_example'] # list[str] | If specified, retrieves operations associated with source ids, comma separated values expected. (optional)\n\ntry:\n    # Get operations\n    api_response = api_instance.get_knowledge_knowledgebase_operations(knowledge_base_id, before=before, after=after, page_size=page_size, user_id=user_id, type=type, status=status, interval=interval, source_id=source_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_operations: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_operations_users_query": {
    "operationId": "get_knowledge_knowledgebase_operations_users_query",
    "functionName": "get_knowledge_knowledgebase_operations_users_query",
    "signature": "get_knowledge_knowledgebase_operations_users_query(knowledge_base_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OperationCreatorUserResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\n\ntry:\n    # Get ids of operation creator users and oauth clients\n    api_response = api_instance.get_knowledge_knowledgebase_operations_users_query(knowledge_base_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_operations_users_query: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_parse_job": {
    "operationId": "get_knowledge_knowledgebase_parse_job",
    "functionName": "get_knowledge_knowledgebase_parse_job",
    "signature": "get_knowledge_knowledgebase_parse_job(knowledge_base_id, parse_job_id, expand)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "parse_job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "KnowledgeParseJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nparse_job_id = 'parse_job_id_example' # str | Parse job ID\nexpand = ['expand_example'] # list[str] | If expand contains 'urls' downloadURL and failedEntitiesURL will be filled. (optional)\n\ntry:\n    # Get parse job report\n    api_response = api_instance.get_knowledge_knowledgebase_parse_job(knowledge_base_id, parse_job_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_parse_job: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_unanswered_group": {
    "operationId": "get_knowledge_knowledgebase_unanswered_group",
    "functionName": "get_knowledge_knowledgebase_unanswered_group",
    "signature": "get_knowledge_knowledgebase_unanswered_group(knowledge_base_id, group_id, app, date_start, date_end)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "app",
        "type": "str",
        "required": "false"
      },
      {
        "name": "date_start",
        "type": "date",
        "required": "false"
      },
      {
        "name": "date_end",
        "type": "date",
        "required": "false"
      }
    ],
    "return": "UnansweredGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\ngroup_id = 'group_id_example' # str | The ID of the group to be retrieved.\napp = 'app_example' # str | The app value to be used for filtering phrases. (optional)\ndate_start = '2013-10-20' # date | The start date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\ndate_end = '2013-10-20' # date | The end date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\n\ntry:\n    # Get knowledge base unanswered group for a particular groupId\n    api_response = api_instance.get_knowledge_knowledgebase_unanswered_group(knowledge_base_id, group_id, app=app, date_start=date_start, date_end=date_end)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_unanswered_group: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_unanswered_group_phrasegroup": {
    "operationId": "get_knowledge_knowledgebase_unanswered_group_phrasegroup",
    "functionName": "get_knowledge_knowledgebase_unanswered_group_phrasegroup",
    "signature": "get_knowledge_knowledgebase_unanswered_group_phrasegroup(knowledge_base_id, group_id, phrase_group_id, app, date_start, date_end)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "phrase_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "app",
        "type": "str",
        "required": "false"
      },
      {
        "name": "date_start",
        "type": "date",
        "required": "false"
      },
      {
        "name": "date_end",
        "type": "date",
        "required": "false"
      }
    ],
    "return": "UnansweredPhraseGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\ngroup_id = 'group_id_example' # str | The ID of the group to be retrieved.\nphrase_group_id = 'phrase_group_id_example' # str | The ID of the phraseGroup to be retrieved.\napp = 'app_example' # str | The app value to be used for filtering phrases. (optional)\ndate_start = '2013-10-20' # date | The start date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\ndate_end = '2013-10-20' # date | The end date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\n\ntry:\n    # Get knowledge base unanswered phrase group for a particular phraseGroupId\n    api_response = api_instance.get_knowledge_knowledgebase_unanswered_group_phrasegroup(knowledge_base_id, group_id, phrase_group_id, app=app, date_start=date_start, date_end=date_end)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_unanswered_group_phrasegroup: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_unanswered_groups": {
    "operationId": "get_knowledge_knowledgebase_unanswered_groups",
    "functionName": "get_knowledge_knowledgebase_unanswered_groups",
    "signature": "get_knowledge_knowledgebase_unanswered_groups(knowledge_base_id, app, date_start, date_end)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "app",
        "type": "str",
        "required": "false"
      },
      {
        "name": "date_start",
        "type": "date",
        "required": "false"
      },
      {
        "name": "date_end",
        "type": "date",
        "required": "false"
      }
    ],
    "return": "UnansweredGroups",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\napp = 'app_example' # str | The app value to be used for filtering phrases. (optional)\ndate_start = '2013-10-20' # date | The start date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\ndate_end = '2013-10-20' # date | The end date to be used for filtering phrases. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)\n\ntry:\n    # Get knowledge base unanswered groups\n    api_response = api_instance.get_knowledge_knowledgebase_unanswered_groups(knowledge_base_id, app=app, date_start=date_start, date_end=date_end)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebase_unanswered_groups: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebase_uploads_urls_job": {
    "operationId": "get_knowledge_knowledgebase_uploads_urls_job",
    "functionName": "get_knowledge_knowledgebase_uploads_urls_job",
    "signature": "get_knowledge_knowledgebase_uploads_urls_job(knowledge_base_id, job_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "GetUploadSourceUrlJobStatusResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UploadsApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\njob_id = 'job_id_example' # str | Upload job ID\n\ntry:\n    # Get content upload from URL job status\n    api_response = api_instance.get_knowledge_knowledgebase_uploads_urls_job(knowledge_base_id, job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UploadsApi->get_knowledge_knowledgebase_uploads_urls_job: %s\\n\" % e)"
  },
  "get_knowledge_knowledgebases": {
    "operationId": "get_knowledge_knowledgebases",
    "functionName": "get_knowledge_knowledgebases",
    "signature": "get_knowledge_knowledgebases(before, after, limit, page_size, name, core_language, published, sort_by, sort_order)",
    "parameters": [
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "core_language",
        "type": "str",
        "required": "false"
      },
      {
        "name": "published",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "KnowledgeBaseListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\nlimit = 'limit_example' # str | Number of entities to return. Maximum of 100. Deprecated in favour of pageSize (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 100. (optional)\nname = 'name_example' # str | Filter by Name. (optional)\ncore_language = 'core_language_example' # str | Filter by core language. (optional)\npublished = True # bool | Filter by published status. (optional)\nsort_by = 'sort_by_example' # str | Sort by. (optional)\nsort_order = 'sort_order_example' # str | Sort Order. (optional)\n\ntry:\n    # Get knowledge bases\n    api_response = api_instance.get_knowledge_knowledgebases(before=before, after=after, limit=limit, page_size=page_size, name=name, core_language=core_language, published=published, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->get_knowledge_knowledgebases: %s\\n\" % e)"
  },
  "patch_knowledge_guest_session_documents_search_search_id": {
    "operationId": "patch_knowledge_guest_session_documents_search_search_id",
    "functionName": "patch_knowledge_guest_session_documents_search_search_id",
    "signature": "patch_knowledge_guest_session_documents_search_search_id(session_id, search_id, body)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "search_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SearchUpdateRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nsession_id = 'session_id_example' # str | Knowledge guest session ID.\nsearch_id = 'search_id_example' # str | Search Result ID\nbody = PureCloudPlatformClientV2.SearchUpdateRequest() # SearchUpdateRequest | \n\ntry:\n    # Update search result.\n    api_instance.patch_knowledge_guest_session_documents_search_search_id(session_id, search_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_guest_session_documents_search_search_id: %s\\n\" % e)"
  },
  "patch_knowledge_knowledgebase": {
    "operationId": "patch_knowledge_knowledgebase",
    "functionName": "patch_knowledge_knowledgebase",
    "signature": "patch_knowledge_knowledgebase(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeBaseUpdateRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbody = PureCloudPlatformClientV2.KnowledgeBaseUpdateRequest() # KnowledgeBaseUpdateRequest | \n\ntry:\n    # Update knowledge base\n    api_response = api_instance.patch_knowledge_knowledgebase(knowledge_base_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_knowledgebase: %s\\n\" % e)"
  },
  "patch_knowledge_knowledgebase_category": {
    "operationId": "patch_knowledge_knowledgebase_category",
    "functionName": "patch_knowledge_knowledgebase_category",
    "signature": "patch_knowledge_knowledgebase_category(knowledge_base_id, category_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "category_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CategoryUpdateRequest",
        "required": "true"
      }
    ],
    "return": "CategoryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\ncategory_id = 'category_id_example' # str | Category ID\nbody = PureCloudPlatformClientV2.CategoryUpdateRequest() # CategoryUpdateRequest | \n\ntry:\n    # Update category\n    api_response = api_instance.patch_knowledge_knowledgebase_category(knowledge_base_id, category_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_knowledgebase_category: %s\\n\" % e)"
  },
  "patch_knowledge_knowledgebase_document": {
    "operationId": "patch_knowledge_knowledgebase_document",
    "functionName": "patch_knowledge_knowledgebase_document",
    "signature": "patch_knowledge_knowledgebase_document(knowledge_base_id, document_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentReq",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocumentResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID.\ndocument_id = 'document_id_example' # str | Document ID.\nbody = PureCloudPlatformClientV2.KnowledgeDocumentReq() # KnowledgeDocumentReq | \n\ntry:\n    # Update document.\n    api_response = api_instance.patch_knowledge_knowledgebase_document(knowledge_base_id, document_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_knowledgebase_document: %s\\n\" % e)"
  },
  "patch_knowledge_knowledgebase_document_variation": {
    "operationId": "patch_knowledge_knowledgebase_document_variation",
    "functionName": "patch_knowledge_knowledgebase_document_variation",
    "signature": "patch_knowledge_knowledgebase_document_variation(document_variation_id, document_id, knowledge_base_id, body)",
    "parameters": [
      {
        "name": "document_variation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DocumentVariation",
        "required": "true"
      }
    ],
    "return": "DocumentVariation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\ndocument_variation_id = 'document_variation_id_example' # str | Globally unique identifier for a document variation.\ndocument_id = 'document_id_example' # str | Globally unique identifier for a document.\nknowledge_base_id = 'knowledge_base_id_example' # str | Globally unique identifier for a knowledge base.\nbody = PureCloudPlatformClientV2.DocumentVariation() # DocumentVariation | \n\ntry:\n    # Update a variation for a document.\n    api_response = api_instance.patch_knowledge_knowledgebase_document_variation(document_variation_id, document_id, knowledge_base_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_knowledgebase_document_variation: %s\\n\" % e)"
  },
  "patch_knowledge_knowledgebase_documents_search_search_id": {
    "operationId": "patch_knowledge_knowledgebase_documents_search_search_id",
    "functionName": "patch_knowledge_knowledgebase_documents_search_search_id",
    "signature": "patch_knowledge_knowledgebase_documents_search_search_id(knowledge_base_id, search_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "search_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SearchUpdateRequest",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | The ID of knowledge base containing the documents to query.\nsearch_id = 'search_id_example' # str | Search Result ID\nbody = PureCloudPlatformClientV2.SearchUpdateRequest() # SearchUpdateRequest |  (optional)\n\ntry:\n    # Update search result.\n    api_instance.patch_knowledge_knowledgebase_documents_search_search_id(knowledge_base_id, search_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_knowledgebase_documents_search_search_id: %s\\n\" % e)"
  },
  "patch_knowledge_knowledgebase_import_job": {
    "operationId": "patch_knowledge_knowledgebase_import_job",
    "functionName": "patch_knowledge_knowledgebase_import_job",
    "signature": "patch_knowledge_knowledgebase_import_job(knowledge_base_id, import_job_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "import_job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ImportStatusRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeImportJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nimport_job_id = 'import_job_id_example' # str | Import job ID\nbody = PureCloudPlatformClientV2.ImportStatusRequest() # ImportStatusRequest | \n\ntry:\n    # Start import job\n    api_response = api_instance.patch_knowledge_knowledgebase_import_job(knowledge_base_id, import_job_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_knowledgebase_import_job: %s\\n\" % e)"
  },
  "patch_knowledge_knowledgebase_label": {
    "operationId": "patch_knowledge_knowledgebase_label",
    "functionName": "patch_knowledge_knowledgebase_label",
    "signature": "patch_knowledge_knowledgebase_label(knowledge_base_id, label_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "label_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LabelUpdateRequest",
        "required": "true"
      }
    ],
    "return": "LabelResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlabel_id = 'label_id_example' # str | Label ID\nbody = PureCloudPlatformClientV2.LabelUpdateRequest() # LabelUpdateRequest | \n\ntry:\n    # Update label\n    api_response = api_instance.patch_knowledge_knowledgebase_label(knowledge_base_id, label_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_knowledgebase_label: %s\\n\" % e)"
  },
  "patch_knowledge_knowledgebase_language_category": {
    "operationId": "patch_knowledge_knowledgebase_language_category",
    "functionName": "patch_knowledge_knowledgebase_language_category",
    "signature": "patch_knowledge_knowledgebase_language_category(category_id, knowledge_base_id, language_code, body)",
    "parameters": [
      {
        "name": "category_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeCategoryRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeExtendedCategory",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\ncategory_id = 'category_id_example' # str | Category ID\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nbody = PureCloudPlatformClientV2.KnowledgeCategoryRequest() # KnowledgeCategoryRequest | \n\ntry:\n    # Update category\n    api_response = api_instance.patch_knowledge_knowledgebase_language_category(category_id, knowledge_base_id, language_code, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_knowledgebase_language_category: %s\\n\" % e)"
  },
  "patch_knowledge_knowledgebase_language_document": {
    "operationId": "patch_knowledge_knowledgebase_language_document",
    "functionName": "patch_knowledge_knowledgebase_language_document",
    "signature": "patch_knowledge_knowledgebase_language_document(document_id, knowledge_base_id, language_code, body)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocument",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\ndocument_id = 'document_id_example' # str | Document ID\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nbody = PureCloudPlatformClientV2.KnowledgeDocumentRequest() # KnowledgeDocumentRequest | \n\ntry:\n    # Update document\n    api_response = api_instance.patch_knowledge_knowledgebase_language_document(document_id, knowledge_base_id, language_code, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_knowledgebase_language_document: %s\\n\" % e)"
  },
  "patch_knowledge_knowledgebase_language_documents": {
    "operationId": "patch_knowledge_knowledgebase_language_documents",
    "functionName": "patch_knowledge_knowledgebase_language_documents",
    "signature": "patch_knowledge_knowledgebase_language_documents(knowledge_base_id, language_code, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[KnowledgeDocumentBulkRequest]",
        "required": "true"
      }
    ],
    "return": "DocumentListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nbody = [PureCloudPlatformClientV2.KnowledgeDocumentBulkRequest()] # list[KnowledgeDocumentBulkRequest] | \n\ntry:\n    # Update documents collection\n    api_response = api_instance.patch_knowledge_knowledgebase_language_documents(knowledge_base_id, language_code, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_knowledgebase_language_documents: %s\\n\" % e)"
  },
  "patch_knowledge_knowledgebase_language_documents_import": {
    "operationId": "patch_knowledge_knowledgebase_language_documents_import",
    "functionName": "patch_knowledge_knowledgebase_language_documents_import",
    "signature": "patch_knowledge_knowledgebase_language_documents_import(knowledge_base_id, language_code, import_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "import_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ImportStatusRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeImport",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nimport_id = 'import_id_example' # str | Import ID\nbody = PureCloudPlatformClientV2.ImportStatusRequest() # ImportStatusRequest | \n\ntry:\n    # Start import operation\n    api_response = api_instance.patch_knowledge_knowledgebase_language_documents_import(knowledge_base_id, language_code, import_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_knowledgebase_language_documents_import: %s\\n\" % e)"
  },
  "patch_knowledge_knowledgebase_parse_job": {
    "operationId": "patch_knowledge_knowledgebase_parse_job",
    "functionName": "patch_knowledge_knowledgebase_parse_job",
    "signature": "patch_knowledge_knowledgebase_parse_job(knowledge_base_id, parse_job_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "parse_job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeParseJobRequestPatch",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nparse_job_id = 'parse_job_id_example' # str | Parse job ID\nbody = PureCloudPlatformClientV2.KnowledgeParseJobRequestPatch() # KnowledgeParseJobRequestPatch | \n\ntry:\n    # Send update to the parse operation\n    api_instance.patch_knowledge_knowledgebase_parse_job(knowledge_base_id, parse_job_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_knowledgebase_parse_job: %s\\n\" % e)"
  },
  "patch_knowledge_knowledgebase_unanswered_group_phrasegroup": {
    "operationId": "patch_knowledge_knowledgebase_unanswered_group_phrasegroup",
    "functionName": "patch_knowledge_knowledgebase_unanswered_group_phrasegroup",
    "signature": "patch_knowledge_knowledgebase_unanswered_group_phrasegroup(knowledge_base_id, group_id, phrase_group_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "phrase_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UnansweredPhraseGroupPatchRequestBody",
        "required": "true"
      }
    ],
    "return": "UnansweredPhraseGroupUpdateResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\ngroup_id = 'group_id_example' # str | The ID of the group to be updated.\nphrase_group_id = 'phrase_group_id_example' # str | The ID of the phraseGroup to be updated.\nbody = PureCloudPlatformClientV2.UnansweredPhraseGroupPatchRequestBody() # UnansweredPhraseGroupPatchRequestBody | Request body of the update unanswered group endpoint.\n\ntry:\n    # Update a Knowledge base unanswered phrase group\n    api_response = api_instance.patch_knowledge_knowledgebase_unanswered_group_phrasegroup(knowledge_base_id, group_id, phrase_group_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->patch_knowledge_knowledgebase_unanswered_group_phrasegroup: %s\\n\" % e)"
  },
  "post_knowledge_documentuploads": {
    "operationId": "post_knowledge_documentuploads",
    "functionName": "post_knowledge_documentuploads",
    "signature": "post_knowledge_documentuploads(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UploadUrlRequest",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UploadsApi();\nbody = PureCloudPlatformClientV2.UploadUrlRequest() # UploadUrlRequest | query\n\ntry:\n    # Creates a presigned URL for uploading a knowledge import file with a set of documents\n    api_response = api_instance.post_knowledge_documentuploads(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UploadsApi->post_knowledge_documentuploads: %s\\n\" % e)"
  },
  "post_knowledge_guest_session_document_copies": {
    "operationId": "post_knowledge_guest_session_document_copies",
    "functionName": "post_knowledge_guest_session_document_copies",
    "signature": "post_knowledge_guest_session_document_copies(session_id, document_id, body)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeGuestDocumentCopy",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nsession_id = 'session_id_example' # str | Knowledge guest session ID.\ndocument_id = 'document_id_example' # str | Document ID\nbody = PureCloudPlatformClientV2.KnowledgeGuestDocumentCopy() # KnowledgeGuestDocumentCopy |  (optional)\n\ntry:\n    # Indicate that the document was copied by the user.\n    api_instance.post_knowledge_guest_session_document_copies(session_id, document_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_guest_session_document_copies: %s\\n\" % e)"
  },
  "post_knowledge_guest_session_document_feedback": {
    "operationId": "post_knowledge_guest_session_document_feedback",
    "functionName": "post_knowledge_guest_session_document_feedback",
    "signature": "post_knowledge_guest_session_document_feedback(session_id, document_id, body)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeGuestDocumentFeedback",
        "required": "false"
      }
    ],
    "return": "KnowledgeGuestDocumentFeedback",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nsession_id = 'session_id_example' # str | Knowledge guest session ID.\ndocument_id = 'document_id_example' # str | Document ID.\nbody = PureCloudPlatformClientV2.KnowledgeGuestDocumentFeedback() # KnowledgeGuestDocumentFeedback |  (optional)\n\ntry:\n    # Give feedback on a document\n    api_response = api_instance.post_knowledge_guest_session_document_feedback(session_id, document_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_guest_session_document_feedback: %s\\n\" % e)"
  },
  "post_knowledge_guest_session_document_views": {
    "operationId": "post_knowledge_guest_session_document_views",
    "functionName": "post_knowledge_guest_session_document_views",
    "signature": "post_knowledge_guest_session_document_views(session_id, document_id, body)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeGuestDocumentView",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nsession_id = 'session_id_example' # str | Knowledge guest session ID.\ndocument_id = 'document_id_example' # str | Document ID\nbody = PureCloudPlatformClientV2.KnowledgeGuestDocumentView() # KnowledgeGuestDocumentView |  (optional)\n\ntry:\n    # Create view event for a document.\n    api_instance.post_knowledge_guest_session_document_views(session_id, document_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_guest_session_document_views: %s\\n\" % e)"
  },
  "post_knowledge_guest_session_documents_presentations": {
    "operationId": "post_knowledge_guest_session_documents_presentations",
    "functionName": "post_knowledge_guest_session_documents_presentations",
    "signature": "post_knowledge_guest_session_documents_presentations(session_id, body)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeGuestDocumentPresentation",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nsession_id = 'session_id_example' # str | Knowledge guest session ID.\nbody = PureCloudPlatformClientV2.KnowledgeGuestDocumentPresentation() # KnowledgeGuestDocumentPresentation |  (optional)\n\ntry:\n    # Indicate that documents were presented to the user.\n    api_instance.post_knowledge_guest_session_documents_presentations(session_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_guest_session_documents_presentations: %s\\n\" % e)"
  },
  "post_knowledge_guest_session_documents_search": {
    "operationId": "post_knowledge_guest_session_documents_search",
    "functionName": "post_knowledge_guest_session_documents_search",
    "signature": "post_knowledge_guest_session_documents_search(session_id, expand, body)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentGuestSearchRequest",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentGuestSearch",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nsession_id = 'session_id_example' # str | Knowledge guest session ID.\nexpand = ['expand_example'] # list[str] | Fields, if any, to expand for each document in the search result matching the query. (optional)\nbody = PureCloudPlatformClientV2.KnowledgeDocumentGuestSearchRequest() # KnowledgeDocumentGuestSearchRequest |  (optional)\n\ntry:\n    # Search the documents in a guest session.\n    api_response = api_instance.post_knowledge_guest_session_documents_search(session_id, expand=expand, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_guest_session_documents_search: %s\\n\" % e)"
  },
  "post_knowledge_guest_session_documents_search_suggestions": {
    "operationId": "post_knowledge_guest_session_documents_search_suggestions",
    "functionName": "post_knowledge_guest_session_documents_search_suggestions",
    "signature": "post_knowledge_guest_session_documents_search_suggestions(session_id, body)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeGuestDocumentSuggestionRequest",
        "required": "false"
      }
    ],
    "return": "KnowledgeGuestDocumentSuggestion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nsession_id = 'session_id_example' # str | Knowledge guest session ID.\nbody = PureCloudPlatformClientV2.KnowledgeGuestDocumentSuggestionRequest() # KnowledgeGuestDocumentSuggestionRequest |  (optional)\n\ntry:\n    # Query the knowledge documents to provide suggestions for auto completion.\n    api_response = api_instance.post_knowledge_guest_session_documents_search_suggestions(session_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_guest_session_documents_search_suggestions: %s\\n\" % e)"
  },
  "post_knowledge_guest_sessions": {
    "operationId": "post_knowledge_guest_sessions",
    "functionName": "post_knowledge_guest_sessions",
    "signature": "post_knowledge_guest_sessions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "KnowledgeGuestSession",
        "required": "true"
      }
    ],
    "return": "KnowledgeGuestSession",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nbody = PureCloudPlatformClientV2.KnowledgeGuestSession() # KnowledgeGuestSession | \n\ntry:\n    # Create guest session\n    api_response = api_instance.post_knowledge_guest_sessions(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_guest_sessions: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_categories": {
    "operationId": "post_knowledge_knowledgebase_categories",
    "functionName": "post_knowledge_knowledgebase_categories",
    "signature": "post_knowledge_knowledgebase_categories(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CategoryCreateRequest",
        "required": "true"
      }
    ],
    "return": "CategoryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbody = PureCloudPlatformClientV2.CategoryCreateRequest() # CategoryCreateRequest | \n\ntry:\n    # Create new category\n    api_response = api_instance.post_knowledge_knowledgebase_categories(knowledge_base_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_categories: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_document_copies": {
    "operationId": "post_knowledge_knowledgebase_document_copies",
    "functionName": "post_knowledge_knowledgebase_document_copies",
    "signature": "post_knowledge_knowledgebase_document_copies(knowledge_base_id, document_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentCopy",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID.\ndocument_id = 'document_id_example' # str | Document ID.\nbody = PureCloudPlatformClientV2.KnowledgeDocumentCopy() # KnowledgeDocumentCopy |  (optional)\n\ntry:\n    # Indicate that the document was copied by the user.\n    api_instance.post_knowledge_knowledgebase_document_copies(knowledge_base_id, document_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_document_copies: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_document_feedback": {
    "operationId": "post_knowledge_knowledgebase_document_feedback",
    "functionName": "post_knowledge_knowledgebase_document_feedback",
    "signature": "post_knowledge_knowledgebase_document_feedback(knowledge_base_id, document_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentFeedback",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentFeedbackResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID.\ndocument_id = 'document_id_example' # str | Document ID.\nbody = PureCloudPlatformClientV2.KnowledgeDocumentFeedback() # KnowledgeDocumentFeedback |  (optional)\n\ntry:\n    # Give feedback on a document\n    api_response = api_instance.post_knowledge_knowledgebase_document_feedback(knowledge_base_id, document_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_document_feedback: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_document_variations": {
    "operationId": "post_knowledge_knowledgebase_document_variations",
    "functionName": "post_knowledge_knowledgebase_document_variations",
    "signature": "post_knowledge_knowledgebase_document_variations(knowledge_base_id, document_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DocumentVariation",
        "required": "true"
      }
    ],
    "return": "DocumentVariation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Globally unique identifier for the knowledge base.\ndocument_id = 'document_id_example' # str | Globally unique identifier for the document.\nbody = PureCloudPlatformClientV2.DocumentVariation() # DocumentVariation | \n\ntry:\n    # Create a variation for a document.\n    api_response = api_instance.post_knowledge_knowledgebase_document_variations(knowledge_base_id, document_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_document_variations: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_document_versions": {
    "operationId": "post_knowledge_knowledgebase_document_versions",
    "functionName": "post_knowledge_knowledgebase_document_versions",
    "signature": "post_knowledge_knowledgebase_document_versions(knowledge_base_id, document_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentVersion",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocumentVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Globally unique identifier for the knowledge base.\ndocument_id = 'document_id_example' # str | Globally unique identifier for the document.\nbody = PureCloudPlatformClientV2.KnowledgeDocumentVersion() # KnowledgeDocumentVersion | \n\ntry:\n    # Creates or restores a document version.\n    api_response = api_instance.post_knowledge_knowledgebase_document_versions(knowledge_base_id, document_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_document_versions: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_document_views": {
    "operationId": "post_knowledge_knowledgebase_document_views",
    "functionName": "post_knowledge_knowledgebase_document_views",
    "signature": "post_knowledge_knowledgebase_document_views(knowledge_base_id, document_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentView",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID.\ndocument_id = 'document_id_example' # str | Document ID.\nbody = PureCloudPlatformClientV2.KnowledgeDocumentView() # KnowledgeDocumentView |  (optional)\n\ntry:\n    # Create view for a document.\n    api_instance.post_knowledge_knowledgebase_document_views(knowledge_base_id, document_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_document_views: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_documents": {
    "operationId": "post_knowledge_knowledgebase_documents",
    "functionName": "post_knowledge_knowledgebase_documents",
    "signature": "post_knowledge_knowledgebase_documents(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentReq",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocumentResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbody = PureCloudPlatformClientV2.KnowledgeDocumentReq() # KnowledgeDocumentReq | \n\ntry:\n    # Create document.\n    api_response = api_instance.post_knowledge_knowledgebase_documents(knowledge_base_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_documents: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_documents_bulk_remove": {
    "operationId": "post_knowledge_knowledgebase_documents_bulk_remove",
    "functionName": "post_knowledge_knowledgebase_documents_bulk_remove",
    "signature": "post_knowledge_knowledgebase_documents_bulk_remove(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentBulkRemoveRequest",
        "required": "true"
      }
    ],
    "return": "BulkResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbody = PureCloudPlatformClientV2.KnowledgeDocumentBulkRemoveRequest() # KnowledgeDocumentBulkRemoveRequest | \n\ntry:\n    # Bulk remove documents.\n    api_response = api_instance.post_knowledge_knowledgebase_documents_bulk_remove(knowledge_base_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_documents_bulk_remove: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_documents_bulk_update": {
    "operationId": "post_knowledge_knowledgebase_documents_bulk_update",
    "functionName": "post_knowledge_knowledgebase_documents_bulk_update",
    "signature": "post_knowledge_knowledgebase_documents_bulk_update(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentBulkUpdateRequest",
        "required": "true"
      }
    ],
    "return": "BulkResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbody = PureCloudPlatformClientV2.KnowledgeDocumentBulkUpdateRequest() # KnowledgeDocumentBulkUpdateRequest | \n\ntry:\n    # Bulk update documents.\n    api_response = api_instance.post_knowledge_knowledgebase_documents_bulk_update(knowledge_base_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_documents_bulk_update: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_documents_presentations": {
    "operationId": "post_knowledge_knowledgebase_documents_presentations",
    "functionName": "post_knowledge_knowledgebase_documents_presentations",
    "signature": "post_knowledge_knowledgebase_documents_presentations(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentPresentation",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID.\nbody = PureCloudPlatformClientV2.KnowledgeDocumentPresentation() # KnowledgeDocumentPresentation |  (optional)\n\ntry:\n    # Indicate that documents were presented to the user.\n    api_instance.post_knowledge_knowledgebase_documents_presentations(knowledge_base_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_documents_presentations: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_documents_search": {
    "operationId": "post_knowledge_knowledgebase_documents_search",
    "functionName": "post_knowledge_knowledgebase_documents_search",
    "signature": "post_knowledge_knowledgebase_documents_search(knowledge_base_id, expand, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentSearchRequest",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentSearch",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | The ID of knowledge base containing the documents to query.\nexpand = ['expand_example'] # list[str] | Fields, if any, to expand for each document in the search result matching the query. (optional)\nbody = PureCloudPlatformClientV2.KnowledgeDocumentSearchRequest() # KnowledgeDocumentSearchRequest |  (optional)\n\ntry:\n    # Search the documents in a knowledge base.\n    api_response = api_instance.post_knowledge_knowledgebase_documents_search(knowledge_base_id, expand=expand, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_documents_search: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_documents_search_suggestions": {
    "operationId": "post_knowledge_knowledgebase_documents_search_suggestions",
    "functionName": "post_knowledge_knowledgebase_documents_search_suggestions",
    "signature": "post_knowledge_knowledgebase_documents_search_suggestions(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentSuggestionRequest",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentSuggestion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | The ID of knowledge base containing the documents to query.\nbody = PureCloudPlatformClientV2.KnowledgeDocumentSuggestionRequest() # KnowledgeDocumentSuggestionRequest |  (optional)\n\ntry:\n    # Query the knowledge documents to provide suggestions for auto completion.\n    api_response = api_instance.post_knowledge_knowledgebase_documents_search_suggestions(knowledge_base_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_documents_search_suggestions: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_documents_versions_bulk_add": {
    "operationId": "post_knowledge_knowledgebase_documents_versions_bulk_add",
    "functionName": "post_knowledge_knowledgebase_documents_versions_bulk_add",
    "signature": "post_knowledge_knowledgebase_documents_versions_bulk_add(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentBulkVersionAddRequest",
        "required": "true"
      }
    ],
    "return": "BulkResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbody = PureCloudPlatformClientV2.KnowledgeDocumentBulkVersionAddRequest() # KnowledgeDocumentBulkVersionAddRequest | \n\ntry:\n    # Bulk add document versions.\n    api_response = api_instance.post_knowledge_knowledgebase_documents_versions_bulk_add(knowledge_base_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_documents_versions_bulk_add: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_export_jobs": {
    "operationId": "post_knowledge_knowledgebase_export_jobs",
    "functionName": "post_knowledge_knowledgebase_export_jobs",
    "signature": "post_knowledge_knowledgebase_export_jobs(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeExportJobRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeExportJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbody = PureCloudPlatformClientV2.KnowledgeExportJobRequest() # KnowledgeExportJobRequest | \n\ntry:\n    # Create export job\n    api_response = api_instance.post_knowledge_knowledgebase_export_jobs(knowledge_base_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_export_jobs: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_import_jobs": {
    "operationId": "post_knowledge_knowledgebase_import_jobs",
    "functionName": "post_knowledge_knowledgebase_import_jobs",
    "signature": "post_knowledge_knowledgebase_import_jobs(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeImportJobRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeImportJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbody = PureCloudPlatformClientV2.KnowledgeImportJobRequest() # KnowledgeImportJobRequest | \n\ntry:\n    # Create import job\n    api_response = api_instance.post_knowledge_knowledgebase_import_jobs(knowledge_base_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_import_jobs: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_labels": {
    "operationId": "post_knowledge_knowledgebase_labels",
    "functionName": "post_knowledge_knowledgebase_labels",
    "signature": "post_knowledge_knowledgebase_labels(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LabelCreateRequest",
        "required": "true"
      }
    ],
    "return": "LabelResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbody = PureCloudPlatformClientV2.LabelCreateRequest() # LabelCreateRequest | \n\ntry:\n    # Create new label\n    api_response = api_instance.post_knowledge_knowledgebase_labels(knowledge_base_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_labels: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_language_categories": {
    "operationId": "post_knowledge_knowledgebase_language_categories",
    "functionName": "post_knowledge_knowledgebase_language_categories",
    "signature": "post_knowledge_knowledgebase_language_categories(knowledge_base_id, language_code, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeCategoryRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeExtendedCategory",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nbody = PureCloudPlatformClientV2.KnowledgeCategoryRequest() # KnowledgeCategoryRequest | \n\ntry:\n    # Create new category\n    api_response = api_instance.post_knowledge_knowledgebase_language_categories(knowledge_base_id, language_code, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_language_categories: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_language_document_uploads": {
    "operationId": "post_knowledge_knowledgebase_language_document_uploads",
    "functionName": "post_knowledge_knowledgebase_language_document_uploads",
    "signature": "post_knowledge_knowledgebase_language_document_uploads(document_id, knowledge_base_id, language_code, body)",
    "parameters": [
      {
        "name": "document_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentContentUpload",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocumentContentUpload",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\ndocument_id = 'document_id_example' # str | Document ID\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nbody = PureCloudPlatformClientV2.KnowledgeDocumentContentUpload() # KnowledgeDocumentContentUpload | \n\ntry:\n    # Upload Article Content\n    api_response = api_instance.post_knowledge_knowledgebase_language_document_uploads(document_id, knowledge_base_id, language_code, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_language_document_uploads: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_language_documents": {
    "operationId": "post_knowledge_knowledgebase_language_documents",
    "functionName": "post_knowledge_knowledgebase_language_documents",
    "signature": "post_knowledge_knowledgebase_language_documents(knowledge_base_id, language_code, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocument",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nbody = PureCloudPlatformClientV2.KnowledgeDocumentRequest() # KnowledgeDocumentRequest | \n\ntry:\n    # Create document\n    api_response = api_instance.post_knowledge_knowledgebase_language_documents(knowledge_base_id, language_code, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_language_documents: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_language_documents_imports": {
    "operationId": "post_knowledge_knowledgebase_language_documents_imports",
    "functionName": "post_knowledge_knowledgebase_language_documents_imports",
    "signature": "post_knowledge_knowledgebase_language_documents_imports(knowledge_base_id, language_code, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeImport",
        "required": "true"
      }
    ],
    "return": "KnowledgeImport",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\nbody = PureCloudPlatformClientV2.KnowledgeImport() # KnowledgeImport | \n\ntry:\n    # Create import operation\n    api_response = api_instance.post_knowledge_knowledgebase_language_documents_imports(knowledge_base_id, language_code, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_language_documents_imports: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_language_training_promote": {
    "operationId": "post_knowledge_knowledgebase_language_training_promote",
    "functionName": "post_knowledge_knowledgebase_language_training_promote",
    "signature": "post_knowledge_knowledgebase_language_training_promote(knowledge_base_id, language_code, training_id)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "training_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeTraining",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\ntraining_id = 'training_id_example' # str | Training ID\n\ntry:\n    # Promote trained documents from draft state to active.\n    api_response = api_instance.post_knowledge_knowledgebase_language_training_promote(knowledge_base_id, language_code, training_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_language_training_promote: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_language_trainings": {
    "operationId": "post_knowledge_knowledgebase_language_trainings",
    "functionName": "post_knowledge_knowledgebase_language_trainings",
    "signature": "post_knowledge_knowledgebase_language_trainings(knowledge_base_id, language_code)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_code",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "KnowledgeTraining",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nlanguage_code = 'en-US' # str | Language code, format: iso2-LOCALE\n\ntry:\n    # Trigger training\n    api_response = api_instance.post_knowledge_knowledgebase_language_trainings(knowledge_base_id, language_code)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_language_trainings: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_parse_job_import": {
    "operationId": "post_knowledge_knowledgebase_parse_job_import",
    "functionName": "post_knowledge_knowledgebase_parse_job_import",
    "signature": "post_knowledge_knowledgebase_parse_job_import(knowledge_base_id, parse_job_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "parse_job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeParseJobRequestImport",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nparse_job_id = 'parse_job_id_example' # str | Parse job ID\nbody = PureCloudPlatformClientV2.KnowledgeParseJobRequestImport() # KnowledgeParseJobRequestImport | \n\ntry:\n    # Import the parsed articles\n    api_instance.post_knowledge_knowledgebase_parse_job_import(knowledge_base_id, parse_job_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_parse_job_import: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_parse_jobs": {
    "operationId": "post_knowledge_knowledgebase_parse_jobs",
    "functionName": "post_knowledge_knowledgebase_parse_jobs",
    "signature": "post_knowledge_knowledgebase_parse_jobs(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeParseJobRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeParseJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbody = PureCloudPlatformClientV2.KnowledgeParseJobRequest() # KnowledgeParseJobRequest | \n\ntry:\n    # Create parse job\n    api_response = api_instance.post_knowledge_knowledgebase_parse_jobs(knowledge_base_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebase_parse_jobs: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_search": {
    "operationId": "post_knowledge_knowledgebase_search",
    "functionName": "post_knowledge_knowledgebase_search",
    "signature": "post_knowledge_knowledgebase_search(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeSearchRequest",
        "required": "false"
      }
    ],
    "return": "KnowledgeSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SearchApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbody = PureCloudPlatformClientV2.KnowledgeSearchRequest() # KnowledgeSearchRequest |  (optional)\n\ntry:\n    # Search Documents\n    api_response = api_instance.post_knowledge_knowledgebase_search(knowledge_base_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SearchApi->post_knowledge_knowledgebase_search: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebase_uploads_urls_jobs": {
    "operationId": "post_knowledge_knowledgebase_uploads_urls_jobs",
    "functionName": "post_knowledge_knowledgebase_uploads_urls_jobs",
    "signature": "post_knowledge_knowledgebase_uploads_urls_jobs(knowledge_base_id, body)",
    "parameters": [
      {
        "name": "knowledge_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateUploadSourceUrlJobRequest",
        "required": "true"
      }
    ],
    "return": "CreateUploadSourceUrlJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UploadsApi();\nknowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID\nbody = PureCloudPlatformClientV2.CreateUploadSourceUrlJobRequest() # CreateUploadSourceUrlJobRequest | uploadRequest\n\ntry:\n    # Create content upload from URL job\n    api_response = api_instance.post_knowledge_knowledgebase_uploads_urls_jobs(knowledge_base_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UploadsApi->post_knowledge_knowledgebase_uploads_urls_jobs: %s\\n\" % e)"
  },
  "post_knowledge_knowledgebases": {
    "operationId": "post_knowledge_knowledgebases",
    "functionName": "post_knowledge_knowledgebases",
    "signature": "post_knowledge_knowledgebases(body)",
    "parameters": [
      {
        "name": "body",
        "type": "KnowledgeBaseCreateRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.KnowledgeApi();\nbody = PureCloudPlatformClientV2.KnowledgeBaseCreateRequest() # KnowledgeBaseCreateRequest | \n\ntry:\n    # Create new knowledge base\n    api_response = api_instance.post_knowledge_knowledgebases(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling KnowledgeApi->post_knowledge_knowledgebases: %s\\n\" % e)"
  },
  "delete_languageunderstanding_domain": {
    "operationId": "delete_languageunderstanding_domain",
    "functionName": "delete_languageunderstanding_domain",
    "signature": "delete_languageunderstanding_domain(domain_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\n\ntry:\n    # Delete an NLU Domain.\n    api_instance.delete_languageunderstanding_domain(domain_id)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->delete_languageunderstanding_domain: %s\\n\" % e)"
  },
  "delete_languageunderstanding_domain_feedback_feedback_id": {
    "operationId": "delete_languageunderstanding_domain_feedback_feedback_id",
    "functionName": "delete_languageunderstanding_domain_feedback_feedback_id",
    "signature": "delete_languageunderstanding_domain_feedback_feedback_id(domain_id, feedback_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "feedback_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\nfeedback_id = 'feedback_id_example' # str | ID of the Feedback\n\ntry:\n    # Delete the feedback on the NLU Domain Version.\n    api_instance.delete_languageunderstanding_domain_feedback_feedback_id(domain_id, feedback_id)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->delete_languageunderstanding_domain_feedback_feedback_id: %s\\n\" % e)"
  },
  "delete_languageunderstanding_domain_version": {
    "operationId": "delete_languageunderstanding_domain_version",
    "functionName": "delete_languageunderstanding_domain_version",
    "signature": "delete_languageunderstanding_domain_version(domain_id, domain_version_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "domain_version_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\ndomain_version_id = 'domain_version_id_example' # str | ID of the NLU domain version.\n\ntry:\n    # Delete an NLU Domain Version\n    api_instance.delete_languageunderstanding_domain_version(domain_id, domain_version_id)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->delete_languageunderstanding_domain_version: %s\\n\" % e)"
  },
  "delete_languageunderstanding_miner": {
    "operationId": "delete_languageunderstanding_miner",
    "functionName": "delete_languageunderstanding_miner",
    "signature": "delete_languageunderstanding_miner(miner_id)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_id = 'miner_id_example' # str | Miner ID\n\ntry:\n    # Delete a miner.\n    api_instance.delete_languageunderstanding_miner(miner_id)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->delete_languageunderstanding_miner: %s\\n\" % e)"
  },
  "delete_languageunderstanding_miner_draft": {
    "operationId": "delete_languageunderstanding_miner_draft",
    "functionName": "delete_languageunderstanding_miner_draft",
    "signature": "delete_languageunderstanding_miner_draft(miner_id, draft_id)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "draft_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_id = 'miner_id_example' # str | Miner ID\ndraft_id = 'draft_id_example' # str | Draft ID\n\ntry:\n    # Delete a draft\n    api_instance.delete_languageunderstanding_miner_draft(miner_id, draft_id)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->delete_languageunderstanding_miner_draft: %s\\n\" % e)"
  },
  "get_languageunderstanding_domain": {
    "operationId": "get_languageunderstanding_domain",
    "functionName": "get_languageunderstanding_domain",
    "signature": "get_languageunderstanding_domain(domain_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "NluDomain",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\n\ntry:\n    # Find an NLU Domain.\n    api_response = api_instance.get_languageunderstanding_domain(domain_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_domain: %s\\n\" % e)"
  },
  "get_languageunderstanding_domain_feedback": {
    "operationId": "get_languageunderstanding_domain_feedback",
    "functionName": "get_languageunderstanding_domain_feedback",
    "signature": "get_languageunderstanding_domain_feedback(domain_id, intent_name, assessment, date_start, date_end, include_deleted, language, page_number, page_size, enable_cursor_pagination, include_training_utterances, after, fields)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "intent_name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "assessment",
        "type": "str",
        "required": "false"
      },
      {
        "name": "date_start",
        "type": "date",
        "required": "false"
      },
      {
        "name": "date_end",
        "type": "date",
        "required": "false"
      },
      {
        "name": "include_deleted",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "language",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "enable_cursor_pagination",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_training_utterances",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "fields",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "NluFeedbackListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\nintent_name = 'intent_name_example' # str | The top intent name to retrieve feedback for. (optional)\nassessment = 'assessment_example' # str | The top assessment to retrieve feedback for. (optional)\ndate_start = '2013-10-20' # date | Begin of time window as ISO-8601 date. (optional)\ndate_end = '2013-10-20' # date | End of time window as ISO-8601 date. (optional)\ninclude_deleted = True # bool | Whether to include soft-deleted items in the result. (optional)\nlanguage = 'language_example' # str | Whether to filter response based on the language, e.g. en-us, pt-br. (optional)\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nenable_cursor_pagination = False # bool | Enable Cursor Pagination (optional) (default to False)\ninclude_training_utterances = True # bool | Include Training Utterances. By default they're included. (optional) (default to True)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. This is considered only when enableCursorPagination=true (optional)\nfields = ['fields_example'] # list[str] | Fields and properties to get, comma-separated (optional)\n\ntry:\n    # Get all feedback in the given NLU Domain Version.\n    api_response = api_instance.get_languageunderstanding_domain_feedback(domain_id, intent_name=intent_name, assessment=assessment, date_start=date_start, date_end=date_end, include_deleted=include_deleted, language=language, page_number=page_number, page_size=page_size, enable_cursor_pagination=enable_cursor_pagination, include_training_utterances=include_training_utterances, after=after, fields=fields)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_domain_feedback: %s\\n\" % e)"
  },
  "get_languageunderstanding_domain_feedback_feedback_id": {
    "operationId": "get_languageunderstanding_domain_feedback_feedback_id",
    "functionName": "get_languageunderstanding_domain_feedback_feedback_id",
    "signature": "get_languageunderstanding_domain_feedback_feedback_id(domain_id, feedback_id, fields)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "feedback_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "fields",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "NluFeedbackResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\nfeedback_id = 'feedback_id_example' # str | ID of the Feedback\nfields = ['fields_example'] # list[str] | Fields and properties to get, comma-separated (optional)\n\ntry:\n    # Find a Feedback\n    api_response = api_instance.get_languageunderstanding_domain_feedback_feedback_id(domain_id, feedback_id, fields=fields)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_domain_feedback_feedback_id: %s\\n\" % e)"
  },
  "get_languageunderstanding_domain_version": {
    "operationId": "get_languageunderstanding_domain_version",
    "functionName": "get_languageunderstanding_domain_version",
    "signature": "get_languageunderstanding_domain_version(domain_id, domain_version_id, include_utterances)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "domain_version_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_utterances",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "NluDomainVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\ndomain_version_id = 'domain_version_id_example' # str | ID of the NLU domain version.\ninclude_utterances = True # bool | Whether utterances for intent definition should be included when marshalling response. (optional)\n\ntry:\n    # Find an NLU Domain Version.\n    api_response = api_instance.get_languageunderstanding_domain_version(domain_id, domain_version_id, include_utterances=include_utterances)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_domain_version: %s\\n\" % e)"
  },
  "get_languageunderstanding_domain_version_report": {
    "operationId": "get_languageunderstanding_domain_version_report",
    "functionName": "get_languageunderstanding_domain_version_report",
    "signature": "get_languageunderstanding_domain_version_report(domain_id, domain_version_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "domain_version_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "NluDomainVersionQualityReport",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\ndomain_version_id = 'domain_version_id_example' # str | ID of the NLU domain version.\n\ntry:\n    # Retrieved quality report for the specified NLU Domain Version\n    api_response = api_instance.get_languageunderstanding_domain_version_report(domain_id, domain_version_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_domain_version_report: %s\\n\" % e)"
  },
  "get_languageunderstanding_domain_versions": {
    "operationId": "get_languageunderstanding_domain_versions",
    "functionName": "get_languageunderstanding_domain_versions",
    "signature": "get_languageunderstanding_domain_versions(domain_id, include_utterances, page_number, page_size)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_utterances",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "NluDomainVersionListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\ninclude_utterances = True # bool | Whether utterances for intent definition should be included when marshalling response. (optional)\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get all NLU Domain Versions for a given Domain.\n    api_response = api_instance.get_languageunderstanding_domain_versions(domain_id, include_utterances=include_utterances, page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_domain_versions: %s\\n\" % e)"
  },
  "get_languageunderstanding_domains": {
    "operationId": "get_languageunderstanding_domains",
    "functionName": "get_languageunderstanding_domains",
    "signature": "get_languageunderstanding_domains(page_number, page_size)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "NluDomainListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\n\ntry:\n    # Get all NLU Domains.\n    api_response = api_instance.get_languageunderstanding_domains(page_number=page_number, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_domains: %s\\n\" % e)"
  },
  "get_languageunderstanding_miner": {
    "operationId": "get_languageunderstanding_miner",
    "functionName": "get_languageunderstanding_miner",
    "signature": "get_languageunderstanding_miner(miner_id)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Miner",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_id = 'miner_id_example' # str | Miner ID\n\ntry:\n    # Get information about a miner.\n    api_response = api_instance.get_languageunderstanding_miner(miner_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_miner: %s\\n\" % e)"
  },
  "get_languageunderstanding_miner_draft": {
    "operationId": "get_languageunderstanding_miner_draft",
    "functionName": "get_languageunderstanding_miner_draft",
    "signature": "get_languageunderstanding_miner_draft(miner_id, draft_id, draft_intent_id, draft_topic_id)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "draft_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "draft_intent_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "draft_topic_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Draft",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_id = 'miner_id_example' # str | Miner ID\ndraft_id = 'draft_id_example' # str | Draft ID\ndraft_intent_id = 'draft_intent_id_example' # str | Parameter to filter a specific intent. (optional)\ndraft_topic_id = 'draft_topic_id_example' # str | Parameter to filter a specific topic. (optional)\n\ntry:\n    # Get information about a draft.\n    api_response = api_instance.get_languageunderstanding_miner_draft(miner_id, draft_id, draft_intent_id=draft_intent_id, draft_topic_id=draft_topic_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_miner_draft: %s\\n\" % e)"
  },
  "get_languageunderstanding_miner_drafts": {
    "operationId": "get_languageunderstanding_miner_drafts",
    "functionName": "get_languageunderstanding_miner_drafts",
    "signature": "get_languageunderstanding_miner_drafts(miner_id)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DraftListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_id = 'miner_id_example' # str | Miner ID\n\ntry:\n    # Retrieve the list of drafts created.\n    api_response = api_instance.get_languageunderstanding_miner_drafts(miner_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_miner_drafts: %s\\n\" % e)"
  },
  "get_languageunderstanding_miner_intent": {
    "operationId": "get_languageunderstanding_miner_intent",
    "functionName": "get_languageunderstanding_miner_intent",
    "signature": "get_languageunderstanding_miner_intent(miner_id, intent_id, expand)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "intent_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "MinerIntent",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_id = 'miner_id_example' # str | Miner ID\nintent_id = 'intent_id_example' # str | The ID of the intent to be retrieved.\nexpand = 'expand_example' # str | Option to fetch utterances (optional)\n\ntry:\n    # Get information about a mined intent\n    api_response = api_instance.get_languageunderstanding_miner_intent(miner_id, intent_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_miner_intent: %s\\n\" % e)"
  },
  "get_languageunderstanding_miner_intents": {
    "operationId": "get_languageunderstanding_miner_intents",
    "functionName": "get_languageunderstanding_miner_intents",
    "signature": "get_languageunderstanding_miner_intents(miner_id, expand)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "MinedIntentsListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_id = 'miner_id_example' # str | Miner ID\nexpand = 'expand_example' # str | Option to fetch utterances. (optional)\n\ntry:\n    # Retrieve a list of mined intents.\n    api_response = api_instance.get_languageunderstanding_miner_intents(miner_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_miner_intents: %s\\n\" % e)"
  },
  "get_languageunderstanding_miner_topic": {
    "operationId": "get_languageunderstanding_miner_topic",
    "functionName": "get_languageunderstanding_miner_topic",
    "signature": "get_languageunderstanding_miner_topic(miner_id, topic_id, expand)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "topic_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "MinerTopic",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_id = 'miner_id_example' # str | Miner ID\ntopic_id = 'topic_id_example' # str | The ID of the topic to be retrieved.\nexpand = 'expand_example' # str | Option to fetch phrases (optional)\n\ntry:\n    # Retrieves details of a particular topic.\n    api_response = api_instance.get_languageunderstanding_miner_topic(miner_id, topic_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_miner_topic: %s\\n\" % e)"
  },
  "get_languageunderstanding_miner_topic_phrase": {
    "operationId": "get_languageunderstanding_miner_topic_phrase",
    "functionName": "get_languageunderstanding_miner_topic_phrase",
    "signature": "get_languageunderstanding_miner_topic_phrase(miner_id, topic_id, phrase_id)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "topic_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "phrase_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MinerTopicPhrase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_id = 'miner_id_example' # str | Miner ID\ntopic_id = 'topic_id_example' # str | The ID of the topic to be retrieved.\nphrase_id = 'phrase_id_example' # str | The ID of the phrase to be retrieved.\n\ntry:\n    # Retrieves utterances related to a phrase in a topic.\n    api_response = api_instance.get_languageunderstanding_miner_topic_phrase(miner_id, topic_id, phrase_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_miner_topic_phrase: %s\\n\" % e)"
  },
  "get_languageunderstanding_miner_topics": {
    "operationId": "get_languageunderstanding_miner_topics",
    "functionName": "get_languageunderstanding_miner_topics",
    "signature": "get_languageunderstanding_miner_topics(miner_id)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MinerTopicsListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_id = 'miner_id_example' # str | Miner ID\n\ntry:\n    # Retrieve a list of mined topics.\n    api_response = api_instance.get_languageunderstanding_miner_topics(miner_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_miner_topics: %s\\n\" % e)"
  },
  "get_languageunderstanding_miners": {
    "operationId": "get_languageunderstanding_miners",
    "functionName": "get_languageunderstanding_miners",
    "signature": "get_languageunderstanding_miners(miner_type)",
    "parameters": [
      {
        "name": "miner_type",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "MinerListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_type = 'miner_type_example' # str | Type of miner, either intent or topic (optional)\n\ntry:\n    # Retrieve the list of miners created.\n    api_response = api_instance.get_languageunderstanding_miners(miner_type=miner_type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_miners: %s\\n\" % e)"
  },
  "get_languageunderstanding_settings": {
    "operationId": "get_languageunderstanding_settings",
    "functionName": "get_languageunderstanding_settings",
    "signature": "get_languageunderstanding_settings()",
    "return": "NluOrganization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\n\ntry:\n    # Get Organization Configuration\n    api_response = api_instance.get_languageunderstanding_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->get_languageunderstanding_settings: %s\\n\" % e)"
  },
  "patch_languageunderstanding_domain": {
    "operationId": "patch_languageunderstanding_domain",
    "functionName": "patch_languageunderstanding_domain",
    "signature": "patch_languageunderstanding_domain(domain_id, body)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "NluDomain",
        "required": "true"
      }
    ],
    "return": "NluDomain",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\nbody = PureCloudPlatformClientV2.NluDomain() # NluDomain | The updated NLU Domain.\n\ntry:\n    # Update an NLU Domain.\n    api_response = api_instance.patch_languageunderstanding_domain(domain_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->patch_languageunderstanding_domain: %s\\n\" % e)"
  },
  "patch_languageunderstanding_miner_draft": {
    "operationId": "patch_languageunderstanding_miner_draft",
    "functionName": "patch_languageunderstanding_miner_draft",
    "signature": "patch_languageunderstanding_miner_draft(miner_id, draft_id, body)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "draft_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DraftRequest",
        "required": "false"
      }
    ],
    "return": "Draft",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_id = 'miner_id_example' # str | Miner ID\ndraft_id = 'draft_id_example' # str | Draft ID\nbody = PureCloudPlatformClientV2.DraftRequest() # DraftRequest |  (optional)\n\ntry:\n    # Save information for the draft. Either topic draft or intent draft should be sent.\n    api_response = api_instance.patch_languageunderstanding_miner_draft(miner_id, draft_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->patch_languageunderstanding_miner_draft: %s\\n\" % e)"
  },
  "post_languageunderstanding_domain_feedback": {
    "operationId": "post_languageunderstanding_domain_feedback",
    "functionName": "post_languageunderstanding_domain_feedback",
    "signature": "post_languageunderstanding_domain_feedback(domain_id, body)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "NluFeedbackRequest",
        "required": "true"
      }
    ],
    "return": "NluFeedbackResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\nbody = PureCloudPlatformClientV2.NluFeedbackRequest() # NluFeedbackRequest | The Feedback to create.\n\ntry:\n    # Create feedback for the NLU Domain Version.\n    api_response = api_instance.post_languageunderstanding_domain_feedback(domain_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->post_languageunderstanding_domain_feedback: %s\\n\" % e)"
  },
  "post_languageunderstanding_domain_version_detect": {
    "operationId": "post_languageunderstanding_domain_version_detect",
    "functionName": "post_languageunderstanding_domain_version_detect",
    "signature": "post_languageunderstanding_domain_version_detect(domain_id, domain_version_id, body)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "domain_version_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "NluDetectionRequest",
        "required": "true"
      }
    ],
    "return": "NluDetectionResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\ndomain_version_id = 'domain_version_id_example' # str | ID of the NLU domain version.\nbody = PureCloudPlatformClientV2.NluDetectionRequest() # NluDetectionRequest | The input data to perform detection on.\n\ntry:\n    # Detect intent, entities, etc. in the submitted text using the specified NLU domain version.\n    api_response = api_instance.post_languageunderstanding_domain_version_detect(domain_id, domain_version_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->post_languageunderstanding_domain_version_detect: %s\\n\" % e)"
  },
  "post_languageunderstanding_domain_version_publish": {
    "operationId": "post_languageunderstanding_domain_version_publish",
    "functionName": "post_languageunderstanding_domain_version_publish",
    "signature": "post_languageunderstanding_domain_version_publish(domain_id, domain_version_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "domain_version_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "NluDomainVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\ndomain_version_id = 'domain_version_id_example' # str | ID of the NLU domain version.\n\ntry:\n    # Publish the draft NLU Domain Version.\n    api_response = api_instance.post_languageunderstanding_domain_version_publish(domain_id, domain_version_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->post_languageunderstanding_domain_version_publish: %s\\n\" % e)"
  },
  "post_languageunderstanding_domain_version_train": {
    "operationId": "post_languageunderstanding_domain_version_train",
    "functionName": "post_languageunderstanding_domain_version_train",
    "signature": "post_languageunderstanding_domain_version_train(domain_id, domain_version_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "domain_version_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "NluDomainVersionTrainingResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\ndomain_version_id = 'domain_version_id_example' # str | ID of the NLU domain version.\n\ntry:\n    # Train the draft NLU Domain Version.\n    api_response = api_instance.post_languageunderstanding_domain_version_train(domain_id, domain_version_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->post_languageunderstanding_domain_version_train: %s\\n\" % e)"
  },
  "post_languageunderstanding_domain_versions": {
    "operationId": "post_languageunderstanding_domain_versions",
    "functionName": "post_languageunderstanding_domain_versions",
    "signature": "post_languageunderstanding_domain_versions(domain_id, body, include_utterances)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "NluDomainVersion",
        "required": "true"
      },
      {
        "name": "include_utterances",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "NluDomainVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\nbody = PureCloudPlatformClientV2.NluDomainVersion() # NluDomainVersion | The NLU Domain Version to create.\ninclude_utterances = True # bool | Whether utterances for intent definition should be included when marshalling response. (optional)\n\ntry:\n    # Create an NLU Domain Version.\n    api_response = api_instance.post_languageunderstanding_domain_versions(domain_id, body, include_utterances=include_utterances)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->post_languageunderstanding_domain_versions: %s\\n\" % e)"
  },
  "post_languageunderstanding_domains": {
    "operationId": "post_languageunderstanding_domains",
    "functionName": "post_languageunderstanding_domains",
    "signature": "post_languageunderstanding_domains(body)",
    "parameters": [
      {
        "name": "body",
        "type": "NluDomain",
        "required": "true"
      }
    ],
    "return": "NluDomain",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nbody = PureCloudPlatformClientV2.NluDomain() # NluDomain | The NLU Domain to create.\n\ntry:\n    # Create an NLU Domain.\n    api_response = api_instance.post_languageunderstanding_domains(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->post_languageunderstanding_domains: %s\\n\" % e)"
  },
  "post_languageunderstanding_miner_drafts": {
    "operationId": "post_languageunderstanding_miner_drafts",
    "functionName": "post_languageunderstanding_miner_drafts",
    "signature": "post_languageunderstanding_miner_drafts(miner_id, body)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Draft",
        "required": "true"
      }
    ],
    "return": "Draft",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_id = 'miner_id_example' # str | Miner ID\nbody = PureCloudPlatformClientV2.Draft() # Draft | Details for creating draft resource\n\ntry:\n    # Create a new draft resource.\n    api_response = api_instance.post_languageunderstanding_miner_drafts(miner_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->post_languageunderstanding_miner_drafts: %s\\n\" % e)"
  },
  "post_languageunderstanding_miner_execute": {
    "operationId": "post_languageunderstanding_miner_execute",
    "functionName": "post_languageunderstanding_miner_execute",
    "signature": "post_languageunderstanding_miner_execute(miner_id, body)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MinerExecuteRequest",
        "required": "false"
      }
    ],
    "return": "Miner",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nminer_id = 'miner_id_example' # str | Miner ID\nbody = PureCloudPlatformClientV2.MinerExecuteRequest() # MinerExecuteRequest |  (optional)\n\ntry:\n    # Start the mining process. Specify date range pair with mediaType, queueIds, participantType for mining data from Genesys Cloud. Specify only uploadKey for mining through an external file.\n    api_response = api_instance.post_languageunderstanding_miner_execute(miner_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->post_languageunderstanding_miner_execute: %s\\n\" % e)"
  },
  "post_languageunderstanding_miners": {
    "operationId": "post_languageunderstanding_miners",
    "functionName": "post_languageunderstanding_miners",
    "signature": "post_languageunderstanding_miners(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Miner",
        "required": "true"
      }
    ],
    "return": "Miner",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\nbody = PureCloudPlatformClientV2.Miner() # Miner | Details for creating a new miner resource.\n\ntry:\n    # Create a unique miner.\n    api_response = api_instance.post_languageunderstanding_miners(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->post_languageunderstanding_miners: %s\\n\" % e)"
  },
  "put_languageunderstanding_domain_version": {
    "operationId": "put_languageunderstanding_domain_version",
    "functionName": "put_languageunderstanding_domain_version",
    "signature": "put_languageunderstanding_domain_version(domain_id, domain_version_id, body)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "domain_version_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "NluDomainVersion",
        "required": "true"
      }
    ],
    "return": "NluDomainVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguageUnderstandingApi();\ndomain_id = 'domain_id_example' # str | ID of the NLU domain.\ndomain_version_id = 'domain_version_id_example' # str | ID of the NLU domain version.\nbody = PureCloudPlatformClientV2.NluDomainVersion() # NluDomainVersion | The updated NLU Domain Version.\n\ntry:\n    # Update an NLU Domain Version.\n    api_response = api_instance.put_languageunderstanding_domain_version(domain_id, domain_version_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguageUnderstandingApi->put_languageunderstanding_domain_version: %s\\n\" % e)"
  },
  "delete_language": {
    "operationId": "delete_language",
    "functionName": "delete_language",
    "signature": "delete_language(language_id)",
    "parameters": [
      {
        "name": "language_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguagesApi();\nlanguage_id = 'language_id_example' # str | Language ID\n\ntry:\n    # Delete Language (Deprecated)\n    api_instance.delete_language(language_id)\nexcept ApiException as e:\n    print(\"Exception when calling LanguagesApi->delete_language: %s\\n\" % e)"
  },
  "get_language": {
    "operationId": "get_language",
    "functionName": "get_language",
    "signature": "get_language(language_id)",
    "parameters": [
      {
        "name": "language_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Language",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguagesApi();\nlanguage_id = 'language_id_example' # str | Language ID\n\ntry:\n    # Get Language (Deprecated)\n    api_response = api_instance.get_language(language_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguagesApi->get_language: %s\\n\" % e)"
  },
  "get_languages": {
    "operationId": "get_languages",
    "functionName": "get_languages",
    "signature": "get_languages(page_size, page_number, sort_order, name)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "LanguageEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguagesApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''ASC'' # str | Ascending or descending sort order (optional) (default to 'ASC')\nname = 'name_example' # str | Name (optional)\n\ntry:\n    # Get the list of supported languages. (Deprecated)\n    api_response = api_instance.get_languages(page_size=page_size, page_number=page_number, sort_order=sort_order, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguagesApi->get_languages: %s\\n\" % e)"
  },
  "get_languages_translations": {
    "operationId": "get_languages_translations",
    "functionName": "get_languages_translations",
    "signature": "get_languages_translations()",
    "return": "AvailableTranslations",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguagesApi();\n\ntry:\n    # Get all available languages for translation\n    api_response = api_instance.get_languages_translations()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguagesApi->get_languages_translations: %s\\n\" % e)"
  },
  "get_languages_translations_builtin": {
    "operationId": "get_languages_translations_builtin",
    "functionName": "get_languages_translations_builtin",
    "signature": "get_languages_translations_builtin(language)",
    "parameters": [
      {
        "name": "language",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "dict(str, object)",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguagesApi();\nlanguage = 'language_example' # str | The language of the builtin translation to retrieve\n\ntry:\n    # Get the builtin translation for a language\n    api_response = api_instance.get_languages_translations_builtin(language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguagesApi->get_languages_translations_builtin: %s\\n\" % e)"
  },
  "get_languages_translations_organization": {
    "operationId": "get_languages_translations_organization",
    "functionName": "get_languages_translations_organization",
    "signature": "get_languages_translations_organization(language)",
    "parameters": [
      {
        "name": "language",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "dict(str, object)",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguagesApi();\nlanguage = 'language_example' # str | The language of the translation to retrieve for the organization\n\ntry:\n    # Get effective translation for an organization by language\n    api_response = api_instance.get_languages_translations_organization(language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguagesApi->get_languages_translations_organization: %s\\n\" % e)"
  },
  "get_languages_translations_user": {
    "operationId": "get_languages_translations_user",
    "functionName": "get_languages_translations_user",
    "signature": "get_languages_translations_user(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "dict(str, object)",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguagesApi();\nuser_id = 'user_id_example' # str | The user id\n\ntry:\n    # Get effective language translation for a user\n    api_response = api_instance.get_languages_translations_user(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguagesApi->get_languages_translations_user: %s\\n\" % e)"
  },
  "post_languages": {
    "operationId": "post_languages",
    "functionName": "post_languages",
    "signature": "post_languages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Language",
        "required": "true"
      }
    ],
    "return": "Language",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LanguagesApi();\nbody = PureCloudPlatformClientV2.Language() # Language | Language\n\ntry:\n    # Create Language (Deprecated)\n    api_response = api_instance.post_languages(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LanguagesApi->post_languages: %s\\n\" % e)"
  },
  "delete_learning_assignment": {
    "operationId": "delete_learning_assignment",
    "functionName": "delete_learning_assignment",
    "signature": "delete_learning_assignment(assignment_id)",
    "parameters": [
      {
        "name": "assignment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nassignment_id = 'assignment_id_example' # str | The Learning Assignment ID\n\ntry:\n    # Delete a learning assignment\n    api_instance.delete_learning_assignment(assignment_id)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->delete_learning_assignment: %s\\n\" % e)"
  },
  "delete_learning_module": {
    "operationId": "delete_learning_module",
    "functionName": "delete_learning_module",
    "signature": "delete_learning_module(module_id)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | The ID of the learning module\n\ntry:\n    # Delete a learning module\n    api_instance.delete_learning_module(module_id)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->delete_learning_module: %s\\n\" % e)"
  },
  "get_learning_assignment": {
    "operationId": "get_learning_assignment",
    "functionName": "get_learning_assignment",
    "signature": "get_learning_assignment(assignment_id, expand)",
    "parameters": [
      {
        "name": "assignment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LearningAssignment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nassignment_id = 'assignment_id_example' # str | The ID of Learning Assignment\nexpand = ['expand_example'] # list[str] | Fields to expand in response (optional)\n\ntry:\n    # Get Learning Assignment\n    api_response = api_instance.get_learning_assignment(assignment_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->get_learning_assignment: %s\\n\" % e)"
  },
  "get_learning_assignment_step": {
    "operationId": "get_learning_assignment_step",
    "functionName": "get_learning_assignment_step",
    "signature": "get_learning_assignment_step(assignment_id, step_id, shareable_content_object_id, expand)",
    "parameters": [
      {
        "name": "assignment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "step_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "shareable_content_object_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LearningAssignmentStep",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nassignment_id = 'assignment_id_example' # str | The ID of Learning Assignment\nstep_id = 'step_id_example' # str | The ID of Learning Assignment Step\nshareable_content_object_id = 'shareable_content_object_id_example' # str | The ID of SCO to load (optional)\nexpand = ['expand_example'] # list[str] | Fields to expand in response (optional)\n\ntry:\n    # Get Learning Assignment Step\n    api_response = api_instance.get_learning_assignment_step(assignment_id, step_id, shareable_content_object_id=shareable_content_object_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->get_learning_assignment_step: %s\\n\" % e)"
  },
  "get_learning_assignments": {
    "operationId": "get_learning_assignments",
    "functionName": "get_learning_assignments",
    "signature": "get_learning_assignments(module_id, interval, completion_interval, overdue, page_size, page_number, pcPass, min_percentage_score, max_percentage_score, sort_order, sort_by, user_id, types, states, expand)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "completion_interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pcPass",
        "type": "str",
        "required": "false"
      },
      {
        "name": "min_percentage_score",
        "type": "float",
        "required": "false"
      },
      {
        "name": "max_percentage_score",
        "type": "float",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "user_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "types",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "states",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LearningAssignmentsDomainEntity",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | Specifies the ID of the learning module. Fetch assignments for learning module ID (optional)\ninterval = 'interval_example' # str | Specifies the range of dueDates to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\ncompletion_interval = 'completion_interval_example' # str | Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\noverdue = ''Any'' # str | Specifies if only the non-overdue (overdue is \\\"False\\\") or overdue (overdue is \\\"True\\\") assignments are returned. If overdue is \\\"Any\\\" or if the overdue parameter is not supplied, all assignments are returned (optional) (default to 'Any')\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\npcPass = ''Any'' # str | Specifies if only the failed (pass is \\\"False\\\") or passed (pass is \\\"True\\\") assignments (completed with assessment)are returned. If pass is \\\"Any\\\" or if the pass parameter is not supplied, all assignments are returned (optional) (default to 'Any')\nmin_percentage_score = 3.4 # float | The minimum assessment score for an assignment (completed with assessment) to be included in the results (inclusive) (optional)\nmax_percentage_score = 3.4 # float | The maximum assessment score for an assignment (completed with assessment) to be included in the results (inclusive) (optional)\nsort_order = ''Desc'' # str | Specifies result set sort order; if not specified, default sort order is descending (Desc) (optional) (default to 'Desc')\nsort_by = 'sort_by_example' # str | Specifies which field to sort the results by, default sort is by recommendedCompletionDate (optional)\nuser_id = ['user_id_example'] # list[str] | Specifies the list of user IDs to be queried, up to 100 user IDs. (optional)\ntypes = ['types_example'] # list[str] | Specifies the module types to filter by (optional)\nstates = ['states_example'] # list[str] | Specifies the assignment states to filter by (optional)\nexpand = ['expand_example'] # list[str] | Specifies the expand option for returning additional information (optional)\n\ntry:\n    # List of Learning module Assignments\n    api_response = api_instance.get_learning_assignments(module_id=module_id, interval=interval, completion_interval=completion_interval, overdue=overdue, page_size=page_size, page_number=page_number, pcPass=pcPass, min_percentage_score=min_percentage_score, max_percentage_score=max_percentage_score, sort_order=sort_order, sort_by=sort_by, user_id=user_id, types=types, states=states, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->get_learning_assignments: %s\\n\" % e)"
  },
  "get_learning_assignments_me": {
    "operationId": "get_learning_assignments_me",
    "functionName": "get_learning_assignments_me",
    "signature": "get_learning_assignments_me(module_id, interval, completion_interval, overdue, page_size, page_number, pcPass, min_percentage_score, max_percentage_score, sort_order, sort_by, types, states, expand)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "completion_interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pcPass",
        "type": "str",
        "required": "false"
      },
      {
        "name": "min_percentage_score",
        "type": "float",
        "required": "false"
      },
      {
        "name": "max_percentage_score",
        "type": "float",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "types",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "states",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LearningAssignmentsDomainEntity",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | Specifies the ID of the learning module. Fetch assignments for learning module ID (optional)\ninterval = 'interval_example' # str | Specifies the range of dueDates to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\ncompletion_interval = 'completion_interval_example' # str | Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\noverdue = ''Any'' # str | Specifies if only the non-overdue (overdue is \\\"False\\\") or overdue (overdue is \\\"True\\\") assignments are returned. If overdue is \\\"Any\\\" or if the overdue parameter is not supplied, all assignments are returned (optional) (default to 'Any')\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\npcPass = ''Any'' # str | Specifies if only the failed (pass is \\\"False\\\") or passed (pass is \\\"True\\\") assignments (completed with assessment)are returned. If pass is \\\"Any\\\" or if the pass parameter is not supplied, all assignments are returned (optional) (default to 'Any')\nmin_percentage_score = 3.4 # float | The minimum assessment score for an assignment (completed with assessment) to be included in the results (inclusive) (optional)\nmax_percentage_score = 3.4 # float | The maximum assessment score for an assignment (completed with assessment) to be included in the results (inclusive) (optional)\nsort_order = ''Desc'' # str | Specifies result set sort order; if not specified, default sort order is descending (Desc) (optional) (default to 'Desc')\nsort_by = 'sort_by_example' # str | Specifies which field to sort the results by, default sort is by recommendedCompletionDate (optional)\ntypes = ['types_example'] # list[str] | Specifies the module types to filter by (optional)\nstates = ['states_example'] # list[str] | Specifies the assignment states to filter by (optional)\nexpand = ['expand_example'] # list[str] | Specifies the expand option for returning additional information (optional)\n\ntry:\n    # List of Learning Assignments assigned to current user\n    api_response = api_instance.get_learning_assignments_me(module_id=module_id, interval=interval, completion_interval=completion_interval, overdue=overdue, page_size=page_size, page_number=page_number, pcPass=pcPass, min_percentage_score=min_percentage_score, max_percentage_score=max_percentage_score, sort_order=sort_order, sort_by=sort_by, types=types, states=states, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->get_learning_assignments_me: %s\\n\" % e)"
  },
  "get_learning_module": {
    "operationId": "get_learning_module",
    "functionName": "get_learning_module",
    "signature": "get_learning_module(module_id, expand)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LearningModule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | The ID of the learning module\nexpand = ['expand_example'] # list[str] | Fields to expand in response(case insensitive) (optional)\n\ntry:\n    # Get a learning module\n    api_response = api_instance.get_learning_module(module_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->get_learning_module: %s\\n\" % e)"
  },
  "get_learning_module_job": {
    "operationId": "get_learning_module_job",
    "functionName": "get_learning_module_job",
    "signature": "get_learning_module_job(module_id, job_id)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LearningModuleJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | The ID of the learning module\njob_id = 'job_id_example' # str | The ID of the learning module job\n\ntry:\n    # Get a specific Learning Module job status\n    api_response = api_instance.get_learning_module_job(module_id, job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->get_learning_module_job: %s\\n\" % e)"
  },
  "get_learning_module_preview": {
    "operationId": "get_learning_module_preview",
    "functionName": "get_learning_module_preview",
    "signature": "get_learning_module_preview(module_id)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LearningModulePreviewGetResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | The ID of the learning module\n\ntry:\n    # Get a learning module preview\n    api_response = api_instance.get_learning_module_preview(module_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->get_learning_module_preview: %s\\n\" % e)"
  },
  "get_learning_module_rule": {
    "operationId": "get_learning_module_rule",
    "functionName": "get_learning_module_rule",
    "signature": "get_learning_module_rule(module_id)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LearningModuleRule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | The ID of the learning module\n\ntry:\n    # Get a learning module rule\n    api_response = api_instance.get_learning_module_rule(module_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->get_learning_module_rule: %s\\n\" % e)"
  },
  "get_learning_module_version": {
    "operationId": "get_learning_module_version",
    "functionName": "get_learning_module_version",
    "signature": "get_learning_module_version(module_id, version_id, expand)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LearningModule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | The ID of the learning module\nversion_id = 'version_id_example' # str | The version of learning module\nexpand = ['expand_example'] # list[str] | Fields to expand in response(case insensitive) (optional)\n\ntry:\n    # Get specific version of a published module\n    api_response = api_instance.get_learning_module_version(module_id, version_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->get_learning_module_version: %s\\n\" % e)"
  },
  "get_learning_modules": {
    "operationId": "get_learning_modules",
    "functionName": "get_learning_modules",
    "signature": "get_learning_modules(is_archived, types, page_size, page_number, sort_order, sort_by, search_term, expand, is_published, statuses, external_ids)",
    "parameters": [
      {
        "name": "is_archived",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "types",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "search_term",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "is_published",
        "type": "str",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "external_ids",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LearningModulesDomainEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nis_archived = False # bool | Archive status (optional) (default to False)\ntypes = ['types_example'] # list[str] | Specifies the module types. (optional)\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''ascending'' # str | Sort order (optional) (default to 'ascending')\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nsearch_term = 'search_term_example' # str | Search Term (searchable by name) (optional)\nexpand = ['expand_example'] # list[str] | Fields to expand in response(case insensitive) (optional)\nis_published = ''Any'' # str | Specifies if only the Unpublished (isPublished is \\\"False\\\") or Published (isPublished is \\\"True\\\") modules are returned. If isPublished is \\\"Any\\\" or omitted, both types are returned (optional) (default to 'Any')\nstatuses = ['statuses_example'] # list[str] | Specifies the module statuses to filter by (optional)\nexternal_ids = ['external_ids_example'] # list[str] | Specifies the module external IDs to filter by. Only one ID is allowed (optional)\n\ntry:\n    # Get all learning modules of an organization\n    api_response = api_instance.get_learning_modules(is_archived=is_archived, types=types, page_size=page_size, page_number=page_number, sort_order=sort_order, sort_by=sort_by, search_term=search_term, expand=expand, is_published=is_published, statuses=statuses, external_ids=external_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->get_learning_modules: %s\\n\" % e)"
  },
  "get_learning_modules_assignments": {
    "operationId": "get_learning_modules_assignments",
    "functionName": "get_learning_modules_assignments",
    "signature": "get_learning_modules_assignments(user_ids, page_size, page_number, search_term, overdue, assignment_states, expand)",
    "parameters": [
      {
        "name": "user_ids",
        "type": "list[str]",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "search_term",
        "type": "str",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "str",
        "required": "false"
      },
      {
        "name": "assignment_states",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "AssignedLearningModuleDomainEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nuser_ids = ['user_ids_example'] # list[str] | The IDs of the users to include\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsearch_term = 'search_term_example' # str | Search Term (searches by name and description) (optional)\noverdue = ''Any'' # str | Specifies if only modules with overdue/not overdue (overdue is \\\"True\\\" or \\\"False\\\") assignments are returned. If overdue is \\\"Any\\\" or omitted, both are returned and can including modules that are unassigned. (optional) (default to 'Any')\nassignment_states = ['assignment_states_example'] # list[str] | Specifies the assignment states to return. (optional)\nexpand = ['expand_example'] # list[str] | Fields to expand in response(case insensitive) (optional)\n\ntry:\n    # Get all learning modules of an organization including assignments for a specific user\n    api_response = api_instance.get_learning_modules_assignments(user_ids, page_size=page_size, page_number=page_number, search_term=search_term, overdue=overdue, assignment_states=assignment_states, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->get_learning_modules_assignments: %s\\n\" % e)"
  },
  "get_learning_modules_coverart_cover_art_id": {
    "operationId": "get_learning_modules_coverart_cover_art_id",
    "functionName": "get_learning_modules_coverart_cover_art_id",
    "signature": "get_learning_modules_coverart_cover_art_id(cover_art_id)",
    "parameters": [
      {
        "name": "cover_art_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LearningModuleCoverArtResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\ncover_art_id = 'cover_art_id_example' # str | Key identifier for the cover art\n\ntry:\n    # Get a specific Learning Module cover art using ID\n    api_response = api_instance.get_learning_modules_coverart_cover_art_id(cover_art_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->get_learning_modules_coverart_cover_art_id: %s\\n\" % e)"
  },
  "get_learning_scorm_scorm_id": {
    "operationId": "get_learning_scorm_scorm_id",
    "functionName": "get_learning_scorm_scorm_id",
    "signature": "get_learning_scorm_scorm_id(scorm_id)",
    "parameters": [
      {
        "name": "scorm_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LearningScormResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nscorm_id = 'scorm_id_example' # str | The ID of the SCORM package\n\ntry:\n    # Get Learning SCORM Result\n    api_response = api_instance.get_learning_scorm_scorm_id(scorm_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->get_learning_scorm_scorm_id: %s\\n\" % e)"
  },
  "patch_learning_assignment": {
    "operationId": "patch_learning_assignment",
    "functionName": "patch_learning_assignment",
    "signature": "patch_learning_assignment(assignment_id, body)",
    "parameters": [
      {
        "name": "assignment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningAssignmentUpdate",
        "required": "false"
      }
    ],
    "return": "LearningAssignment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nassignment_id = 'assignment_id_example' # str | The ID of Learning Assignment\nbody = PureCloudPlatformClientV2.LearningAssignmentUpdate() # LearningAssignmentUpdate | The Learning Assignment to be updated (optional)\n\ntry:\n    # Update Learning Assignment\n    api_response = api_instance.patch_learning_assignment(assignment_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->patch_learning_assignment: %s\\n\" % e)"
  },
  "patch_learning_assignment_reschedule": {
    "operationId": "patch_learning_assignment_reschedule",
    "functionName": "patch_learning_assignment_reschedule",
    "signature": "patch_learning_assignment_reschedule(assignment_id, body)",
    "parameters": [
      {
        "name": "assignment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningAssignmentReschedule",
        "required": "false"
      }
    ],
    "return": "LearningAssignment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nassignment_id = 'assignment_id_example' # str | The ID of Learning Assignment\nbody = PureCloudPlatformClientV2.LearningAssignmentReschedule() # LearningAssignmentReschedule | The Learning assignment reschedule model (optional)\n\ntry:\n    # Reschedule Learning Assignment\n    api_response = api_instance.patch_learning_assignment_reschedule(assignment_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->patch_learning_assignment_reschedule: %s\\n\" % e)"
  },
  "patch_learning_assignment_step": {
    "operationId": "patch_learning_assignment_step",
    "functionName": "patch_learning_assignment_step",
    "signature": "patch_learning_assignment_step(assignment_id, step_id, body)",
    "parameters": [
      {
        "name": "assignment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "step_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningAssignmentStep",
        "required": "false"
      }
    ],
    "return": "LearningAssignmentStep",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nassignment_id = 'assignment_id_example' # str | The ID of Learning Assignment\nstep_id = 'step_id_example' # str | The ID of Learning Assignment Step\nbody = PureCloudPlatformClientV2.LearningAssignmentStep() # LearningAssignmentStep | The Learning Assignment Step to be updated (optional)\n\ntry:\n    # Update Learning Assignment Step\n    api_response = api_instance.patch_learning_assignment_step(assignment_id, step_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->patch_learning_assignment_step: %s\\n\" % e)"
  },
  "patch_learning_module_user_assignments": {
    "operationId": "patch_learning_module_user_assignments",
    "functionName": "patch_learning_module_user_assignments",
    "signature": "patch_learning_module_user_assignments(module_id, user_id, body)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningAssignmentExternalUpdate",
        "required": "true"
      }
    ],
    "return": "LearningAssignment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | Key identifier for the module\nuser_id = 'user_id_example' # str | Key identifier for the user\nbody = PureCloudPlatformClientV2.LearningAssignmentExternalUpdate() # LearningAssignmentExternalUpdate | The learning request for updating the assignment\n\ntry:\n    # Update an external assignment for a specific user\n    api_response = api_instance.patch_learning_module_user_assignments(module_id, user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->patch_learning_module_user_assignments: %s\\n\" % e)"
  },
  "post_learning_assessments_scoring": {
    "operationId": "post_learning_assessments_scoring",
    "functionName": "post_learning_assessments_scoring",
    "signature": "post_learning_assessments_scoring(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LearningAssessmentScoringRequest",
        "required": "true"
      }
    ],
    "return": "AssessmentScoringSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nbody = PureCloudPlatformClientV2.LearningAssessmentScoringRequest() # LearningAssessmentScoringRequest | Assessment form and answers to score\n\ntry:\n    # Score learning assessment for preview\n    api_response = api_instance.post_learning_assessments_scoring(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->post_learning_assessments_scoring: %s\\n\" % e)"
  },
  "post_learning_assignment_reassign": {
    "operationId": "post_learning_assignment_reassign",
    "functionName": "post_learning_assignment_reassign",
    "signature": "post_learning_assignment_reassign(assignment_id)",
    "parameters": [
      {
        "name": "assignment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LearningAssignment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nassignment_id = 'assignment_id_example' # str | The Learning Assignment ID\n\ntry:\n    # Reassign Learning Assignment\n    api_response = api_instance.post_learning_assignment_reassign(assignment_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->post_learning_assignment_reassign: %s\\n\" % e)"
  },
  "post_learning_assignment_reset": {
    "operationId": "post_learning_assignment_reset",
    "functionName": "post_learning_assignment_reset",
    "signature": "post_learning_assignment_reset(assignment_id)",
    "parameters": [
      {
        "name": "assignment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LearningAssignment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nassignment_id = 'assignment_id_example' # str | The Learning Assignment ID\n\ntry:\n    # Reset Learning Assignment\n    api_response = api_instance.post_learning_assignment_reset(assignment_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->post_learning_assignment_reset: %s\\n\" % e)"
  },
  "post_learning_assignments": {
    "operationId": "post_learning_assignments",
    "functionName": "post_learning_assignments",
    "signature": "post_learning_assignments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LearningAssignmentCreate",
        "required": "false"
      }
    ],
    "return": "LearningAssignment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nbody = PureCloudPlatformClientV2.LearningAssignmentCreate() # LearningAssignmentCreate | The Learning Assignment to be created (optional)\n\ntry:\n    # Create Learning Assignment\n    api_response = api_instance.post_learning_assignments(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->post_learning_assignments: %s\\n\" % e)"
  },
  "post_learning_assignments_aggregates_query": {
    "operationId": "post_learning_assignments_aggregates_query",
    "functionName": "post_learning_assignments_aggregates_query",
    "signature": "post_learning_assignments_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LearningAssignmentAggregateParam",
        "required": "true"
      }
    ],
    "return": "LearningAssignmentAggregateResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nbody = PureCloudPlatformClientV2.LearningAssignmentAggregateParam() # LearningAssignmentAggregateParam | Aggregate Request\n\ntry:\n    # Retrieve aggregated assignment data\n    api_response = api_instance.post_learning_assignments_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->post_learning_assignments_aggregates_query: %s\\n\" % e)"
  },
  "post_learning_assignments_bulkadd": {
    "operationId": "post_learning_assignments_bulkadd",
    "functionName": "post_learning_assignments_bulkadd",
    "signature": "post_learning_assignments_bulkadd(body)",
    "parameters": [
      {
        "name": "body",
        "type": "list[LearningAssignmentItem]",
        "required": "false"
      }
    ],
    "return": "LearningAssignmentBulkAddResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nbody = [PureCloudPlatformClientV2.LearningAssignmentItem()] # list[LearningAssignmentItem] | The learning assignments to be created (optional)\n\ntry:\n    # Add multiple learning assignments\n    api_response = api_instance.post_learning_assignments_bulkadd(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->post_learning_assignments_bulkadd: %s\\n\" % e)"
  },
  "post_learning_assignments_bulkremove": {
    "operationId": "post_learning_assignments_bulkremove",
    "functionName": "post_learning_assignments_bulkremove",
    "signature": "post_learning_assignments_bulkremove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LearningAssignmentBulkRemoveResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nbody = ['body_example'] # list[str] | The IDs of the learning assignments to be removed (optional)\n\ntry:\n    # Remove multiple Learning Assignments\n    api_response = api_instance.post_learning_assignments_bulkremove(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->post_learning_assignments_bulkremove: %s\\n\" % e)"
  },
  "post_learning_module_jobs": {
    "operationId": "post_learning_module_jobs",
    "functionName": "post_learning_module_jobs",
    "signature": "post_learning_module_jobs(module_id, body)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningModuleJobRequest",
        "required": "true"
      }
    ],
    "return": "LearningModuleJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | The ID of the learning module\nbody = PureCloudPlatformClientV2.LearningModuleJobRequest() # LearningModuleJobRequest | The learning module job request\n\ntry:\n    # Starts a specified operation on learning module\n    api_response = api_instance.post_learning_module_jobs(module_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->post_learning_module_jobs: %s\\n\" % e)"
  },
  "post_learning_module_publish": {
    "operationId": "post_learning_module_publish",
    "functionName": "post_learning_module_publish",
    "signature": "post_learning_module_publish(module_id, body)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningModulePublishRequest",
        "required": "false"
      }
    ],
    "return": "LearningModulePublishResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | The ID of the learning module\nbody = PureCloudPlatformClientV2.LearningModulePublishRequest() # LearningModulePublishRequest | The request body (optional)\n\ntry:\n    # Publish a Learning module\n    api_response = api_instance.post_learning_module_publish(module_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->post_learning_module_publish: %s\\n\" % e)"
  },
  "post_learning_modules": {
    "operationId": "post_learning_modules",
    "functionName": "post_learning_modules",
    "signature": "post_learning_modules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LearningModuleRequest",
        "required": "true"
      }
    ],
    "return": "LearningModule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nbody = PureCloudPlatformClientV2.LearningModuleRequest() # LearningModuleRequest | The learning module to be created\n\ntry:\n    # Create a new learning module\n    api_response = api_instance.post_learning_modules(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->post_learning_modules: %s\\n\" % e)"
  },
  "post_learning_rules_query": {
    "operationId": "post_learning_rules_query",
    "functionName": "post_learning_rules_query",
    "signature": "post_learning_rules_query(page_size, page_number, body)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningAssignmentUserQuery",
        "required": "true"
      }
    ],
    "return": "LearningAssignmentUserListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\npage_size = 50 # int | Page size (default to 50)\npage_number = 1 # int | Page number (default to 1)\nbody = PureCloudPlatformClientV2.LearningAssignmentUserQuery() # LearningAssignmentUserQuery | The learning module rule to fetch users\n\ntry:\n    # Get users for learning module rule\n    api_response = api_instance.post_learning_rules_query(page_size, page_number, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->post_learning_rules_query: %s\\n\" % e)"
  },
  "post_learning_scheduleslots_query": {
    "operationId": "post_learning_scheduleslots_query",
    "functionName": "post_learning_scheduleslots_query",
    "signature": "post_learning_scheduleslots_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LearningScheduleSlotsQueryRequest",
        "required": "true"
      }
    ],
    "return": "LearningScheduleSlotsQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nbody = PureCloudPlatformClientV2.LearningScheduleSlotsQueryRequest() # LearningScheduleSlotsQueryRequest | The slot search request\n\ntry:\n    # Get list of possible slots where a learning activity can be scheduled.\n    api_response = api_instance.post_learning_scheduleslots_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->post_learning_scheduleslots_query: %s\\n\" % e)"
  },
  "post_learning_scorm": {
    "operationId": "post_learning_scorm",
    "functionName": "post_learning_scorm",
    "signature": "post_learning_scorm(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LearningScormUploadRequest",
        "required": "false"
      }
    ],
    "return": "LearningScormUploadResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nbody = PureCloudPlatformClientV2.LearningScormUploadRequest() # LearningScormUploadRequest | The SCORM package to be uploaded (optional)\n\ntry:\n    # Create a SCORM package upload request\n    api_response = api_instance.post_learning_scorm(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->post_learning_scorm: %s\\n\" % e)"
  },
  "put_learning_module": {
    "operationId": "put_learning_module",
    "functionName": "put_learning_module",
    "signature": "put_learning_module(module_id, body)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningModuleRequest",
        "required": "true"
      }
    ],
    "return": "LearningModule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | The ID of the learning module\nbody = PureCloudPlatformClientV2.LearningModuleRequest() # LearningModuleRequest | The learning module to be updated\n\ntry:\n    # Update a learning module\n    api_response = api_instance.put_learning_module(module_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->put_learning_module: %s\\n\" % e)"
  },
  "put_learning_module_preview": {
    "operationId": "put_learning_module_preview",
    "functionName": "put_learning_module_preview",
    "signature": "put_learning_module_preview(module_id, body)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningModulePreviewUpdateRequest",
        "required": "true"
      }
    ],
    "return": "LearningModulePreviewUpdateResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | The ID of the learning module\nbody = PureCloudPlatformClientV2.LearningModulePreviewUpdateRequest() # LearningModulePreviewUpdateRequest | The learning module to be updated\n\ntry:\n    # Update a learning module preview\n    api_response = api_instance.put_learning_module_preview(module_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->put_learning_module_preview: %s\\n\" % e)"
  },
  "put_learning_module_rule": {
    "operationId": "put_learning_module_rule",
    "functionName": "put_learning_module_rule",
    "signature": "put_learning_module_rule(module_id, body)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningModuleRule",
        "required": "true"
      }
    ],
    "return": "LearningModuleRule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LearningApi();\nmodule_id = 'module_id_example' # str | The ID of the learning module\nbody = PureCloudPlatformClientV2.LearningModuleRule() # LearningModuleRule | The learning module rule to be updated\n\ntry:\n    # Update a learning module rule\n    api_response = api_instance.put_learning_module_rule(module_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LearningApi->put_learning_module_rule: %s\\n\" % e)"
  },
  "get_license_definition": {
    "operationId": "get_license_definition",
    "functionName": "get_license_definition",
    "signature": "get_license_definition(license_id)",
    "parameters": [
      {
        "name": "license_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LicenseDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LicenseApi();\nlicense_id = 'license_id_example' # str | ID\n\ntry:\n    # Get PureCloud license definition.\n    api_response = api_instance.get_license_definition(license_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LicenseApi->get_license_definition: %s\\n\" % e)"
  },
  "get_license_definitions": {
    "operationId": "get_license_definitions",
    "functionName": "get_license_definitions",
    "signature": "get_license_definitions()",
    "return": "list[LicenseDefinition]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LicenseApi();\n\ntry:\n    # Get all PureCloud license definitions available for the organization.\n    api_response = api_instance.get_license_definitions()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LicenseApi->get_license_definitions: %s\\n\" % e)"
  },
  "get_license_toggle": {
    "operationId": "get_license_toggle",
    "functionName": "get_license_toggle",
    "signature": "get_license_toggle(feature_name)",
    "parameters": [
      {
        "name": "feature_name",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LicenseOrgToggle",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LicenseApi();\nfeature_name = 'feature_name_example' # str | featureName\n\ntry:\n    # Deprecated - no alternative required. This operation will always return 'true' for requested toggles\n    api_response = api_instance.get_license_toggle(feature_name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LicenseApi->get_license_toggle: %s\\n\" % e)"
  },
  "get_license_user": {
    "operationId": "get_license_user",
    "functionName": "get_license_user",
    "signature": "get_license_user(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LicenseUser",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LicenseApi();\nuser_id = 'user_id_example' # str | ID\n\ntry:\n    # Get licenses for specified user.\n    api_response = api_instance.get_license_user(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LicenseApi->get_license_user: %s\\n\" % e)"
  },
  "get_license_users": {
    "operationId": "get_license_users",
    "functionName": "get_license_users",
    "signature": "get_license_users(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "UserLicensesEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LicenseApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a page of users and their licenses\n    api_response = api_instance.get_license_users(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LicenseApi->get_license_users: %s\\n\" % e)"
  },
  "post_license_infer": {
    "operationId": "post_license_infer",
    "functionName": "post_license_infer",
    "signature": "post_license_infer(body)",
    "parameters": [
      {
        "name": "body",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "list[str]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LicenseApi();\nbody = ['body_example'] # list[str] | The roleIds to use while inferring licenses (optional)\n\ntry:\n    # Get a list of licenses inferred based on a list of roleIds\n    api_response = api_instance.post_license_infer(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LicenseApi->post_license_infer: %s\\n\" % e)"
  },
  "post_license_organization": {
    "operationId": "post_license_organization",
    "functionName": "post_license_organization",
    "signature": "post_license_organization(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LicenseBatchAssignmentRequest",
        "required": "false"
      }
    ],
    "return": "list[LicenseUpdateStatus]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LicenseApi();\nbody = PureCloudPlatformClientV2.LicenseBatchAssignmentRequest() # LicenseBatchAssignmentRequest | The license assignments to update. (optional)\n\ntry:\n    # Update the organization's license assignments in a batch.\n    api_response = api_instance.post_license_organization(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LicenseApi->post_license_organization: %s\\n\" % e)"
  },
  "post_license_toggle": {
    "operationId": "post_license_toggle",
    "functionName": "post_license_toggle",
    "signature": "post_license_toggle(feature_name)",
    "parameters": [
      {
        "name": "feature_name",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LicenseOrgToggle",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LicenseApi();\nfeature_name = 'feature_name_example' # str | featureName\n\ntry:\n    # Deprecated. No alternative required - this endpoint has no effect\n    api_response = api_instance.post_license_toggle(feature_name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LicenseApi->post_license_toggle: %s\\n\" % e)"
  },
  "post_license_users": {
    "operationId": "post_license_users",
    "functionName": "post_license_users",
    "signature": "post_license_users(body)",
    "parameters": [
      {
        "name": "body",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "dict(str, object)",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LicenseApi();\nbody = ['body_example'] # list[str] | The user IDs to fetch. (optional)\n\ntry:\n    # Fetch user licenses in a batch.\n    api_response = api_instance.post_license_users(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LicenseApi->post_license_users: %s\\n\" % e)"
  },
  "delete_location": {
    "operationId": "delete_location",
    "functionName": "delete_location",
    "signature": "delete_location(location_id)",
    "parameters": [
      {
        "name": "location_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LocationsApi();\nlocation_id = 'location_id_example' # str | Location ID\n\ntry:\n    # Delete a location\n    api_instance.delete_location(location_id)\nexcept ApiException as e:\n    print(\"Exception when calling LocationsApi->delete_location: %s\\n\" % e)"
  },
  "get_location": {
    "operationId": "get_location",
    "functionName": "get_location",
    "signature": "get_location(location_id, expand)",
    "parameters": [
      {
        "name": "location_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LocationDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LocationsApi();\nlocation_id = 'location_id_example' # str | Location ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Get Location by ID.\n    api_response = api_instance.get_location(location_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LocationsApi->get_location: %s\\n\" % e)"
  },
  "get_location_sublocations": {
    "operationId": "get_location_sublocations",
    "functionName": "get_location_sublocations",
    "signature": "get_location_sublocations(location_id)",
    "parameters": [
      {
        "name": "location_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LocationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LocationsApi();\nlocation_id = 'location_id_example' # str | Location ID\n\ntry:\n    # Get sublocations for location ID.\n    api_response = api_instance.get_location_sublocations(location_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LocationsApi->get_location_sublocations: %s\\n\" % e)"
  },
  "get_locations": {
    "operationId": "get_locations",
    "functionName": "get_locations",
    "signature": "get_locations(page_size, page_number, id, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "LocationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LocationsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nid = ['id_example'] # list[str] | id (optional)\nsort_order = 'sort_order_example' # str | Sort order (optional)\n\ntry:\n    # Get a list of all locations.\n    api_response = api_instance.get_locations(page_size=page_size, page_number=page_number, id=id, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LocationsApi->get_locations: %s\\n\" % e)"
  },
  "get_locations_search": {
    "operationId": "get_locations_search",
    "functionName": "get_locations_search",
    "signature": "get_locations_search(q64, expand)",
    "parameters": [
      {
        "name": "q64",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LocationsSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SearchApi();\nq64 = 'q64_example' # str | q64\nexpand = ['expand_example'] # list[str] | Provides more details about a specified resource (optional)\n\ntry:\n    # Search locations using the q64 value returned from a previous search\n    api_response = api_instance.get_locations_search(q64, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SearchApi->get_locations_search: %s\\n\" % e)"
  },
  "patch_location": {
    "operationId": "patch_location",
    "functionName": "patch_location",
    "signature": "patch_location(location_id, body)",
    "parameters": [
      {
        "name": "location_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LocationUpdateDefinition",
        "required": "true"
      }
    ],
    "return": "LocationDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LocationsApi();\nlocation_id = 'location_id_example' # str | Location ID\nbody = PureCloudPlatformClientV2.LocationUpdateDefinition() # LocationUpdateDefinition | Location\n\ntry:\n    # Update a location\n    api_response = api_instance.patch_location(location_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LocationsApi->patch_location: %s\\n\" % e)"
  },
  "post_locations": {
    "operationId": "post_locations",
    "functionName": "post_locations",
    "signature": "post_locations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LocationCreateDefinition",
        "required": "true"
      }
    ],
    "return": "LocationDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LocationsApi();\nbody = PureCloudPlatformClientV2.LocationCreateDefinition() # LocationCreateDefinition | Location\n\ntry:\n    # Create a location\n    api_response = api_instance.post_locations(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LocationsApi->post_locations: %s\\n\" % e)"
  },
  "post_locations_search": {
    "operationId": "post_locations_search",
    "functionName": "post_locations_search",
    "signature": "post_locations_search(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LocationSearchRequest",
        "required": "true"
      }
    ],
    "return": "LocationsSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SearchApi();\nbody = PureCloudPlatformClientV2.LocationSearchRequest() # LocationSearchRequest | Search request options\n\ntry:\n    # Search locations\n    api_response = api_instance.post_locations_search(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SearchApi->post_locations_search: %s\\n\" % e)"
  },
  "delete_diagnostics_logcapture_browser_user": {
    "operationId": "delete_diagnostics_logcapture_browser_user",
    "functionName": "delete_diagnostics_logcapture_browser_user",
    "signature": "delete_diagnostics_logcapture_browser_user(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LogCaptureApi();\nuser_id = 'user_id_example' # str | The id of the user to disable browser log capture\n\ntry:\n    # Disable browser log capture for the user\n    api_instance.delete_diagnostics_logcapture_browser_user(user_id)\nexcept ApiException as e:\n    print(\"Exception when calling LogCaptureApi->delete_diagnostics_logcapture_browser_user: %s\\n\" % e)"
  },
  "get_diagnostics_logcapture_browser_entries_download_job": {
    "operationId": "get_diagnostics_logcapture_browser_entries_download_job",
    "functionName": "get_diagnostics_logcapture_browser_entries_download_job",
    "signature": "get_diagnostics_logcapture_browser_entries_download_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LogCaptureDownloadExecutionResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LogCaptureApi();\njob_id = 'job_id_example' # str | Job ID\n\ntry:\n    # Gets status of async download execution\n    api_response = api_instance.get_diagnostics_logcapture_browser_entries_download_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LogCaptureApi->get_diagnostics_logcapture_browser_entries_download_job: %s\\n\" % e)"
  },
  "get_diagnostics_logcapture_browser_user": {
    "operationId": "get_diagnostics_logcapture_browser_user",
    "functionName": "get_diagnostics_logcapture_browser_user",
    "signature": "get_diagnostics_logcapture_browser_user(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LogCaptureUserConfiguration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LogCaptureApi();\nuser_id = 'user_id_example' # str | The id of the user to get browser log capture configuration\n\ntry:\n    # Get log capture configuration for the user\n    api_response = api_instance.get_diagnostics_logcapture_browser_user(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LogCaptureApi->get_diagnostics_logcapture_browser_user: %s\\n\" % e)"
  },
  "get_diagnostics_logcapture_browser_users": {
    "operationId": "get_diagnostics_logcapture_browser_users",
    "functionName": "get_diagnostics_logcapture_browser_users",
    "signature": "get_diagnostics_logcapture_browser_users(include_expired)",
    "parameters": [
      {
        "name": "include_expired",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "PagelessEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LogCaptureApi();\ninclude_expired = False # bool | Include expired users with log captures still available for search or download (optional) (default to False)\n\ntry:\n    # Get all log capture enabled users for an org\n    api_response = api_instance.get_diagnostics_logcapture_browser_users(include_expired=include_expired)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LogCaptureApi->get_diagnostics_logcapture_browser_users: %s\\n\" % e)"
  },
  "post_diagnostics_logcapture_browser_entries_download_jobs": {
    "operationId": "post_diagnostics_logcapture_browser_entries_download_jobs",
    "functionName": "post_diagnostics_logcapture_browser_entries_download_jobs",
    "signature": "post_diagnostics_logcapture_browser_entries_download_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LogCaptureQueryRequest",
        "required": "false"
      }
    ],
    "return": "LogCaptureDownloadExecutionResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LogCaptureApi();\nbody = PureCloudPlatformClientV2.LogCaptureQueryRequest() # LogCaptureQueryRequest |  (optional)\n\ntry:\n    # Creates an async download execution\n    api_response = api_instance.post_diagnostics_logcapture_browser_entries_download_jobs(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LogCaptureApi->post_diagnostics_logcapture_browser_entries_download_jobs: %s\\n\" % e)"
  },
  "post_diagnostics_logcapture_browser_entries_query": {
    "operationId": "post_diagnostics_logcapture_browser_entries_query",
    "functionName": "post_diagnostics_logcapture_browser_entries_query",
    "signature": "post_diagnostics_logcapture_browser_entries_query(before, after, page_size, body)",
    "parameters": [
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "body",
        "type": "LogCaptureQueryRequest",
        "required": "false"
      }
    ],
    "return": "LogCaptureQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LogCaptureApi();\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\nbody = PureCloudPlatformClientV2.LogCaptureQueryRequest() # LogCaptureQueryRequest |  (optional)\n\ntry:\n    # Query collected log entries. It returns a limited amount of records, to get all records use download endpoint.\n    api_response = api_instance.post_diagnostics_logcapture_browser_entries_query(before=before, after=after, page_size=page_size, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LogCaptureApi->post_diagnostics_logcapture_browser_entries_query: %s\\n\" % e)"
  },
  "post_diagnostics_logcapture_browser_user": {
    "operationId": "post_diagnostics_logcapture_browser_user",
    "functionName": "post_diagnostics_logcapture_browser_user",
    "signature": "post_diagnostics_logcapture_browser_user(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LogCaptureUserConfiguration",
        "required": "false"
      }
    ],
    "return": "LogCaptureUserConfiguration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.LogCaptureApi();\nuser_id = 'user_id_example' # str | The id of the user to enable browser log capture\nbody = PureCloudPlatformClientV2.LogCaptureUserConfiguration() # LogCaptureUserConfiguration |  (optional)\n\ntry:\n    # Enable log capture for a user or update expiration\n    api_response = api_instance.post_diagnostics_logcapture_browser_user(user_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling LogCaptureApi->post_diagnostics_logcapture_browser_user: %s\\n\" % e)"
  },
  "delete_messaging_setting": {
    "operationId": "delete_messaging_setting",
    "functionName": "delete_messaging_setting",
    "signature": "delete_messaging_setting(message_setting_id)",
    "parameters": [
      {
        "name": "message_setting_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MessagingApi();\nmessage_setting_id = 'message_setting_id_example' # str | Message Settings ID\n\ntry:\n    # Delete a messaging setting\n    api_instance.delete_messaging_setting(message_setting_id)\nexcept ApiException as e:\n    print(\"Exception when calling MessagingApi->delete_messaging_setting: %s\\n\" % e)"
  },
  "delete_messaging_settings_default": {
    "operationId": "delete_messaging_settings_default",
    "functionName": "delete_messaging_settings_default",
    "signature": "delete_messaging_settings_default()",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MessagingApi();\n\ntry:\n    # Delete the organization's default setting, a global default will be applied to integrations without settings\n    api_instance.delete_messaging_settings_default()\nexcept ApiException as e:\n    print(\"Exception when calling MessagingApi->delete_messaging_settings_default: %s\\n\" % e)"
  },
  "delete_messaging_supportedcontent_supported_content_id": {
    "operationId": "delete_messaging_supportedcontent_supported_content_id",
    "functionName": "delete_messaging_supportedcontent_supported_content_id",
    "signature": "delete_messaging_supportedcontent_supported_content_id(supported_content_id)",
    "parameters": [
      {
        "name": "supported_content_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MessagingApi();\nsupported_content_id = 'supported_content_id_example' # str | Supported Content ID\n\ntry:\n    # Delete a supported content profile\n    api_instance.delete_messaging_supportedcontent_supported_content_id(supported_content_id)\nexcept ApiException as e:\n    print(\"Exception when calling MessagingApi->delete_messaging_supportedcontent_supported_content_id: %s\\n\" % e)"
  },
  "get_messaging_setting": {
    "operationId": "get_messaging_setting",
    "functionName": "get_messaging_setting",
    "signature": "get_messaging_setting(message_setting_id)",
    "parameters": [
      {
        "name": "message_setting_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MessagingSetting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MessagingApi();\nmessage_setting_id = 'message_setting_id_example' # str | Message Settings ID\n\ntry:\n    # Get a messaging setting\n    api_response = api_instance.get_messaging_setting(message_setting_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MessagingApi->get_messaging_setting: %s\\n\" % e)"
  },
  "get_messaging_settings": {
    "operationId": "get_messaging_settings",
    "functionName": "get_messaging_settings",
    "signature": "get_messaging_settings(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "MessagingConfigListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MessagingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a list of messaging settings\n    api_response = api_instance.get_messaging_settings(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MessagingApi->get_messaging_settings: %s\\n\" % e)"
  },
  "get_messaging_settings_default": {
    "operationId": "get_messaging_settings_default",
    "functionName": "get_messaging_settings_default",
    "signature": "get_messaging_settings_default()",
    "return": "MessagingSetting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MessagingApi();\n\ntry:\n    # Get the organization's default settings that will be used as the default when creating an integration.\n    api_response = api_instance.get_messaging_settings_default()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MessagingApi->get_messaging_settings_default: %s\\n\" % e)"
  },
  "get_messaging_supportedcontent": {
    "operationId": "get_messaging_supportedcontent",
    "functionName": "get_messaging_supportedcontent",
    "signature": "get_messaging_supportedcontent(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "SupportedContentListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MessagingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a list of Supported Content profiles\n    api_response = api_instance.get_messaging_supportedcontent(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MessagingApi->get_messaging_supportedcontent: %s\\n\" % e)"
  },
  "get_messaging_supportedcontent_supported_content_id": {
    "operationId": "get_messaging_supportedcontent_supported_content_id",
    "functionName": "get_messaging_supportedcontent_supported_content_id",
    "signature": "get_messaging_supportedcontent_supported_content_id(supported_content_id)",
    "parameters": [
      {
        "name": "supported_content_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MessagingApi();\nsupported_content_id = 'supported_content_id_example' # str | Supported Content ID\n\ntry:\n    # Get a supported content profile\n    api_response = api_instance.get_messaging_supportedcontent_supported_content_id(supported_content_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MessagingApi->get_messaging_supportedcontent_supported_content_id: %s\\n\" % e)"
  },
  "patch_messaging_setting": {
    "operationId": "patch_messaging_setting",
    "functionName": "patch_messaging_setting",
    "signature": "patch_messaging_setting(message_setting_id, body)",
    "parameters": [
      {
        "name": "message_setting_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MessagingSettingRequest",
        "required": "true"
      }
    ],
    "return": "MessagingSetting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MessagingApi();\nmessage_setting_id = 'message_setting_id_example' # str | Message Settings ID\nbody = PureCloudPlatformClientV2.MessagingSettingRequest() # MessagingSettingRequest | MessagingSetting\n\ntry:\n    # Update a messaging setting\n    api_response = api_instance.patch_messaging_setting(message_setting_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MessagingApi->patch_messaging_setting: %s\\n\" % e)"
  },
  "patch_messaging_supportedcontent_supported_content_id": {
    "operationId": "patch_messaging_supportedcontent_supported_content_id",
    "functionName": "patch_messaging_supportedcontent_supported_content_id",
    "signature": "patch_messaging_supportedcontent_supported_content_id(supported_content_id, body)",
    "parameters": [
      {
        "name": "supported_content_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SupportedContent",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MessagingApi();\nsupported_content_id = 'supported_content_id_example' # str | Supported Content ID\nbody = PureCloudPlatformClientV2.SupportedContent() # SupportedContent | SupportedContent\n\ntry:\n    # Update a supported content profile\n    api_response = api_instance.patch_messaging_supportedcontent_supported_content_id(supported_content_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MessagingApi->patch_messaging_supportedcontent_supported_content_id: %s\\n\" % e)"
  },
  "post_messaging_settings": {
    "operationId": "post_messaging_settings",
    "functionName": "post_messaging_settings",
    "signature": "post_messaging_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "MessagingSettingRequest",
        "required": "true"
      }
    ],
    "return": "MessagingSetting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MessagingApi();\nbody = PureCloudPlatformClientV2.MessagingSettingRequest() # MessagingSettingRequest | MessagingSetting\n\ntry:\n    # Create a messaging setting\n    api_response = api_instance.post_messaging_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MessagingApi->post_messaging_settings: %s\\n\" % e)"
  },
  "post_messaging_supportedcontent": {
    "operationId": "post_messaging_supportedcontent",
    "functionName": "post_messaging_supportedcontent",
    "signature": "post_messaging_supportedcontent(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SupportedContent",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MessagingApi();\nbody = PureCloudPlatformClientV2.SupportedContent() # SupportedContent | SupportedContent\n\ntry:\n    # Create a Supported Content profile\n    api_response = api_instance.post_messaging_supportedcontent(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MessagingApi->post_messaging_supportedcontent: %s\\n\" % e)"
  },
  "put_messaging_settings_default": {
    "operationId": "put_messaging_settings_default",
    "functionName": "put_messaging_settings_default",
    "signature": "put_messaging_settings_default(body)",
    "parameters": [
      {
        "name": "body",
        "type": "MessagingSettingDefaultRequest",
        "required": "true"
      }
    ],
    "return": "MessagingSetting",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MessagingApi();\nbody = PureCloudPlatformClientV2.MessagingSettingDefaultRequest() # MessagingSettingDefaultRequest | Messaging Setting ID\n\ntry:\n    # Set the organization's default settings that may be applied to an integration when it is created.\n    api_response = api_instance.put_messaging_settings_default(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MessagingApi->put_messaging_settings_default: %s\\n\" % e)"
  },
  "delete_mobiledevice": {
    "operationId": "delete_mobiledevice",
    "functionName": "delete_mobiledevice",
    "signature": "delete_mobiledevice(device_id)",
    "parameters": [
      {
        "name": "device_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MobileDevicesApi();\ndevice_id = 'device_id_example' # str | Device ID\n\ntry:\n    # Delete device\n    api_instance.delete_mobiledevice(device_id)\nexcept ApiException as e:\n    print(\"Exception when calling MobileDevicesApi->delete_mobiledevice: %s\\n\" % e)"
  },
  "get_mobiledevice": {
    "operationId": "get_mobiledevice",
    "functionName": "get_mobiledevice",
    "signature": "get_mobiledevice(device_id)",
    "parameters": [
      {
        "name": "device_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UserDevice",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MobileDevicesApi();\ndevice_id = 'device_id_example' # str | Device ID\n\ntry:\n    # Get device\n    api_response = api_instance.get_mobiledevice(device_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MobileDevicesApi->get_mobiledevice: %s\\n\" % e)"
  },
  "get_mobiledevices": {
    "operationId": "get_mobiledevices",
    "functionName": "get_mobiledevices",
    "signature": "get_mobiledevices(page_size, page_number, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DirectoryUserDevicesListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MobileDevicesApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''ascending'' # str | Ascending or descending sort order (optional) (default to 'ascending')\n\ntry:\n    # Get a list of all devices.\n    api_response = api_instance.get_mobiledevices(page_size=page_size, page_number=page_number, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MobileDevicesApi->get_mobiledevices: %s\\n\" % e)"
  },
  "post_mobiledevices": {
    "operationId": "post_mobiledevices",
    "functionName": "post_mobiledevices",
    "signature": "post_mobiledevices(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserDevice",
        "required": "true"
      }
    ],
    "return": "UserDevice",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MobileDevicesApi();\nbody = PureCloudPlatformClientV2.UserDevice() # UserDevice | Device\n\ntry:\n    # Create User device\n    api_response = api_instance.post_mobiledevices(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MobileDevicesApi->post_mobiledevices: %s\\n\" % e)"
  },
  "put_mobiledevice": {
    "operationId": "put_mobiledevice",
    "functionName": "put_mobiledevice",
    "signature": "put_mobiledevice(device_id, body)",
    "parameters": [
      {
        "name": "device_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserDevice",
        "required": "false"
      }
    ],
    "return": "UserDevice",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.MobileDevicesApi();\ndevice_id = 'device_id_example' # str | Device ID\nbody = PureCloudPlatformClientV2.UserDevice() # UserDevice | Device (optional)\n\ntry:\n    # Update device\n    api_response = api_instance.put_mobiledevice(device_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling MobileDevicesApi->put_mobiledevice: %s\\n\" % e)"
  },
  "delete_notifications_channel_subscriptions": {
    "operationId": "delete_notifications_channel_subscriptions",
    "functionName": "delete_notifications_channel_subscriptions",
    "signature": "delete_notifications_channel_subscriptions(channel_id)",
    "parameters": [
      {
        "name": "channel_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.NotificationsApi();\nchannel_id = 'channel_id_example' # str | Channel ID\n\ntry:\n    # Remove all subscriptions\n    api_instance.delete_notifications_channel_subscriptions(channel_id)\nexcept ApiException as e:\n    print(\"Exception when calling NotificationsApi->delete_notifications_channel_subscriptions: %s\\n\" % e)"
  },
  "get_notifications_availabletopics": {
    "operationId": "get_notifications_availabletopics",
    "functionName": "get_notifications_availabletopics",
    "signature": "get_notifications_availabletopics(expand, include_preview)",
    "parameters": [
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "include_preview",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AvailableTopicEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.NotificationsApi();\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\ninclude_preview = True # bool | Whether or not to include Preview topics (optional) (default to True)\n\ntry:\n    # Get available notification topics.\n    api_response = api_instance.get_notifications_availabletopics(expand=expand, include_preview=include_preview)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling NotificationsApi->get_notifications_availabletopics: %s\\n\" % e)"
  },
  "get_notifications_channel_subscriptions": {
    "operationId": "get_notifications_channel_subscriptions",
    "functionName": "get_notifications_channel_subscriptions",
    "signature": "get_notifications_channel_subscriptions(channel_id)",
    "parameters": [
      {
        "name": "channel_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ChannelTopicEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.NotificationsApi();\nchannel_id = 'channel_id_example' # str | Channel ID\n\ntry:\n    # The list of all subscriptions for this channel\n    api_response = api_instance.get_notifications_channel_subscriptions(channel_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling NotificationsApi->get_notifications_channel_subscriptions: %s\\n\" % e)"
  },
  "get_notifications_channels": {
    "operationId": "get_notifications_channels",
    "functionName": "get_notifications_channels",
    "signature": "get_notifications_channels(includechannels)",
    "parameters": [
      {
        "name": "includechannels",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ChannelEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.NotificationsApi();\nincludechannels = ''token'' # str | Show user's channels for this specific token or across all tokens for this user and app.  Channel Ids for other access tokens will not be shown, but will be presented to show their existence. (optional) (default to 'token')\n\ntry:\n    # The list of existing channels\n    api_response = api_instance.get_notifications_channels(includechannels=includechannels)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling NotificationsApi->get_notifications_channels: %s\\n\" % e)"
  },
  "head_notifications_channel": {
    "operationId": "head_notifications_channel",
    "functionName": "head_notifications_channel",
    "signature": "head_notifications_channel(channel_id)",
    "parameters": [
      {
        "name": "channel_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.NotificationsApi();\nchannel_id = 'channel_id_example' # str | Channel ID\n\ntry:\n    # Verify a channel still exists and is valid\n    api_instance.head_notifications_channel(channel_id)\nexcept ApiException as e:\n    print(\"Exception when calling NotificationsApi->head_notifications_channel: %s\\n\" % e)"
  },
  "post_notifications_channel_subscriptions": {
    "operationId": "post_notifications_channel_subscriptions",
    "functionName": "post_notifications_channel_subscriptions",
    "signature": "post_notifications_channel_subscriptions(channel_id, body, ignore_errors)",
    "parameters": [
      {
        "name": "channel_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[ChannelTopic]",
        "required": "true"
      },
      {
        "name": "ignore_errors",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "ChannelTopicEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.NotificationsApi();\nchannel_id = 'channel_id_example' # str | Channel ID\nbody = [PureCloudPlatformClientV2.ChannelTopic()] # list[ChannelTopic] | Body\nignore_errors = False # bool | Optionally prevent throwing of errors for failed permissions checks. (optional) (default to False)\n\ntry:\n    # Add a list of subscriptions to the existing list of subscriptions\n    api_response = api_instance.post_notifications_channel_subscriptions(channel_id, body, ignore_errors=ignore_errors)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling NotificationsApi->post_notifications_channel_subscriptions: %s\\n\" % e)"
  },
  "post_notifications_channels": {
    "operationId": "post_notifications_channels",
    "functionName": "post_notifications_channels",
    "signature": "post_notifications_channels()",
    "return": "Channel",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.NotificationsApi();\n\ntry:\n    # Create a new channel\n    api_response = api_instance.post_notifications_channels()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling NotificationsApi->post_notifications_channels: %s\\n\" % e)"
  },
  "put_notifications_channel_subscriptions": {
    "operationId": "put_notifications_channel_subscriptions",
    "functionName": "put_notifications_channel_subscriptions",
    "signature": "put_notifications_channel_subscriptions(channel_id, body, ignore_errors)",
    "parameters": [
      {
        "name": "channel_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[ChannelTopic]",
        "required": "true"
      },
      {
        "name": "ignore_errors",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "ChannelTopicEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.NotificationsApi();\nchannel_id = 'channel_id_example' # str | Channel ID\nbody = [PureCloudPlatformClientV2.ChannelTopic()] # list[ChannelTopic] | Body\nignore_errors = False # bool | Optionally prevent throwing of errors for failed permissions checks. (optional) (default to False)\n\ntry:\n    # Replace the current list of subscriptions with a new list.\n    api_response = api_instance.put_notifications_channel_subscriptions(channel_id, body, ignore_errors=ignore_errors)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling NotificationsApi->put_notifications_channel_subscriptions: %s\\n\" % e)"
  },
  "delete_oauth_client": {
    "operationId": "delete_oauth_client",
    "functionName": "delete_oauth_client",
    "signature": "delete_oauth_client(client_id)",
    "parameters": [
      {
        "name": "client_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OAuthApi();\nclient_id = 'client_id_example' # str | Client ID\n\ntry:\n    # Delete OAuth Client\n    api_instance.delete_oauth_client(client_id)\nexcept ApiException as e:\n    print(\"Exception when calling OAuthApi->delete_oauth_client: %s\\n\" % e)"
  },
  "get_oauth_authorization": {
    "operationId": "get_oauth_authorization",
    "functionName": "get_oauth_authorization",
    "signature": "get_oauth_authorization(client_id, accept_language)",
    "parameters": [
      {
        "name": "client_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "accept_language",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OAuthAuthorization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OAuthApi();\nclient_id = 'client_id_example' # str | The ID of client\naccept_language = ''en-us'' # str | The language in which to display the client descriptions. (optional) (default to 'en-us')\n\ntry:\n    # Get a client that is authorized by the resource owner\n    api_response = api_instance.get_oauth_authorization(client_id, accept_language=accept_language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OAuthApi->get_oauth_authorization: %s\\n\" % e)"
  },
  "get_oauth_authorizations": {
    "operationId": "get_oauth_authorizations",
    "functionName": "get_oauth_authorizations",
    "signature": "get_oauth_authorizations(accept_language)",
    "parameters": [
      {
        "name": "accept_language",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OAuthAuthorizationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OAuthApi();\naccept_language = ''en-us'' # str | The language in which to display the client descriptions. (optional) (default to 'en-us')\n\ntry:\n    # List clients that have been authorized, requested, or revoked by the resource owner\n    api_response = api_instance.get_oauth_authorizations(accept_language=accept_language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OAuthApi->get_oauth_authorizations: %s\\n\" % e)"
  },
  "get_oauth_client": {
    "operationId": "get_oauth_client",
    "functionName": "get_oauth_client",
    "signature": "get_oauth_client(client_id)",
    "parameters": [
      {
        "name": "client_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OAuthClient",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OAuthApi();\nclient_id = 'client_id_example' # str | Client ID\n\ntry:\n    # Get OAuth Client\n    api_response = api_instance.get_oauth_client(client_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OAuthApi->get_oauth_client: %s\\n\" % e)"
  },
  "get_oauth_client_usage_query_result": {
    "operationId": "get_oauth_client_usage_query_result",
    "functionName": "get_oauth_client_usage_query_result",
    "signature": "get_oauth_client_usage_query_result(execution_id, client_id)",
    "parameters": [
      {
        "name": "execution_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "client_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ApiUsageQueryResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsageApi();\nexecution_id = 'execution_id_example' # str | ID of the query execution\nclient_id = 'client_id_example' # str | Client ID\n\ntry:\n    # Get the results of a usage query\n    api_response = api_instance.get_oauth_client_usage_query_result(execution_id, client_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsageApi->get_oauth_client_usage_query_result: %s\\n\" % e)"
  },
  "get_oauth_client_usage_summary": {
    "operationId": "get_oauth_client_usage_summary",
    "functionName": "get_oauth_client_usage_summary",
    "signature": "get_oauth_client_usage_summary(client_id, days)",
    "parameters": [
      {
        "name": "client_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "days",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UsageExecutionResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsageApi();\nclient_id = 'client_id_example' # str | Client ID\ndays = ''7'' # str | Previous number of days to query (optional) (default to '7')\n\ntry:\n    # Get a summary of OAuth client API usage\n    api_response = api_instance.get_oauth_client_usage_summary(client_id, days=days)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsageApi->get_oauth_client_usage_summary: %s\\n\" % e)"
  },
  "get_oauth_clients": {
    "operationId": "get_oauth_clients",
    "functionName": "get_oauth_clients",
    "signature": "get_oauth_clients()",
    "return": "OAuthClientEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OAuthApi();\n\ntry:\n    # The list of OAuth clients\n    api_response = api_instance.get_oauth_clients()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OAuthApi->get_oauth_clients: %s\\n\" % e)"
  },
  "get_oauth_scope": {
    "operationId": "get_oauth_scope",
    "functionName": "get_oauth_scope",
    "signature": "get_oauth_scope(scope_id, accept_language)",
    "parameters": [
      {
        "name": "scope_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "accept_language",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OAuthScope",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OAuthApi();\nscope_id = 'scope_id_example' # str | Scope ID\naccept_language = ''en-us'' # str | The language with which to display the scope description. (optional) (default to 'en-us')\n\ntry:\n    # An OAuth scope\n    api_response = api_instance.get_oauth_scope(scope_id, accept_language=accept_language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OAuthApi->get_oauth_scope: %s\\n\" % e)"
  },
  "get_oauth_scopes": {
    "operationId": "get_oauth_scopes",
    "functionName": "get_oauth_scopes",
    "signature": "get_oauth_scopes(accept_language)",
    "parameters": [
      {
        "name": "accept_language",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OAuthScopeListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OAuthApi();\naccept_language = ''en-us'' # str | The language with which to display the scope descriptions. (optional) (default to 'en-us')\n\ntry:\n    # The list of OAuth scopes\n    api_response = api_instance.get_oauth_scopes(accept_language=accept_language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OAuthApi->get_oauth_scopes: %s\\n\" % e)"
  },
  "post_oauth_client_secret": {
    "operationId": "post_oauth_client_secret",
    "functionName": "post_oauth_client_secret",
    "signature": "post_oauth_client_secret(client_id)",
    "parameters": [
      {
        "name": "client_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OAuthClient",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OAuthApi();\nclient_id = 'client_id_example' # str | Client ID\n\ntry:\n    # Regenerate Client Secret\n    api_response = api_instance.post_oauth_client_secret(client_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OAuthApi->post_oauth_client_secret: %s\\n\" % e)"
  },
  "post_oauth_client_usage_query": {
    "operationId": "post_oauth_client_usage_query",
    "functionName": "post_oauth_client_usage_query",
    "signature": "post_oauth_client_usage_query(client_id, body)",
    "parameters": [
      {
        "name": "client_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ApiUsageClientQuery",
        "required": "true"
      }
    ],
    "return": "UsageExecutionResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsageApi();\nclient_id = 'client_id_example' # str | Client ID\nbody = PureCloudPlatformClientV2.ApiUsageClientQuery() # ApiUsageClientQuery | Query\n\ntry:\n    # Query for OAuth client API usage\n    api_response = api_instance.post_oauth_client_usage_query(client_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsageApi->post_oauth_client_usage_query: %s\\n\" % e)"
  },
  "post_oauth_clients": {
    "operationId": "post_oauth_clients",
    "functionName": "post_oauth_clients",
    "signature": "post_oauth_clients(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OAuthClientRequest",
        "required": "true"
      }
    ],
    "return": "OAuthClient",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OAuthApi();\nbody = PureCloudPlatformClientV2.OAuthClientRequest() # OAuthClientRequest | Client\n\ntry:\n    # Create OAuth client\n    api_response = api_instance.post_oauth_clients(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OAuthApi->post_oauth_clients: %s\\n\" % e)"
  },
  "put_oauth_client": {
    "operationId": "put_oauth_client",
    "functionName": "put_oauth_client",
    "signature": "put_oauth_client(client_id, body)",
    "parameters": [
      {
        "name": "client_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OAuthClientRequest",
        "required": "true"
      }
    ],
    "return": "OAuthClient",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OAuthApi();\nclient_id = 'client_id_example' # str | Client ID\nbody = PureCloudPlatformClientV2.OAuthClientRequest() # OAuthClientRequest | Client\n\ntry:\n    # Update OAuth Client\n    api_response = api_instance.put_oauth_client(client_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OAuthApi->put_oauth_client: %s\\n\" % e)"
  },
  "get_usage_events_definition": {
    "operationId": "get_usage_events_definition",
    "functionName": "get_usage_events_definition",
    "signature": "get_usage_events_definition(event_definition_id)",
    "parameters": [
      {
        "name": "event_definition_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EventDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OperationalEventsApi();\nevent_definition_id = 'event_definition_id_example' # str | EventDefinition id\n\ntry:\n    # Get an operational event definition by its id\n    api_response = api_instance.get_usage_events_definition(event_definition_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OperationalEventsApi->get_usage_events_definition: %s\\n\" % e)"
  },
  "get_usage_events_definitions": {
    "operationId": "get_usage_events_definitions",
    "functionName": "get_usage_events_definitions",
    "signature": "get_usage_events_definitions()",
    "return": "EventDefinitionListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OperationalEventsApi();\n\ntry:\n    # Get all operational event definitions\n    api_response = api_instance.get_usage_events_definitions()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OperationalEventsApi->get_usage_events_definitions: %s\\n\" % e)"
  },
  "get_organizations_authentication_settings": {
    "operationId": "get_organizations_authentication_settings",
    "functionName": "get_organizations_authentication_settings",
    "signature": "get_organizations_authentication_settings()",
    "return": "OrgAuthSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\n\ntry:\n    # Gets the organization's settings\n    api_response = api_instance.get_organizations_authentication_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->get_organizations_authentication_settings: %s\\n\" % e)"
  },
  "get_organizations_embeddedintegration": {
    "operationId": "get_organizations_embeddedintegration",
    "functionName": "get_organizations_embeddedintegration",
    "signature": "get_organizations_embeddedintegration()",
    "return": "EmbeddedIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\n\ntry:\n    # Get the list of domains that will be allowed to embed PureCloud applications\n    api_response = api_instance.get_organizations_embeddedintegration()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->get_organizations_embeddedintegration: %s\\n\" % e)"
  },
  "get_organizations_ipaddressauthentication": {
    "operationId": "get_organizations_ipaddressauthentication",
    "functionName": "get_organizations_ipaddressauthentication",
    "signature": "get_organizations_ipaddressauthentication()",
    "return": "IpAddressAuthentication",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\n\ntry:\n    # Get organization IP address whitelist settings\n    api_response = api_instance.get_organizations_ipaddressauthentication()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->get_organizations_ipaddressauthentication: %s\\n\" % e)"
  },
  "get_organizations_limits_changerequest": {
    "operationId": "get_organizations_limits_changerequest",
    "functionName": "get_organizations_limits_changerequest",
    "signature": "get_organizations_limits_changerequest(request_id)",
    "parameters": [
      {
        "name": "request_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LimitChangeRequestDetails",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\nrequest_id = 'request_id_example' # str | Unique id for the limit change request\n\ntry:\n    # Get a limit change request\n    api_response = api_instance.get_organizations_limits_changerequest(request_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->get_organizations_limits_changerequest: %s\\n\" % e)"
  },
  "get_organizations_limits_changerequests": {
    "operationId": "get_organizations_limits_changerequests",
    "functionName": "get_organizations_limits_changerequests",
    "signature": "get_organizations_limits_changerequests(after, before, status, page_size, expand)",
    "parameters": [
      {
        "name": "after",
        "type": "int",
        "required": "false"
      },
      {
        "name": "before",
        "type": "int",
        "required": "false"
      },
      {
        "name": "status",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LimitChangeRequestsEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\nafter = 56 # int | Timestamp indicating the date to begin after when searching for requests. (optional)\nbefore = 56 # int | Timestamp indicating the date to end before when searching for requests. (optional)\nstatus = 'status_example' # str | Status of the request to be filtered by (optional)\npage_size = 25 # int | Page Size (optional) (default to 25)\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Get the available limit change requests\n    api_response = api_instance.get_organizations_limits_changerequests(after=after, before=before, status=status, page_size=page_size, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->get_organizations_limits_changerequests: %s\\n\" % e)"
  },
  "get_organizations_limits_docs": {
    "operationId": "get_organizations_limits_docs",
    "functionName": "get_organizations_limits_docs",
    "signature": "get_organizations_limits_docs()",
    "return": "LimitDocumentation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\n\ntry:\n    # Get limit documentation\n    api_response = api_instance.get_organizations_limits_docs()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->get_organizations_limits_docs: %s\\n\" % e)"
  },
  "get_organizations_limits_docs_freetrial": {
    "operationId": "get_organizations_limits_docs_freetrial",
    "functionName": "get_organizations_limits_docs_freetrial",
    "signature": "get_organizations_limits_docs_freetrial()",
    "return": "FreeTrialLimitDocs",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\n\ntry:\n    # Get free trial limit documentation\n    api_response = api_instance.get_organizations_limits_docs_freetrial()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->get_organizations_limits_docs_freetrial: %s\\n\" % e)"
  },
  "get_organizations_limits_namespace": {
    "operationId": "get_organizations_limits_namespace",
    "functionName": "get_organizations_limits_namespace",
    "signature": "get_organizations_limits_namespace(namespace_name)",
    "parameters": [
      {
        "name": "namespace_name",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LimitsEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\nnamespace_name = 'namespace_name_example' # str | The namespace to fetch limits for\n\ntry:\n    # Get the effective limits in a namespace for an organization\n    api_response = api_instance.get_organizations_limits_namespace(namespace_name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->get_organizations_limits_namespace: %s\\n\" % e)"
  },
  "get_organizations_limits_namespace_defaults": {
    "operationId": "get_organizations_limits_namespace_defaults",
    "functionName": "get_organizations_limits_namespace_defaults",
    "signature": "get_organizations_limits_namespace_defaults(namespace_name)",
    "parameters": [
      {
        "name": "namespace_name",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LimitsEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\nnamespace_name = 'namespace_name_example' # str | The namespace to fetch defaults limits for\n\ntry:\n    # Get the default limits in a namespace for an organization\n    api_response = api_instance.get_organizations_limits_namespace_defaults(namespace_name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->get_organizations_limits_namespace_defaults: %s\\n\" % e)"
  },
  "get_organizations_limits_namespaces": {
    "operationId": "get_organizations_limits_namespaces",
    "functionName": "get_organizations_limits_namespaces",
    "signature": "get_organizations_limits_namespaces(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\npage_size = 100 # int | Page size (optional) (default to 100)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get the available limit namespaces\n    api_response = api_instance.get_organizations_limits_namespaces(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->get_organizations_limits_namespaces: %s\\n\" % e)"
  },
  "get_organizations_me": {
    "operationId": "get_organizations_me",
    "functionName": "get_organizations_me",
    "signature": "get_organizations_me()",
    "return": "Organization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\n\ntry:\n    # Get organization.\n    api_response = api_instance.get_organizations_me()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->get_organizations_me: %s\\n\" % e)"
  },
  "get_organizations_whitelist": {
    "operationId": "get_organizations_whitelist",
    "functionName": "get_organizations_whitelist",
    "signature": "get_organizations_whitelist()",
    "return": "OrgWhitelistSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\n\ntry:\n    # This route is deprecated, please use /api/v2/organizations/authentication/settings instead\n    api_response = api_instance.get_organizations_whitelist()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->get_organizations_whitelist: %s\\n\" % e)"
  },
  "patch_organizations_authentication_settings": {
    "operationId": "patch_organizations_authentication_settings",
    "functionName": "patch_organizations_authentication_settings",
    "signature": "patch_organizations_authentication_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OrgAuthSettings",
        "required": "true"
      }
    ],
    "return": "OrgAuthSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\nbody = PureCloudPlatformClientV2.OrgAuthSettings() # OrgAuthSettings | Org settings\n\ntry:\n    # Update the organization's settings\n    api_response = api_instance.patch_organizations_authentication_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->patch_organizations_authentication_settings: %s\\n\" % e)"
  },
  "patch_organizations_feature": {
    "operationId": "patch_organizations_feature",
    "functionName": "patch_organizations_feature",
    "signature": "patch_organizations_feature(feature_name, enabled)",
    "parameters": [
      {
        "name": "feature_name",
        "type": "str",
        "required": "true"
      },
      {
        "name": "enabled",
        "type": "FeatureState",
        "required": "true"
      }
    ],
    "return": "OrganizationFeatures",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\nfeature_name = 'feature_name_example' # str | Organization feature\nenabled = PureCloudPlatformClientV2.FeatureState() # FeatureState | New state of feature\n\ntry:\n    # Update organization\n    api_response = api_instance.patch_organizations_feature(feature_name, enabled)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->patch_organizations_feature: %s\\n\" % e)"
  },
  "put_organizations_embeddedintegration": {
    "operationId": "put_organizations_embeddedintegration",
    "functionName": "put_organizations_embeddedintegration",
    "signature": "put_organizations_embeddedintegration(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EmbeddedIntegration",
        "required": "true"
      }
    ],
    "return": "EmbeddedIntegration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\nbody = PureCloudPlatformClientV2.EmbeddedIntegration() # EmbeddedIntegration | Whitelist settings\n\ntry:\n    # Update the list of domains that will be allowed to embed PureCloud applications\n    api_response = api_instance.put_organizations_embeddedintegration(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->put_organizations_embeddedintegration: %s\\n\" % e)"
  },
  "put_organizations_ipaddressauthentication": {
    "operationId": "put_organizations_ipaddressauthentication",
    "functionName": "put_organizations_ipaddressauthentication",
    "signature": "put_organizations_ipaddressauthentication(body)",
    "parameters": [
      {
        "name": "body",
        "type": "IpAddressAuthentication",
        "required": "true"
      }
    ],
    "return": "IpAddressAuthentication",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\nbody = PureCloudPlatformClientV2.IpAddressAuthentication() # IpAddressAuthentication | IP address Whitelist settings\n\ntry:\n    # Update organization IP address whitelist settings\n    api_response = api_instance.put_organizations_ipaddressauthentication(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->put_organizations_ipaddressauthentication: %s\\n\" % e)"
  },
  "put_organizations_me": {
    "operationId": "put_organizations_me",
    "functionName": "put_organizations_me",
    "signature": "put_organizations_me(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Organization",
        "required": "false"
      }
    ],
    "return": "Organization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\nbody = PureCloudPlatformClientV2.Organization() # Organization | Organization (optional)\n\ntry:\n    # Update organization.\n    api_response = api_instance.put_organizations_me(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->put_organizations_me: %s\\n\" % e)"
  },
  "put_organizations_whitelist": {
    "operationId": "put_organizations_whitelist",
    "functionName": "put_organizations_whitelist",
    "signature": "put_organizations_whitelist(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OrgWhitelistSettings",
        "required": "true"
      }
    ],
    "return": "OrgWhitelistSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationApi();\nbody = PureCloudPlatformClientV2.OrgWhitelistSettings() # OrgWhitelistSettings | Whitelist settings\n\ntry:\n    # This route is deprecated, please use /api/v2/organizations/authentication/settings instead\n    api_response = api_instance.put_organizations_whitelist(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationApi->put_organizations_whitelist: %s\\n\" % e)"
  },
  "delete_orgauthorization_trustee": {
    "operationId": "delete_orgauthorization_trustee",
    "functionName": "delete_orgauthorization_trustee",
    "signature": "delete_orgauthorization_trustee(trustee_org_id)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\n\ntry:\n    # Delete Org Trust\n    api_instance.delete_orgauthorization_trustee(trustee_org_id)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->delete_orgauthorization_trustee: %s\\n\" % e)"
  },
  "delete_orgauthorization_trustee_cloneduser": {
    "operationId": "delete_orgauthorization_trustee_cloneduser",
    "functionName": "delete_orgauthorization_trustee_cloneduser",
    "signature": "delete_orgauthorization_trustee_cloneduser(trustee_org_id, trustee_user_id)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\ntrustee_user_id = 'trustee_user_id_example' # str | Id of the cloned user to delete\n\ntry:\n    # Deletes cloned user\n    api_instance.delete_orgauthorization_trustee_cloneduser(trustee_org_id, trustee_user_id)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->delete_orgauthorization_trustee_cloneduser: %s\\n\" % e)"
  },
  "delete_orgauthorization_trustee_group": {
    "operationId": "delete_orgauthorization_trustee_group",
    "functionName": "delete_orgauthorization_trustee_group",
    "signature": "delete_orgauthorization_trustee_group(trustee_org_id, trustee_group_id)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\ntrustee_group_id = 'trustee_group_id_example' # str | Trustee Group Id\n\ntry:\n    # Delete Trustee Group\n    api_instance.delete_orgauthorization_trustee_group(trustee_org_id, trustee_group_id)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->delete_orgauthorization_trustee_group: %s\\n\" % e)"
  },
  "delete_orgauthorization_trustee_group_roles": {
    "operationId": "delete_orgauthorization_trustee_group_roles",
    "functionName": "delete_orgauthorization_trustee_group_roles",
    "signature": "delete_orgauthorization_trustee_group_roles(trustee_org_id, trustee_group_id)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\ntrustee_group_id = 'trustee_group_id_example' # str | Trustee Group Id\n\ntry:\n    # Delete Trustee Group Roles\n    api_instance.delete_orgauthorization_trustee_group_roles(trustee_org_id, trustee_group_id)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->delete_orgauthorization_trustee_group_roles: %s\\n\" % e)"
  },
  "delete_orgauthorization_trustee_user": {
    "operationId": "delete_orgauthorization_trustee_user",
    "functionName": "delete_orgauthorization_trustee_user",
    "signature": "delete_orgauthorization_trustee_user(trustee_org_id, trustee_user_id)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\ntrustee_user_id = 'trustee_user_id_example' # str | Trustee User Id\n\ntry:\n    # Delete Trustee User\n    api_instance.delete_orgauthorization_trustee_user(trustee_org_id, trustee_user_id)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->delete_orgauthorization_trustee_user: %s\\n\" % e)"
  },
  "delete_orgauthorization_trustee_user_roles": {
    "operationId": "delete_orgauthorization_trustee_user_roles",
    "functionName": "delete_orgauthorization_trustee_user_roles",
    "signature": "delete_orgauthorization_trustee_user_roles(trustee_org_id, trustee_user_id)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\ntrustee_user_id = 'trustee_user_id_example' # str | Trustee User Id\n\ntry:\n    # Delete Trustee User Roles\n    api_instance.delete_orgauthorization_trustee_user_roles(trustee_org_id, trustee_user_id)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->delete_orgauthorization_trustee_user_roles: %s\\n\" % e)"
  },
  "delete_orgauthorization_trustees": {
    "operationId": "delete_orgauthorization_trustees",
    "functionName": "delete_orgauthorization_trustees",
    "signature": "delete_orgauthorization_trustees(id)",
    "parameters": [
      {
        "name": "id",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\nid = ['id_example'] # list[str] | Comma separated list of trustee ids to remove\n\ntry:\n    # Delete Bulk Org Trustees\n    api_instance.delete_orgauthorization_trustees(id)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->delete_orgauthorization_trustees: %s\\n\" % e)"
  },
  "delete_orgauthorization_trustor": {
    "operationId": "delete_orgauthorization_trustor",
    "functionName": "delete_orgauthorization_trustor",
    "signature": "delete_orgauthorization_trustor(trustor_org_id)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustor Organization Id\n\ntry:\n    # Delete Org Trust\n    api_instance.delete_orgauthorization_trustor(trustor_org_id)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->delete_orgauthorization_trustor: %s\\n\" % e)"
  },
  "delete_orgauthorization_trustor_cloneduser": {
    "operationId": "delete_orgauthorization_trustor_cloneduser",
    "functionName": "delete_orgauthorization_trustor_cloneduser",
    "signature": "delete_orgauthorization_trustor_cloneduser(trustor_org_id, trustee_user_id)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustor Organization Id\ntrustee_user_id = 'trustee_user_id_example' # str | Trustee User Id\n\ntry:\n    # Delete Cloned User\n    api_instance.delete_orgauthorization_trustor_cloneduser(trustor_org_id, trustee_user_id)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->delete_orgauthorization_trustor_cloneduser: %s\\n\" % e)"
  },
  "delete_orgauthorization_trustor_group": {
    "operationId": "delete_orgauthorization_trustor_group",
    "functionName": "delete_orgauthorization_trustor_group",
    "signature": "delete_orgauthorization_trustor_group(trustor_org_id, trustor_group_id)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustor_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustor Organization Id\ntrustor_group_id = 'trustor_group_id_example' # str | Trustor Group Id\n\ntry:\n    # Delete Trustee Group\n    api_instance.delete_orgauthorization_trustor_group(trustor_org_id, trustor_group_id)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->delete_orgauthorization_trustor_group: %s\\n\" % e)"
  },
  "delete_orgauthorization_trustor_user": {
    "operationId": "delete_orgauthorization_trustor_user",
    "functionName": "delete_orgauthorization_trustor_user",
    "signature": "delete_orgauthorization_trustor_user(trustor_org_id, trustee_user_id)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustor Organization Id\ntrustee_user_id = 'trustee_user_id_example' # str | Trustee User Id\n\ntry:\n    # Delete Trustee User\n    api_instance.delete_orgauthorization_trustor_user(trustor_org_id, trustee_user_id)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->delete_orgauthorization_trustor_user: %s\\n\" % e)"
  },
  "delete_orgauthorization_trustors": {
    "operationId": "delete_orgauthorization_trustors",
    "functionName": "delete_orgauthorization_trustors",
    "signature": "delete_orgauthorization_trustors(id)",
    "parameters": [
      {
        "name": "id",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\nid = ['id_example'] # list[str] | Comma separated list of trustor ids to remove\n\ntry:\n    # Delete Bulk Org Trustors\n    api_instance.delete_orgauthorization_trustors(id)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->delete_orgauthorization_trustors: %s\\n\" % e)"
  },
  "get_orgauthorization_pairing": {
    "operationId": "get_orgauthorization_pairing",
    "functionName": "get_orgauthorization_pairing",
    "signature": "get_orgauthorization_pairing(pairing_id)",
    "parameters": [
      {
        "name": "pairing_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TrustRequest",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\npairing_id = 'pairing_id_example' # str | Pairing Id\n\ntry:\n    # Get Pairing Info\n    api_response = api_instance.get_orgauthorization_pairing(pairing_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_pairing: %s\\n\" % e)"
  },
  "get_orgauthorization_trustee": {
    "operationId": "get_orgauthorization_trustee",
    "functionName": "get_orgauthorization_trustee",
    "signature": "get_orgauthorization_trustee(trustee_org_id)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Trustee",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\n\ntry:\n    # Get Org Trust\n    api_response = api_instance.get_orgauthorization_trustee(trustee_org_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustee: %s\\n\" % e)"
  },
  "get_orgauthorization_trustee_clonedusers": {
    "operationId": "get_orgauthorization_trustee_clonedusers",
    "functionName": "get_orgauthorization_trustee_clonedusers",
    "signature": "get_orgauthorization_trustee_clonedusers(trustee_org_id)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ClonedUserEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\n\ntry:\n    # The list of cloned users from the trustee organization (i.e. users with a native user record).\n    api_response = api_instance.get_orgauthorization_trustee_clonedusers(trustee_org_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustee_clonedusers: %s\\n\" % e)"
  },
  "get_orgauthorization_trustee_group": {
    "operationId": "get_orgauthorization_trustee_group",
    "functionName": "get_orgauthorization_trustee_group",
    "signature": "get_orgauthorization_trustee_group(trustee_org_id, trustee_group_id)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TrustGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\ntrustee_group_id = 'trustee_group_id_example' # str | Trustee Group Id\n\ntry:\n    # Get Trustee Group\n    api_response = api_instance.get_orgauthorization_trustee_group(trustee_org_id, trustee_group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustee_group: %s\\n\" % e)"
  },
  "get_orgauthorization_trustee_group_roles": {
    "operationId": "get_orgauthorization_trustee_group_roles",
    "functionName": "get_orgauthorization_trustee_group_roles",
    "signature": "get_orgauthorization_trustee_group_roles(trustee_org_id, trustee_group_id)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UserAuthorization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\ntrustee_group_id = 'trustee_group_id_example' # str | Trustee Group Id\n\ntry:\n    # Get Trustee Group Roles\n    api_response = api_instance.get_orgauthorization_trustee_group_roles(trustee_org_id, trustee_group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustee_group_roles: %s\\n\" % e)"
  },
  "get_orgauthorization_trustee_groups": {
    "operationId": "get_orgauthorization_trustee_groups",
    "functionName": "get_orgauthorization_trustee_groups",
    "signature": "get_orgauthorization_trustee_groups(trustee_org_id, page_size, page_number)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "TrustGroupEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # The list of trustee groups for this organization (i.e. groups granted access to this organization).\n    api_response = api_instance.get_orgauthorization_trustee_groups(trustee_org_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustee_groups: %s\\n\" % e)"
  },
  "get_orgauthorization_trustee_user": {
    "operationId": "get_orgauthorization_trustee_user",
    "functionName": "get_orgauthorization_trustee_user",
    "signature": "get_orgauthorization_trustee_user(trustee_org_id, trustee_user_id)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TrustUser",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\ntrustee_user_id = 'trustee_user_id_example' # str | Trustee User Id\n\ntry:\n    # Get Trustee User\n    api_response = api_instance.get_orgauthorization_trustee_user(trustee_org_id, trustee_user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustee_user: %s\\n\" % e)"
  },
  "get_orgauthorization_trustee_user_roles": {
    "operationId": "get_orgauthorization_trustee_user_roles",
    "functionName": "get_orgauthorization_trustee_user_roles",
    "signature": "get_orgauthorization_trustee_user_roles(trustee_org_id, trustee_user_id)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UserAuthorization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\ntrustee_user_id = 'trustee_user_id_example' # str | Trustee User Id\n\ntry:\n    # Get Trustee User Roles\n    api_response = api_instance.get_orgauthorization_trustee_user_roles(trustee_org_id, trustee_user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustee_user_roles: %s\\n\" % e)"
  },
  "get_orgauthorization_trustee_users": {
    "operationId": "get_orgauthorization_trustee_users",
    "functionName": "get_orgauthorization_trustee_users",
    "signature": "get_orgauthorization_trustee_users(trustee_org_id, page_size, page_number)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "TrustUserEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # The list of trustee users for this organization (i.e. users granted access to this organization).\n    api_response = api_instance.get_orgauthorization_trustee_users(trustee_org_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustee_users: %s\\n\" % e)"
  },
  "get_orgauthorization_trustees": {
    "operationId": "get_orgauthorization_trustees",
    "functionName": "get_orgauthorization_trustees",
    "signature": "get_orgauthorization_trustees(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "TrustEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # The list of trustees for this organization (i.e. organizations granted access to this organization).\n    api_response = api_instance.get_orgauthorization_trustees(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustees: %s\\n\" % e)"
  },
  "get_orgauthorization_trustees_default": {
    "operationId": "get_orgauthorization_trustees_default",
    "functionName": "get_orgauthorization_trustees_default",
    "signature": "get_orgauthorization_trustees_default()",
    "return": "Trustee",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\n\ntry:\n    # Get organization authorization trust with Customer Care, if one exists.\n    api_response = api_instance.get_orgauthorization_trustees_default()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustees_default: %s\\n\" % e)"
  },
  "get_orgauthorization_trustor": {
    "operationId": "get_orgauthorization_trustor",
    "functionName": "get_orgauthorization_trustor",
    "signature": "get_orgauthorization_trustor(trustor_org_id)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Trustor",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustor Organization Id\n\ntry:\n    # Get Org Trust\n    api_response = api_instance.get_orgauthorization_trustor(trustor_org_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustor: %s\\n\" % e)"
  },
  "get_orgauthorization_trustor_cloneduser": {
    "operationId": "get_orgauthorization_trustor_cloneduser",
    "functionName": "get_orgauthorization_trustor_cloneduser",
    "signature": "get_orgauthorization_trustor_cloneduser(trustor_org_id, trustee_user_id)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ClonedUser",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustor Organization Id\ntrustee_user_id = 'trustee_user_id_example' # str | Trustee User Id\n\ntry:\n    # Get Cloned User\n    api_response = api_instance.get_orgauthorization_trustor_cloneduser(trustor_org_id, trustee_user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustor_cloneduser: %s\\n\" % e)"
  },
  "get_orgauthorization_trustor_clonedusers": {
    "operationId": "get_orgauthorization_trustor_clonedusers",
    "functionName": "get_orgauthorization_trustor_clonedusers",
    "signature": "get_orgauthorization_trustor_clonedusers(trustor_org_id)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ClonedUserEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustor Organization Id\n\ntry:\n    # The list of cloned users in the trustor organization (i.e. users with a native user record).\n    api_response = api_instance.get_orgauthorization_trustor_clonedusers(trustor_org_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustor_clonedusers: %s\\n\" % e)"
  },
  "get_orgauthorization_trustor_group": {
    "operationId": "get_orgauthorization_trustor_group",
    "functionName": "get_orgauthorization_trustor_group",
    "signature": "get_orgauthorization_trustor_group(trustor_org_id, trustor_group_id)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustor_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TrustGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustor Organization Id\ntrustor_group_id = 'trustor_group_id_example' # str | Trustor Group Id\n\ntry:\n    # Get Trustee Group\n    api_response = api_instance.get_orgauthorization_trustor_group(trustor_org_id, trustor_group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustor_group: %s\\n\" % e)"
  },
  "get_orgauthorization_trustor_groups": {
    "operationId": "get_orgauthorization_trustor_groups",
    "functionName": "get_orgauthorization_trustor_groups",
    "signature": "get_orgauthorization_trustor_groups(trustor_org_id, page_size, page_number)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "TrustGroupEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustee Organization Id\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # The list of groups in the trustor organization (i.e. groups granted access).\n    api_response = api_instance.get_orgauthorization_trustor_groups(trustor_org_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustor_groups: %s\\n\" % e)"
  },
  "get_orgauthorization_trustor_user": {
    "operationId": "get_orgauthorization_trustor_user",
    "functionName": "get_orgauthorization_trustor_user",
    "signature": "get_orgauthorization_trustor_user(trustor_org_id, trustee_user_id)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TrustUser",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustor Organization Id\ntrustee_user_id = 'trustee_user_id_example' # str | Trustee User Id\n\ntry:\n    # Get Trustee User\n    api_response = api_instance.get_orgauthorization_trustor_user(trustor_org_id, trustee_user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustor_user: %s\\n\" % e)"
  },
  "get_orgauthorization_trustor_users": {
    "operationId": "get_orgauthorization_trustor_users",
    "functionName": "get_orgauthorization_trustor_users",
    "signature": "get_orgauthorization_trustor_users(trustor_org_id, page_size, page_number)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "TrustUserEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustee Organization Id\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # The list of users in the trustor organization (i.e. users granted access).\n    api_response = api_instance.get_orgauthorization_trustor_users(trustor_org_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustor_users: %s\\n\" % e)"
  },
  "get_orgauthorization_trustors": {
    "operationId": "get_orgauthorization_trustors",
    "functionName": "get_orgauthorization_trustors",
    "signature": "get_orgauthorization_trustors(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "TrustorEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # The list of organizations that have authorized/trusted your organization.\n    api_response = api_instance.get_orgauthorization_trustors(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->get_orgauthorization_trustors: %s\\n\" % e)"
  },
  "post_orgauthorization_pairings": {
    "operationId": "post_orgauthorization_pairings",
    "functionName": "post_orgauthorization_pairings",
    "signature": "post_orgauthorization_pairings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TrustRequestCreate",
        "required": "true"
      }
    ],
    "return": "TrustRequest",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\nbody = PureCloudPlatformClientV2.TrustRequestCreate() # TrustRequestCreate | Pairing Info\n\ntry:\n    # A pairing id is created by the trustee and given to the trustor to create a trust.\n    api_response = api_instance.post_orgauthorization_pairings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->post_orgauthorization_pairings: %s\\n\" % e)"
  },
  "post_orgauthorization_trustee_groups": {
    "operationId": "post_orgauthorization_trustee_groups",
    "functionName": "post_orgauthorization_trustee_groups",
    "signature": "post_orgauthorization_trustee_groups(trustee_org_id, body)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TrustMemberCreate",
        "required": "true"
      }
    ],
    "return": "TrustGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\nbody = PureCloudPlatformClientV2.TrustMemberCreate() # TrustMemberCreate | Trust\n\ntry:\n    # Add a group to the trust.\n    api_response = api_instance.post_orgauthorization_trustee_groups(trustee_org_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->post_orgauthorization_trustee_groups: %s\\n\" % e)"
  },
  "post_orgauthorization_trustee_users": {
    "operationId": "post_orgauthorization_trustee_users",
    "functionName": "post_orgauthorization_trustee_users",
    "signature": "post_orgauthorization_trustee_users(trustee_org_id, body)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TrustMemberCreate",
        "required": "true"
      }
    ],
    "return": "TrustUser",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\nbody = PureCloudPlatformClientV2.TrustMemberCreate() # TrustMemberCreate | Trust\n\ntry:\n    # Add a user to the trust.\n    api_response = api_instance.post_orgauthorization_trustee_users(trustee_org_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->post_orgauthorization_trustee_users: %s\\n\" % e)"
  },
  "post_orgauthorization_trustees": {
    "operationId": "post_orgauthorization_trustees",
    "functionName": "post_orgauthorization_trustees",
    "signature": "post_orgauthorization_trustees(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TrustCreate",
        "required": "true"
      }
    ],
    "return": "Trustee",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\nbody = PureCloudPlatformClientV2.TrustCreate() # TrustCreate | Trust\n\ntry:\n    # Create a new organization authorization trust. This is required to grant other organizations access to your organization.\n    api_response = api_instance.post_orgauthorization_trustees(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->post_orgauthorization_trustees: %s\\n\" % e)"
  },
  "post_orgauthorization_trustees_audits": {
    "operationId": "post_orgauthorization_trustees_audits",
    "functionName": "post_orgauthorization_trustees_audits",
    "signature": "post_orgauthorization_trustees_audits(body, page_size, page_number, sort_by, sort_order)",
    "parameters": [
      {
        "name": "body",
        "type": "TrusteeAuditQueryRequest",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\nbody = PureCloudPlatformClientV2.TrusteeAuditQueryRequest() # TrusteeAuditQueryRequest | Values to scope the request.\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''timestamp'' # str | Sort by (optional) (default to 'timestamp')\nsort_order = ''descending'' # str | Sort order (optional) (default to 'descending')\n\ntry:\n    # Get Org Trustee Audits\n    api_response = api_instance.post_orgauthorization_trustees_audits(body, page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->post_orgauthorization_trustees_audits: %s\\n\" % e)"
  },
  "post_orgauthorization_trustees_default": {
    "operationId": "post_orgauthorization_trustees_default",
    "functionName": "post_orgauthorization_trustees_default",
    "signature": "post_orgauthorization_trustees_default(assign_default_role, auto_expire)",
    "parameters": [
      {
        "name": "assign_default_role",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "auto_expire",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Trustee",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\nassign_default_role = True # bool | Assign Admin role to default pairing with Customer Care (optional)\nauto_expire = True # bool | Automatically expire pairing after 30 days (optional)\n\ntry:\n    # Create a new organization authorization trust with Customer Care. This is required to grant your regional Customer Care organization access to your organization.\n    api_response = api_instance.post_orgauthorization_trustees_default(assign_default_role=assign_default_role, auto_expire=auto_expire)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->post_orgauthorization_trustees_default: %s\\n\" % e)"
  },
  "post_orgauthorization_trustor_audits": {
    "operationId": "post_orgauthorization_trustor_audits",
    "functionName": "post_orgauthorization_trustor_audits",
    "signature": "post_orgauthorization_trustor_audits(body, page_size, page_number, sort_by, sort_order)",
    "parameters": [
      {
        "name": "body",
        "type": "TrustorAuditQueryRequest",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\nbody = PureCloudPlatformClientV2.TrustorAuditQueryRequest() # TrustorAuditQueryRequest | Values to scope the request.\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''timestamp'' # str | Sort by (optional) (default to 'timestamp')\nsort_order = ''descending'' # str | Sort order (optional) (default to 'descending')\n\ntry:\n    # Get Org Trustor Audits\n    api_response = api_instance.post_orgauthorization_trustor_audits(body, page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->post_orgauthorization_trustor_audits: %s\\n\" % e)"
  },
  "put_orgauthorization_trustee": {
    "operationId": "put_orgauthorization_trustee",
    "functionName": "put_orgauthorization_trustee",
    "signature": "put_orgauthorization_trustee(trustee_org_id, body)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TrustUpdate",
        "required": "true"
      }
    ],
    "return": "Trustee",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\nbody = PureCloudPlatformClientV2.TrustUpdate() # TrustUpdate | Client\n\ntry:\n    # Update Org Trust\n    api_response = api_instance.put_orgauthorization_trustee(trustee_org_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->put_orgauthorization_trustee: %s\\n\" % e)"
  },
  "put_orgauthorization_trustee_group_roledivisions": {
    "operationId": "put_orgauthorization_trustee_group_roledivisions",
    "functionName": "put_orgauthorization_trustee_group_roledivisions",
    "signature": "put_orgauthorization_trustee_group_roledivisions(trustee_org_id, trustee_group_id, body)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoleDivisionGrants",
        "required": "true"
      }
    ],
    "return": "UserAuthorization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\ntrustee_group_id = 'trustee_group_id_example' # str | Trustee Group Id\nbody = PureCloudPlatformClientV2.RoleDivisionGrants() # RoleDivisionGrants | Set of roles with corresponding divisions to apply\n\ntry:\n    # Update Trustee Group Roles\n    api_response = api_instance.put_orgauthorization_trustee_group_roledivisions(trustee_org_id, trustee_group_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->put_orgauthorization_trustee_group_roledivisions: %s\\n\" % e)"
  },
  "put_orgauthorization_trustee_group_roles": {
    "operationId": "put_orgauthorization_trustee_group_roles",
    "functionName": "put_orgauthorization_trustee_group_roles",
    "signature": "put_orgauthorization_trustee_group_roles(trustee_org_id, trustee_group_id, body)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "UserAuthorization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\ntrustee_group_id = 'trustee_group_id_example' # str | Trustee Group Id\nbody = ['body_example'] # list[str] | List of roles\n\ntry:\n    # Update Trustee Group Roles\n    api_response = api_instance.put_orgauthorization_trustee_group_roles(trustee_org_id, trustee_group_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->put_orgauthorization_trustee_group_roles: %s\\n\" % e)"
  },
  "put_orgauthorization_trustee_user_roledivisions": {
    "operationId": "put_orgauthorization_trustee_user_roledivisions",
    "functionName": "put_orgauthorization_trustee_user_roledivisions",
    "signature": "put_orgauthorization_trustee_user_roledivisions(trustee_org_id, trustee_user_id, body)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoleDivisionGrants",
        "required": "true"
      }
    ],
    "return": "UserAuthorization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\ntrustee_user_id = 'trustee_user_id_example' # str | Trustee User Id\nbody = PureCloudPlatformClientV2.RoleDivisionGrants() # RoleDivisionGrants | Set of roles with corresponding divisions to apply\n\ntry:\n    # Update Trustee User Roles\n    api_response = api_instance.put_orgauthorization_trustee_user_roledivisions(trustee_org_id, trustee_user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->put_orgauthorization_trustee_user_roledivisions: %s\\n\" % e)"
  },
  "put_orgauthorization_trustee_user_roles": {
    "operationId": "put_orgauthorization_trustee_user_roles",
    "functionName": "put_orgauthorization_trustee_user_roles",
    "signature": "put_orgauthorization_trustee_user_roles(trustee_org_id, trustee_user_id, body)",
    "parameters": [
      {
        "name": "trustee_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "UserAuthorization",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustee_org_id = 'trustee_org_id_example' # str | Trustee Organization Id\ntrustee_user_id = 'trustee_user_id_example' # str | Trustee User Id\nbody = ['body_example'] # list[str] | List of roles\n\ntry:\n    # Update Trustee User Roles\n    api_response = api_instance.put_orgauthorization_trustee_user_roles(trustee_org_id, trustee_user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->put_orgauthorization_trustee_user_roles: %s\\n\" % e)"
  },
  "put_orgauthorization_trustor_cloneduser": {
    "operationId": "put_orgauthorization_trustor_cloneduser",
    "functionName": "put_orgauthorization_trustor_cloneduser",
    "signature": "put_orgauthorization_trustor_cloneduser(trustor_org_id, trustee_user_id)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ClonedUser",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustor Organization Id\ntrustee_user_id = 'trustee_user_id_example' # str | Trustee User Id\n\ntry:\n    # Creates a clone of the trustee user in the trustor org.\n    api_response = api_instance.put_orgauthorization_trustor_cloneduser(trustor_org_id, trustee_user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->put_orgauthorization_trustor_cloneduser: %s\\n\" % e)"
  },
  "put_orgauthorization_trustor_group": {
    "operationId": "put_orgauthorization_trustor_group",
    "functionName": "put_orgauthorization_trustor_group",
    "signature": "put_orgauthorization_trustor_group(trustor_org_id, trustor_group_id)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustor_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TrustGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustor Organization Id\ntrustor_group_id = 'trustor_group_id_example' # str | Trustor Group Id\n\ntry:\n    # Add a Trustee Group to the trust.\n    api_response = api_instance.put_orgauthorization_trustor_group(trustor_org_id, trustor_group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->put_orgauthorization_trustor_group: %s\\n\" % e)"
  },
  "put_orgauthorization_trustor_user": {
    "operationId": "put_orgauthorization_trustor_user",
    "functionName": "put_orgauthorization_trustor_user",
    "signature": "put_orgauthorization_trustor_user(trustor_org_id, trustee_user_id)",
    "parameters": [
      {
        "name": "trustor_org_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "trustee_user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TrustUser",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OrganizationAuthorizationApi();\ntrustor_org_id = 'trustor_org_id_example' # str | Trustor Organization Id\ntrustee_user_id = 'trustee_user_id_example' # str | Trustee User Id\n\ntry:\n    # Add a Trustee user to the trust.\n    api_response = api_instance.put_orgauthorization_trustor_user(trustor_org_id, trustee_user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OrganizationAuthorizationApi->put_orgauthorization_trustor_user: %s\\n\" % e)"
  },
  "delete_outbound_attemptlimit": {
    "operationId": "delete_outbound_attemptlimit",
    "functionName": "delete_outbound_attemptlimit",
    "signature": "delete_outbound_attemptlimit(attempt_limits_id)",
    "parameters": [
      {
        "name": "attempt_limits_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nattempt_limits_id = 'attempt_limits_id_example' # str | Attempt limits ID\n\ntry:\n    # Delete attempt limits\n    api_instance.delete_outbound_attemptlimit(attempt_limits_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_attemptlimit: %s\\n\" % e)"
  },
  "delete_outbound_callabletimeset": {
    "operationId": "delete_outbound_callabletimeset",
    "functionName": "delete_outbound_callabletimeset",
    "signature": "delete_outbound_callabletimeset(callable_time_set_id)",
    "parameters": [
      {
        "name": "callable_time_set_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncallable_time_set_id = 'callable_time_set_id_example' # str | Callable Time Set ID\n\ntry:\n    # Delete callable time set\n    api_instance.delete_outbound_callabletimeset(callable_time_set_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_callabletimeset: %s\\n\" % e)"
  },
  "delete_outbound_callanalysisresponseset": {
    "operationId": "delete_outbound_callanalysisresponseset",
    "functionName": "delete_outbound_callanalysisresponseset",
    "signature": "delete_outbound_callanalysisresponseset(call_analysis_set_id)",
    "parameters": [
      {
        "name": "call_analysis_set_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncall_analysis_set_id = 'call_analysis_set_id_example' # str | Call Analysis Response Set ID\n\ntry:\n    # Delete a dialer call analysis response set.\n    api_instance.delete_outbound_callanalysisresponseset(call_analysis_set_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_callanalysisresponseset: %s\\n\" % e)"
  },
  "delete_outbound_campaign": {
    "operationId": "delete_outbound_campaign",
    "functionName": "delete_outbound_campaign",
    "signature": "delete_outbound_campaign(campaign_id)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Campaign",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\n\ntry:\n    # Delete a campaign.\n    api_response = api_instance.delete_outbound_campaign(campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_campaign: %s\\n\" % e)"
  },
  "delete_outbound_campaign_progress": {
    "operationId": "delete_outbound_campaign_progress",
    "functionName": "delete_outbound_campaign_progress",
    "signature": "delete_outbound_campaign_progress(campaign_id)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\n\ntry:\n    # Reset campaign progress and recycle the campaign\n    api_instance.delete_outbound_campaign_progress(campaign_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_campaign_progress: %s\\n\" % e)"
  },
  "delete_outbound_campaignrule": {
    "operationId": "delete_outbound_campaignrule",
    "functionName": "delete_outbound_campaignrule",
    "signature": "delete_outbound_campaignrule(campaign_rule_id)",
    "parameters": [
      {
        "name": "campaign_rule_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_rule_id = 'campaign_rule_id_example' # str | Campaign Rule ID\n\ntry:\n    # Delete Campaign Rule\n    api_instance.delete_outbound_campaignrule(campaign_rule_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_campaignrule: %s\\n\" % e)"
  },
  "delete_outbound_contactlist": {
    "operationId": "delete_outbound_contactlist",
    "functionName": "delete_outbound_contactlist",
    "signature": "delete_outbound_contactlist(contact_list_id)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | ContactList ID\n\ntry:\n    # Delete a contact list.\n    api_instance.delete_outbound_contactlist(contact_list_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_contactlist: %s\\n\" % e)"
  },
  "delete_outbound_contactlist_contact": {
    "operationId": "delete_outbound_contactlist_contact",
    "functionName": "delete_outbound_contactlist_contact",
    "signature": "delete_outbound_contactlist_contact(contact_list_id, contact_id)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | Contact List ID\ncontact_id = 'contact_id_example' # str | Contact ID\n\ntry:\n    # Delete a contact.\n    api_instance.delete_outbound_contactlist_contact(contact_list_id, contact_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_contactlist_contact: %s\\n\" % e)"
  },
  "delete_outbound_contactlist_contacts": {
    "operationId": "delete_outbound_contactlist_contacts",
    "functionName": "delete_outbound_contactlist_contacts",
    "signature": "delete_outbound_contactlist_contacts(contact_list_id, contact_ids)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "contact_ids",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | Contact List ID\ncontact_ids = ['contact_ids_example'] # list[str] | ContactIds to delete.\n\ntry:\n    # Delete contacts from a contact list.\n    api_instance.delete_outbound_contactlist_contacts(contact_list_id, contact_ids)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_contactlist_contacts: %s\\n\" % e)"
  },
  "delete_outbound_contactlistfilter": {
    "operationId": "delete_outbound_contactlistfilter",
    "functionName": "delete_outbound_contactlistfilter",
    "signature": "delete_outbound_contactlistfilter(contact_list_filter_id)",
    "parameters": [
      {
        "name": "contact_list_filter_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_filter_id = 'contact_list_filter_id_example' # str | Contact List Filter ID\n\ntry:\n    # Delete Contact List Filter\n    api_instance.delete_outbound_contactlistfilter(contact_list_filter_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_contactlistfilter: %s\\n\" % e)"
  },
  "delete_outbound_contactlists": {
    "operationId": "delete_outbound_contactlists",
    "functionName": "delete_outbound_contactlists",
    "signature": "delete_outbound_contactlists(id)",
    "parameters": [
      {
        "name": "id",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nid = ['id_example'] # list[str] | contact list id(s) to delete\n\ntry:\n    # Delete multiple contact lists.\n    api_instance.delete_outbound_contactlists(id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_contactlists: %s\\n\" % e)"
  },
  "delete_outbound_contactlisttemplate": {
    "operationId": "delete_outbound_contactlisttemplate",
    "functionName": "delete_outbound_contactlisttemplate",
    "signature": "delete_outbound_contactlisttemplate(contact_list_template_id)",
    "parameters": [
      {
        "name": "contact_list_template_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_template_id = 'contact_list_template_id_example' # str | ContactListTemplate ID\n\ntry:\n    # Delete Contact List Template\n    api_instance.delete_outbound_contactlisttemplate(contact_list_template_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_contactlisttemplate: %s\\n\" % e)"
  },
  "delete_outbound_contactlisttemplates": {
    "operationId": "delete_outbound_contactlisttemplates",
    "functionName": "delete_outbound_contactlisttemplates",
    "signature": "delete_outbound_contactlisttemplates(id)",
    "parameters": [
      {
        "name": "id",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nid = ['id_example'] # list[str] | contact list template id(s) to delete\n\ntry:\n    # Delete multiple contact list templates.\n    api_instance.delete_outbound_contactlisttemplates(id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_contactlisttemplates: %s\\n\" % e)"
  },
  "delete_outbound_digitalruleset": {
    "operationId": "delete_outbound_digitalruleset",
    "functionName": "delete_outbound_digitalruleset",
    "signature": "delete_outbound_digitalruleset(digital_rule_set_id)",
    "parameters": [
      {
        "name": "digital_rule_set_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndigital_rule_set_id = 'digital_rule_set_id_example' # str | The Digital Rule Set ID\n\ntry:\n    # Delete an Outbound Digital Rule Set\n    api_instance.delete_outbound_digitalruleset(digital_rule_set_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_digitalruleset: %s\\n\" % e)"
  },
  "delete_outbound_dnclist": {
    "operationId": "delete_outbound_dnclist",
    "functionName": "delete_outbound_dnclist",
    "signature": "delete_outbound_dnclist(dnc_list_id)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\n\ntry:\n    # Delete dialer DNC list\n    api_instance.delete_outbound_dnclist(dnc_list_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_dnclist: %s\\n\" % e)"
  },
  "delete_outbound_dnclist_customexclusioncolumns": {
    "operationId": "delete_outbound_dnclist_customexclusioncolumns",
    "functionName": "delete_outbound_dnclist_customexclusioncolumns",
    "signature": "delete_outbound_dnclist_customexclusioncolumns(dnc_list_id, expired_only)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expired_only",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\nexpired_only = False # bool | Set to true to only remove DNC entries that are expired (optional) (default to False)\n\ntry:\n    # Deletes all or expired custom exclusion column entries from a DNC list.\n    api_instance.delete_outbound_dnclist_customexclusioncolumns(dnc_list_id, expired_only=expired_only)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_dnclist_customexclusioncolumns: %s\\n\" % e)"
  },
  "delete_outbound_dnclist_emailaddresses": {
    "operationId": "delete_outbound_dnclist_emailaddresses",
    "functionName": "delete_outbound_dnclist_emailaddresses",
    "signature": "delete_outbound_dnclist_emailaddresses(dnc_list_id, expired_only)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expired_only",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\nexpired_only = False # bool | Set to true to only remove DNC entries that are expired (optional) (default to False)\n\ntry:\n    # Deletes all or expired email addresses from a DNC list.\n    api_instance.delete_outbound_dnclist_emailaddresses(dnc_list_id, expired_only=expired_only)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_dnclist_emailaddresses: %s\\n\" % e)"
  },
  "delete_outbound_dnclist_phonenumbers": {
    "operationId": "delete_outbound_dnclist_phonenumbers",
    "functionName": "delete_outbound_dnclist_phonenumbers",
    "signature": "delete_outbound_dnclist_phonenumbers(dnc_list_id, expired_only)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expired_only",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\nexpired_only = False # bool | Set to true to only remove DNC entries that are expired (optional) (default to False)\n\ntry:\n    # Deletes all or expired phone numbers from a DNC list.\n    api_instance.delete_outbound_dnclist_phonenumbers(dnc_list_id, expired_only=expired_only)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_dnclist_phonenumbers: %s\\n\" % e)"
  },
  "delete_outbound_filespecificationtemplate": {
    "operationId": "delete_outbound_filespecificationtemplate",
    "functionName": "delete_outbound_filespecificationtemplate",
    "signature": "delete_outbound_filespecificationtemplate(file_specification_template_id)",
    "parameters": [
      {
        "name": "file_specification_template_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nfile_specification_template_id = 'file_specification_template_id_example' # str | File Specification Template ID\n\ntry:\n    # Delete File Specification Template\n    api_instance.delete_outbound_filespecificationtemplate(file_specification_template_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_filespecificationtemplate: %s\\n\" % e)"
  },
  "delete_outbound_filespecificationtemplates_bulk": {
    "operationId": "delete_outbound_filespecificationtemplates_bulk",
    "functionName": "delete_outbound_filespecificationtemplates_bulk",
    "signature": "delete_outbound_filespecificationtemplates_bulk(id)",
    "parameters": [
      {
        "name": "id",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nid = ['id_example'] # list[str] | File Specification template id(s) to delete\n\ntry:\n    # Delete multiple file specification templates.\n    api_instance.delete_outbound_filespecificationtemplates_bulk(id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_filespecificationtemplates_bulk: %s\\n\" % e)"
  },
  "delete_outbound_importtemplate": {
    "operationId": "delete_outbound_importtemplate",
    "functionName": "delete_outbound_importtemplate",
    "signature": "delete_outbound_importtemplate(import_template_id)",
    "parameters": [
      {
        "name": "import_template_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nimport_template_id = 'import_template_id_example' # str | Import Template ID\n\ntry:\n    # Delete Import Template\n    api_instance.delete_outbound_importtemplate(import_template_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_importtemplate: %s\\n\" % e)"
  },
  "delete_outbound_importtemplates": {
    "operationId": "delete_outbound_importtemplates",
    "functionName": "delete_outbound_importtemplates",
    "signature": "delete_outbound_importtemplates(id)",
    "parameters": [
      {
        "name": "id",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nid = ['id_example'] # list[str] | import template id(s) to delete\n\ntry:\n    # Delete multiple import templates.\n    api_instance.delete_outbound_importtemplates(id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_importtemplates: %s\\n\" % e)"
  },
  "delete_outbound_messagingcampaign": {
    "operationId": "delete_outbound_messagingcampaign",
    "functionName": "delete_outbound_messagingcampaign",
    "signature": "delete_outbound_messagingcampaign(messaging_campaign_id)",
    "parameters": [
      {
        "name": "messaging_campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MessagingCampaign",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nmessaging_campaign_id = 'messaging_campaign_id_example' # str | The Messaging Campaign ID\n\ntry:\n    # Delete an Outbound Messaging Campaign\n    api_response = api_instance.delete_outbound_messagingcampaign(messaging_campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_messagingcampaign: %s\\n\" % e)"
  },
  "delete_outbound_messagingcampaign_progress": {
    "operationId": "delete_outbound_messagingcampaign_progress",
    "functionName": "delete_outbound_messagingcampaign_progress",
    "signature": "delete_outbound_messagingcampaign_progress(messaging_campaign_id)",
    "parameters": [
      {
        "name": "messaging_campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nmessaging_campaign_id = 'messaging_campaign_id_example' # str | The Messaging Campaign ID\n\ntry:\n    # Reset messaging campaign progress and recycle the messaging campaign\n    api_instance.delete_outbound_messagingcampaign_progress(messaging_campaign_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_messagingcampaign_progress: %s\\n\" % e)"
  },
  "delete_outbound_ruleset": {
    "operationId": "delete_outbound_ruleset",
    "functionName": "delete_outbound_ruleset",
    "signature": "delete_outbound_ruleset(rule_set_id)",
    "parameters": [
      {
        "name": "rule_set_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nrule_set_id = 'rule_set_id_example' # str | Rule Set ID\n\ntry:\n    # Delete a Rule Set.\n    api_instance.delete_outbound_ruleset(rule_set_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_ruleset: %s\\n\" % e)"
  },
  "delete_outbound_schedules_campaign": {
    "operationId": "delete_outbound_schedules_campaign",
    "functionName": "delete_outbound_schedules_campaign",
    "signature": "delete_outbound_schedules_campaign(campaign_id)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\n\ntry:\n    # Delete a dialer campaign schedule.\n    api_instance.delete_outbound_schedules_campaign(campaign_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_schedules_campaign: %s\\n\" % e)"
  },
  "delete_outbound_schedules_emailcampaign": {
    "operationId": "delete_outbound_schedules_emailcampaign",
    "functionName": "delete_outbound_schedules_emailcampaign",
    "signature": "delete_outbound_schedules_emailcampaign(email_campaign_id)",
    "parameters": [
      {
        "name": "email_campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nemail_campaign_id = 'email_campaign_id_example' # str | Email Campaign ID\n\ntry:\n    # Delete an email campaign schedule.\n    api_instance.delete_outbound_schedules_emailcampaign(email_campaign_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_schedules_emailcampaign: %s\\n\" % e)"
  },
  "delete_outbound_schedules_messagingcampaign": {
    "operationId": "delete_outbound_schedules_messagingcampaign",
    "functionName": "delete_outbound_schedules_messagingcampaign",
    "signature": "delete_outbound_schedules_messagingcampaign(messaging_campaign_id)",
    "parameters": [
      {
        "name": "messaging_campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nmessaging_campaign_id = 'messaging_campaign_id_example' # str | Messaging Campaign ID\n\ntry:\n    # Delete a messaging campaign schedule.\n    api_instance.delete_outbound_schedules_messagingcampaign(messaging_campaign_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_schedules_messagingcampaign: %s\\n\" % e)"
  },
  "delete_outbound_schedules_sequence": {
    "operationId": "delete_outbound_schedules_sequence",
    "functionName": "delete_outbound_schedules_sequence",
    "signature": "delete_outbound_schedules_sequence(sequence_id)",
    "parameters": [
      {
        "name": "sequence_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nsequence_id = 'sequence_id_example' # str | Sequence ID\n\ntry:\n    # Delete a dialer sequence schedule.\n    api_instance.delete_outbound_schedules_sequence(sequence_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_schedules_sequence: %s\\n\" % e)"
  },
  "delete_outbound_sequence": {
    "operationId": "delete_outbound_sequence",
    "functionName": "delete_outbound_sequence",
    "signature": "delete_outbound_sequence(sequence_id)",
    "parameters": [
      {
        "name": "sequence_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nsequence_id = 'sequence_id_example' # str | Campaign Sequence ID\n\ntry:\n    # Delete a dialer campaign sequence.\n    api_instance.delete_outbound_sequence(sequence_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->delete_outbound_sequence: %s\\n\" % e)"
  },
  "get_outbound_attemptlimit": {
    "operationId": "get_outbound_attemptlimit",
    "functionName": "get_outbound_attemptlimit",
    "signature": "get_outbound_attemptlimit(attempt_limits_id)",
    "parameters": [
      {
        "name": "attempt_limits_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AttemptLimits",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nattempt_limits_id = 'attempt_limits_id_example' # str | Attempt limits ID\n\ntry:\n    # Get attempt limits\n    api_response = api_instance.get_outbound_attemptlimit(attempt_limits_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_attemptlimit: %s\\n\" % e)"
  },
  "get_outbound_attemptlimits": {
    "operationId": "get_outbound_attemptlimits",
    "functionName": "get_outbound_attemptlimits",
    "signature": "get_outbound_attemptlimits(page_size, page_number, allow_empty_result, filter_type, name, sort_by, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allow_empty_result",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "AttemptLimitsEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nallow_empty_result = False # bool | Whether to return an empty page when there are no results for that page (optional) (default to False)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query attempt limits list\n    api_response = api_instance.get_outbound_attemptlimits(page_size=page_size, page_number=page_number, allow_empty_result=allow_empty_result, filter_type=filter_type, name=name, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_attemptlimits: %s\\n\" % e)"
  },
  "get_outbound_callabletimeset": {
    "operationId": "get_outbound_callabletimeset",
    "functionName": "get_outbound_callabletimeset",
    "signature": "get_outbound_callabletimeset(callable_time_set_id)",
    "parameters": [
      {
        "name": "callable_time_set_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CallableTimeSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncallable_time_set_id = 'callable_time_set_id_example' # str | Callable Time Set ID\n\ntry:\n    # Get callable time set\n    api_response = api_instance.get_outbound_callabletimeset(callable_time_set_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_callabletimeset: %s\\n\" % e)"
  },
  "get_outbound_callabletimesets": {
    "operationId": "get_outbound_callabletimesets",
    "functionName": "get_outbound_callabletimesets",
    "signature": "get_outbound_callabletimesets(page_size, page_number, allow_empty_result, filter_type, name, sort_by, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allow_empty_result",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CallableTimeSetEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nallow_empty_result = False # bool | Whether to return an empty page when there are no results for that page (optional) (default to False)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query callable time set list\n    api_response = api_instance.get_outbound_callabletimesets(page_size=page_size, page_number=page_number, allow_empty_result=allow_empty_result, filter_type=filter_type, name=name, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_callabletimesets: %s\\n\" % e)"
  },
  "get_outbound_callanalysisresponseset": {
    "operationId": "get_outbound_callanalysisresponseset",
    "functionName": "get_outbound_callanalysisresponseset",
    "signature": "get_outbound_callanalysisresponseset(call_analysis_set_id)",
    "parameters": [
      {
        "name": "call_analysis_set_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ResponseSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncall_analysis_set_id = 'call_analysis_set_id_example' # str | Call Analysis Response Set ID\n\ntry:\n    # Get a dialer call analysis response set.\n    api_response = api_instance.get_outbound_callanalysisresponseset(call_analysis_set_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_callanalysisresponseset: %s\\n\" % e)"
  },
  "get_outbound_callanalysisresponsesets": {
    "operationId": "get_outbound_callanalysisresponsesets",
    "functionName": "get_outbound_callanalysisresponsesets",
    "signature": "get_outbound_callanalysisresponsesets(page_size, page_number, allow_empty_result, filter_type, name, sort_by, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allow_empty_result",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ResponseSetEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nallow_empty_result = False # bool | Whether to return an empty page when there are no results for that page (optional) (default to False)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query a list of dialer call analysis response sets.\n    api_response = api_instance.get_outbound_callanalysisresponsesets(page_size=page_size, page_number=page_number, allow_empty_result=allow_empty_result, filter_type=filter_type, name=name, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_callanalysisresponsesets: %s\\n\" % e)"
  },
  "get_outbound_campaign": {
    "operationId": "get_outbound_campaign",
    "functionName": "get_outbound_campaign",
    "signature": "get_outbound_campaign(campaign_id)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Campaign",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\n\ntry:\n    # Get dialer campaign.\n    api_response = api_instance.get_outbound_campaign(campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaign: %s\\n\" % e)"
  },
  "get_outbound_campaign_agentownedmappingpreview_results": {
    "operationId": "get_outbound_campaign_agentownedmappingpreview_results",
    "functionName": "get_outbound_campaign_agentownedmappingpreview_results",
    "signature": "get_outbound_campaign_agentownedmappingpreview_results(campaign_id)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AgentOwnedMappingPreviewListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\n\ntry:\n    # Get a preview of how agents will be mapped to this campaign's contact list.\n    api_response = api_instance.get_outbound_campaign_agentownedmappingpreview_results(campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaign_agentownedmappingpreview_results: %s\\n\" % e)"
  },
  "get_outbound_campaign_diagnostics": {
    "operationId": "get_outbound_campaign_diagnostics",
    "functionName": "get_outbound_campaign_diagnostics",
    "signature": "get_outbound_campaign_diagnostics(campaign_id)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CampaignDiagnostics",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\n\ntry:\n    # Get campaign diagnostics\n    api_response = api_instance.get_outbound_campaign_diagnostics(campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaign_diagnostics: %s\\n\" % e)"
  },
  "get_outbound_campaign_interactions": {
    "operationId": "get_outbound_campaign_interactions",
    "functionName": "get_outbound_campaign_interactions",
    "signature": "get_outbound_campaign_interactions(campaign_id)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CampaignInteractions",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\n\ntry:\n    # Get dialer campaign interactions.\n    api_response = api_instance.get_outbound_campaign_interactions(campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaign_interactions: %s\\n\" % e)"
  },
  "get_outbound_campaign_linedistribution": {
    "operationId": "get_outbound_campaign_linedistribution",
    "functionName": "get_outbound_campaign_linedistribution",
    "signature": "get_outbound_campaign_linedistribution(campaign_id, include_only_active_campaigns, edge_group_id, site_id, use_weight, relative_weight, outbound_line_count)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_only_active_campaigns",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "edge_group_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "site_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "use_weight",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "relative_weight",
        "type": "int",
        "required": "false"
      },
      {
        "name": "outbound_line_count",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "CampaignOutboundLinesDistribution",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\ninclude_only_active_campaigns = True # bool | If true will return only active Campaigns (optional) (default to True)\nedge_group_id = 'edge_group_id_example' # str | Edge group to be used in line distribution calculations instead of current Campaign's Edge Group. Campaign's Site and Edge Group are mutually exclusive. (optional)\nsite_id = 'site_id_example' # str | Site to be used in line distribution calculations instead of current Campaign's Site.  Campaign's Site and Edge Group are mutually exclusive. (optional)\nuse_weight = True # bool | Enable usage of weight, this value overrides current Campaign's setting in line distribution calculations (optional)\nrelative_weight = 56 # int | Relative weight to be used in line distribution calculations instead of current Campaign's relative weight (optional)\noutbound_line_count = 56 # int | The number of outbound lines to be used in line distribution calculations, instead of current Campaign's Outbound Lines Count (optional)\n\ntry:\n    # Get line distribution information for campaigns using same Edge Group or Site as given campaign\n    api_response = api_instance.get_outbound_campaign_linedistribution(campaign_id, include_only_active_campaigns=include_only_active_campaigns, edge_group_id=edge_group_id, site_id=site_id, use_weight=use_weight, relative_weight=relative_weight, outbound_line_count=outbound_line_count)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaign_linedistribution: %s\\n\" % e)"
  },
  "get_outbound_campaign_progress": {
    "operationId": "get_outbound_campaign_progress",
    "functionName": "get_outbound_campaign_progress",
    "signature": "get_outbound_campaign_progress(campaign_id)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CampaignProgress",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\n\ntry:\n    # Get campaign progress\n    api_response = api_instance.get_outbound_campaign_progress(campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaign_progress: %s\\n\" % e)"
  },
  "get_outbound_campaign_stats": {
    "operationId": "get_outbound_campaign_stats",
    "functionName": "get_outbound_campaign_stats",
    "signature": "get_outbound_campaign_stats(campaign_id)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CampaignStats",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\n\ntry:\n    # Get statistics about a Dialer Campaign\n    api_response = api_instance.get_outbound_campaign_stats(campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaign_stats: %s\\n\" % e)"
  },
  "get_outbound_campaignrule": {
    "operationId": "get_outbound_campaignrule",
    "functionName": "get_outbound_campaignrule",
    "signature": "get_outbound_campaignrule(campaign_rule_id)",
    "parameters": [
      {
        "name": "campaign_rule_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CampaignRule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_rule_id = 'campaign_rule_id_example' # str | Campaign Rule ID\n\ntry:\n    # Get Campaign Rule\n    api_response = api_instance.get_outbound_campaignrule(campaign_rule_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaignrule: %s\\n\" % e)"
  },
  "get_outbound_campaignrules": {
    "operationId": "get_outbound_campaignrules",
    "functionName": "get_outbound_campaignrules",
    "signature": "get_outbound_campaignrules(page_size, page_number, allow_empty_result, filter_type, name, sort_by, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allow_empty_result",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CampaignRuleEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nallow_empty_result = False # bool | Whether to return an empty page when there are no results for that page (optional) (default to False)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query Campaign Rule list\n    api_response = api_instance.get_outbound_campaignrules(page_size=page_size, page_number=page_number, allow_empty_result=allow_empty_result, filter_type=filter_type, name=name, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaignrules: %s\\n\" % e)"
  },
  "get_outbound_campaigns": {
    "operationId": "get_outbound_campaigns",
    "functionName": "get_outbound_campaigns",
    "signature": "get_outbound_campaigns(page_size, page_number, filter_type, name, id, contact_list_id, dnc_list_ids, distribution_queue_id, edge_group_id, call_analysis_response_set_id, division_id, sort_by, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "dnc_list_ids",
        "type": "str",
        "required": "false"
      },
      {
        "name": "distribution_queue_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "edge_group_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "call_analysis_response_set_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CampaignEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nid = ['id_example'] # list[str] | id (optional)\ncontact_list_id = 'contact_list_id_example' # str | Contact List ID (optional)\ndnc_list_ids = 'dnc_list_ids_example' # str | DNC list ID (optional)\ndistribution_queue_id = 'distribution_queue_id_example' # str | Distribution queue ID (optional)\nedge_group_id = 'edge_group_id_example' # str | Edge group ID (optional)\ncall_analysis_response_set_id = 'call_analysis_response_set_id_example' # str | Call analysis response set ID (optional)\ndivision_id = ['division_id_example'] # list[str] | Division ID(s) (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query a list of dialer campaigns.\n    api_response = api_instance.get_outbound_campaigns(page_size=page_size, page_number=page_number, filter_type=filter_type, name=name, id=id, contact_list_id=contact_list_id, dnc_list_ids=dnc_list_ids, distribution_queue_id=distribution_queue_id, edge_group_id=edge_group_id, call_analysis_response_set_id=call_analysis_response_set_id, division_id=division_id, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaigns: %s\\n\" % e)"
  },
  "get_outbound_campaigns_all": {
    "operationId": "get_outbound_campaigns_all",
    "functionName": "get_outbound_campaigns_all",
    "signature": "get_outbound_campaigns_all(page_size, page_number, id, name, division_id, media_type, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "media_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CommonCampaignEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nid = ['id_example'] # list[str] | Campaign ID(s) (optional)\nname = 'name_example' # str | Campaign name(s) (optional)\ndivision_id = ['division_id_example'] # list[str] | Division ID(s) (optional)\nmedia_type = ['media_type_example'] # list[str] | Media type(s) (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query across all types of campaigns by division\n    api_response = api_instance.get_outbound_campaigns_all(page_size=page_size, page_number=page_number, id=id, name=name, division_id=division_id, media_type=media_type, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaigns_all: %s\\n\" % e)"
  },
  "get_outbound_campaigns_all_divisionviews": {
    "operationId": "get_outbound_campaigns_all_divisionviews",
    "functionName": "get_outbound_campaigns_all_divisionviews",
    "signature": "get_outbound_campaigns_all_divisionviews(page_size, page_number, id, name, division_id, media_type, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "media_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CommonCampaignDivisionViewEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nid = ['id_example'] # list[str] | Campaign ID(s) (optional)\nname = 'name_example' # str | Campaign name(s) (optional)\ndivision_id = ['division_id_example'] # list[str] | Division ID(s) (optional)\nmedia_type = ['media_type_example'] # list[str] | Media type(s) (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query across all types of campaigns\n    api_response = api_instance.get_outbound_campaigns_all_divisionviews(page_size=page_size, page_number=page_number, id=id, name=name, division_id=division_id, media_type=media_type, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaigns_all_divisionviews: %s\\n\" % e)"
  },
  "get_outbound_campaigns_divisionview": {
    "operationId": "get_outbound_campaigns_divisionview",
    "functionName": "get_outbound_campaigns_divisionview",
    "signature": "get_outbound_campaigns_divisionview(campaign_id)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CampaignDivisionView",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\n\ntry:\n    # Get a basic Campaign information object\n    api_response = api_instance.get_outbound_campaigns_divisionview(campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaigns_divisionview: %s\\n\" % e)"
  },
  "get_outbound_campaigns_divisionviews": {
    "operationId": "get_outbound_campaigns_divisionviews",
    "functionName": "get_outbound_campaigns_divisionviews",
    "signature": "get_outbound_campaigns_divisionviews(page_size, page_number, filter_type, name, id, sort_by, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CampaignDivisionViewListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nid = ['id_example'] # list[str] | id (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query a list of basic Campaign information objects\n    api_response = api_instance.get_outbound_campaigns_divisionviews(page_size=page_size, page_number=page_number, filter_type=filter_type, name=name, id=id, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_campaigns_divisionviews: %s\\n\" % e)"
  },
  "get_outbound_contactlist": {
    "operationId": "get_outbound_contactlist",
    "functionName": "get_outbound_contactlist",
    "signature": "get_outbound_contactlist(contact_list_id, include_import_status, include_size)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_import_status",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_size",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "ContactList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | ContactList ID\ninclude_import_status = False # bool | Import status (optional) (default to False)\ninclude_size = False # bool | Include size (optional) (default to False)\n\ntry:\n    # Get a dialer contact list.\n    api_response = api_instance.get_outbound_contactlist(contact_list_id, include_import_status=include_import_status, include_size=include_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_contactlist: %s\\n\" % e)"
  },
  "get_outbound_contactlist_contact": {
    "operationId": "get_outbound_contactlist_contact",
    "functionName": "get_outbound_contactlist_contact",
    "signature": "get_outbound_contactlist_contact(contact_list_id, contact_id)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DialerContact",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | Contact List ID\ncontact_id = 'contact_id_example' # str | Contact ID\n\ntry:\n    # Get a contact.\n    api_response = api_instance.get_outbound_contactlist_contact(contact_list_id, contact_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_contactlist_contact: %s\\n\" % e)"
  },
  "get_outbound_contactlist_export": {
    "operationId": "get_outbound_contactlist_export",
    "functionName": "get_outbound_contactlist_export",
    "signature": "get_outbound_contactlist_export(contact_list_id, download)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "download",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ExportUri",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | ContactList ID\ndownload = ''false'' # str | Redirect to download uri (optional) (default to 'false')\n\ntry:\n    # Get the URI of a contact list export.\n    api_response = api_instance.get_outbound_contactlist_export(contact_list_id, download=download)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_contactlist_export: %s\\n\" % e)"
  },
  "get_outbound_contactlist_importstatus": {
    "operationId": "get_outbound_contactlist_importstatus",
    "functionName": "get_outbound_contactlist_importstatus",
    "signature": "get_outbound_contactlist_importstatus(contact_list_id)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ImportStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | ContactList ID\n\ntry:\n    # Get dialer contactList import status.\n    api_response = api_instance.get_outbound_contactlist_importstatus(contact_list_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_contactlist_importstatus: %s\\n\" % e)"
  },
  "get_outbound_contactlist_timezonemappingpreview": {
    "operationId": "get_outbound_contactlist_timezonemappingpreview",
    "functionName": "get_outbound_contactlist_timezonemappingpreview",
    "signature": "get_outbound_contactlist_timezonemappingpreview(contact_list_id)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TimeZoneMappingPreview",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | ContactList ID\n\ntry:\n    # Preview the result of applying Automatic Time Zone Mapping to a contact list\n    api_response = api_instance.get_outbound_contactlist_timezonemappingpreview(contact_list_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_contactlist_timezonemappingpreview: %s\\n\" % e)"
  },
  "get_outbound_contactlistfilter": {
    "operationId": "get_outbound_contactlistfilter",
    "functionName": "get_outbound_contactlistfilter",
    "signature": "get_outbound_contactlistfilter(contact_list_filter_id)",
    "parameters": [
      {
        "name": "contact_list_filter_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ContactListFilter",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_filter_id = 'contact_list_filter_id_example' # str | Contact List Filter ID\n\ntry:\n    # Get Contact list filter\n    api_response = api_instance.get_outbound_contactlistfilter(contact_list_filter_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_contactlistfilter: %s\\n\" % e)"
  },
  "get_outbound_contactlistfilters": {
    "operationId": "get_outbound_contactlistfilters",
    "functionName": "get_outbound_contactlistfilters",
    "signature": "get_outbound_contactlistfilters(page_size, page_number, allow_empty_result, filter_type, name, sort_by, sort_order, contact_list_id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allow_empty_result",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ContactListFilterEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nallow_empty_result = False # bool | Whether to return an empty page when there are no results for that page (optional) (default to False)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\ncontact_list_id = 'contact_list_id_example' # str | Contact List ID (optional)\n\ntry:\n    # Query Contact list filters\n    api_response = api_instance.get_outbound_contactlistfilters(page_size=page_size, page_number=page_number, allow_empty_result=allow_empty_result, filter_type=filter_type, name=name, sort_by=sort_by, sort_order=sort_order, contact_list_id=contact_list_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_contactlistfilters: %s\\n\" % e)"
  },
  "get_outbound_contactlists": {
    "operationId": "get_outbound_contactlists",
    "functionName": "get_outbound_contactlists",
    "signature": "get_outbound_contactlists(include_import_status, include_size, page_size, page_number, allow_empty_result, filter_type, name, id, division_id, sort_by, sort_order)",
    "parameters": [
      {
        "name": "include_import_status",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_size",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allow_empty_result",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ContactListEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ninclude_import_status = False # bool | Include import status (optional) (default to False)\ninclude_size = False # bool | Include size (optional) (default to False)\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nallow_empty_result = False # bool | Whether to return an empty page when there are no results for that page (optional) (default to False)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nid = ['id_example'] # list[str] | id (optional)\ndivision_id = ['division_id_example'] # list[str] | Division ID(s) (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query a list of contact lists.\n    api_response = api_instance.get_outbound_contactlists(include_import_status=include_import_status, include_size=include_size, page_size=page_size, page_number=page_number, allow_empty_result=allow_empty_result, filter_type=filter_type, name=name, id=id, division_id=division_id, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_contactlists: %s\\n\" % e)"
  },
  "get_outbound_contactlists_divisionview": {
    "operationId": "get_outbound_contactlists_divisionview",
    "functionName": "get_outbound_contactlists_divisionview",
    "signature": "get_outbound_contactlists_divisionview(contact_list_id, include_import_status, include_size)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_import_status",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_size",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "ContactListDivisionView",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | Contactlist ID\ninclude_import_status = False # bool | Include import status (optional) (default to False)\ninclude_size = False # bool | Include size (optional) (default to False)\n\ntry:\n    # Get a basic ContactList information object\n    api_response = api_instance.get_outbound_contactlists_divisionview(contact_list_id, include_import_status=include_import_status, include_size=include_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_contactlists_divisionview: %s\\n\" % e)"
  },
  "get_outbound_contactlists_divisionviews": {
    "operationId": "get_outbound_contactlists_divisionviews",
    "functionName": "get_outbound_contactlists_divisionviews",
    "signature": "get_outbound_contactlists_divisionviews(include_import_status, include_size, page_size, page_number, filter_type, name, id, sort_by, sort_order)",
    "parameters": [
      {
        "name": "include_import_status",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_size",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ContactListDivisionViewListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ninclude_import_status = False # bool | Include import status (optional) (default to False)\ninclude_size = False # bool | Include size (optional) (default to False)\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nid = ['id_example'] # list[str] | id (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query a list of simplified contact list objects.\n    api_response = api_instance.get_outbound_contactlists_divisionviews(include_import_status=include_import_status, include_size=include_size, page_size=page_size, page_number=page_number, filter_type=filter_type, name=name, id=id, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_contactlists_divisionviews: %s\\n\" % e)"
  },
  "get_outbound_contactlisttemplate": {
    "operationId": "get_outbound_contactlisttemplate",
    "functionName": "get_outbound_contactlisttemplate",
    "signature": "get_outbound_contactlisttemplate(contact_list_template_id)",
    "parameters": [
      {
        "name": "contact_list_template_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ContactListTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_template_id = 'contact_list_template_id_example' # str | ContactListTemplate ID\n\ntry:\n    # Get Contact List Template\n    api_response = api_instance.get_outbound_contactlisttemplate(contact_list_template_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_contactlisttemplate: %s\\n\" % e)"
  },
  "get_outbound_contactlisttemplates": {
    "operationId": "get_outbound_contactlisttemplates",
    "functionName": "get_outbound_contactlisttemplates",
    "signature": "get_outbound_contactlisttemplates(page_size, page_number, allow_empty_result, filter_type, name, sort_by, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allow_empty_result",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ContactListTemplateEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nallow_empty_result = False # bool | Whether to return an empty page when there are no results for that page (optional) (default to False)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query a list of contact list templates\n    api_response = api_instance.get_outbound_contactlisttemplates(page_size=page_size, page_number=page_number, allow_empty_result=allow_empty_result, filter_type=filter_type, name=name, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_contactlisttemplates: %s\\n\" % e)"
  },
  "get_outbound_digitalruleset": {
    "operationId": "get_outbound_digitalruleset",
    "functionName": "get_outbound_digitalruleset",
    "signature": "get_outbound_digitalruleset(digital_rule_set_id)",
    "parameters": [
      {
        "name": "digital_rule_set_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DigitalRuleSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndigital_rule_set_id = 'digital_rule_set_id_example' # str | The Digital Rule Set ID\n\ntry:\n    # Get an Outbound Digital Rule Set\n    api_response = api_instance.get_outbound_digitalruleset(digital_rule_set_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_digitalruleset: %s\\n\" % e)"
  },
  "get_outbound_digitalrulesets": {
    "operationId": "get_outbound_digitalrulesets",
    "functionName": "get_outbound_digitalrulesets",
    "signature": "get_outbound_digitalrulesets(page_size, page_number, sort_by, sort_order, name, id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "DigitalRuleSetEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''name'' # str | The field to sort by (optional) (default to 'name')\nsort_order = ''ascending'' # str | The direction to sort (optional) (default to 'ascending')\nname = 'name_example' # str | Name (optional)\nid = ['id_example'] # list[str] | A list of digital rule set ids to bulk fetch (optional)\n\ntry:\n    # Query a list of Outbound Digital Rule Sets\n    api_response = api_instance.get_outbound_digitalrulesets(page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order, name=name, id=id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_digitalrulesets: %s\\n\" % e)"
  },
  "get_outbound_dnclist": {
    "operationId": "get_outbound_dnclist",
    "functionName": "get_outbound_dnclist",
    "signature": "get_outbound_dnclist(dnc_list_id, include_import_status, include_size)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_import_status",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_size",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "DncList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\ninclude_import_status = False # bool | Import status (optional) (default to False)\ninclude_size = False # bool | Include size (optional) (default to False)\n\ntry:\n    # Get dialer DNC list\n    api_response = api_instance.get_outbound_dnclist(dnc_list_id, include_import_status=include_import_status, include_size=include_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_dnclist: %s\\n\" % e)"
  },
  "get_outbound_dnclist_export": {
    "operationId": "get_outbound_dnclist_export",
    "functionName": "get_outbound_dnclist_export",
    "signature": "get_outbound_dnclist_export(dnc_list_id, download)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "download",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ExportUri",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\ndownload = ''false'' # str | Redirect to download uri (optional) (default to 'false')\n\ntry:\n    # Get the URI of a DNC list export.\n    api_response = api_instance.get_outbound_dnclist_export(dnc_list_id, download=download)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_dnclist_export: %s\\n\" % e)"
  },
  "get_outbound_dnclist_importstatus": {
    "operationId": "get_outbound_dnclist_importstatus",
    "functionName": "get_outbound_dnclist_importstatus",
    "signature": "get_outbound_dnclist_importstatus(dnc_list_id)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ImportStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\n\ntry:\n    # Get dialer dncList import status.\n    api_response = api_instance.get_outbound_dnclist_importstatus(dnc_list_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_dnclist_importstatus: %s\\n\" % e)"
  },
  "get_outbound_dnclists": {
    "operationId": "get_outbound_dnclists",
    "functionName": "get_outbound_dnclists",
    "signature": "get_outbound_dnclists(include_import_status, include_size, page_size, page_number, allow_empty_result, filter_type, name, dnc_source_type, division_id, sort_by, sort_order)",
    "parameters": [
      {
        "name": "include_import_status",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_size",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allow_empty_result",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "dnc_source_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DncListEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ninclude_import_status = False # bool | Import status (optional) (default to False)\ninclude_size = False # bool | Include size (optional) (default to False)\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nallow_empty_result = False # bool | Whether to return an empty page when there are no results for that page (optional) (default to False)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\ndnc_source_type = 'dnc_source_type_example' # str | DncSourceType (optional)\ndivision_id = ['division_id_example'] # list[str] | Division ID(s) (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = 'sort_order_example' # str | Sort order (optional)\n\ntry:\n    # Query dialer DNC lists\n    api_response = api_instance.get_outbound_dnclists(include_import_status=include_import_status, include_size=include_size, page_size=page_size, page_number=page_number, allow_empty_result=allow_empty_result, filter_type=filter_type, name=name, dnc_source_type=dnc_source_type, division_id=division_id, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_dnclists: %s\\n\" % e)"
  },
  "get_outbound_dnclists_divisionview": {
    "operationId": "get_outbound_dnclists_divisionview",
    "functionName": "get_outbound_dnclists_divisionview",
    "signature": "get_outbound_dnclists_divisionview(dnc_list_id, include_import_status, include_size)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_import_status",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_size",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "DncListDivisionView",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | Dnclist ID\ninclude_import_status = False # bool | Include import status (optional) (default to False)\ninclude_size = False # bool | Include size (optional) (default to False)\n\ntry:\n    # Get a basic DncList information object\n    api_response = api_instance.get_outbound_dnclists_divisionview(dnc_list_id, include_import_status=include_import_status, include_size=include_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_dnclists_divisionview: %s\\n\" % e)"
  },
  "get_outbound_dnclists_divisionviews": {
    "operationId": "get_outbound_dnclists_divisionviews",
    "functionName": "get_outbound_dnclists_divisionviews",
    "signature": "get_outbound_dnclists_divisionviews(include_import_status, include_size, page_size, page_number, filter_type, name, dnc_source_type, id, sort_by, sort_order)",
    "parameters": [
      {
        "name": "include_import_status",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "include_size",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "dnc_source_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DncListDivisionViewListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ninclude_import_status = False # bool | Include import status (optional) (default to False)\ninclude_size = False # bool | Include size (optional) (default to False)\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\ndnc_source_type = 'dnc_source_type_example' # str | DncSourceType (optional)\nid = ['id_example'] # list[str] | id (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query a list of simplified dnc list objects.\n    api_response = api_instance.get_outbound_dnclists_divisionviews(include_import_status=include_import_status, include_size=include_size, page_size=page_size, page_number=page_number, filter_type=filter_type, name=name, dnc_source_type=dnc_source_type, id=id, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_dnclists_divisionviews: %s\\n\" % e)"
  },
  "get_outbound_event": {
    "operationId": "get_outbound_event",
    "functionName": "get_outbound_event",
    "signature": "get_outbound_event(event_id)",
    "parameters": [
      {
        "name": "event_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EventLog",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nevent_id = 'event_id_example' # str | Event Log ID\n\ntry:\n    # Get Dialer Event\n    api_response = api_instance.get_outbound_event(event_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_event: %s\\n\" % e)"
  },
  "get_outbound_events": {
    "operationId": "get_outbound_events",
    "functionName": "get_outbound_events",
    "signature": "get_outbound_events(page_size, page_number, filter_type, category, level, sort_by, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "category",
        "type": "str",
        "required": "false"
      },
      {
        "name": "level",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DialerEventEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\ncategory = 'category_example' # str | Category (optional)\nlevel = 'level_example' # str | Level (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query Event Logs\n    api_response = api_instance.get_outbound_events(page_size=page_size, page_number=page_number, filter_type=filter_type, category=category, level=level, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_events: %s\\n\" % e)"
  },
  "get_outbound_filespecificationtemplate": {
    "operationId": "get_outbound_filespecificationtemplate",
    "functionName": "get_outbound_filespecificationtemplate",
    "signature": "get_outbound_filespecificationtemplate(file_specification_template_id)",
    "parameters": [
      {
        "name": "file_specification_template_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "FileSpecificationTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nfile_specification_template_id = 'file_specification_template_id_example' # str | File Specification Template ID\n\ntry:\n    # Get File Specification Template\n    api_response = api_instance.get_outbound_filespecificationtemplate(file_specification_template_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_filespecificationtemplate: %s\\n\" % e)"
  },
  "get_outbound_filespecificationtemplates": {
    "operationId": "get_outbound_filespecificationtemplates",
    "functionName": "get_outbound_filespecificationtemplates",
    "signature": "get_outbound_filespecificationtemplates(page_size, page_number, allow_empty_result, filter_type, name, sort_by, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allow_empty_result",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "FileSpecificationTemplateEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nallow_empty_result = False # bool | Whether to return an empty page when there are no results for that page (optional) (default to False)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query File Specification Templates\n    api_response = api_instance.get_outbound_filespecificationtemplates(page_size=page_size, page_number=page_number, allow_empty_result=allow_empty_result, filter_type=filter_type, name=name, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_filespecificationtemplates: %s\\n\" % e)"
  },
  "get_outbound_importtemplate": {
    "operationId": "get_outbound_importtemplate",
    "functionName": "get_outbound_importtemplate",
    "signature": "get_outbound_importtemplate(import_template_id, include_import_status)",
    "parameters": [
      {
        "name": "import_template_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_import_status",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "ImportTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nimport_template_id = 'import_template_id_example' # str | Import Template ID\ninclude_import_status = False # bool | Import status (optional) (default to False)\n\ntry:\n    # Get Import Template\n    api_response = api_instance.get_outbound_importtemplate(import_template_id, include_import_status=include_import_status)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_importtemplate: %s\\n\" % e)"
  },
  "get_outbound_importtemplate_importstatus": {
    "operationId": "get_outbound_importtemplate_importstatus",
    "functionName": "get_outbound_importtemplate_importstatus",
    "signature": "get_outbound_importtemplate_importstatus(import_template_id, list_name_prefix)",
    "parameters": [
      {
        "name": "import_template_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "list_name_prefix",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ImportStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nimport_template_id = 'import_template_id_example' # str | importTemplateId\nlist_name_prefix = 'list_name_prefix_example' # str | listNamePrefix (optional)\n\ntry:\n    # Get the import status for an import template.\n    api_response = api_instance.get_outbound_importtemplate_importstatus(import_template_id, list_name_prefix=list_name_prefix)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_importtemplate_importstatus: %s\\n\" % e)"
  },
  "get_outbound_importtemplates": {
    "operationId": "get_outbound_importtemplates",
    "functionName": "get_outbound_importtemplates",
    "signature": "get_outbound_importtemplates(include_import_status, page_size, page_number, allow_empty_result, filter_type, name, sort_by, sort_order, contact_list_template_id)",
    "parameters": [
      {
        "name": "include_import_status",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allow_empty_result",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "contact_list_template_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ImportTemplateEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ninclude_import_status = False # bool | Import status (optional) (default to False)\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nallow_empty_result = False # bool | Whether to return an empty page when there are no results for that page (optional) (default to False)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\ncontact_list_template_id = 'contact_list_template_id_example' # str | Contact List Template ID (optional)\n\ntry:\n    # Query Import Templates\n    api_response = api_instance.get_outbound_importtemplates(include_import_status=include_import_status, page_size=page_size, page_number=page_number, allow_empty_result=allow_empty_result, filter_type=filter_type, name=name, sort_by=sort_by, sort_order=sort_order, contact_list_template_id=contact_list_template_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_importtemplates: %s\\n\" % e)"
  },
  "get_outbound_messagingcampaign": {
    "operationId": "get_outbound_messagingcampaign",
    "functionName": "get_outbound_messagingcampaign",
    "signature": "get_outbound_messagingcampaign(messaging_campaign_id)",
    "parameters": [
      {
        "name": "messaging_campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MessagingCampaign",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nmessaging_campaign_id = 'messaging_campaign_id_example' # str | The Messaging Campaign ID\n\ntry:\n    # Get an Outbound Messaging Campaign\n    api_response = api_instance.get_outbound_messagingcampaign(messaging_campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_messagingcampaign: %s\\n\" % e)"
  },
  "get_outbound_messagingcampaign_diagnostics": {
    "operationId": "get_outbound_messagingcampaign_diagnostics",
    "functionName": "get_outbound_messagingcampaign_diagnostics",
    "signature": "get_outbound_messagingcampaign_diagnostics(messaging_campaign_id)",
    "parameters": [
      {
        "name": "messaging_campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MessagingCampaignDiagnostics",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nmessaging_campaign_id = 'messaging_campaign_id_example' # str | The Messaging Campaign ID\n\ntry:\n    # Get messaging campaign diagnostics\n    api_response = api_instance.get_outbound_messagingcampaign_diagnostics(messaging_campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_messagingcampaign_diagnostics: %s\\n\" % e)"
  },
  "get_outbound_messagingcampaign_progress": {
    "operationId": "get_outbound_messagingcampaign_progress",
    "functionName": "get_outbound_messagingcampaign_progress",
    "signature": "get_outbound_messagingcampaign_progress(messaging_campaign_id)",
    "parameters": [
      {
        "name": "messaging_campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CampaignProgress",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nmessaging_campaign_id = 'messaging_campaign_id_example' # str | The Messaging Campaign ID\n\ntry:\n    # Get messaging campaign's progress\n    api_response = api_instance.get_outbound_messagingcampaign_progress(messaging_campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_messagingcampaign_progress: %s\\n\" % e)"
  },
  "get_outbound_messagingcampaigns": {
    "operationId": "get_outbound_messagingcampaigns",
    "functionName": "get_outbound_messagingcampaigns",
    "signature": "get_outbound_messagingcampaigns(page_size, page_number, sort_by, sort_order, name, contact_list_id, division_id, type, sender_sms_phone_number, id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sender_sms_phone_number",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "MessagingCampaignEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''name'' # str | The field to sort by (optional) (default to 'name')\nsort_order = ''ascending'' # str | The direction to sort (optional) (default to 'ascending')\nname = 'name_example' # str | Name (optional)\ncontact_list_id = 'contact_list_id_example' # str | Contact List ID (optional)\ndivision_id = ['division_id_example'] # list[str] | Division ID(s) (optional)\ntype = 'type_example' # str | Campaign Type (optional)\nsender_sms_phone_number = 'sender_sms_phone_number_example' # str | Sender SMS Phone Number (optional)\nid = ['id_example'] # list[str] | A list of messaging campaign ids to bulk fetch (optional)\n\ntry:\n    # Query a list of Messaging Campaigns\n    api_response = api_instance.get_outbound_messagingcampaigns(page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order, name=name, contact_list_id=contact_list_id, division_id=division_id, type=type, sender_sms_phone_number=sender_sms_phone_number, id=id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_messagingcampaigns: %s\\n\" % e)"
  },
  "get_outbound_messagingcampaigns_divisionview": {
    "operationId": "get_outbound_messagingcampaigns_divisionview",
    "functionName": "get_outbound_messagingcampaigns_divisionview",
    "signature": "get_outbound_messagingcampaigns_divisionview(messaging_campaign_id)",
    "parameters": [
      {
        "name": "messaging_campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MessagingCampaignDivisionView",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nmessaging_campaign_id = 'messaging_campaign_id_example' # str | The Messaging Campaign ID\n\ntry:\n    # Get a basic Messaging Campaign information object\n    api_response = api_instance.get_outbound_messagingcampaigns_divisionview(messaging_campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_messagingcampaigns_divisionview: %s\\n\" % e)"
  },
  "get_outbound_messagingcampaigns_divisionviews": {
    "operationId": "get_outbound_messagingcampaigns_divisionviews",
    "functionName": "get_outbound_messagingcampaigns_divisionviews",
    "signature": "get_outbound_messagingcampaigns_divisionviews(page_size, page_number, sort_order, name, type, id, sender_sms_phone_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sender_sms_phone_number",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "MessagingCampaignDivisionViewEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''a'' # str | The direction to sort (optional) (default to 'a')\nname = 'name_example' # str | Name (optional)\ntype = 'type_example' # str | Campaign Type (optional)\nid = ['id_example'] # list[str] | id (optional)\nsender_sms_phone_number = 'sender_sms_phone_number_example' # str | Sender SMS Phone Number (optional)\n\ntry:\n    # Query a list of basic Messaging Campaign information objects\n    api_response = api_instance.get_outbound_messagingcampaigns_divisionviews(page_size=page_size, page_number=page_number, sort_order=sort_order, name=name, type=type, id=id, sender_sms_phone_number=sender_sms_phone_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_messagingcampaigns_divisionviews: %s\\n\" % e)"
  },
  "get_outbound_ruleset": {
    "operationId": "get_outbound_ruleset",
    "functionName": "get_outbound_ruleset",
    "signature": "get_outbound_ruleset(rule_set_id)",
    "parameters": [
      {
        "name": "rule_set_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "RuleSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nrule_set_id = 'rule_set_id_example' # str | Rule Set ID\n\ntry:\n    # Get a Rule Set by ID.\n    api_response = api_instance.get_outbound_ruleset(rule_set_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_ruleset: %s\\n\" % e)"
  },
  "get_outbound_rulesets": {
    "operationId": "get_outbound_rulesets",
    "functionName": "get_outbound_rulesets",
    "signature": "get_outbound_rulesets(page_size, page_number, allow_empty_result, filter_type, name, sort_by, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allow_empty_result",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "RuleSetEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nallow_empty_result = False # bool | Whether to return an empty page when there are no results for that page (optional) (default to False)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query a list of Rule Sets.\n    api_response = api_instance.get_outbound_rulesets(page_size=page_size, page_number=page_number, allow_empty_result=allow_empty_result, filter_type=filter_type, name=name, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_rulesets: %s\\n\" % e)"
  },
  "get_outbound_schedules_campaign": {
    "operationId": "get_outbound_schedules_campaign",
    "functionName": "get_outbound_schedules_campaign",
    "signature": "get_outbound_schedules_campaign(campaign_id)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CampaignSchedule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\n\ntry:\n    # Get a dialer campaign schedule.\n    api_response = api_instance.get_outbound_schedules_campaign(campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_schedules_campaign: %s\\n\" % e)"
  },
  "get_outbound_schedules_campaigns": {
    "operationId": "get_outbound_schedules_campaigns",
    "functionName": "get_outbound_schedules_campaigns",
    "signature": "get_outbound_schedules_campaigns()",
    "return": "list[CampaignSchedule]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\n\ntry:\n    # Query for a list of dialer campaign schedules.\n    api_response = api_instance.get_outbound_schedules_campaigns()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_schedules_campaigns: %s\\n\" % e)"
  },
  "get_outbound_schedules_emailcampaign": {
    "operationId": "get_outbound_schedules_emailcampaign",
    "functionName": "get_outbound_schedules_emailcampaign",
    "signature": "get_outbound_schedules_emailcampaign(email_campaign_id)",
    "parameters": [
      {
        "name": "email_campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EmailCampaignSchedule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nemail_campaign_id = 'email_campaign_id_example' # str | Email Campaign ID\n\ntry:\n    # Get an email campaign schedule.\n    api_response = api_instance.get_outbound_schedules_emailcampaign(email_campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_schedules_emailcampaign: %s\\n\" % e)"
  },
  "get_outbound_schedules_emailcampaigns": {
    "operationId": "get_outbound_schedules_emailcampaigns",
    "functionName": "get_outbound_schedules_emailcampaigns",
    "signature": "get_outbound_schedules_emailcampaigns()",
    "return": "EmailCampaignScheduleEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\n\ntry:\n    # Query for a list of email campaign schedules.\n    api_response = api_instance.get_outbound_schedules_emailcampaigns()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_schedules_emailcampaigns: %s\\n\" % e)"
  },
  "get_outbound_schedules_messagingcampaign": {
    "operationId": "get_outbound_schedules_messagingcampaign",
    "functionName": "get_outbound_schedules_messagingcampaign",
    "signature": "get_outbound_schedules_messagingcampaign(messaging_campaign_id)",
    "parameters": [
      {
        "name": "messaging_campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MessagingCampaignSchedule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nmessaging_campaign_id = 'messaging_campaign_id_example' # str | Messaging Campaign ID\n\ntry:\n    # Get a messaging campaign schedule.\n    api_response = api_instance.get_outbound_schedules_messagingcampaign(messaging_campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_schedules_messagingcampaign: %s\\n\" % e)"
  },
  "get_outbound_schedules_messagingcampaigns": {
    "operationId": "get_outbound_schedules_messagingcampaigns",
    "functionName": "get_outbound_schedules_messagingcampaigns",
    "signature": "get_outbound_schedules_messagingcampaigns()",
    "return": "MessagingCampaignScheduleEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\n\ntry:\n    # Query for a list of messaging campaign schedules.\n    api_response = api_instance.get_outbound_schedules_messagingcampaigns()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_schedules_messagingcampaigns: %s\\n\" % e)"
  },
  "get_outbound_schedules_sequence": {
    "operationId": "get_outbound_schedules_sequence",
    "functionName": "get_outbound_schedules_sequence",
    "signature": "get_outbound_schedules_sequence(sequence_id)",
    "parameters": [
      {
        "name": "sequence_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SequenceSchedule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nsequence_id = 'sequence_id_example' # str | Sequence ID\n\ntry:\n    # Get a dialer sequence schedule.\n    api_response = api_instance.get_outbound_schedules_sequence(sequence_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_schedules_sequence: %s\\n\" % e)"
  },
  "get_outbound_schedules_sequences": {
    "operationId": "get_outbound_schedules_sequences",
    "functionName": "get_outbound_schedules_sequences",
    "signature": "get_outbound_schedules_sequences()",
    "return": "list[SequenceSchedule]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\n\ntry:\n    # Query for a list of dialer sequence schedules.\n    api_response = api_instance.get_outbound_schedules_sequences()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_schedules_sequences: %s\\n\" % e)"
  },
  "get_outbound_sequence": {
    "operationId": "get_outbound_sequence",
    "functionName": "get_outbound_sequence",
    "signature": "get_outbound_sequence(sequence_id)",
    "parameters": [
      {
        "name": "sequence_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CampaignSequence",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nsequence_id = 'sequence_id_example' # str | Campaign Sequence ID\n\ntry:\n    # Get a dialer campaign sequence.\n    api_response = api_instance.get_outbound_sequence(sequence_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_sequence: %s\\n\" % e)"
  },
  "get_outbound_sequences": {
    "operationId": "get_outbound_sequences",
    "functionName": "get_outbound_sequences",
    "signature": "get_outbound_sequences(page_size, page_number, allow_empty_result, filter_type, name, sort_by, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "allow_empty_result",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CampaignSequenceEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\npage_size = 25 # int | Page size. The max that will be returned is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nallow_empty_result = False # bool | Whether to return an empty page when there are no results for that page (optional) (default to False)\nfilter_type = ''Prefix'' # str | Filter type (optional) (default to 'Prefix')\nname = 'name_example' # str | Name (optional)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nsort_order = ''a'' # str | Sort order (optional) (default to 'a')\n\ntry:\n    # Query a list of dialer campaign sequences.\n    api_response = api_instance.get_outbound_sequences(page_size=page_size, page_number=page_number, allow_empty_result=allow_empty_result, filter_type=filter_type, name=name, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_sequences: %s\\n\" % e)"
  },
  "get_outbound_settings": {
    "operationId": "get_outbound_settings",
    "functionName": "get_outbound_settings",
    "signature": "get_outbound_settings()",
    "return": "OutboundSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\n\ntry:\n    # Get the outbound settings for this organization\n    api_response = api_instance.get_outbound_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_settings: %s\\n\" % e)"
  },
  "get_outbound_wrapupcodemappings": {
    "operationId": "get_outbound_wrapupcodemappings",
    "functionName": "get_outbound_wrapupcodemappings",
    "signature": "get_outbound_wrapupcodemappings()",
    "return": "WrapUpCodeMapping",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\n\ntry:\n    # Get the Dialer wrap up code mapping.\n    api_response = api_instance.get_outbound_wrapupcodemappings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->get_outbound_wrapupcodemappings: %s\\n\" % e)"
  },
  "patch_outbound_dnclist_customexclusioncolumns": {
    "operationId": "patch_outbound_dnclist_customexclusioncolumns",
    "functionName": "patch_outbound_dnclist_customexclusioncolumns",
    "signature": "patch_outbound_dnclist_customexclusioncolumns(dnc_list_id, body)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DncPatchCustomExclusionColumnsRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\nbody = PureCloudPlatformClientV2.DncPatchCustomExclusionColumnsRequest() # DncPatchCustomExclusionColumnsRequest | DNC Custom exclusion column entries\n\ntry:\n    # Add entries to or delete entries from a DNC list.\n    api_instance.patch_outbound_dnclist_customexclusioncolumns(dnc_list_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->patch_outbound_dnclist_customexclusioncolumns: %s\\n\" % e)"
  },
  "patch_outbound_dnclist_emailaddresses": {
    "operationId": "patch_outbound_dnclist_emailaddresses",
    "functionName": "patch_outbound_dnclist_emailaddresses",
    "signature": "patch_outbound_dnclist_emailaddresses(dnc_list_id, body)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DncPatchEmailsRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\nbody = PureCloudPlatformClientV2.DncPatchEmailsRequest() # DncPatchEmailsRequest | DNC Emails\n\ntry:\n    # Add emails to or Delete emails from a DNC list.\n    api_instance.patch_outbound_dnclist_emailaddresses(dnc_list_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->patch_outbound_dnclist_emailaddresses: %s\\n\" % e)"
  },
  "patch_outbound_dnclist_phonenumbers": {
    "operationId": "patch_outbound_dnclist_phonenumbers",
    "functionName": "patch_outbound_dnclist_phonenumbers",
    "signature": "patch_outbound_dnclist_phonenumbers(dnc_list_id, body)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DncPatchPhoneNumbersRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\nbody = PureCloudPlatformClientV2.DncPatchPhoneNumbersRequest() # DncPatchPhoneNumbersRequest | DNC Phone Numbers\n\ntry:\n    # Add numbers to or delete numbers from a DNC list.\n    api_instance.patch_outbound_dnclist_phonenumbers(dnc_list_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->patch_outbound_dnclist_phonenumbers: %s\\n\" % e)"
  },
  "patch_outbound_settings": {
    "operationId": "patch_outbound_settings",
    "functionName": "patch_outbound_settings",
    "signature": "patch_outbound_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OutboundSettings",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.OutboundSettings() # OutboundSettings | outboundSettings\n\ntry:\n    # Update the outbound settings for this organization\n    api_instance.patch_outbound_settings(body)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->patch_outbound_settings: %s\\n\" % e)"
  },
  "post_outbound_attemptlimits": {
    "operationId": "post_outbound_attemptlimits",
    "functionName": "post_outbound_attemptlimits",
    "signature": "post_outbound_attemptlimits(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AttemptLimits",
        "required": "true"
      }
    ],
    "return": "AttemptLimits",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.AttemptLimits() # AttemptLimits | AttemptLimits\n\ntry:\n    # Create attempt limits\n    api_response = api_instance.post_outbound_attemptlimits(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_attemptlimits: %s\\n\" % e)"
  },
  "post_outbound_audits": {
    "operationId": "post_outbound_audits",
    "functionName": "post_outbound_audits",
    "signature": "post_outbound_audits(body, page_size, page_number, sort_by, sort_order, facets_only)",
    "parameters": [
      {
        "name": "body",
        "type": "DialerAuditRequest",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "facets_only",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AuditSearchResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.DialerAuditRequest() # DialerAuditRequest | AuditSearch\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''entity.name'' # str | Sort by (optional) (default to 'entity.name')\nsort_order = ''ascending'' # str | Sort order (optional) (default to 'ascending')\nfacets_only = False # bool | Facets only (optional) (default to False)\n\ntry:\n    # Retrieves audits for dialer. (Deprecated)\n    api_response = api_instance.post_outbound_audits(body, page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order, facets_only=facets_only)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_audits: %s\\n\" % e)"
  },
  "post_outbound_callabletimesets": {
    "operationId": "post_outbound_callabletimesets",
    "functionName": "post_outbound_callabletimesets",
    "signature": "post_outbound_callabletimesets(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CallableTimeSet",
        "required": "true"
      }
    ],
    "return": "CallableTimeSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.CallableTimeSet() # CallableTimeSet | DialerCallableTimeSet\n\ntry:\n    # Create callable time set\n    api_response = api_instance.post_outbound_callabletimesets(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_callabletimesets: %s\\n\" % e)"
  },
  "post_outbound_callanalysisresponsesets": {
    "operationId": "post_outbound_callanalysisresponsesets",
    "functionName": "post_outbound_callanalysisresponsesets",
    "signature": "post_outbound_callanalysisresponsesets(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ResponseSet",
        "required": "true"
      }
    ],
    "return": "ResponseSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.ResponseSet() # ResponseSet | ResponseSet\n\ntry:\n    # Create a dialer call analysis response set.\n    api_response = api_instance.post_outbound_callanalysisresponsesets(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_callanalysisresponsesets: %s\\n\" % e)"
  },
  "post_outbound_campaign_agentownedmappingpreview": {
    "operationId": "post_outbound_campaign_agentownedmappingpreview",
    "functionName": "post_outbound_campaign_agentownedmappingpreview",
    "signature": "post_outbound_campaign_agentownedmappingpreview(campaign_id)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\n\ntry:\n    # Initiate request for a preview of how agents will be mapped to this campaign's contact list.\n    api_response = api_instance.post_outbound_campaign_agentownedmappingpreview(campaign_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_campaign_agentownedmappingpreview: %s\\n\" % e)"
  },
  "post_outbound_campaign_callback_schedule": {
    "operationId": "post_outbound_campaign_callback_schedule",
    "functionName": "post_outbound_campaign_callback_schedule",
    "signature": "post_outbound_campaign_callback_schedule(campaign_id, body)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ContactCallbackRequest",
        "required": "true"
      }
    ],
    "return": "ContactCallbackRequest",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\nbody = PureCloudPlatformClientV2.ContactCallbackRequest() # ContactCallbackRequest | ContactCallbackRequest\n\ntry:\n    # Schedule a Callback for a Dialer Campaign (Deprecated)\n    api_response = api_instance.post_outbound_campaign_callback_schedule(campaign_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_campaign_callback_schedule: %s\\n\" % e)"
  },
  "post_outbound_campaignrules": {
    "operationId": "post_outbound_campaignrules",
    "functionName": "post_outbound_campaignrules",
    "signature": "post_outbound_campaignrules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CampaignRule",
        "required": "true"
      }
    ],
    "return": "CampaignRule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.CampaignRule() # CampaignRule | CampaignRule\n\ntry:\n    # Create Campaign Rule\n    api_response = api_instance.post_outbound_campaignrules(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_campaignrules: %s\\n\" % e)"
  },
  "post_outbound_campaigns": {
    "operationId": "post_outbound_campaigns",
    "functionName": "post_outbound_campaigns",
    "signature": "post_outbound_campaigns(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Campaign",
        "required": "true"
      }
    ],
    "return": "Campaign",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.Campaign() # Campaign | Campaign\n\ntry:\n    # Create a campaign.\n    api_response = api_instance.post_outbound_campaigns(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_campaigns: %s\\n\" % e)"
  },
  "post_outbound_campaigns_progress": {
    "operationId": "post_outbound_campaigns_progress",
    "functionName": "post_outbound_campaigns_progress",
    "signature": "post_outbound_campaigns_progress(body)",
    "parameters": [
      {
        "name": "body",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "list[CampaignProgress]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = ['body_example'] # list[str] | Campaign IDs\n\ntry:\n    # Get progress for a list of campaigns\n    api_response = api_instance.post_outbound_campaigns_progress(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_campaigns_progress: %s\\n\" % e)"
  },
  "post_outbound_contactlist_clear": {
    "operationId": "post_outbound_contactlist_clear",
    "functionName": "post_outbound_contactlist_clear",
    "signature": "post_outbound_contactlist_clear(contact_list_id)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | Contact List ID\n\ntry:\n    # Deletes all contacts out of a list. All outstanding recalls or rule-scheduled callbacks for non-preview campaigns configured with the contactlist will be cancelled.\n    api_instance.post_outbound_contactlist_clear(contact_list_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlist_clear: %s\\n\" % e)"
  },
  "post_outbound_contactlist_contacts": {
    "operationId": "post_outbound_contactlist_contacts",
    "functionName": "post_outbound_contactlist_contacts",
    "signature": "post_outbound_contactlist_contacts(contact_list_id, body, priority, clear_system_data, do_not_queue)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[WritableDialerContact]",
        "required": "true"
      },
      {
        "name": "priority",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "clear_system_data",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "do_not_queue",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "list[DialerContact]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | Contact List ID\nbody = [PureCloudPlatformClientV2.WritableDialerContact()] # list[WritableDialerContact] | Contact\npriority = True # bool | Contact priority. True means the contact(s) will be dialed next; false means the contact will go to the end of the contact queue. (optional)\nclear_system_data = True # bool | Clear system data. True means the system columns (attempts, callable status, etc) stored on the contact will be cleared if the contact already exists; false means they won't. (optional)\ndo_not_queue = True # bool | Do not queue. True means that updated contacts will not have their positions in the queue altered, so contacts that have already been dialed will not be redialed. For new contacts, this parameter has no effect; False means that updated contacts will be re-queued, according to the 'priority' parameter. (optional)\n\ntry:\n    # Add contacts to a contact list.\n    api_response = api_instance.post_outbound_contactlist_contacts(contact_list_id, body, priority=priority, clear_system_data=clear_system_data, do_not_queue=do_not_queue)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlist_contacts: %s\\n\" % e)"
  },
  "post_outbound_contactlist_contacts_bulk": {
    "operationId": "post_outbound_contactlist_contacts_bulk",
    "functionName": "post_outbound_contactlist_contacts_bulk",
    "signature": "post_outbound_contactlist_contacts_bulk(contact_list_id, body)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "list[DialerContact]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | Contact List ID\nbody = ['body_example'] # list[str] | ContactIds to get.\n\ntry:\n    # Get contacts from a contact list.\n    api_response = api_instance.post_outbound_contactlist_contacts_bulk(contact_list_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlist_contacts_bulk: %s\\n\" % e)"
  },
  "post_outbound_contactlist_contacts_bulk_remove": {
    "operationId": "post_outbound_contactlist_contacts_bulk_remove",
    "functionName": "post_outbound_contactlist_contacts_bulk_remove",
    "signature": "post_outbound_contactlist_contacts_bulk_remove(contact_list_id, body)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ContactBulkSearchParameters",
        "required": "true"
      }
    ],
    "return": "ContactsBulkOperationJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | Contact List ID\nbody = PureCloudPlatformClientV2.ContactBulkSearchParameters() # ContactBulkSearchParameters | Contact filter information.\n\ntry:\n    # Start an async job to delete contacts using a filter.\n    api_response = api_instance.post_outbound_contactlist_contacts_bulk_remove(contact_list_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlist_contacts_bulk_remove: %s\\n\" % e)"
  },
  "post_outbound_contactlist_contacts_bulk_update": {
    "operationId": "post_outbound_contactlist_contacts_bulk_update",
    "functionName": "post_outbound_contactlist_contacts_bulk_update",
    "signature": "post_outbound_contactlist_contacts_bulk_update(contact_list_id, body)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ContactBulkEditRequest",
        "required": "true"
      }
    ],
    "return": "ContactsBulkOperationJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | Contact List ID\nbody = PureCloudPlatformClientV2.ContactBulkEditRequest() # ContactBulkEditRequest | Contact bulk edit request information.\n\ntry:\n    # Start an async job to bulk edit contacts.\n    api_response = api_instance.post_outbound_contactlist_contacts_bulk_update(contact_list_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlist_contacts_bulk_update: %s\\n\" % e)"
  },
  "post_outbound_contactlist_contacts_search": {
    "operationId": "post_outbound_contactlist_contacts_search",
    "functionName": "post_outbound_contactlist_contacts_search",
    "signature": "post_outbound_contactlist_contacts_search(contact_list_id, body)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ContactListingRequest",
        "required": "true"
      }
    ],
    "return": "ContactListingResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | Contact List ID\nbody = PureCloudPlatformClientV2.ContactListingRequest() # ContactListingRequest | Contact search parameters.\n\ntry:\n    # Query contacts from a contact list.\n    api_response = api_instance.post_outbound_contactlist_contacts_search(contact_list_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlist_contacts_search: %s\\n\" % e)"
  },
  "post_outbound_contactlist_export": {
    "operationId": "post_outbound_contactlist_export",
    "functionName": "post_outbound_contactlist_export",
    "signature": "post_outbound_contactlist_export(contact_list_id, body)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ContactsExportRequest",
        "required": "false"
      }
    ],
    "return": "DomainEntityRef",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | ContactList ID\nbody = PureCloudPlatformClientV2.ContactsExportRequest() # ContactsExportRequest | Export information to get (optional)\n\ntry:\n    # Initiate the export of a contact list.\n    api_response = api_instance.post_outbound_contactlist_export(contact_list_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlist_export: %s\\n\" % e)"
  },
  "post_outbound_contactlistfilters": {
    "operationId": "post_outbound_contactlistfilters",
    "functionName": "post_outbound_contactlistfilters",
    "signature": "post_outbound_contactlistfilters(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ContactListFilter",
        "required": "true"
      }
    ],
    "return": "ContactListFilter",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.ContactListFilter() # ContactListFilter | ContactListFilter\n\ntry:\n    # Create Contact List Filter\n    api_response = api_instance.post_outbound_contactlistfilters(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlistfilters: %s\\n\" % e)"
  },
  "post_outbound_contactlistfilters_bulk_retrieve": {
    "operationId": "post_outbound_contactlistfilters_bulk_retrieve",
    "functionName": "post_outbound_contactlistfilters_bulk_retrieve",
    "signature": "post_outbound_contactlistfilters_bulk_retrieve(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ContactListFilterBulkRetrieveBody",
        "required": "true"
      }
    ],
    "return": "ContactListFilterEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.ContactListFilterBulkRetrieveBody() # ContactListFilterBulkRetrieveBody | The contact list filters to retrieve\n\ntry:\n    # Retrieve multiple contact list filters\n    api_response = api_instance.post_outbound_contactlistfilters_bulk_retrieve(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlistfilters_bulk_retrieve: %s\\n\" % e)"
  },
  "post_outbound_contactlistfilters_preview": {
    "operationId": "post_outbound_contactlistfilters_preview",
    "functionName": "post_outbound_contactlistfilters_preview",
    "signature": "post_outbound_contactlistfilters_preview(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ContactListFilter",
        "required": "true"
      }
    ],
    "return": "FilterPreviewResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.ContactListFilter() # ContactListFilter | ContactListFilter\n\ntry:\n    # Get a preview of the output of a contact list filter\n    api_response = api_instance.post_outbound_contactlistfilters_preview(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlistfilters_preview: %s\\n\" % e)"
  },
  "post_outbound_contactlists": {
    "operationId": "post_outbound_contactlists",
    "functionName": "post_outbound_contactlists",
    "signature": "post_outbound_contactlists(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ContactList",
        "required": "true"
      }
    ],
    "return": "ContactList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.ContactList() # ContactList | ContactList\n\ntry:\n    # Create a contact List.\n    api_response = api_instance.post_outbound_contactlists(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlists: %s\\n\" % e)"
  },
  "post_outbound_contactlisttemplates": {
    "operationId": "post_outbound_contactlisttemplates",
    "functionName": "post_outbound_contactlisttemplates",
    "signature": "post_outbound_contactlisttemplates(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ContactListTemplate",
        "required": "true"
      }
    ],
    "return": "ContactListTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.ContactListTemplate() # ContactListTemplate | ContactListTemplate\n\ntry:\n    # Create Contact List Template\n    api_response = api_instance.post_outbound_contactlisttemplates(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlisttemplates: %s\\n\" % e)"
  },
  "post_outbound_contactlisttemplates_bulk_add": {
    "operationId": "post_outbound_contactlisttemplates_bulk_add",
    "functionName": "post_outbound_contactlisttemplates_bulk_add",
    "signature": "post_outbound_contactlisttemplates_bulk_add(body)",
    "parameters": [
      {
        "name": "body",
        "type": "list[ContactListTemplate]",
        "required": "true"
      }
    ],
    "return": "ContactListTemplateEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = [PureCloudPlatformClientV2.ContactListTemplate()] # list[ContactListTemplate] | contact list template(s) to add\n\ntry:\n    # Add multiple contact list templates\n    api_response = api_instance.post_outbound_contactlisttemplates_bulk_add(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlisttemplates_bulk_add: %s\\n\" % e)"
  },
  "post_outbound_contactlisttemplates_bulk_retrieve": {
    "operationId": "post_outbound_contactlisttemplates_bulk_retrieve",
    "functionName": "post_outbound_contactlisttemplates_bulk_retrieve",
    "signature": "post_outbound_contactlisttemplates_bulk_retrieve(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ContactListTemplateBulkRetrieveBody",
        "required": "true"
      }
    ],
    "return": "ContactListTemplateEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.ContactListTemplateBulkRetrieveBody() # ContactListTemplateBulkRetrieveBody | contact list templates to get\n\ntry:\n    # Get multiple contact list templates\n    api_response = api_instance.post_outbound_contactlisttemplates_bulk_retrieve(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_contactlisttemplates_bulk_retrieve: %s\\n\" % e)"
  },
  "post_outbound_conversation_dnc": {
    "operationId": "post_outbound_conversation_dnc",
    "functionName": "post_outbound_conversation_dnc",
    "signature": "post_outbound_conversation_dnc(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\n\ntry:\n    # Add phone numbers to a Dialer DNC list.\n    api_instance.post_outbound_conversation_dnc(conversation_id)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_conversation_dnc: %s\\n\" % e)"
  },
  "post_outbound_digitalrulesets": {
    "operationId": "post_outbound_digitalrulesets",
    "functionName": "post_outbound_digitalrulesets",
    "signature": "post_outbound_digitalrulesets(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DigitalRuleSet",
        "required": "true"
      }
    ],
    "return": "DigitalRuleSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.DigitalRuleSet() # DigitalRuleSet | Digital Rule Set\n\ntry:\n    # Create an Outbound Digital Rule Set\n    api_response = api_instance.post_outbound_digitalrulesets(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_digitalrulesets: %s\\n\" % e)"
  },
  "post_outbound_dnclist_emailaddresses": {
    "operationId": "post_outbound_dnclist_emailaddresses",
    "functionName": "post_outbound_dnclist_emailaddresses",
    "signature": "post_outbound_dnclist_emailaddresses(dnc_list_id, body)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\nbody = ['body_example'] # list[str] | DNC email addresses\n\ntry:\n    # Add email addresses to a DNC list.\n    api_instance.post_outbound_dnclist_emailaddresses(dnc_list_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_dnclist_emailaddresses: %s\\n\" % e)"
  },
  "post_outbound_dnclist_export": {
    "operationId": "post_outbound_dnclist_export",
    "functionName": "post_outbound_dnclist_export",
    "signature": "post_outbound_dnclist_export(dnc_list_id)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DomainEntityRef",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\n\ntry:\n    # Initiate the export of a dnc list.\n    api_response = api_instance.post_outbound_dnclist_export(dnc_list_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_dnclist_export: %s\\n\" % e)"
  },
  "post_outbound_dnclist_phonenumbers": {
    "operationId": "post_outbound_dnclist_phonenumbers",
    "functionName": "post_outbound_dnclist_phonenumbers",
    "signature": "post_outbound_dnclist_phonenumbers(dnc_list_id, body, expiration_date_time)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[str]",
        "required": "true"
      },
      {
        "name": "expiration_date_time",
        "type": "str",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\nbody = ['body_example'] # list[str] | DNC Phone Numbers\nexpiration_date_time = 'expiration_date_time_example' # str | Expiration date for DNC phone numbers in yyyy-MM-ddTHH:mmZ format (optional)\n\ntry:\n    # Add phone numbers to a DNC list.\n    api_instance.post_outbound_dnclist_phonenumbers(dnc_list_id, body, expiration_date_time=expiration_date_time)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_dnclist_phonenumbers: %s\\n\" % e)"
  },
  "post_outbound_dnclists": {
    "operationId": "post_outbound_dnclists",
    "functionName": "post_outbound_dnclists",
    "signature": "post_outbound_dnclists(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DncListCreate",
        "required": "true"
      }
    ],
    "return": "DncList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.DncListCreate() # DncListCreate | DncList\n\ntry:\n    # Create dialer DNC list\n    api_response = api_instance.post_outbound_dnclists(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_dnclists: %s\\n\" % e)"
  },
  "post_outbound_filespecificationtemplates": {
    "operationId": "post_outbound_filespecificationtemplates",
    "functionName": "post_outbound_filespecificationtemplates",
    "signature": "post_outbound_filespecificationtemplates(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FileSpecificationTemplate",
        "required": "true"
      }
    ],
    "return": "FileSpecificationTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.FileSpecificationTemplate() # FileSpecificationTemplate | FileSpecificationTemplate\n\ntry:\n    # Create File Specification Template\n    api_response = api_instance.post_outbound_filespecificationtemplates(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_filespecificationtemplates: %s\\n\" % e)"
  },
  "post_outbound_importtemplates": {
    "operationId": "post_outbound_importtemplates",
    "functionName": "post_outbound_importtemplates",
    "signature": "post_outbound_importtemplates(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ImportTemplate",
        "required": "true"
      }
    ],
    "return": "ImportTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.ImportTemplate() # ImportTemplate | ImportTemplate\n\ntry:\n    # Create Import Template\n    api_response = api_instance.post_outbound_importtemplates(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_importtemplates: %s\\n\" % e)"
  },
  "post_outbound_importtemplates_bulk_add": {
    "operationId": "post_outbound_importtemplates_bulk_add",
    "functionName": "post_outbound_importtemplates_bulk_add",
    "signature": "post_outbound_importtemplates_bulk_add(body)",
    "parameters": [
      {
        "name": "body",
        "type": "list[ImportTemplate]",
        "required": "true"
      }
    ],
    "return": "ImportTemplateEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = [PureCloudPlatformClientV2.ImportTemplate()] # list[ImportTemplate] | import template(s) to add\n\ntry:\n    # Add multiple import templates\n    api_response = api_instance.post_outbound_importtemplates_bulk_add(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_importtemplates_bulk_add: %s\\n\" % e)"
  },
  "post_outbound_messagingcampaigns": {
    "operationId": "post_outbound_messagingcampaigns",
    "functionName": "post_outbound_messagingcampaigns",
    "signature": "post_outbound_messagingcampaigns(body)",
    "parameters": [
      {
        "name": "body",
        "type": "MessagingCampaign",
        "required": "true"
      }
    ],
    "return": "MessagingCampaign",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.MessagingCampaign() # MessagingCampaign | Messaging Campaign\n\ntry:\n    # Create a Messaging Campaign\n    api_response = api_instance.post_outbound_messagingcampaigns(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_messagingcampaigns: %s\\n\" % e)"
  },
  "post_outbound_messagingcampaigns_progress": {
    "operationId": "post_outbound_messagingcampaigns_progress",
    "functionName": "post_outbound_messagingcampaigns_progress",
    "signature": "post_outbound_messagingcampaigns_progress(body)",
    "parameters": [
      {
        "name": "body",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "list[CampaignProgress]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = ['body_example'] # list[str] | Messaging Campaign IDs\n\ntry:\n    # Get progress for a list of messaging campaigns\n    api_response = api_instance.post_outbound_messagingcampaigns_progress(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_messagingcampaigns_progress: %s\\n\" % e)"
  },
  "post_outbound_rulesets": {
    "operationId": "post_outbound_rulesets",
    "functionName": "post_outbound_rulesets",
    "signature": "post_outbound_rulesets(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RuleSet",
        "required": "true"
      }
    ],
    "return": "RuleSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.RuleSet() # RuleSet | RuleSet\n\ntry:\n    # Create a Rule Set.\n    api_response = api_instance.post_outbound_rulesets(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_rulesets: %s\\n\" % e)"
  },
  "post_outbound_sequences": {
    "operationId": "post_outbound_sequences",
    "functionName": "post_outbound_sequences",
    "signature": "post_outbound_sequences(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CampaignSequence",
        "required": "true"
      }
    ],
    "return": "CampaignSequence",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.CampaignSequence() # CampaignSequence | Organization\n\ntry:\n    # Create a new campaign sequence.\n    api_response = api_instance.post_outbound_sequences(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->post_outbound_sequences: %s\\n\" % e)"
  },
  "put_outbound_attemptlimit": {
    "operationId": "put_outbound_attemptlimit",
    "functionName": "put_outbound_attemptlimit",
    "signature": "put_outbound_attemptlimit(attempt_limits_id, body)",
    "parameters": [
      {
        "name": "attempt_limits_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AttemptLimits",
        "required": "true"
      }
    ],
    "return": "AttemptLimits",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nattempt_limits_id = 'attempt_limits_id_example' # str | Attempt limits ID\nbody = PureCloudPlatformClientV2.AttemptLimits() # AttemptLimits | AttemptLimits\n\ntry:\n    # Update attempt limits\n    api_response = api_instance.put_outbound_attemptlimit(attempt_limits_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_attemptlimit: %s\\n\" % e)"
  },
  "put_outbound_callabletimeset": {
    "operationId": "put_outbound_callabletimeset",
    "functionName": "put_outbound_callabletimeset",
    "signature": "put_outbound_callabletimeset(callable_time_set_id, body)",
    "parameters": [
      {
        "name": "callable_time_set_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CallableTimeSet",
        "required": "true"
      }
    ],
    "return": "CallableTimeSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncallable_time_set_id = 'callable_time_set_id_example' # str | Callable Time Set ID\nbody = PureCloudPlatformClientV2.CallableTimeSet() # CallableTimeSet | DialerCallableTimeSet\n\ntry:\n    # Update callable time set\n    api_response = api_instance.put_outbound_callabletimeset(callable_time_set_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_callabletimeset: %s\\n\" % e)"
  },
  "put_outbound_callanalysisresponseset": {
    "operationId": "put_outbound_callanalysisresponseset",
    "functionName": "put_outbound_callanalysisresponseset",
    "signature": "put_outbound_callanalysisresponseset(call_analysis_set_id, body)",
    "parameters": [
      {
        "name": "call_analysis_set_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ResponseSet",
        "required": "true"
      }
    ],
    "return": "ResponseSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncall_analysis_set_id = 'call_analysis_set_id_example' # str | Call Analysis Response Set ID\nbody = PureCloudPlatformClientV2.ResponseSet() # ResponseSet | ResponseSet\n\ntry:\n    # Update a dialer call analysis response set.\n    api_response = api_instance.put_outbound_callanalysisresponseset(call_analysis_set_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_callanalysisresponseset: %s\\n\" % e)"
  },
  "put_outbound_campaign": {
    "operationId": "put_outbound_campaign",
    "functionName": "put_outbound_campaign",
    "signature": "put_outbound_campaign(campaign_id, body)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Campaign",
        "required": "true"
      }
    ],
    "return": "Campaign",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\nbody = PureCloudPlatformClientV2.Campaign() # Campaign | Campaign\n\ntry:\n    # Update a campaign.\n    api_response = api_instance.put_outbound_campaign(campaign_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_campaign: %s\\n\" % e)"
  },
  "put_outbound_campaign_agent": {
    "operationId": "put_outbound_campaign_agent",
    "functionName": "put_outbound_campaign_agent",
    "signature": "put_outbound_campaign_agent(campaign_id, user_id, body)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Agent",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\nuser_id = 'user_id_example' # str | Agent's user ID\nbody = PureCloudPlatformClientV2.Agent() # Agent | agent\n\ntry:\n    # Send notification that an agent's state changed \n    api_response = api_instance.put_outbound_campaign_agent(campaign_id, user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_campaign_agent: %s\\n\" % e)"
  },
  "put_outbound_campaignrule": {
    "operationId": "put_outbound_campaignrule",
    "functionName": "put_outbound_campaignrule",
    "signature": "put_outbound_campaignrule(campaign_rule_id, body)",
    "parameters": [
      {
        "name": "campaign_rule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CampaignRule",
        "required": "true"
      }
    ],
    "return": "CampaignRule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_rule_id = 'campaign_rule_id_example' # str | Campaign Rule ID\nbody = PureCloudPlatformClientV2.CampaignRule() # CampaignRule | CampaignRule\n\ntry:\n    # Update Campaign Rule\n    api_response = api_instance.put_outbound_campaignrule(campaign_rule_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_campaignrule: %s\\n\" % e)"
  },
  "put_outbound_contactlist": {
    "operationId": "put_outbound_contactlist",
    "functionName": "put_outbound_contactlist",
    "signature": "put_outbound_contactlist(contact_list_id, body)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ContactList",
        "required": "true"
      }
    ],
    "return": "ContactList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | ContactList ID\nbody = PureCloudPlatformClientV2.ContactList() # ContactList | ContactList\n\ntry:\n    # Update a contact list.\n    api_response = api_instance.put_outbound_contactlist(contact_list_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_contactlist: %s\\n\" % e)"
  },
  "put_outbound_contactlist_contact": {
    "operationId": "put_outbound_contactlist_contact",
    "functionName": "put_outbound_contactlist_contact",
    "signature": "put_outbound_contactlist_contact(contact_list_id, contact_id, body)",
    "parameters": [
      {
        "name": "contact_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "contact_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DialerContact",
        "required": "true"
      }
    ],
    "return": "DialerContact",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_id = 'contact_list_id_example' # str | Contact List ID\ncontact_id = 'contact_id_example' # str | Contact ID\nbody = PureCloudPlatformClientV2.DialerContact() # DialerContact | Contact\n\ntry:\n    # Update a contact.\n    api_response = api_instance.put_outbound_contactlist_contact(contact_list_id, contact_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_contactlist_contact: %s\\n\" % e)"
  },
  "put_outbound_contactlistfilter": {
    "operationId": "put_outbound_contactlistfilter",
    "functionName": "put_outbound_contactlistfilter",
    "signature": "put_outbound_contactlistfilter(contact_list_filter_id, body)",
    "parameters": [
      {
        "name": "contact_list_filter_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ContactListFilter",
        "required": "true"
      }
    ],
    "return": "ContactListFilter",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_filter_id = 'contact_list_filter_id_example' # str | Contact List Filter ID\nbody = PureCloudPlatformClientV2.ContactListFilter() # ContactListFilter | ContactListFilter\n\ntry:\n    # Update Contact List Filter\n    api_response = api_instance.put_outbound_contactlistfilter(contact_list_filter_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_contactlistfilter: %s\\n\" % e)"
  },
  "put_outbound_contactlisttemplate": {
    "operationId": "put_outbound_contactlisttemplate",
    "functionName": "put_outbound_contactlisttemplate",
    "signature": "put_outbound_contactlisttemplate(contact_list_template_id, body)",
    "parameters": [
      {
        "name": "contact_list_template_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ContactListTemplate",
        "required": "true"
      }
    ],
    "return": "ContactListTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncontact_list_template_id = 'contact_list_template_id_example' # str | ContactListTemplate ID\nbody = PureCloudPlatformClientV2.ContactListTemplate() # ContactListTemplate | ContactListTemplate\n\ntry:\n    # Update a contact list template.\n    api_response = api_instance.put_outbound_contactlisttemplate(contact_list_template_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_contactlisttemplate: %s\\n\" % e)"
  },
  "put_outbound_digitalruleset": {
    "operationId": "put_outbound_digitalruleset",
    "functionName": "put_outbound_digitalruleset",
    "signature": "put_outbound_digitalruleset(digital_rule_set_id, body)",
    "parameters": [
      {
        "name": "digital_rule_set_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DigitalRuleSet",
        "required": "true"
      }
    ],
    "return": "DigitalRuleSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndigital_rule_set_id = 'digital_rule_set_id_example' # str | The Digital Rule Set ID\nbody = PureCloudPlatformClientV2.DigitalRuleSet() # DigitalRuleSet | Digital Rule Set\n\ntry:\n    # Update an Outbound Digital Rule Set\n    api_response = api_instance.put_outbound_digitalruleset(digital_rule_set_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_digitalruleset: %s\\n\" % e)"
  },
  "put_outbound_dnclist": {
    "operationId": "put_outbound_dnclist",
    "functionName": "put_outbound_dnclist",
    "signature": "put_outbound_dnclist(dnc_list_id, body)",
    "parameters": [
      {
        "name": "dnc_list_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DncList",
        "required": "true"
      }
    ],
    "return": "DncList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ndnc_list_id = 'dnc_list_id_example' # str | DncList ID\nbody = PureCloudPlatformClientV2.DncList() # DncList | DncList\n\ntry:\n    # Update dialer DNC list\n    api_response = api_instance.put_outbound_dnclist(dnc_list_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_dnclist: %s\\n\" % e)"
  },
  "put_outbound_filespecificationtemplate": {
    "operationId": "put_outbound_filespecificationtemplate",
    "functionName": "put_outbound_filespecificationtemplate",
    "signature": "put_outbound_filespecificationtemplate(file_specification_template_id, body)",
    "parameters": [
      {
        "name": "file_specification_template_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "FileSpecificationTemplate",
        "required": "true"
      }
    ],
    "return": "FileSpecificationTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nfile_specification_template_id = 'file_specification_template_id_example' # str | File Specification Template ID\nbody = PureCloudPlatformClientV2.FileSpecificationTemplate() # FileSpecificationTemplate | fileSpecificationTemplate\n\ntry:\n    # Update File Specification Template\n    api_response = api_instance.put_outbound_filespecificationtemplate(file_specification_template_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_filespecificationtemplate: %s\\n\" % e)"
  },
  "put_outbound_importtemplate": {
    "operationId": "put_outbound_importtemplate",
    "functionName": "put_outbound_importtemplate",
    "signature": "put_outbound_importtemplate(import_template_id, body)",
    "parameters": [
      {
        "name": "import_template_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ImportTemplate",
        "required": "true"
      }
    ],
    "return": "ImportTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nimport_template_id = 'import_template_id_example' # str | Import Template ID\nbody = PureCloudPlatformClientV2.ImportTemplate() # ImportTemplate | importTemplate\n\ntry:\n    # Update Import Template\n    api_response = api_instance.put_outbound_importtemplate(import_template_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_importtemplate: %s\\n\" % e)"
  },
  "put_outbound_messagingcampaign": {
    "operationId": "put_outbound_messagingcampaign",
    "functionName": "put_outbound_messagingcampaign",
    "signature": "put_outbound_messagingcampaign(messaging_campaign_id, body)",
    "parameters": [
      {
        "name": "messaging_campaign_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MessagingCampaign",
        "required": "true"
      }
    ],
    "return": "MessagingCampaign",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nmessaging_campaign_id = 'messaging_campaign_id_example' # str | The Messaging Campaign ID\nbody = PureCloudPlatformClientV2.MessagingCampaign() # MessagingCampaign | MessagingCampaign\n\ntry:\n    # Update an Outbound Messaging Campaign\n    api_response = api_instance.put_outbound_messagingcampaign(messaging_campaign_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_messagingcampaign: %s\\n\" % e)"
  },
  "put_outbound_ruleset": {
    "operationId": "put_outbound_ruleset",
    "functionName": "put_outbound_ruleset",
    "signature": "put_outbound_ruleset(rule_set_id, body)",
    "parameters": [
      {
        "name": "rule_set_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RuleSet",
        "required": "true"
      }
    ],
    "return": "RuleSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nrule_set_id = 'rule_set_id_example' # str | Rule Set ID\nbody = PureCloudPlatformClientV2.RuleSet() # RuleSet | RuleSet\n\ntry:\n    # Update a Rule Set.\n    api_response = api_instance.put_outbound_ruleset(rule_set_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_ruleset: %s\\n\" % e)"
  },
  "put_outbound_schedules_campaign": {
    "operationId": "put_outbound_schedules_campaign",
    "functionName": "put_outbound_schedules_campaign",
    "signature": "put_outbound_schedules_campaign(campaign_id, body)",
    "parameters": [
      {
        "name": "campaign_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CampaignSchedule",
        "required": "true"
      }
    ],
    "return": "CampaignSchedule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\ncampaign_id = 'campaign_id_example' # str | Campaign ID\nbody = PureCloudPlatformClientV2.CampaignSchedule() # CampaignSchedule | CampaignSchedule\n\ntry:\n    # Update a new campaign schedule.\n    api_response = api_instance.put_outbound_schedules_campaign(campaign_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_schedules_campaign: %s\\n\" % e)"
  },
  "put_outbound_schedules_emailcampaign": {
    "operationId": "put_outbound_schedules_emailcampaign",
    "functionName": "put_outbound_schedules_emailcampaign",
    "signature": "put_outbound_schedules_emailcampaign(email_campaign_id, body)",
    "parameters": [
      {
        "name": "email_campaign_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EmailCampaignSchedule",
        "required": "true"
      }
    ],
    "return": "EmailCampaignSchedule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nemail_campaign_id = 'email_campaign_id_example' # str | Email Campaign ID\nbody = PureCloudPlatformClientV2.EmailCampaignSchedule() # EmailCampaignSchedule | EmailCampaignSchedule\n\ntry:\n    # Update an email campaign schedule.\n    api_response = api_instance.put_outbound_schedules_emailcampaign(email_campaign_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_schedules_emailcampaign: %s\\n\" % e)"
  },
  "put_outbound_schedules_messagingcampaign": {
    "operationId": "put_outbound_schedules_messagingcampaign",
    "functionName": "put_outbound_schedules_messagingcampaign",
    "signature": "put_outbound_schedules_messagingcampaign(messaging_campaign_id, body)",
    "parameters": [
      {
        "name": "messaging_campaign_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MessagingCampaignSchedule",
        "required": "true"
      }
    ],
    "return": "MessagingCampaignSchedule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nmessaging_campaign_id = 'messaging_campaign_id_example' # str | Messaging Campaign ID\nbody = PureCloudPlatformClientV2.MessagingCampaignSchedule() # MessagingCampaignSchedule | MessagingCampaignSchedule\n\ntry:\n    # Update a new messaging campaign schedule.\n    api_response = api_instance.put_outbound_schedules_messagingcampaign(messaging_campaign_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_schedules_messagingcampaign: %s\\n\" % e)"
  },
  "put_outbound_schedules_sequence": {
    "operationId": "put_outbound_schedules_sequence",
    "functionName": "put_outbound_schedules_sequence",
    "signature": "put_outbound_schedules_sequence(sequence_id, body)",
    "parameters": [
      {
        "name": "sequence_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SequenceSchedule",
        "required": "true"
      }
    ],
    "return": "SequenceSchedule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nsequence_id = 'sequence_id_example' # str | Sequence ID\nbody = PureCloudPlatformClientV2.SequenceSchedule() # SequenceSchedule | SequenceSchedule\n\ntry:\n    # Update a new sequence schedule.\n    api_response = api_instance.put_outbound_schedules_sequence(sequence_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_schedules_sequence: %s\\n\" % e)"
  },
  "put_outbound_sequence": {
    "operationId": "put_outbound_sequence",
    "functionName": "put_outbound_sequence",
    "signature": "put_outbound_sequence(sequence_id, body)",
    "parameters": [
      {
        "name": "sequence_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CampaignSequence",
        "required": "true"
      }
    ],
    "return": "CampaignSequence",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nsequence_id = 'sequence_id_example' # str | Campaign Sequence ID\nbody = PureCloudPlatformClientV2.CampaignSequence() # CampaignSequence | Organization\n\ntry:\n    # Update a new campaign sequence.\n    api_response = api_instance.put_outbound_sequence(sequence_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_sequence: %s\\n\" % e)"
  },
  "put_outbound_wrapupcodemappings": {
    "operationId": "put_outbound_wrapupcodemappings",
    "functionName": "put_outbound_wrapupcodemappings",
    "signature": "put_outbound_wrapupcodemappings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WrapUpCodeMapping",
        "required": "true"
      }
    ],
    "return": "WrapUpCodeMapping",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.OutboundApi();\nbody = PureCloudPlatformClientV2.WrapUpCodeMapping() # WrapUpCodeMapping | wrapUpCodeMapping\n\ntry:\n    # Update the Dialer wrap up code mapping.\n    api_response = api_instance.put_outbound_wrapupcodemappings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling OutboundApi->put_outbound_wrapupcodemappings: %s\\n\" % e)"
  },
  "delete_presence_definition": {
    "operationId": "delete_presence_definition",
    "functionName": "delete_presence_definition",
    "signature": "delete_presence_definition(definition_id)",
    "parameters": [
      {
        "name": "definition_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\ndefinition_id = 'definition_id_example' # str | Presence Definition ID\n\ntry:\n    # Delete a Presence Definition\n    api_instance.delete_presence_definition(definition_id)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->delete_presence_definition: %s\\n\" % e)"
  },
  "delete_presence_source": {
    "operationId": "delete_presence_source",
    "functionName": "delete_presence_source",
    "signature": "delete_presence_source(source_id)",
    "parameters": [
      {
        "name": "source_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nsource_id = 'source_id_example' # str | Presence Source ID\n\ntry:\n    # Delete a Presence Source\n    api_instance.delete_presence_source(source_id)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->delete_presence_source: %s\\n\" % e)"
  },
  "delete_presencedefinition": {
    "operationId": "delete_presencedefinition",
    "functionName": "delete_presencedefinition",
    "signature": "delete_presencedefinition(presence_id)",
    "parameters": [
      {
        "name": "presence_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\npresence_id = 'presence_id_example' # str | Organization Presence ID\n\ntry:\n    # Delete a Presence Definition. Apps should migrate to use DELETE /api/v2/presence/definitions/{definitionId} instead\n    api_instance.delete_presencedefinition(presence_id)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->delete_presencedefinition: %s\\n\" % e)"
  },
  "get_presence_definition": {
    "operationId": "get_presence_definition",
    "functionName": "get_presence_definition",
    "signature": "get_presence_definition(definition_id, locale_code)",
    "parameters": [
      {
        "name": "definition_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "locale_code",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OrganizationPresenceDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\ndefinition_id = 'definition_id_example' # str | Presence Definition ID\nlocale_code = 'locale_code_example' # str | The locale code to fetch for the presence definition. Use ALL to fetch everything. (optional)\n\ntry:\n    # Get a Presence Definition\n    api_response = api_instance.get_presence_definition(definition_id, locale_code=locale_code)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->get_presence_definition: %s\\n\" % e)"
  },
  "get_presence_definitions": {
    "operationId": "get_presence_definitions",
    "functionName": "get_presence_definitions",
    "signature": "get_presence_definitions(deactivated, division_id, locale_code)",
    "parameters": [
      {
        "name": "deactivated",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "locale_code",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OrganizationPresenceDefinitionEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\ndeactivated = ''false'' # str | Deactivated query can be TRUE or FALSE (optional) (default to 'false')\ndivision_id = ['division_id_example'] # list[str] | One or more division IDs. If nothing is provided, the definitions associated withthe list of divisions that the user has access to will be returned. (optional)\nlocale_code = 'locale_code_example' # str | The locale code to fetch for the presence definition. Use ALL to fetch everything. (optional)\n\ntry:\n    # Get a list of Presence Definitions\n    api_response = api_instance.get_presence_definitions(deactivated=deactivated, division_id=division_id, locale_code=locale_code)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->get_presence_definitions: %s\\n\" % e)"
  },
  "get_presence_settings": {
    "operationId": "get_presence_settings",
    "functionName": "get_presence_settings",
    "signature": "get_presence_settings()",
    "return": "PresenceSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\n\ntry:\n    # Get the presence settings\n    api_response = api_instance.get_presence_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->get_presence_settings: %s\\n\" % e)"
  },
  "get_presence_source": {
    "operationId": "get_presence_source",
    "functionName": "get_presence_source",
    "signature": "get_presence_source(source_id)",
    "parameters": [
      {
        "name": "source_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Source",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nsource_id = 'source_id_example' # str | Presence Source ID\n\ntry:\n    # Get a Presence Source\n    api_response = api_instance.get_presence_source(source_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->get_presence_source: %s\\n\" % e)"
  },
  "get_presence_sources": {
    "operationId": "get_presence_sources",
    "functionName": "get_presence_sources",
    "signature": "get_presence_sources(deactivated)",
    "parameters": [
      {
        "name": "deactivated",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SourceEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\ndeactivated = ''false'' # str | Deactivated query can be TRUE or FALSE (optional) (default to 'false')\n\ntry:\n    # Get a list of Presence Sources\n    api_response = api_instance.get_presence_sources(deactivated=deactivated)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->get_presence_sources: %s\\n\" % e)"
  },
  "get_presence_user_primarysource": {
    "operationId": "get_presence_user_primarysource",
    "functionName": "get_presence_user_primarysource",
    "signature": "get_presence_user_primarysource(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UserPrimarySource",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nuser_id = 'user_id_example' # str | user ID\n\ntry:\n    # Get a user's Primary Presence Source\n    api_response = api_instance.get_presence_user_primarysource(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->get_presence_user_primarysource: %s\\n\" % e)"
  },
  "get_presencedefinition": {
    "operationId": "get_presencedefinition",
    "functionName": "get_presencedefinition",
    "signature": "get_presencedefinition(presence_id, locale_code)",
    "parameters": [
      {
        "name": "presence_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "locale_code",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OrganizationPresence",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\npresence_id = 'presence_id_example' # str | Organization Presence ID\nlocale_code = 'locale_code_example' # str | The locale code to fetch for the presence definition. Use ALL to fetch everything. (optional)\n\ntry:\n    # Get a Presence Definition. Apps should migrate to use GET /api/v2/presence/definitions/{definitionId} instead\n    api_response = api_instance.get_presencedefinition(presence_id, locale_code=locale_code)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->get_presencedefinition: %s\\n\" % e)"
  },
  "get_presencedefinitions": {
    "operationId": "get_presencedefinitions",
    "functionName": "get_presencedefinitions",
    "signature": "get_presencedefinitions(page_number, page_size, deleted, locale_code)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "deleted",
        "type": "str",
        "required": "false"
      },
      {
        "name": "locale_code",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OrganizationPresenceEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\ndeleted = ''false'' # str | Deleted query can be TRUE, FALSE or ALL (optional) (default to 'false')\nlocale_code = 'locale_code_example' # str | The locale code to fetch for each presence definition. Use ALL to fetch everything. (optional)\n\ntry:\n    # Get an Organization's list of Presence Definitions. Apps should migrate to use GET /api/v2/presence/definitions instead\n    api_response = api_instance.get_presencedefinitions(page_number=page_number, page_size=page_size, deleted=deleted, locale_code=locale_code)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->get_presencedefinitions: %s\\n\" % e)"
  },
  "get_systempresences": {
    "operationId": "get_systempresences",
    "functionName": "get_systempresences",
    "signature": "get_systempresences()",
    "return": "list[SystemPresence]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\n\ntry:\n    # Get the list of SystemPresences\n    api_response = api_instance.get_systempresences()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->get_systempresences: %s\\n\" % e)"
  },
  "get_user_presence": {
    "operationId": "get_user_presence",
    "functionName": "get_user_presence",
    "signature": "get_user_presence(user_id, source_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "source_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UserPresence",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nuser_id = 'user_id_example' # str | user Id\nsource_id = 'source_id_example' # str | Presence source ID\n\ntry:\n    # Get a user's Presence\n    api_response = api_instance.get_user_presence(user_id, source_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->get_user_presence: %s\\n\" % e)"
  },
  "get_user_presences_purecloud": {
    "operationId": "get_user_presences_purecloud",
    "functionName": "get_user_presences_purecloud",
    "signature": "get_user_presences_purecloud(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UserPresence",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nuser_id = 'user_id_example' # str | user Id\n\ntry:\n    # Get a user's Genesys Cloud presence.\n    api_response = api_instance.get_user_presences_purecloud(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->get_user_presences_purecloud: %s\\n\" % e)"
  },
  "get_users_presence_bulk": {
    "operationId": "get_users_presence_bulk",
    "functionName": "get_users_presence_bulk",
    "signature": "get_users_presence_bulk(source_id, id)",
    "parameters": [
      {
        "name": "source_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "list[UcUserPresence]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nsource_id = 'source_id_example' # str | The requested presence source ID.\nid = ['id_example'] # list[str] | A comma separated list of user IDs to fetch their presence status in bulk. Limit 50. (optional)\n\ntry:\n    # Get bulk user presences for a single presence source\n    api_response = api_instance.get_users_presence_bulk(source_id, id=id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->get_users_presence_bulk: %s\\n\" % e)"
  },
  "get_users_presences_purecloud_bulk": {
    "operationId": "get_users_presences_purecloud_bulk",
    "functionName": "get_users_presences_purecloud_bulk",
    "signature": "get_users_presences_purecloud_bulk(id)",
    "parameters": [
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "list[UcUserPresence]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nid = ['id_example'] # list[str] | A comma separated list of user IDs to fetch their presence status in bulk. Limit 50. (optional)\n\ntry:\n    # Get bulk user presences for a Genesys Cloud (PURECLOUD) presence source\n    api_response = api_instance.get_users_presences_purecloud_bulk(id=id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->get_users_presences_purecloud_bulk: %s\\n\" % e)"
  },
  "patch_user_presence": {
    "operationId": "patch_user_presence",
    "functionName": "patch_user_presence",
    "signature": "patch_user_presence(user_id, source_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "source_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserPresence",
        "required": "true"
      }
    ],
    "return": "UserPresence",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nuser_id = 'user_id_example' # str | user Id\nsource_id = 'source_id_example' # str | Presence source ID\nbody = PureCloudPlatformClientV2.UserPresence() # UserPresence | User presence\n\ntry:\n    # Patch a user's Presence\n    api_response = api_instance.patch_user_presence(user_id, source_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->patch_user_presence: %s\\n\" % e)"
  },
  "patch_user_presences_purecloud": {
    "operationId": "patch_user_presences_purecloud",
    "functionName": "patch_user_presences_purecloud",
    "signature": "patch_user_presences_purecloud(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserPresence",
        "required": "true"
      }
    ],
    "return": "UserPresence",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nuser_id = 'user_id_example' # str | user Id\nbody = PureCloudPlatformClientV2.UserPresence() # UserPresence | User presence\n\ntry:\n    # Patch a Genesys Cloud user's presence\n    api_response = api_instance.patch_user_presences_purecloud(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->patch_user_presences_purecloud: %s\\n\" % e)"
  },
  "post_presence_definitions": {
    "operationId": "post_presence_definitions",
    "functionName": "post_presence_definitions",
    "signature": "post_presence_definitions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OrganizationPresenceDefinition",
        "required": "true"
      }
    ],
    "return": "OrganizationPresenceDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nbody = PureCloudPlatformClientV2.OrganizationPresenceDefinition() # OrganizationPresenceDefinition | The Presence Definition to create\n\ntry:\n    # Create a Presence Definition\n    api_response = api_instance.post_presence_definitions(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->post_presence_definitions: %s\\n\" % e)"
  },
  "post_presence_sources": {
    "operationId": "post_presence_sources",
    "functionName": "post_presence_sources",
    "signature": "post_presence_sources(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Source",
        "required": "true"
      }
    ],
    "return": "Source",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nbody = PureCloudPlatformClientV2.Source() # Source | The Presence Source to create\n\ntry:\n    # Create a Presence Source\n    api_response = api_instance.post_presence_sources(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->post_presence_sources: %s\\n\" % e)"
  },
  "post_presencedefinitions": {
    "operationId": "post_presencedefinitions",
    "functionName": "post_presencedefinitions",
    "signature": "post_presencedefinitions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OrganizationPresence",
        "required": "true"
      }
    ],
    "return": "OrganizationPresence",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nbody = PureCloudPlatformClientV2.OrganizationPresence() # OrganizationPresence | The Presence Definition to create\n\ntry:\n    # Create a Presence Definition. Apps should migrate to use POST /api/v2/presence/definitions instead\n    api_response = api_instance.post_presencedefinitions(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->post_presencedefinitions: %s\\n\" % e)"
  },
  "put_presence_definition": {
    "operationId": "put_presence_definition",
    "functionName": "put_presence_definition",
    "signature": "put_presence_definition(definition_id, body)",
    "parameters": [
      {
        "name": "definition_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OrganizationPresenceDefinition",
        "required": "true"
      }
    ],
    "return": "OrganizationPresenceDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\ndefinition_id = 'definition_id_example' # str | Presence Definition ID\nbody = PureCloudPlatformClientV2.OrganizationPresenceDefinition() # OrganizationPresenceDefinition | The updated Presence Definition\n\ntry:\n    # Update a Presence Definition\n    api_response = api_instance.put_presence_definition(definition_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->put_presence_definition: %s\\n\" % e)"
  },
  "put_presence_settings": {
    "operationId": "put_presence_settings",
    "functionName": "put_presence_settings",
    "signature": "put_presence_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PresenceSettings",
        "required": "true"
      }
    ],
    "return": "PresenceSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nbody = PureCloudPlatformClientV2.PresenceSettings() # PresenceSettings | Presence Settings\n\ntry:\n    # Update the presence settings\n    api_response = api_instance.put_presence_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->put_presence_settings: %s\\n\" % e)"
  },
  "put_presence_source": {
    "operationId": "put_presence_source",
    "functionName": "put_presence_source",
    "signature": "put_presence_source(source_id, body)",
    "parameters": [
      {
        "name": "source_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Source",
        "required": "true"
      }
    ],
    "return": "Source",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nsource_id = 'source_id_example' # str | Presence Source ID\nbody = PureCloudPlatformClientV2.Source() # Source | The updated Presence Source\n\ntry:\n    # Update a Presence Source\n    api_response = api_instance.put_presence_source(source_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->put_presence_source: %s\\n\" % e)"
  },
  "put_presence_user_primarysource": {
    "operationId": "put_presence_user_primarysource",
    "functionName": "put_presence_user_primarysource",
    "signature": "put_presence_user_primarysource(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserPrimarySource",
        "required": "true"
      }
    ],
    "return": "UserPrimarySource",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nuser_id = 'user_id_example' # str | user ID\nbody = PureCloudPlatformClientV2.UserPrimarySource() # UserPrimarySource | Primary Source\n\ntry:\n    # Update a user's Primary Presence Source\n    api_response = api_instance.put_presence_user_primarysource(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->put_presence_user_primarysource: %s\\n\" % e)"
  },
  "put_presencedefinition": {
    "operationId": "put_presencedefinition",
    "functionName": "put_presencedefinition",
    "signature": "put_presencedefinition(presence_id, body)",
    "parameters": [
      {
        "name": "presence_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OrganizationPresence",
        "required": "true"
      }
    ],
    "return": "OrganizationPresence",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\npresence_id = 'presence_id_example' # str | Organization Presence ID\nbody = PureCloudPlatformClientV2.OrganizationPresence() # OrganizationPresence | The OrganizationPresence to update\n\ntry:\n    # Update a Presence Definition. Apps should migrate to use PUT /api/v2/presence/definitions/{definitionId} instead)\n    api_response = api_instance.put_presencedefinition(presence_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->put_presencedefinition: %s\\n\" % e)"
  },
  "put_users_presences_bulk": {
    "operationId": "put_users_presences_bulk",
    "functionName": "put_users_presences_bulk",
    "signature": "put_users_presences_bulk(body)",
    "parameters": [
      {
        "name": "body",
        "type": "list[MutableUserPresence]",
        "required": "true"
      }
    ],
    "return": "list[UserPresence]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.PresenceApi();\nbody = [PureCloudPlatformClientV2.MutableUserPresence()] # list[MutableUserPresence] | List of User presences\n\ntry:\n    # Update bulk user Presences\n    api_response = api_instance.put_users_presences_bulk(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PresenceApi->put_users_presences_bulk: %s\\n\" % e)"
  },
  "delete_processautomation_trigger": {
    "operationId": "delete_processautomation_trigger",
    "functionName": "delete_processautomation_trigger",
    "signature": "delete_processautomation_trigger(trigger_id)",
    "parameters": [
      {
        "name": "trigger_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ProcessAutomationApi();\ntrigger_id = 'trigger_id_example' # str | triggerId\n\ntry:\n    # Delete a Trigger\n    api_instance.delete_processautomation_trigger(trigger_id)\nexcept ApiException as e:\n    print(\"Exception when calling ProcessAutomationApi->delete_processautomation_trigger: %s\\n\" % e)"
  },
  "get_processautomation_trigger": {
    "operationId": "get_processautomation_trigger",
    "functionName": "get_processautomation_trigger",
    "signature": "get_processautomation_trigger(trigger_id)",
    "parameters": [
      {
        "name": "trigger_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Trigger",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ProcessAutomationApi();\ntrigger_id = 'trigger_id_example' # str | triggerId\n\ntry:\n    # Retrieve a single Trigger matching id\n    api_response = api_instance.get_processautomation_trigger(trigger_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ProcessAutomationApi->get_processautomation_trigger: %s\\n\" % e)"
  },
  "get_processautomation_triggers": {
    "operationId": "get_processautomation_triggers",
    "functionName": "get_processautomation_triggers",
    "signature": "get_processautomation_triggers(before, after, page_size, topic_name, enabled, has_delay_by)",
    "parameters": [
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "topic_name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "enabled",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "has_delay_by",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "TriggerEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ProcessAutomationApi();\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\ntopic_name = 'topic_name_example' # str | Topic name(s). Separated by commas (optional)\nenabled = True # bool | Boolean indicating desired enabled state of triggers (optional)\nhas_delay_by = True # bool | Boolean to filter based on delayBySeconds being set in triggers. Default returns all, true returns only those with delayBySeconds set, false returns those without delayBySeconds set. (optional)\n\ntry:\n    # Retrieves all triggers, optionally filtered by query parameters.\n    api_response = api_instance.get_processautomation_triggers(before=before, after=after, page_size=page_size, topic_name=topic_name, enabled=enabled, has_delay_by=has_delay_by)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ProcessAutomationApi->get_processautomation_triggers: %s\\n\" % e)"
  },
  "get_processautomation_triggers_topics": {
    "operationId": "get_processautomation_triggers_topics",
    "functionName": "get_processautomation_triggers_topics",
    "signature": "get_processautomation_triggers_topics(before, after, page_size)",
    "parameters": [
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TopicCursorEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ProcessAutomationApi();\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\n\ntry:\n    # Get topics available for organization\n    api_response = api_instance.get_processautomation_triggers_topics(before=before, after=after, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ProcessAutomationApi->get_processautomation_triggers_topics: %s\\n\" % e)"
  },
  "post_processautomation_trigger_test": {
    "operationId": "post_processautomation_trigger_test",
    "functionName": "post_processautomation_trigger_test",
    "signature": "post_processautomation_trigger_test(trigger_id, body)",
    "parameters": [
      {
        "name": "trigger_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TestModeResults",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ProcessAutomationApi();\ntrigger_id = 'trigger_id_example' # str | triggerId\nbody = 'body_example' # str | eventBody (optional)\n\ntry:\n    # Test the matching of a Trigger based on provided event body\n    api_response = api_instance.post_processautomation_trigger_test(trigger_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ProcessAutomationApi->post_processautomation_trigger_test: %s\\n\" % e)"
  },
  "post_processautomation_triggers": {
    "operationId": "post_processautomation_triggers",
    "functionName": "post_processautomation_triggers",
    "signature": "post_processautomation_triggers(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateTriggerRequest",
        "required": "true"
      }
    ],
    "return": "Trigger",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ProcessAutomationApi();\nbody = PureCloudPlatformClientV2.CreateTriggerRequest() # CreateTriggerRequest | Input used to create a Trigger.\n\ntry:\n    # Create a Trigger\n    api_response = api_instance.post_processautomation_triggers(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ProcessAutomationApi->post_processautomation_triggers: %s\\n\" % e)"
  },
  "post_processautomation_triggers_topic_test": {
    "operationId": "post_processautomation_triggers_topic_test",
    "functionName": "post_processautomation_triggers_topic_test",
    "signature": "post_processautomation_triggers_topic_test(topic_name, body)",
    "parameters": [
      {
        "name": "topic_name",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TestModeEventResults",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ProcessAutomationApi();\ntopic_name = 'topic_name_example' # str | topicName\nbody = 'body_example' # str | eventBody (optional)\n\ntry:\n    # Test the matching of all organization Triggers on given topic using provided event body\n    api_response = api_instance.post_processautomation_triggers_topic_test(topic_name, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ProcessAutomationApi->post_processautomation_triggers_topic_test: %s\\n\" % e)"
  },
  "put_processautomation_trigger": {
    "operationId": "put_processautomation_trigger",
    "functionName": "put_processautomation_trigger",
    "signature": "put_processautomation_trigger(trigger_id, body)",
    "parameters": [
      {
        "name": "trigger_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateTriggerRequest",
        "required": "true"
      }
    ],
    "return": "Trigger",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ProcessAutomationApi();\ntrigger_id = 'trigger_id_example' # str | triggerId\nbody = PureCloudPlatformClientV2.UpdateTriggerRequest() # UpdateTriggerRequest | Input to update Trigger. (topicName cannot be updated, a new trigger must be created to use a new topicName)\n\ntry:\n    # Update a Trigger\n    api_response = api_instance.put_processautomation_trigger(trigger_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ProcessAutomationApi->put_processautomation_trigger: %s\\n\" % e)"
  },
  "delete_quality_calibration": {
    "operationId": "delete_quality_calibration",
    "functionName": "delete_quality_calibration",
    "signature": "delete_quality_calibration(calibration_id, calibrator_id)",
    "parameters": [
      {
        "name": "calibration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "calibrator_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Calibration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\ncalibration_id = 'calibration_id_example' # str | Calibration ID\ncalibrator_id = 'calibrator_id_example' # str | calibratorId\n\ntry:\n    # Delete a calibration by id.\n    api_response = api_instance.delete_quality_calibration(calibration_id, calibrator_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->delete_quality_calibration: %s\\n\" % e)"
  },
  "delete_quality_conversation_evaluation": {
    "operationId": "delete_quality_conversation_evaluation",
    "functionName": "delete_quality_conversation_evaluation",
    "signature": "delete_quality_conversation_evaluation(conversation_id, evaluation_id, expand)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "evaluation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "EvaluationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nevaluation_id = 'evaluation_id_example' # str | evaluationId\nexpand = 'expand_example' # str | evaluatorId, evaluationForm (optional)\n\ntry:\n    # Delete an evaluation\n    api_response = api_instance.delete_quality_conversation_evaluation(conversation_id, evaluation_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->delete_quality_conversation_evaluation: %s\\n\" % e)"
  },
  "delete_quality_form": {
    "operationId": "delete_quality_form",
    "functionName": "delete_quality_form",
    "signature": "delete_quality_form(form_id)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\n\ntry:\n    # Delete an evaluation form.\n    api_instance.delete_quality_form(form_id)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->delete_quality_form: %s\\n\" % e)"
  },
  "delete_quality_forms_evaluation": {
    "operationId": "delete_quality_forms_evaluation",
    "functionName": "delete_quality_forms_evaluation",
    "signature": "delete_quality_forms_evaluation(form_id)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\n\ntry:\n    # Delete an evaluation form.\n    api_instance.delete_quality_forms_evaluation(form_id)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->delete_quality_forms_evaluation: %s\\n\" % e)"
  },
  "delete_quality_forms_survey": {
    "operationId": "delete_quality_forms_survey",
    "functionName": "delete_quality_forms_survey",
    "signature": "delete_quality_forms_survey(form_id)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\n\ntry:\n    # Delete a survey form.\n    api_instance.delete_quality_forms_survey(form_id)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->delete_quality_forms_survey: %s\\n\" % e)"
  },
  "get_quality_agents_activity": {
    "operationId": "get_quality_agents_activity",
    "functionName": "get_quality_agents_activity",
    "signature": "get_quality_agents_activity(page_size, page_number, sort_by, expand, next_page, previous_page, start_time, end_time, agent_user_id, evaluator_user_id, name, group, agent_team_id, form_context_id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "start_time",
        "type": "datetime",
        "required": "false"
      },
      {
        "name": "end_time",
        "type": "datetime",
        "required": "false"
      },
      {
        "name": "agent_user_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "evaluator_user_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "group",
        "type": "str",
        "required": "false"
      },
      {
        "name": "agent_team_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "form_context_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "AgentActivityEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nstart_time = '2013-10-20T19:20:30+01:00' # datetime | Start time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)\nend_time = '2013-10-20T19:20:30+01:00' # datetime | End time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)\nagent_user_id = ['agent_user_id_example'] # list[str] | user id of agent requested (optional)\nevaluator_user_id = 'evaluator_user_id_example' # str | user id of the evaluator (optional)\nname = 'name_example' # str | name (optional)\ngroup = 'group_example' # str | group id (optional)\nagent_team_id = 'agent_team_id_example' # str | team id of agents requested (optional)\nform_context_id = 'form_context_id_example' # str | shared id between form versions (optional)\n\ntry:\n    # Gets a list of Agent Activities\n    api_response = api_instance.get_quality_agents_activity(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page, start_time=start_time, end_time=end_time, agent_user_id=agent_user_id, evaluator_user_id=evaluator_user_id, name=name, group=group, agent_team_id=agent_team_id, form_context_id=form_context_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_agents_activity: %s\\n\" % e)"
  },
  "get_quality_calibration": {
    "operationId": "get_quality_calibration",
    "functionName": "get_quality_calibration",
    "signature": "get_quality_calibration(calibration_id, calibrator_id, conversation_id)",
    "parameters": [
      {
        "name": "calibration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "calibrator_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "conversation_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Calibration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\ncalibration_id = 'calibration_id_example' # str | Calibration ID\ncalibrator_id = 'calibrator_id_example' # str | calibratorId (optional)\nconversation_id = 'conversation_id_example' # str | conversationId (optional)\n\ntry:\n    # Get a calibration by id.  Requires either calibrator id or conversation id\n    api_response = api_instance.get_quality_calibration(calibration_id, calibrator_id=calibrator_id, conversation_id=conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_calibration: %s\\n\" % e)"
  },
  "get_quality_calibrations": {
    "operationId": "get_quality_calibrations",
    "functionName": "get_quality_calibrations",
    "signature": "get_quality_calibrations(calibrator_id, page_size, page_number, sort_by, expand, next_page, previous_page, conversation_id, start_time, end_time)",
    "parameters": [
      {
        "name": "calibrator_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "conversation_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "start_time",
        "type": "datetime",
        "required": "false"
      },
      {
        "name": "end_time",
        "type": "datetime",
        "required": "false"
      }
    ],
    "return": "CalibrationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\ncalibrator_id = 'calibrator_id_example' # str | user id of calibrator\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nconversation_id = 'conversation_id_example' # str | conversation id (optional)\nstart_time = '2013-10-20T19:20:30+01:00' # datetime | Beginning of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)\nend_time = '2013-10-20T19:20:30+01:00' # datetime | end of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)\n\ntry:\n    # Get the list of calibrations\n    api_response = api_instance.get_quality_calibrations(calibrator_id, page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page, conversation_id=conversation_id, start_time=start_time, end_time=end_time)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_calibrations: %s\\n\" % e)"
  },
  "get_quality_conversation_evaluation": {
    "operationId": "get_quality_conversation_evaluation",
    "functionName": "get_quality_conversation_evaluation",
    "signature": "get_quality_conversation_evaluation(conversation_id, evaluation_id, expand)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "evaluation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "EvaluationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nevaluation_id = 'evaluation_id_example' # str | evaluationId\nexpand = 'expand_example' # str | agent, assignee, evaluator, evaluationForm (optional)\n\ntry:\n    # Get an evaluation\n    api_response = api_instance.get_quality_conversation_evaluation(conversation_id, evaluation_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_conversation_evaluation: %s\\n\" % e)"
  },
  "get_quality_conversation_surveys": {
    "operationId": "get_quality_conversation_surveys",
    "functionName": "get_quality_conversation_surveys",
    "signature": "get_quality_conversation_surveys(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[Survey]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nconversation_id = 'conversation_id_example' # str | conversationId\n\ntry:\n    # Get the surveys for a conversation\n    api_response = api_instance.get_quality_conversation_surveys(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_conversation_surveys: %s\\n\" % e)"
  },
  "get_quality_conversations_audits_query_transaction_id": {
    "operationId": "get_quality_conversations_audits_query_transaction_id",
    "functionName": "get_quality_conversations_audits_query_transaction_id",
    "signature": "get_quality_conversations_audits_query_transaction_id(transaction_id)",
    "parameters": [
      {
        "name": "transaction_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "QualityAuditQueryExecutionStatusResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\ntransaction_id = 'transaction_id_example' # str | Transaction ID\n\ntry:\n    # Get status of audit query execution\n    api_response = api_instance.get_quality_conversations_audits_query_transaction_id(transaction_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_conversations_audits_query_transaction_id: %s\\n\" % e)"
  },
  "get_quality_conversations_audits_query_transaction_id_results": {
    "operationId": "get_quality_conversations_audits_query_transaction_id_results",
    "functionName": "get_quality_conversations_audits_query_transaction_id_results",
    "signature": "get_quality_conversations_audits_query_transaction_id_results(transaction_id, cursor, page_size, expand)",
    "parameters": [
      {
        "name": "transaction_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "QualityAuditQueryExecutionResultsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\ntransaction_id = 'transaction_id_example' # str | Transaction ID\ncursor = 'cursor_example' # str | Indicates where to resume query results (not required for first page) (optional)\npage_size = 25 # int | Page size (optional) (default to 25)\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Get results of audit query\n    api_response = api_instance.get_quality_conversations_audits_query_transaction_id_results(transaction_id, cursor=cursor, page_size=page_size, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_conversations_audits_query_transaction_id_results: %s\\n\" % e)"
  },
  "get_quality_evaluations_query": {
    "operationId": "get_quality_evaluations_query",
    "functionName": "get_quality_evaluations_query",
    "signature": "get_quality_evaluations_query(page_size, page_number, sort_by, expand, next_page, previous_page, conversation_id, agent_user_id, agent_team_id, evaluator_user_id, assignee_user_id, queue_id, start_time, end_time, form_context_id, evaluation_state, is_released, agent_has_read, expand_answer_total_scores, maximum, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "conversation_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "agent_user_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "agent_team_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "evaluator_user_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "assignee_user_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "queue_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "start_time",
        "type": "str",
        "required": "false"
      },
      {
        "name": "end_time",
        "type": "str",
        "required": "false"
      },
      {
        "name": "form_context_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "evaluation_state",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "is_released",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "agent_has_read",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "expand_answer_total_scores",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "maximum",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "EvaluationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | NOTE: Does not work when querying evaluations (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | NOTE: Does not work when querying evaluations (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nconversation_id = 'conversation_id_example' # str | conversationId specified (optional)\nagent_user_id = 'agent_user_id_example' # str | user id of the agent (optional)\nagent_team_id = 'agent_team_id_example' # str | team id of the agent (optional)\nevaluator_user_id = 'evaluator_user_id_example' # str | evaluator user id (optional)\nassignee_user_id = 'assignee_user_id_example' # str | assignee user id (optional)\nqueue_id = 'queue_id_example' # str | queue id (optional)\nstart_time = 'start_time_example' # str | start time of the evaluation query (optional)\nend_time = 'end_time_example' # str | end time of the evaluation query (optional)\nform_context_id = 'form_context_id_example' # str | shared id between form versions (optional)\nevaluation_state = ['evaluation_state_example'] # list[str] |  (optional)\nis_released = True # bool | the evaluation has been released (optional)\nagent_has_read = True # bool | agent has the evaluation (optional)\nexpand_answer_total_scores = True # bool | get the total scores for evaluations. NOTE: The answers will only be populated if this parameter is set to true in the request. (optional)\nmaximum = 56 # int | the maximum number of results to return (optional)\nsort_order = 'sort_order_example' # str | NOTE: Does not work when conversationId is supplied. (optional)\n\ntry:\n    # Queries Evaluations and returns a paged list\n    api_response = api_instance.get_quality_evaluations_query(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page, conversation_id=conversation_id, agent_user_id=agent_user_id, agent_team_id=agent_team_id, evaluator_user_id=evaluator_user_id, assignee_user_id=assignee_user_id, queue_id=queue_id, start_time=start_time, end_time=end_time, form_context_id=form_context_id, evaluation_state=evaluation_state, is_released=is_released, agent_has_read=agent_has_read, expand_answer_total_scores=expand_answer_total_scores, maximum=maximum, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_evaluations_query: %s\\n\" % e)"
  },
  "get_quality_evaluators_activity": {
    "operationId": "get_quality_evaluators_activity",
    "functionName": "get_quality_evaluators_activity",
    "signature": "get_quality_evaluators_activity(page_size, page_number, sort_by, expand, next_page, previous_page, start_time, end_time, name, permission, group, agent_team_id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "start_time",
        "type": "datetime",
        "required": "false"
      },
      {
        "name": "end_time",
        "type": "datetime",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "permission",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "group",
        "type": "str",
        "required": "false"
      },
      {
        "name": "agent_team_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "EvaluatorActivityEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nstart_time = '2013-10-20T19:20:30+01:00' # datetime | The start time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)\nend_time = '2013-10-20T19:20:30+01:00' # datetime | The end time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional)\nname = 'name_example' # str | Evaluator name (optional)\npermission = ['permission_example'] # list[str] | permission strings (optional)\ngroup = 'group_example' # str | group id (optional)\nagent_team_id = 'agent_team_id_example' # str | team id of agents to be considered (optional)\n\ntry:\n    # Get an evaluator activity\n    api_response = api_instance.get_quality_evaluators_activity(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page, start_time=start_time, end_time=end_time, name=name, permission=permission, group=group, agent_team_id=agent_team_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_evaluators_activity: %s\\n\" % e)"
  },
  "get_quality_form": {
    "operationId": "get_quality_form",
    "functionName": "get_quality_form",
    "signature": "get_quality_form(form_id)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EvaluationFormResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\n\ntry:\n    # Get an evaluation form\n    api_response = api_instance.get_quality_form(form_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_form: %s\\n\" % e)"
  },
  "get_quality_form_versions": {
    "operationId": "get_quality_form_versions",
    "functionName": "get_quality_form_versions",
    "signature": "get_quality_form_versions(form_id, page_size, page_number)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "EvaluationFormResponseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Gets all the revisions for a specific evaluation.\n    api_response = api_instance.get_quality_form_versions(form_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_form_versions: %s\\n\" % e)"
  },
  "get_quality_forms": {
    "operationId": "get_quality_forms",
    "functionName": "get_quality_forms",
    "signature": "get_quality_forms(page_size, page_number, sort_by, next_page, previous_page, expand, name, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "EvaluationFormResponseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nexpand = 'expand_example' # str | If 'expand=publishHistory', then each unpublished evaluation form includes a listing of its published versions (optional)\nname = 'name_example' # str | Name (optional)\nsort_order = 'sort_order_example' # str | Order to sort results, either asc or desc (optional)\n\ntry:\n    # Get the list of evaluation forms. If you set \\\"expand=publishHistory\\\", then you will be able to get published versions for each corresponding evaluation form.\n    api_response = api_instance.get_quality_forms(page_size=page_size, page_number=page_number, sort_by=sort_by, next_page=next_page, previous_page=previous_page, expand=expand, name=name, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_forms: %s\\n\" % e)"
  },
  "get_quality_forms_evaluation": {
    "operationId": "get_quality_forms_evaluation",
    "functionName": "get_quality_forms_evaluation",
    "signature": "get_quality_forms_evaluation(form_id)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EvaluationFormResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\n\ntry:\n    # Get an evaluation form\n    api_response = api_instance.get_quality_forms_evaluation(form_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_forms_evaluation: %s\\n\" % e)"
  },
  "get_quality_forms_evaluation_versions": {
    "operationId": "get_quality_forms_evaluation_versions",
    "functionName": "get_quality_forms_evaluation_versions",
    "signature": "get_quality_forms_evaluation_versions(form_id, page_size, page_number, sort_order)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "EvaluationFormResponseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\n\ntry:\n    # Gets all the revisions for a specific evaluation.\n    api_response = api_instance.get_quality_forms_evaluation_versions(form_id, page_size=page_size, page_number=page_number, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_forms_evaluation_versions: %s\\n\" % e)"
  },
  "get_quality_forms_evaluations": {
    "operationId": "get_quality_forms_evaluations",
    "functionName": "get_quality_forms_evaluations",
    "signature": "get_quality_forms_evaluations(page_size, page_number, sort_by, next_page, previous_page, expand, name, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "EvaluationFormResponseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nexpand = 'expand_example' # str | If 'expand=publishHistory', then each unpublished evaluation form includes a listing of its published versions (optional)\nname = 'name_example' # str | Name (optional)\nsort_order = 'sort_order_example' # str | Order to sort results, either asc or desc (optional)\n\ntry:\n    # Get the list of evaluation forms\n    api_response = api_instance.get_quality_forms_evaluations(page_size=page_size, page_number=page_number, sort_by=sort_by, next_page=next_page, previous_page=previous_page, expand=expand, name=name, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_forms_evaluations: %s\\n\" % e)"
  },
  "get_quality_forms_evaluations_bulk_contexts": {
    "operationId": "get_quality_forms_evaluations_bulk_contexts",
    "functionName": "get_quality_forms_evaluations_bulk_contexts",
    "signature": "get_quality_forms_evaluations_bulk_contexts(context_id)",
    "parameters": [
      {
        "name": "context_id",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "list[EvaluationFormResponse]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\ncontext_id = ['context_id_example'] # list[str] | A comma-delimited list of valid evaluation form context ids\n\ntry:\n    # Retrieve a list of the latest published evaluation form versions by context ids\n    api_response = api_instance.get_quality_forms_evaluations_bulk_contexts(context_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_forms_evaluations_bulk_contexts: %s\\n\" % e)"
  },
  "get_quality_forms_survey": {
    "operationId": "get_quality_forms_survey",
    "functionName": "get_quality_forms_survey",
    "signature": "get_quality_forms_survey(form_id)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SurveyForm",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\n\ntry:\n    # Get a survey form\n    api_response = api_instance.get_quality_forms_survey(form_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_forms_survey: %s\\n\" % e)"
  },
  "get_quality_forms_survey_versions": {
    "operationId": "get_quality_forms_survey_versions",
    "functionName": "get_quality_forms_survey_versions",
    "signature": "get_quality_forms_survey_versions(form_id, page_size, page_number)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "SurveyFormEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Gets all the revisions for a specific survey.\n    api_response = api_instance.get_quality_forms_survey_versions(form_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_forms_survey_versions: %s\\n\" % e)"
  },
  "get_quality_forms_surveys": {
    "operationId": "get_quality_forms_surveys",
    "functionName": "get_quality_forms_surveys",
    "signature": "get_quality_forms_surveys(page_size, page_number, sort_by, next_page, previous_page, expand, name, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SurveyFormEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nexpand = 'expand_example' # str | If 'expand=publishHistory', then each unpublished evaluation form includes a listing of its published versions (optional)\nname = 'name_example' # str | Name (optional)\nsort_order = 'sort_order_example' # str | Order to sort results, either asc or desc (optional)\n\ntry:\n    # Get the list of survey forms. If you set \\\"expand=publishHistory\\\", then you will be able to get published versions for each corresponding survey form.\n    api_response = api_instance.get_quality_forms_surveys(page_size=page_size, page_number=page_number, sort_by=sort_by, next_page=next_page, previous_page=previous_page, expand=expand, name=name, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_forms_surveys: %s\\n\" % e)"
  },
  "get_quality_forms_surveys_bulk": {
    "operationId": "get_quality_forms_surveys_bulk",
    "functionName": "get_quality_forms_surveys_bulk",
    "signature": "get_quality_forms_surveys_bulk(id)",
    "parameters": [
      {
        "name": "id",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "SurveyFormEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nid = ['id_example'] # list[str] | A comma-delimited list of valid survey form ids\n\ntry:\n    # Retrieve a list of survey forms by their ids\n    api_response = api_instance.get_quality_forms_surveys_bulk(id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_forms_surveys_bulk: %s\\n\" % e)"
  },
  "get_quality_forms_surveys_bulk_contexts": {
    "operationId": "get_quality_forms_surveys_bulk_contexts",
    "functionName": "get_quality_forms_surveys_bulk_contexts",
    "signature": "get_quality_forms_surveys_bulk_contexts(context_id, published)",
    "parameters": [
      {
        "name": "context_id",
        "type": "list[str]",
        "required": "true"
      },
      {
        "name": "published",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "list[SurveyForm]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\ncontext_id = ['context_id_example'] # list[str] | A comma-delimited list of valid survey form context ids. The maximum number of ids allowed in this list is 100.\npublished = True # bool | If true, the latest published version will be included. If false, only the unpublished version will be included. (optional) (default to True)\n\ntry:\n    # Retrieve a list of the latest form versions by context ids\n    api_response = api_instance.get_quality_forms_surveys_bulk_contexts(context_id, published=published)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_forms_surveys_bulk_contexts: %s\\n\" % e)"
  },
  "get_quality_publishedform": {
    "operationId": "get_quality_publishedform",
    "functionName": "get_quality_publishedform",
    "signature": "get_quality_publishedform(form_id)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EvaluationFormResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\n\ntry:\n    # Get the published evaluation forms.\n    api_response = api_instance.get_quality_publishedform(form_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_publishedform: %s\\n\" % e)"
  },
  "get_quality_publishedforms": {
    "operationId": "get_quality_publishedforms",
    "functionName": "get_quality_publishedforms",
    "signature": "get_quality_publishedforms(page_size, page_number, name, only_latest_per_context)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "only_latest_per_context",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "EvaluationFormResponseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nname = 'name_example' # str | Name (optional)\nonly_latest_per_context = False # bool | onlyLatestPerContext (optional) (default to False)\n\ntry:\n    # Get the published evaluation forms.\n    api_response = api_instance.get_quality_publishedforms(page_size=page_size, page_number=page_number, name=name, only_latest_per_context=only_latest_per_context)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_publishedforms: %s\\n\" % e)"
  },
  "get_quality_publishedforms_evaluation": {
    "operationId": "get_quality_publishedforms_evaluation",
    "functionName": "get_quality_publishedforms_evaluation",
    "signature": "get_quality_publishedforms_evaluation(form_id)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EvaluationFormResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\n\ntry:\n    # Get the most recent published version of an evaluation form.\n    api_response = api_instance.get_quality_publishedforms_evaluation(form_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_publishedforms_evaluation: %s\\n\" % e)"
  },
  "get_quality_publishedforms_evaluations": {
    "operationId": "get_quality_publishedforms_evaluations",
    "functionName": "get_quality_publishedforms_evaluations",
    "signature": "get_quality_publishedforms_evaluations(page_size, page_number, name, only_latest_per_context)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "only_latest_per_context",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "EvaluationFormResponseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nname = 'name_example' # str | Name (optional)\nonly_latest_per_context = False # bool | onlyLatestPerContext (optional) (default to False)\n\ntry:\n    # Get the published evaluation forms.\n    api_response = api_instance.get_quality_publishedforms_evaluations(page_size=page_size, page_number=page_number, name=name, only_latest_per_context=only_latest_per_context)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_publishedforms_evaluations: %s\\n\" % e)"
  },
  "get_quality_publishedforms_survey": {
    "operationId": "get_quality_publishedforms_survey",
    "functionName": "get_quality_publishedforms_survey",
    "signature": "get_quality_publishedforms_survey(form_id)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SurveyForm",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\n\ntry:\n    # Get the most recent published version of a survey form.\n    api_response = api_instance.get_quality_publishedforms_survey(form_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_publishedforms_survey: %s\\n\" % e)"
  },
  "get_quality_publishedforms_surveys": {
    "operationId": "get_quality_publishedforms_surveys",
    "functionName": "get_quality_publishedforms_surveys",
    "signature": "get_quality_publishedforms_surveys(page_size, page_number, name, only_latest_enabled_per_context)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "only_latest_enabled_per_context",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "SurveyFormEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nname = 'name_example' # str | Name (optional)\nonly_latest_enabled_per_context = False # bool | onlyLatestEnabledPerContext (optional) (default to False)\n\ntry:\n    # Get the published survey forms.\n    api_response = api_instance.get_quality_publishedforms_surveys(page_size=page_size, page_number=page_number, name=name, only_latest_enabled_per_context=only_latest_enabled_per_context)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_publishedforms_surveys: %s\\n\" % e)"
  },
  "get_quality_survey": {
    "operationId": "get_quality_survey",
    "functionName": "get_quality_survey",
    "signature": "get_quality_survey(survey_id)",
    "parameters": [
      {
        "name": "survey_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Survey",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nsurvey_id = 'survey_id_example' # str | surveyId\n\ntry:\n    # Get a survey for a conversation\n    api_response = api_instance.get_quality_survey(survey_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_survey: %s\\n\" % e)"
  },
  "get_quality_surveys_scorable": {
    "operationId": "get_quality_surveys_scorable",
    "functionName": "get_quality_surveys_scorable",
    "signature": "get_quality_surveys_scorable(customer_survey_url)",
    "parameters": [
      {
        "name": "customer_survey_url",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ScorableSurvey",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\ncustomer_survey_url = 'customer_survey_url_example' # str | customerSurveyUrl\n\ntry:\n    # Get a survey as an end-customer, for the purposes of scoring it.\n    api_response = api_instance.get_quality_surveys_scorable(customer_survey_url)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->get_quality_surveys_scorable: %s\\n\" % e)"
  },
  "patch_quality_forms_survey": {
    "operationId": "patch_quality_forms_survey",
    "functionName": "patch_quality_forms_survey",
    "signature": "patch_quality_forms_survey(form_id, body)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SurveyForm",
        "required": "true"
      }
    ],
    "return": "SurveyForm",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\nbody = PureCloudPlatformClientV2.SurveyForm() # SurveyForm | Survey form\n\ntry:\n    # Disable a particular version of a survey form and invalidates any invitations that have already been sent to customers using this version of the form.\n    api_response = api_instance.patch_quality_forms_survey(form_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->patch_quality_forms_survey: %s\\n\" % e)"
  },
  "post_quality_calibrations": {
    "operationId": "post_quality_calibrations",
    "functionName": "post_quality_calibrations",
    "signature": "post_quality_calibrations(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "CalibrationCreate",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Calibration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.CalibrationCreate() # CalibrationCreate | calibration\nexpand = 'expand_example' # str | calibratorId (optional)\n\ntry:\n    # Create a calibration\n    api_response = api_instance.post_quality_calibrations(body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_quality_calibrations: %s\\n\" % e)"
  },
  "post_quality_conversation_evaluations": {
    "operationId": "post_quality_conversation_evaluations",
    "functionName": "post_quality_conversation_evaluations",
    "signature": "post_quality_conversation_evaluations(conversation_id, body, expand)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EvaluationCreateBody",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Evaluation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nbody = PureCloudPlatformClientV2.EvaluationCreateBody() # EvaluationCreateBody | evaluation\nexpand = 'expand_example' # str | evaluatorId (optional)\n\ntry:\n    # Create an evaluation\n    api_response = api_instance.post_quality_conversation_evaluations(conversation_id, body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_quality_conversation_evaluations: %s\\n\" % e)"
  },
  "post_quality_conversations_audits_query": {
    "operationId": "post_quality_conversations_audits_query",
    "functionName": "post_quality_conversations_audits_query",
    "signature": "post_quality_conversations_audits_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "QMAuditQueryRequest",
        "required": "true"
      }
    ],
    "return": "QualityAuditQueryExecutionStatusResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.QMAuditQueryRequest() # QMAuditQueryRequest | query\n\ntry:\n    # Create audit query execution\n    api_response = api_instance.post_quality_conversations_audits_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_quality_conversations_audits_query: %s\\n\" % e)"
  },
  "post_quality_evaluations_aggregates_query_me": {
    "operationId": "post_quality_evaluations_aggregates_query_me",
    "functionName": "post_quality_evaluations_aggregates_query_me",
    "signature": "post_quality_evaluations_aggregates_query_me(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EvaluationAggregationQueryMe",
        "required": "true"
      }
    ],
    "return": "EvaluationAggregateQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.EvaluationAggregationQueryMe() # EvaluationAggregationQueryMe | query\n\ntry:\n    # Query for evaluation aggregates for the current user\n    api_response = api_instance.post_quality_evaluations_aggregates_query_me(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_quality_evaluations_aggregates_query_me: %s\\n\" % e)"
  },
  "post_quality_evaluations_scoring": {
    "operationId": "post_quality_evaluations_scoring",
    "functionName": "post_quality_evaluations_scoring",
    "signature": "post_quality_evaluations_scoring(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EvaluationFormAndScoringSet",
        "required": "true"
      }
    ],
    "return": "EvaluationScoringSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.EvaluationFormAndScoringSet() # EvaluationFormAndScoringSet | evaluationAndScoringSet\n\ntry:\n    # Score evaluation\n    api_response = api_instance.post_quality_evaluations_scoring(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_quality_evaluations_scoring: %s\\n\" % e)"
  },
  "post_quality_forms": {
    "operationId": "post_quality_forms",
    "functionName": "post_quality_forms",
    "signature": "post_quality_forms(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EvaluationForm",
        "required": "true"
      }
    ],
    "return": "EvaluationFormResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.EvaluationForm() # EvaluationForm | Evaluation form\n\ntry:\n    # Create an evaluation form.\n    api_response = api_instance.post_quality_forms(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_quality_forms: %s\\n\" % e)"
  },
  "post_quality_forms_evaluations": {
    "operationId": "post_quality_forms_evaluations",
    "functionName": "post_quality_forms_evaluations",
    "signature": "post_quality_forms_evaluations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EvaluationForm",
        "required": "true"
      }
    ],
    "return": "EvaluationFormResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.EvaluationForm() # EvaluationForm | Evaluation form\n\ntry:\n    # Create an evaluation form.\n    api_response = api_instance.post_quality_forms_evaluations(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_quality_forms_evaluations: %s\\n\" % e)"
  },
  "post_quality_forms_surveys": {
    "operationId": "post_quality_forms_surveys",
    "functionName": "post_quality_forms_surveys",
    "signature": "post_quality_forms_surveys(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SurveyForm",
        "required": "true"
      }
    ],
    "return": "SurveyForm",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.SurveyForm() # SurveyForm | Survey form\n\ntry:\n    # Create a survey form.\n    api_response = api_instance.post_quality_forms_surveys(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_quality_forms_surveys: %s\\n\" % e)"
  },
  "post_quality_publishedforms": {
    "operationId": "post_quality_publishedforms",
    "functionName": "post_quality_publishedforms",
    "signature": "post_quality_publishedforms(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PublishForm",
        "required": "true"
      }
    ],
    "return": "EvaluationFormResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.PublishForm() # PublishForm | Publish request containing id of form to publish\n\ntry:\n    # Publish an evaluation form.\n    api_response = api_instance.post_quality_publishedforms(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_quality_publishedforms: %s\\n\" % e)"
  },
  "post_quality_publishedforms_evaluations": {
    "operationId": "post_quality_publishedforms_evaluations",
    "functionName": "post_quality_publishedforms_evaluations",
    "signature": "post_quality_publishedforms_evaluations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PublishForm",
        "required": "true"
      }
    ],
    "return": "EvaluationFormResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.PublishForm() # PublishForm | Publish request containing id of form to publish\n\ntry:\n    # Publish an evaluation form.\n    api_response = api_instance.post_quality_publishedforms_evaluations(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_quality_publishedforms_evaluations: %s\\n\" % e)"
  },
  "post_quality_publishedforms_surveys": {
    "operationId": "post_quality_publishedforms_surveys",
    "functionName": "post_quality_publishedforms_surveys",
    "signature": "post_quality_publishedforms_surveys(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PublishForm",
        "required": "true"
      }
    ],
    "return": "SurveyForm",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.PublishForm() # PublishForm | Survey form\n\ntry:\n    # Publish a survey form.\n    api_response = api_instance.post_quality_publishedforms_surveys(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_quality_publishedforms_surveys: %s\\n\" % e)"
  },
  "post_quality_surveys_scoring": {
    "operationId": "post_quality_surveys_scoring",
    "functionName": "post_quality_surveys_scoring",
    "signature": "post_quality_surveys_scoring(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SurveyFormAndScoringSet",
        "required": "true"
      }
    ],
    "return": "SurveyScoringSet",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nbody = PureCloudPlatformClientV2.SurveyFormAndScoringSet() # SurveyFormAndScoringSet | surveyAndScoringSet\n\ntry:\n    # Score survey\n    api_response = api_instance.post_quality_surveys_scoring(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->post_quality_surveys_scoring: %s\\n\" % e)"
  },
  "put_quality_calibration": {
    "operationId": "put_quality_calibration",
    "functionName": "put_quality_calibration",
    "signature": "put_quality_calibration(calibration_id, body)",
    "parameters": [
      {
        "name": "calibration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Calibration",
        "required": "true"
      }
    ],
    "return": "Calibration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\ncalibration_id = 'calibration_id_example' # str | Calibration ID\nbody = PureCloudPlatformClientV2.Calibration() # Calibration | Calibration\n\ntry:\n    # Update a calibration to the specified calibration via PUT.  Editable fields include: evaluators, expertEvaluator, and scoringIndex\n    api_response = api_instance.put_quality_calibration(calibration_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->put_quality_calibration: %s\\n\" % e)"
  },
  "put_quality_conversation_evaluation": {
    "operationId": "put_quality_conversation_evaluation",
    "functionName": "put_quality_conversation_evaluation",
    "signature": "put_quality_conversation_evaluation(conversation_id, evaluation_id, body, expand)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "evaluation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Evaluation",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "EvaluationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nevaluation_id = 'evaluation_id_example' # str | evaluationId\nbody = PureCloudPlatformClientV2.Evaluation() # Evaluation | evaluation\nexpand = 'expand_example' # str | evaluatorId, evaluationForm, assignee, evaluator (optional)\n\ntry:\n    # Update an evaluation\n    api_response = api_instance.put_quality_conversation_evaluation(conversation_id, evaluation_id, body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->put_quality_conversation_evaluation: %s\\n\" % e)"
  },
  "put_quality_form": {
    "operationId": "put_quality_form",
    "functionName": "put_quality_form",
    "signature": "put_quality_form(form_id, body)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EvaluationForm",
        "required": "true"
      }
    ],
    "return": "EvaluationFormResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\nbody = PureCloudPlatformClientV2.EvaluationForm() # EvaluationForm | Evaluation form\n\ntry:\n    # Update an evaluation form.\n    api_response = api_instance.put_quality_form(form_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->put_quality_form: %s\\n\" % e)"
  },
  "put_quality_forms_evaluation": {
    "operationId": "put_quality_forms_evaluation",
    "functionName": "put_quality_forms_evaluation",
    "signature": "put_quality_forms_evaluation(form_id, body)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EvaluationForm",
        "required": "true"
      }
    ],
    "return": "EvaluationFormResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\nbody = PureCloudPlatformClientV2.EvaluationForm() # EvaluationForm | Evaluation form\n\ntry:\n    # Update an evaluation form.\n    api_response = api_instance.put_quality_forms_evaluation(form_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->put_quality_forms_evaluation: %s\\n\" % e)"
  },
  "put_quality_forms_survey": {
    "operationId": "put_quality_forms_survey",
    "functionName": "put_quality_forms_survey",
    "signature": "put_quality_forms_survey(form_id, body)",
    "parameters": [
      {
        "name": "form_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SurveyForm",
        "required": "true"
      }
    ],
    "return": "SurveyForm",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\nform_id = 'form_id_example' # str | Form ID\nbody = PureCloudPlatformClientV2.SurveyForm() # SurveyForm | Survey form\n\ntry:\n    # Update a survey form.\n    api_response = api_instance.put_quality_forms_survey(form_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->put_quality_forms_survey: %s\\n\" % e)"
  },
  "put_quality_surveys_scorable": {
    "operationId": "put_quality_surveys_scorable",
    "functionName": "put_quality_surveys_scorable",
    "signature": "put_quality_surveys_scorable(customer_survey_url, body)",
    "parameters": [
      {
        "name": "customer_survey_url",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScorableSurvey",
        "required": "true"
      }
    ],
    "return": "ScorableSurvey",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.QualityApi();\ncustomer_survey_url = 'customer_survey_url_example' # str | customerSurveyUrl\nbody = PureCloudPlatformClientV2.ScorableSurvey() # ScorableSurvey | survey\n\ntry:\n    # Update a survey as an end-customer, for the purposes of scoring it.\n    api_response = api_instance.put_quality_surveys_scorable(customer_survey_url, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling QualityApi->put_quality_surveys_scorable: %s\\n\" % e)"
  },
  "delete_conversation_recording_annotation": {
    "operationId": "delete_conversation_recording_annotation",
    "functionName": "delete_conversation_recording_annotation",
    "signature": "delete_conversation_recording_annotation(conversation_id, recording_id, annotation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "recording_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "annotation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\nrecording_id = 'recording_id_example' # str | Recording ID\nannotation_id = 'annotation_id_example' # str | Annotation ID\n\ntry:\n    # Delete annotation\n    api_instance.delete_conversation_recording_annotation(conversation_id, recording_id, annotation_id)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->delete_conversation_recording_annotation: %s\\n\" % e)"
  },
  "delete_orphanrecording": {
    "operationId": "delete_orphanrecording",
    "functionName": "delete_orphanrecording",
    "signature": "delete_orphanrecording(orphan_id)",
    "parameters": [
      {
        "name": "orphan_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OrphanRecording",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\norphan_id = 'orphan_id_example' # str | Orphan ID\n\ntry:\n    # Deletes a single orphan recording\n    api_response = api_instance.delete_orphanrecording(orphan_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->delete_orphanrecording: %s\\n\" % e)"
  },
  "delete_recording_crossplatform_mediaretentionpolicies": {
    "operationId": "delete_recording_crossplatform_mediaretentionpolicies",
    "functionName": "delete_recording_crossplatform_mediaretentionpolicies",
    "signature": "delete_recording_crossplatform_mediaretentionpolicies(ids)",
    "parameters": [
      {
        "name": "ids",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nids = 'ids_example' # str | \n\ntry:\n    # Delete media retention policies\n    api_instance.delete_recording_crossplatform_mediaretentionpolicies(ids)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->delete_recording_crossplatform_mediaretentionpolicies: %s\\n\" % e)"
  },
  "delete_recording_crossplatform_mediaretentionpolicy": {
    "operationId": "delete_recording_crossplatform_mediaretentionpolicy",
    "functionName": "delete_recording_crossplatform_mediaretentionpolicy",
    "signature": "delete_recording_crossplatform_mediaretentionpolicy(policy_id)",
    "parameters": [
      {
        "name": "policy_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npolicy_id = 'policy_id_example' # str | Policy ID\n\ntry:\n    # Delete a media retention policy\n    api_instance.delete_recording_crossplatform_mediaretentionpolicy(policy_id)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->delete_recording_crossplatform_mediaretentionpolicy: %s\\n\" % e)"
  },
  "delete_recording_job": {
    "operationId": "delete_recording_job",
    "functionName": "delete_recording_job",
    "signature": "delete_recording_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Delete the recording bulk job\n    api_instance.delete_recording_job(job_id)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->delete_recording_job: %s\\n\" % e)"
  },
  "delete_recording_mediaretentionpolicies": {
    "operationId": "delete_recording_mediaretentionpolicies",
    "functionName": "delete_recording_mediaretentionpolicies",
    "signature": "delete_recording_mediaretentionpolicies(ids)",
    "parameters": [
      {
        "name": "ids",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nids = 'ids_example' # str | \n\ntry:\n    # Delete media retention policies\n    api_instance.delete_recording_mediaretentionpolicies(ids)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->delete_recording_mediaretentionpolicies: %s\\n\" % e)"
  },
  "delete_recording_mediaretentionpolicy": {
    "operationId": "delete_recording_mediaretentionpolicy",
    "functionName": "delete_recording_mediaretentionpolicy",
    "signature": "delete_recording_mediaretentionpolicy(policy_id)",
    "parameters": [
      {
        "name": "policy_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npolicy_id = 'policy_id_example' # str | Policy ID\n\ntry:\n    # Delete a media retention policy\n    api_instance.delete_recording_mediaretentionpolicy(policy_id)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->delete_recording_mediaretentionpolicy: %s\\n\" % e)"
  },
  "get_conversation_recording": {
    "operationId": "get_conversation_recording",
    "functionName": "get_conversation_recording",
    "signature": "get_conversation_recording(conversation_id, recording_id, format_id, email_format_id, chat_format_id, message_format_id, download, file_name, locale, media_formats)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "recording_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "format_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "email_format_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "chat_format_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "message_format_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "download",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "file_name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "locale",
        "type": "str",
        "required": "false"
      },
      {
        "name": "media_formats",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "Recording",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\nrecording_id = 'recording_id_example' # str | Recording ID\nformat_id = ''WEBM'' # str | The desired media format. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3,NONE (optional) (default to 'WEBM')\nemail_format_id = ''EML'' # str | The desired media format when downloading an email recording. Valid values:EML,NONE (optional) (default to 'EML')\nchat_format_id = ''ZIP'' # str | The desired media format when downloading a chat recording. Valid values:ZIP,NONE  (optional) (default to 'ZIP')\nmessage_format_id = ''ZIP'' # str | The desired media format when downloading a message recording. Valid values:ZIP,NONE (optional) (default to 'ZIP')\ndownload = False # bool | requesting a download format of the recording. Valid values:true,false (optional) (default to False)\nfile_name = 'file_name_example' # str | the name of the downloaded fileName (optional)\nlocale = 'locale_example' # str | The locale for the requested file when downloading, as an ISO 639-1 code (optional)\nmedia_formats = ['media_formats_example'] # list[str] | All acceptable media formats. Overrides formatId. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3 (optional)\n\ntry:\n    # Gets a specific recording.\n    api_response = api_instance.get_conversation_recording(conversation_id, recording_id, format_id=format_id, email_format_id=email_format_id, chat_format_id=chat_format_id, message_format_id=message_format_id, download=download, file_name=file_name, locale=locale, media_formats=media_formats)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_conversation_recording: %s\\n\" % e)"
  },
  "get_conversation_recording_annotation": {
    "operationId": "get_conversation_recording_annotation",
    "functionName": "get_conversation_recording_annotation",
    "signature": "get_conversation_recording_annotation(conversation_id, recording_id, annotation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "recording_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "annotation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Annotation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\nrecording_id = 'recording_id_example' # str | Recording ID\nannotation_id = 'annotation_id_example' # str | Annotation ID\n\ntry:\n    # Get annotation\n    api_response = api_instance.get_conversation_recording_annotation(conversation_id, recording_id, annotation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_conversation_recording_annotation: %s\\n\" % e)"
  },
  "get_conversation_recording_annotations": {
    "operationId": "get_conversation_recording_annotations",
    "functionName": "get_conversation_recording_annotations",
    "signature": "get_conversation_recording_annotations(conversation_id, recording_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "recording_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[Annotation]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\nrecording_id = 'recording_id_example' # str | Recording ID\n\ntry:\n    # Get annotations for recording\n    api_response = api_instance.get_conversation_recording_annotations(conversation_id, recording_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_conversation_recording_annotations: %s\\n\" % e)"
  },
  "get_conversation_recordingmetadata": {
    "operationId": "get_conversation_recordingmetadata",
    "functionName": "get_conversation_recordingmetadata",
    "signature": "get_conversation_recordingmetadata(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[RecordingMetadata]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\n\ntry:\n    # Get recording metadata for a conversation. Does not return playable media. Annotations won't be included in the response if either recording:recording:view or recording:annotation:view permission is missing.\n    api_response = api_instance.get_conversation_recordingmetadata(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_conversation_recordingmetadata: %s\\n\" % e)"
  },
  "get_conversation_recordingmetadata_recording_id": {
    "operationId": "get_conversation_recordingmetadata_recording_id",
    "functionName": "get_conversation_recordingmetadata_recording_id",
    "signature": "get_conversation_recordingmetadata_recording_id(conversation_id, recording_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "recording_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "RecordingMetadata",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\nrecording_id = 'recording_id_example' # str | Recording ID\n\ntry:\n    # Get metadata for a specific recording. Does not return playable media.\n    api_response = api_instance.get_conversation_recordingmetadata_recording_id(conversation_id, recording_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_conversation_recordingmetadata_recording_id: %s\\n\" % e)"
  },
  "get_conversation_recordings": {
    "operationId": "get_conversation_recordings",
    "functionName": "get_conversation_recordings",
    "signature": "get_conversation_recordings(conversation_id, max_wait_ms, format_id, media_formats)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "max_wait_ms",
        "type": "int",
        "required": "false"
      },
      {
        "name": "format_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "media_formats",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "list[Recording]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\nmax_wait_ms = 5000 # int | The maximum number of milliseconds to wait for the recording to be ready. Must be a positive value. (optional) (default to 5000)\nformat_id = ''WEBM'' # str | The desired media format. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3,NONE. (optional) (default to 'WEBM')\nmedia_formats = ['media_formats_example'] # list[str] | All acceptable media formats. Overrides formatId. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3. (optional)\n\ntry:\n    # Get all of a Conversation's Recordings.\n    api_response = api_instance.get_conversation_recordings(conversation_id, max_wait_ms=max_wait_ms, format_id=format_id, media_formats=media_formats)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_conversation_recordings: %s\\n\" % e)"
  },
  "get_orphanrecording": {
    "operationId": "get_orphanrecording",
    "functionName": "get_orphanrecording",
    "signature": "get_orphanrecording(orphan_id)",
    "parameters": [
      {
        "name": "orphan_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OrphanRecording",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\norphan_id = 'orphan_id_example' # str | Orphan ID\n\ntry:\n    # Gets a single orphan recording\n    api_response = api_instance.get_orphanrecording(orphan_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_orphanrecording: %s\\n\" % e)"
  },
  "get_orphanrecording_media": {
    "operationId": "get_orphanrecording_media",
    "functionName": "get_orphanrecording_media",
    "signature": "get_orphanrecording_media(orphan_id, format_id, email_format_id, chat_format_id, message_format_id, download, file_name, locale, media_formats)",
    "parameters": [
      {
        "name": "orphan_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "format_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "email_format_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "chat_format_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "message_format_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "download",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "file_name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "locale",
        "type": "str",
        "required": "false"
      },
      {
        "name": "media_formats",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "Recording",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\norphan_id = 'orphan_id_example' # str | Orphan ID\nformat_id = ''WEBM'' # str | The desired media format. (optional) (default to 'WEBM')\nemail_format_id = ''EML'' # str | The desired media format when downloading an email recording. (optional) (default to 'EML')\nchat_format_id = ''ZIP'' # str | The desired media format when downloading a chat recording. (optional) (default to 'ZIP')\nmessage_format_id = ''ZIP'' # str | The desired media format when downloading a message recording. (optional) (default to 'ZIP')\ndownload = False # bool | requesting a download format of the recording (optional) (default to False)\nfile_name = 'file_name_example' # str | the name of the downloaded fileName (optional)\nlocale = 'locale_example' # str | The locale for the requested file when downloading, as an ISO 639-1 code (optional)\nmedia_formats = ['media_formats_example'] # list[str] | All acceptable media formats. Overrides formatId. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3 (optional)\n\ntry:\n    # Gets the media of a single orphan recording\n    api_response = api_instance.get_orphanrecording_media(orphan_id, format_id=format_id, email_format_id=email_format_id, chat_format_id=chat_format_id, message_format_id=message_format_id, download=download, file_name=file_name, locale=locale, media_formats=media_formats)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_orphanrecording_media: %s\\n\" % e)"
  },
  "get_orphanrecordings": {
    "operationId": "get_orphanrecordings",
    "functionName": "get_orphanrecordings",
    "signature": "get_orphanrecordings(page_size, page_number, sort_by, expand, next_page, previous_page, has_conversation, media)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "has_conversation",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "media",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OrphanRecordingListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nhas_conversation = False # bool | Filter resulting orphans by whether the conversation is known. False returns all orphans for the organization. (optional) (default to False)\nmedia = 'media_example' # str | Filter resulting orphans based on their media type (optional)\n\ntry:\n    # Gets all orphan recordings\n    api_response = api_instance.get_orphanrecordings(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page, has_conversation=has_conversation, media=media)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_orphanrecordings: %s\\n\" % e)"
  },
  "get_recording_batchrequest": {
    "operationId": "get_recording_batchrequest",
    "functionName": "get_recording_batchrequest",
    "signature": "get_recording_batchrequest(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "BatchDownloadJobStatusResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get the status and results for a batch request job, only the user that submitted the job may retrieve results\n    api_response = api_instance.get_recording_batchrequest(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_batchrequest: %s\\n\" % e)"
  },
  "get_recording_crossplatform_mediaretentionpolicies": {
    "operationId": "get_recording_crossplatform_mediaretentionpolicies",
    "functionName": "get_recording_crossplatform_mediaretentionpolicies",
    "signature": "get_recording_crossplatform_mediaretentionpolicies(page_size, page_number, sort_by, expand, next_page, previous_page, name, enabled, summary, has_errors, delete_days_threshold)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "enabled",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "summary",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "has_errors",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "delete_days_threshold",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "PolicyEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nname = 'name_example' # str | the policy name - used for filtering results in searches. (optional)\nenabled = True # bool | checks to see if policy is enabled - use enabled = true or enabled = false (optional)\nsummary = False # bool | provides a less verbose response of policy lists. (optional) (default to False)\nhas_errors = True # bool | provides a way to fetch all policies with errors or policies that do not have errors (optional)\ndelete_days_threshold = 56 # int | provides a way to fetch all policies with any actions having deleteDays exceeding the provided value (optional)\n\ntry:\n    # Gets media retention policy list with query options to filter on name and enabled.\n    api_response = api_instance.get_recording_crossplatform_mediaretentionpolicies(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page, name=name, enabled=enabled, summary=summary, has_errors=has_errors, delete_days_threshold=delete_days_threshold)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_crossplatform_mediaretentionpolicies: %s\\n\" % e)"
  },
  "get_recording_crossplatform_mediaretentionpolicy": {
    "operationId": "get_recording_crossplatform_mediaretentionpolicy",
    "functionName": "get_recording_crossplatform_mediaretentionpolicy",
    "signature": "get_recording_crossplatform_mediaretentionpolicy(policy_id)",
    "parameters": [
      {
        "name": "policy_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CrossPlatformPolicy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npolicy_id = 'policy_id_example' # str | Policy ID\n\ntry:\n    # Get a media retention policy\n    api_response = api_instance.get_recording_crossplatform_mediaretentionpolicy(policy_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_crossplatform_mediaretentionpolicy: %s\\n\" % e)"
  },
  "get_recording_job": {
    "operationId": "get_recording_job",
    "functionName": "get_recording_job",
    "signature": "get_recording_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "RecordingJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get the status of the job associated with the job id.\n    api_response = api_instance.get_recording_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_job: %s\\n\" % e)"
  },
  "get_recording_job_failedrecordings": {
    "operationId": "get_recording_job_failedrecordings",
    "functionName": "get_recording_job_failedrecordings",
    "signature": "get_recording_job_failedrecordings(job_id, page_size, page_number, include_total, cursor)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "include_total",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "FailedRecordingEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\njob_id = 'job_id_example' # str | jobId\npage_size = 25 # int | Page size. Maximum is 100. (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\ninclude_total = True # bool | If false, cursor will be used to locate the page instead of pageNumber. (optional)\ncursor = 'cursor_example' # str | Indicates where to resume query results (not required for first page) (optional)\n\ntry:\n    # Get IDs of recordings that the bulk job failed for\n    api_response = api_instance.get_recording_job_failedrecordings(job_id, page_size=page_size, page_number=page_number, include_total=include_total, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_job_failedrecordings: %s\\n\" % e)"
  },
  "get_recording_jobs": {
    "operationId": "get_recording_jobs",
    "functionName": "get_recording_jobs",
    "signature": "get_recording_jobs(page_size, page_number, sort_by, state, show_only_my_jobs, job_type, include_total, cursor)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "state",
        "type": "str",
        "required": "false"
      },
      {
        "name": "show_only_my_jobs",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "job_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "include_total",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "RecordingJobEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''userId'' # str | Sort by (optional) (default to 'userId')\nstate = 'state_example' # str | Filter by state (optional)\nshow_only_my_jobs = True # bool | Show only my jobs (optional)\njob_type = 'job_type_example' # str | Job Type (Can be left empty for both) (optional)\ninclude_total = True # bool | If false, cursor will be used to locate the page instead of pageNumber. (optional)\ncursor = 'cursor_example' # str | Indicates where to resume query results (not required for first page) (optional)\n\ntry:\n    # Get the status of all jobs within the user's organization\n    api_response = api_instance.get_recording_jobs(page_size=page_size, page_number=page_number, sort_by=sort_by, state=state, show_only_my_jobs=show_only_my_jobs, job_type=job_type, include_total=include_total, cursor=cursor)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_jobs: %s\\n\" % e)"
  },
  "get_recording_keyconfiguration": {
    "operationId": "get_recording_keyconfiguration",
    "functionName": "get_recording_keyconfiguration",
    "signature": "get_recording_keyconfiguration(key_configuration_id)",
    "parameters": [
      {
        "name": "key_configuration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "RecordingEncryptionConfiguration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nkey_configuration_id = 'key_configuration_id_example' # str | Key Configurations Id\n\ntry:\n    # Get the encryption key configurations\n    api_response = api_instance.get_recording_keyconfiguration(key_configuration_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_keyconfiguration: %s\\n\" % e)"
  },
  "get_recording_keyconfigurations": {
    "operationId": "get_recording_keyconfigurations",
    "functionName": "get_recording_keyconfigurations",
    "signature": "get_recording_keyconfigurations()",
    "return": "RecordingEncryptionConfigurationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\n\ntry:\n    # Get a list of key configurations data\n    api_response = api_instance.get_recording_keyconfigurations()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_keyconfigurations: %s\\n\" % e)"
  },
  "get_recording_mediaretentionpolicies": {
    "operationId": "get_recording_mediaretentionpolicies",
    "functionName": "get_recording_mediaretentionpolicies",
    "signature": "get_recording_mediaretentionpolicies(page_size, page_number, sort_by, expand, next_page, previous_page, name, enabled, summary, has_errors, delete_days_threshold)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "previous_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "enabled",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "summary",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "has_errors",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "delete_days_threshold",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "PolicyEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npage_size = 25 # int | The total page size requested (optional) (default to 25)\npage_number = 1 # int | The page number requested (optional) (default to 1)\nsort_by = 'sort_by_example' # str | variable name requested to sort by (optional)\nexpand = ['expand_example'] # list[str] | variable name requested by expand list (optional)\nnext_page = 'next_page_example' # str | next page token (optional)\nprevious_page = 'previous_page_example' # str | Previous page token (optional)\nname = 'name_example' # str | the policy name - used for filtering results in searches. (optional)\nenabled = True # bool | checks to see if policy is enabled - use enabled = true or enabled = false (optional)\nsummary = False # bool | provides a less verbose response of policy lists. (optional) (default to False)\nhas_errors = True # bool | provides a way to fetch all policies with errors or policies that do not have errors (optional)\ndelete_days_threshold = 56 # int | provides a way to fetch all policies with any actions having deleteDays exceeding the provided value (optional)\n\ntry:\n    # Gets media retention policy list with query options to filter on name and enabled.\n    api_response = api_instance.get_recording_mediaretentionpolicies(page_size=page_size, page_number=page_number, sort_by=sort_by, expand=expand, next_page=next_page, previous_page=previous_page, name=name, enabled=enabled, summary=summary, has_errors=has_errors, delete_days_threshold=delete_days_threshold)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_mediaretentionpolicies: %s\\n\" % e)"
  },
  "get_recording_mediaretentionpolicy": {
    "operationId": "get_recording_mediaretentionpolicy",
    "functionName": "get_recording_mediaretentionpolicy",
    "signature": "get_recording_mediaretentionpolicy(policy_id)",
    "parameters": [
      {
        "name": "policy_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Policy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npolicy_id = 'policy_id_example' # str | Policy ID\n\ntry:\n    # Get a media retention policy\n    api_response = api_instance.get_recording_mediaretentionpolicy(policy_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_mediaretentionpolicy: %s\\n\" % e)"
  },
  "get_recording_recordingkeys": {
    "operationId": "get_recording_recordingkeys",
    "functionName": "get_recording_recordingkeys",
    "signature": "get_recording_recordingkeys(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "EncryptionKeyEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get encryption key list\n    api_response = api_instance.get_recording_recordingkeys(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_recordingkeys: %s\\n\" % e)"
  },
  "get_recording_recordingkeys_rotationschedule": {
    "operationId": "get_recording_recordingkeys_rotationschedule",
    "functionName": "get_recording_recordingkeys_rotationschedule",
    "signature": "get_recording_recordingkeys_rotationschedule()",
    "return": "KeyRotationSchedule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\n\ntry:\n    # Get key rotation schedule\n    api_response = api_instance.get_recording_recordingkeys_rotationschedule()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_recordingkeys_rotationschedule: %s\\n\" % e)"
  },
  "get_recording_settings": {
    "operationId": "get_recording_settings",
    "functionName": "get_recording_settings",
    "signature": "get_recording_settings(create_default)",
    "parameters": [
      {
        "name": "create_default",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "RecordingSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\ncreate_default = False # bool | If no settings are found, a new one is created with default values (optional) (default to False)\n\ntry:\n    # Get the Recording Settings for the Organization\n    api_response = api_instance.get_recording_settings(create_default=create_default)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_settings: %s\\n\" % e)"
  },
  "get_recording_uploads_report": {
    "operationId": "get_recording_uploads_report",
    "functionName": "get_recording_uploads_report",
    "signature": "get_recording_uploads_report(report_id)",
    "parameters": [
      {
        "name": "report_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "RecordingUploadReport",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nreport_id = 'report_id_example' # str | reportId\n\ntry:\n    # Get the status of a recording upload status report\n    api_response = api_instance.get_recording_uploads_report(report_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recording_uploads_report: %s\\n\" % e)"
  },
  "get_recordings_retention_query": {
    "operationId": "get_recordings_retention_query",
    "functionName": "get_recordings_retention_query",
    "signature": "get_recordings_retention_query(retention_threshold_days, cursor, page_size)",
    "parameters": [
      {
        "name": "retention_threshold_days",
        "type": "int",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "RecordingRetentionCursorEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nretention_threshold_days = 56 # int | Fetch retention data for recordings retained for more days than the provided value.\ncursor = 'cursor_example' # str | Indicates where to resume query results (not required for first page) (optional)\npage_size = 25 # int | Page size. Maximum is 500. (optional) (default to 25)\n\ntry:\n    # Query for recording retention data\n    api_response = api_instance.get_recordings_retention_query(retention_threshold_days, cursor=cursor, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recordings_retention_query: %s\\n\" % e)"
  },
  "get_recordings_screensessions": {
    "operationId": "get_recordings_screensessions",
    "functionName": "get_recordings_screensessions",
    "signature": "get_recordings_screensessions(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "ScreenRecordingSessionListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Retrieves a paged listing of screen recording sessions\n    api_response = api_instance.get_recordings_screensessions(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recordings_screensessions: %s\\n\" % e)"
  },
  "get_recordings_screensessions_details": {
    "operationId": "get_recordings_screensessions_details",
    "functionName": "get_recordings_screensessions_details",
    "signature": "get_recordings_screensessions_details()",
    "return": "ScreenRecordingActiveSessions",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\n\ntry:\n    # Retrieves an object containing the total number of concurrent active screen recordings\n    api_response = api_instance.get_recordings_screensessions_details()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->get_recordings_screensessions_details: %s\\n\" % e)"
  },
  "patch_recording_crossplatform_mediaretentionpolicy": {
    "operationId": "patch_recording_crossplatform_mediaretentionpolicy",
    "functionName": "patch_recording_crossplatform_mediaretentionpolicy",
    "signature": "patch_recording_crossplatform_mediaretentionpolicy(policy_id, body)",
    "parameters": [
      {
        "name": "policy_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CrossPlatformPolicyUpdate",
        "required": "true"
      }
    ],
    "return": "CrossPlatformPolicy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npolicy_id = 'policy_id_example' # str | Policy ID\nbody = PureCloudPlatformClientV2.CrossPlatformPolicyUpdate() # CrossPlatformPolicyUpdate | Policy\n\ntry:\n    # Patch a media retention policy\n    api_response = api_instance.patch_recording_crossplatform_mediaretentionpolicy(policy_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->patch_recording_crossplatform_mediaretentionpolicy: %s\\n\" % e)"
  },
  "patch_recording_mediaretentionpolicy": {
    "operationId": "patch_recording_mediaretentionpolicy",
    "functionName": "patch_recording_mediaretentionpolicy",
    "signature": "patch_recording_mediaretentionpolicy(policy_id, body)",
    "parameters": [
      {
        "name": "policy_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PolicyUpdate",
        "required": "true"
      }
    ],
    "return": "Policy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npolicy_id = 'policy_id_example' # str | Policy ID\nbody = PureCloudPlatformClientV2.PolicyUpdate() # PolicyUpdate | Policy\n\ntry:\n    # Patch a media retention policy\n    api_response = api_instance.patch_recording_mediaretentionpolicy(policy_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->patch_recording_mediaretentionpolicy: %s\\n\" % e)"
  },
  "patch_recordings_screensession": {
    "operationId": "patch_recordings_screensession",
    "functionName": "patch_recordings_screensession",
    "signature": "patch_recordings_screensession(recording_session_id, body)",
    "parameters": [
      {
        "name": "recording_session_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScreenRecordingSessionRequest",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nrecording_session_id = 'recording_session_id_example' # str | Screen recording session ID\nbody = PureCloudPlatformClientV2.ScreenRecordingSessionRequest() # ScreenRecordingSessionRequest |  (optional)\n\ntry:\n    # Update a screen recording session\n    api_instance.patch_recordings_screensession(recording_session_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->patch_recordings_screensession: %s\\n\" % e)"
  },
  "post_conversation_recording_annotations": {
    "operationId": "post_conversation_recording_annotations",
    "functionName": "post_conversation_recording_annotations",
    "signature": "post_conversation_recording_annotations(conversation_id, recording_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "recording_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Annotation",
        "required": "true"
      }
    ],
    "return": "Annotation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\nrecording_id = 'recording_id_example' # str | Recording ID\nbody = PureCloudPlatformClientV2.Annotation() # Annotation | annotation\n\ntry:\n    # Create annotation\n    api_response = api_instance.post_conversation_recording_annotations(conversation_id, recording_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->post_conversation_recording_annotations: %s\\n\" % e)"
  },
  "post_recording_batchrequests": {
    "operationId": "post_recording_batchrequests",
    "functionName": "post_recording_batchrequests",
    "signature": "post_recording_batchrequests(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BatchDownloadJobSubmission",
        "required": "true"
      }
    ],
    "return": "BatchDownloadJobSubmissionResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nbody = PureCloudPlatformClientV2.BatchDownloadJobSubmission() # BatchDownloadJobSubmission | Job submission criteria\n\ntry:\n    # Submit a batch download request for recordings. Recordings in response will be in their original format/codec - configured in the Trunk configuration.\n    api_response = api_instance.post_recording_batchrequests(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->post_recording_batchrequests: %s\\n\" % e)"
  },
  "post_recording_crossplatform_mediaretentionpolicies": {
    "operationId": "post_recording_crossplatform_mediaretentionpolicies",
    "functionName": "post_recording_crossplatform_mediaretentionpolicies",
    "signature": "post_recording_crossplatform_mediaretentionpolicies(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CrossPlatformPolicyCreate",
        "required": "true"
      }
    ],
    "return": "CrossPlatformPolicy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nbody = PureCloudPlatformClientV2.CrossPlatformPolicyCreate() # CrossPlatformPolicyCreate | Policy\n\ntry:\n    # Create media retention policy\n    api_response = api_instance.post_recording_crossplatform_mediaretentionpolicies(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->post_recording_crossplatform_mediaretentionpolicies: %s\\n\" % e)"
  },
  "post_recording_jobs": {
    "operationId": "post_recording_jobs",
    "functionName": "post_recording_jobs",
    "signature": "post_recording_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RecordingJobsQuery",
        "required": "true"
      }
    ],
    "return": "RecordingJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nbody = PureCloudPlatformClientV2.RecordingJobsQuery() # RecordingJobsQuery | query\n\ntry:\n    # Create a recording bulk job.\n    api_response = api_instance.post_recording_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->post_recording_jobs: %s\\n\" % e)"
  },
  "post_recording_keyconfigurations": {
    "operationId": "post_recording_keyconfigurations",
    "functionName": "post_recording_keyconfigurations",
    "signature": "post_recording_keyconfigurations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RecordingEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "RecordingEncryptionConfiguration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nbody = PureCloudPlatformClientV2.RecordingEncryptionConfiguration() # RecordingEncryptionConfiguration | Encryption Configuration\n\ntry:\n    # Setup configurations for encryption key creation\n    api_response = api_instance.post_recording_keyconfigurations(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->post_recording_keyconfigurations: %s\\n\" % e)"
  },
  "post_recording_keyconfigurations_validate": {
    "operationId": "post_recording_keyconfigurations_validate",
    "functionName": "post_recording_keyconfigurations_validate",
    "signature": "post_recording_keyconfigurations_validate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RecordingEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "RecordingEncryptionConfiguration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nbody = PureCloudPlatformClientV2.RecordingEncryptionConfiguration() # RecordingEncryptionConfiguration | Encryption Configuration\n\ntry:\n    # Validate encryption key configurations without saving it\n    api_response = api_instance.post_recording_keyconfigurations_validate(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->post_recording_keyconfigurations_validate: %s\\n\" % e)"
  },
  "post_recording_localkeys": {
    "operationId": "post_recording_localkeys",
    "functionName": "post_recording_localkeys",
    "signature": "post_recording_localkeys(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LocalEncryptionKeyRequest",
        "required": "true"
      }
    ],
    "return": "EncryptionKey",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nbody = PureCloudPlatformClientV2.LocalEncryptionKeyRequest() # LocalEncryptionKeyRequest | Local Encryption body\n\ntry:\n    # create a local key management recording key\n    api_response = api_instance.post_recording_localkeys(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->post_recording_localkeys: %s\\n\" % e)"
  },
  "post_recording_mediaretentionpolicies": {
    "operationId": "post_recording_mediaretentionpolicies",
    "functionName": "post_recording_mediaretentionpolicies",
    "signature": "post_recording_mediaretentionpolicies(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PolicyCreate",
        "required": "true"
      }
    ],
    "return": "Policy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nbody = PureCloudPlatformClientV2.PolicyCreate() # PolicyCreate | Policy\n\ntry:\n    # Create media retention policy\n    api_response = api_instance.post_recording_mediaretentionpolicies(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->post_recording_mediaretentionpolicies: %s\\n\" % e)"
  },
  "post_recording_recordingkeys": {
    "operationId": "post_recording_recordingkeys",
    "functionName": "post_recording_recordingkeys",
    "signature": "post_recording_recordingkeys()",
    "return": "EncryptionKey",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\n\ntry:\n    # Create encryption key\n    api_response = api_instance.post_recording_recordingkeys()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->post_recording_recordingkeys: %s\\n\" % e)"
  },
  "post_recording_uploads_reports": {
    "operationId": "post_recording_uploads_reports",
    "functionName": "post_recording_uploads_reports",
    "signature": "post_recording_uploads_reports(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RecordingUploadReportRequest",
        "required": "true"
      }
    ],
    "return": "RecordingUploadReport",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nbody = PureCloudPlatformClientV2.RecordingUploadReportRequest() # RecordingUploadReportRequest | Report parameters\n\ntry:\n    # Creates a recording upload status report\n    api_response = api_instance.post_recording_uploads_reports(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->post_recording_uploads_reports: %s\\n\" % e)"
  },
  "post_recordings_deletionprotection": {
    "operationId": "post_recordings_deletionprotection",
    "functionName": "post_recordings_deletionprotection",
    "signature": "post_recordings_deletionprotection(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationDeletionProtectionQuery",
        "required": "true"
      }
    ],
    "return": "list[AddressableEntityRef]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nbody = PureCloudPlatformClientV2.ConversationDeletionProtectionQuery() # ConversationDeletionProtectionQuery | conversationIds\n\ntry:\n    # Get a list of conversations with protected recordings\n    api_response = api_instance.post_recordings_deletionprotection(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->post_recordings_deletionprotection: %s\\n\" % e)"
  },
  "post_recordings_screensessions_acknowledge": {
    "operationId": "post_recordings_screensessions_acknowledge",
    "functionName": "post_recordings_screensessions_acknowledge",
    "signature": "post_recordings_screensessions_acknowledge(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AcknowledgeScreenRecordingRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nbody = PureCloudPlatformClientV2.AcknowledgeScreenRecordingRequest() # AcknowledgeScreenRecordingRequest | AcknowledgeScreenRecordingRequest\n\ntry:\n    # Acknowledge a screen recording.\n    api_instance.post_recordings_screensessions_acknowledge(body)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->post_recordings_screensessions_acknowledge: %s\\n\" % e)"
  },
  "post_recordings_screensessions_metadata": {
    "operationId": "post_recordings_screensessions_metadata",
    "functionName": "post_recordings_screensessions_metadata",
    "signature": "post_recordings_screensessions_metadata(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ScreenRecordingMetaDataRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nbody = PureCloudPlatformClientV2.ScreenRecordingMetaDataRequest() # ScreenRecordingMetaDataRequest | ScreenRecordingMetaDataRequest\n\ntry:\n    # Provide meta-data a screen recording.\n    api_instance.post_recordings_screensessions_metadata(body)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->post_recordings_screensessions_metadata: %s\\n\" % e)"
  },
  "put_conversation_recording": {
    "operationId": "put_conversation_recording",
    "functionName": "put_conversation_recording",
    "signature": "put_conversation_recording(conversation_id, recording_id, body, clear_export)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "recording_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Recording",
        "required": "true"
      },
      {
        "name": "clear_export",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "Recording",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\nrecording_id = 'recording_id_example' # str | Recording ID\nbody = PureCloudPlatformClientV2.Recording() # Recording | recording\nclear_export = True # bool | Whether to clear the pending export for the recording (optional)\n\ntry:\n    # Updates the retention records on a recording.\n    api_response = api_instance.put_conversation_recording(conversation_id, recording_id, body, clear_export=clear_export)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->put_conversation_recording: %s\\n\" % e)"
  },
  "put_conversation_recording_annotation": {
    "operationId": "put_conversation_recording_annotation",
    "functionName": "put_conversation_recording_annotation",
    "signature": "put_conversation_recording_annotation(conversation_id, recording_id, annotation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "recording_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "annotation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Annotation",
        "required": "true"
      }
    ],
    "return": "Annotation",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\nrecording_id = 'recording_id_example' # str | Recording ID\nannotation_id = 'annotation_id_example' # str | Annotation ID\nbody = PureCloudPlatformClientV2.Annotation() # Annotation | annotation\n\ntry:\n    # Update annotation\n    api_response = api_instance.put_conversation_recording_annotation(conversation_id, recording_id, annotation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->put_conversation_recording_annotation: %s\\n\" % e)"
  },
  "put_orphanrecording": {
    "operationId": "put_orphanrecording",
    "functionName": "put_orphanrecording",
    "signature": "put_orphanrecording(orphan_id, body)",
    "parameters": [
      {
        "name": "orphan_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OrphanUpdateRequest",
        "required": "false"
      }
    ],
    "return": "Recording",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\norphan_id = 'orphan_id_example' # str | Orphan ID\nbody = PureCloudPlatformClientV2.OrphanUpdateRequest() # OrphanUpdateRequest |  (optional)\n\ntry:\n    # Updates an orphan recording to a regular recording with retention values\n    api_response = api_instance.put_orphanrecording(orphan_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->put_orphanrecording: %s\\n\" % e)"
  },
  "put_recording_crossplatform_mediaretentionpolicy": {
    "operationId": "put_recording_crossplatform_mediaretentionpolicy",
    "functionName": "put_recording_crossplatform_mediaretentionpolicy",
    "signature": "put_recording_crossplatform_mediaretentionpolicy(policy_id, body)",
    "parameters": [
      {
        "name": "policy_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CrossPlatformPolicy",
        "required": "true"
      }
    ],
    "return": "CrossPlatformPolicy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npolicy_id = 'policy_id_example' # str | Policy ID\nbody = PureCloudPlatformClientV2.CrossPlatformPolicy() # CrossPlatformPolicy | Policy\n\ntry:\n    # Update a media retention policy\n    api_response = api_instance.put_recording_crossplatform_mediaretentionpolicy(policy_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->put_recording_crossplatform_mediaretentionpolicy: %s\\n\" % e)"
  },
  "put_recording_job": {
    "operationId": "put_recording_job",
    "functionName": "put_recording_job",
    "signature": "put_recording_job(job_id, body)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ExecuteRecordingJobsQuery",
        "required": "true"
      }
    ],
    "return": "RecordingJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\njob_id = 'job_id_example' # str | jobId\nbody = PureCloudPlatformClientV2.ExecuteRecordingJobsQuery() # ExecuteRecordingJobsQuery | query\n\ntry:\n    # Execute the recording bulk job.\n    api_response = api_instance.put_recording_job(job_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->put_recording_job: %s\\n\" % e)"
  },
  "put_recording_keyconfiguration": {
    "operationId": "put_recording_keyconfiguration",
    "functionName": "put_recording_keyconfiguration",
    "signature": "put_recording_keyconfiguration(key_configuration_id, body)",
    "parameters": [
      {
        "name": "key_configuration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RecordingEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "RecordingEncryptionConfiguration",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nkey_configuration_id = 'key_configuration_id_example' # str | Key Configurations Id\nbody = PureCloudPlatformClientV2.RecordingEncryptionConfiguration() # RecordingEncryptionConfiguration | Encryption key configuration metadata\n\ntry:\n    # Update the encryption key configurations\n    api_response = api_instance.put_recording_keyconfiguration(key_configuration_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->put_recording_keyconfiguration: %s\\n\" % e)"
  },
  "put_recording_mediaretentionpolicy": {
    "operationId": "put_recording_mediaretentionpolicy",
    "functionName": "put_recording_mediaretentionpolicy",
    "signature": "put_recording_mediaretentionpolicy(policy_id, body)",
    "parameters": [
      {
        "name": "policy_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Policy",
        "required": "true"
      }
    ],
    "return": "Policy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\npolicy_id = 'policy_id_example' # str | Policy ID\nbody = PureCloudPlatformClientV2.Policy() # Policy | Policy\n\ntry:\n    # Update a media retention policy\n    api_response = api_instance.put_recording_mediaretentionpolicy(policy_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->put_recording_mediaretentionpolicy: %s\\n\" % e)"
  },
  "put_recording_recordingkeys_rotationschedule": {
    "operationId": "put_recording_recordingkeys_rotationschedule",
    "functionName": "put_recording_recordingkeys_rotationschedule",
    "signature": "put_recording_recordingkeys_rotationschedule(body)",
    "parameters": [
      {
        "name": "body",
        "type": "KeyRotationSchedule",
        "required": "true"
      }
    ],
    "return": "KeyRotationSchedule",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nbody = PureCloudPlatformClientV2.KeyRotationSchedule() # KeyRotationSchedule | KeyRotationSchedule\n\ntry:\n    # Update key rotation schedule\n    api_response = api_instance.put_recording_recordingkeys_rotationschedule(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->put_recording_recordingkeys_rotationschedule: %s\\n\" % e)"
  },
  "put_recording_settings": {
    "operationId": "put_recording_settings",
    "functionName": "put_recording_settings",
    "signature": "put_recording_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RecordingSettings",
        "required": "true"
      }
    ],
    "return": "RecordingSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nbody = PureCloudPlatformClientV2.RecordingSettings() # RecordingSettings | Recording settings\n\ntry:\n    # Update the Recording Settings for the Organization\n    api_response = api_instance.put_recording_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->put_recording_settings: %s\\n\" % e)"
  },
  "put_recordings_deletionprotection": {
    "operationId": "put_recordings_deletionprotection",
    "functionName": "put_recordings_deletionprotection",
    "signature": "put_recordings_deletionprotection(protect, body)",
    "parameters": [
      {
        "name": "protect",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "ConversationDeletionProtectionQuery",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RecordingApi();\nprotect = True # bool | Check for apply, uncheck for revoke (each action requires the respective permission) (optional) (default to True)\nbody = PureCloudPlatformClientV2.ConversationDeletionProtectionQuery() # ConversationDeletionProtectionQuery |  (optional)\n\ntry:\n    # Apply or revoke recording protection for conversations\n    api_instance.put_recordings_deletionprotection(protect=protect, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling RecordingApi->put_recordings_deletionprotection: %s\\n\" % e)"
  },
  "delete_responsemanagement_library": {
    "operationId": "delete_responsemanagement_library",
    "functionName": "delete_responsemanagement_library",
    "signature": "delete_responsemanagement_library(library_id)",
    "parameters": [
      {
        "name": "library_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nlibrary_id = 'library_id_example' # str | Library ID\n\ntry:\n    # Delete an existing response library.\n    api_instance.delete_responsemanagement_library(library_id)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->delete_responsemanagement_library: %s\\n\" % e)"
  },
  "delete_responsemanagement_response": {
    "operationId": "delete_responsemanagement_response",
    "functionName": "delete_responsemanagement_response",
    "signature": "delete_responsemanagement_response(response_id)",
    "parameters": [
      {
        "name": "response_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nresponse_id = 'response_id_example' # str | Response ID\n\ntry:\n    # Delete an existing response.\n    api_instance.delete_responsemanagement_response(response_id)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->delete_responsemanagement_response: %s\\n\" % e)"
  },
  "delete_responsemanagement_responseasset": {
    "operationId": "delete_responsemanagement_responseasset",
    "functionName": "delete_responsemanagement_responseasset",
    "signature": "delete_responsemanagement_responseasset(response_asset_id)",
    "parameters": [
      {
        "name": "response_asset_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nresponse_asset_id = 'response_asset_id_example' # str | Asset Id\n\ntry:\n    # Delete response asset\n    api_instance.delete_responsemanagement_responseasset(response_asset_id)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->delete_responsemanagement_responseasset: %s\\n\" % e)"
  },
  "get_responsemanagement_libraries": {
    "operationId": "get_responsemanagement_libraries",
    "functionName": "get_responsemanagement_libraries",
    "signature": "get_responsemanagement_libraries(page_number, page_size, messaging_template_filter, library_prefix)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "messaging_template_filter",
        "type": "str",
        "required": "false"
      },
      {
        "name": "library_prefix",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "LibraryEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nmessaging_template_filter = 'messaging_template_filter_example' # str | Returns a list of libraries that contain responses with at least one messaging template defined for a specific message channel (optional)\nlibrary_prefix = 'library_prefix_example' # str | Returns a list of libraries that contain the prefix provided (optional)\n\ntry:\n    # Gets a list of existing response libraries.\n    api_response = api_instance.get_responsemanagement_libraries(page_number=page_number, page_size=page_size, messaging_template_filter=messaging_template_filter, library_prefix=library_prefix)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->get_responsemanagement_libraries: %s\\n\" % e)"
  },
  "get_responsemanagement_library": {
    "operationId": "get_responsemanagement_library",
    "functionName": "get_responsemanagement_library",
    "signature": "get_responsemanagement_library(library_id)",
    "parameters": [
      {
        "name": "library_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Library",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nlibrary_id = 'library_id_example' # str | Library ID\n\ntry:\n    # Get details about an existing response library.\n    api_response = api_instance.get_responsemanagement_library(library_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->get_responsemanagement_library: %s\\n\" % e)"
  },
  "get_responsemanagement_response": {
    "operationId": "get_responsemanagement_response",
    "functionName": "get_responsemanagement_response",
    "signature": "get_responsemanagement_response(response_id, expand)",
    "parameters": [
      {
        "name": "response_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Response",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nresponse_id = 'response_id_example' # str | Response ID\nexpand = 'expand_example' # str | Expand instructions for the return value. (optional)\n\ntry:\n    # Get details about an existing response.\n    api_response = api_instance.get_responsemanagement_response(response_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->get_responsemanagement_response: %s\\n\" % e)"
  },
  "get_responsemanagement_responseasset": {
    "operationId": "get_responsemanagement_responseasset",
    "functionName": "get_responsemanagement_responseasset",
    "signature": "get_responsemanagement_responseasset(response_asset_id)",
    "parameters": [
      {
        "name": "response_asset_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ResponseAsset",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nresponse_asset_id = 'response_asset_id_example' # str | Asset Id\n\ntry:\n    # Get response asset information\n    api_response = api_instance.get_responsemanagement_responseasset(response_asset_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->get_responsemanagement_responseasset: %s\\n\" % e)"
  },
  "get_responsemanagement_responseassets_status_status_id": {
    "operationId": "get_responsemanagement_responseassets_status_status_id",
    "functionName": "get_responsemanagement_responseassets_status_status_id",
    "signature": "get_responsemanagement_responseassets_status_status_id(status_id)",
    "parameters": [
      {
        "name": "status_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ResponseAssetStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nstatus_id = 'status_id_example' # str | Status Id\n\ntry:\n    # Get response asset upload status\n    api_response = api_instance.get_responsemanagement_responseassets_status_status_id(status_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->get_responsemanagement_responseassets_status_status_id: %s\\n\" % e)"
  },
  "get_responsemanagement_responses": {
    "operationId": "get_responsemanagement_responses",
    "functionName": "get_responsemanagement_responses",
    "signature": "get_responsemanagement_responses(library_id, page_number, page_size, expand)",
    "parameters": [
      {
        "name": "library_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ResponseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nlibrary_id = 'library_id_example' # str | Library ID\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nexpand = 'expand_example' # str | Expand instructions for the return value. (optional)\n\ntry:\n    # Gets a list of existing responses.\n    api_response = api_instance.get_responsemanagement_responses(library_id, page_number=page_number, page_size=page_size, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->get_responsemanagement_responses: %s\\n\" % e)"
  },
  "post_responsemanagement_libraries": {
    "operationId": "post_responsemanagement_libraries",
    "functionName": "post_responsemanagement_libraries",
    "signature": "post_responsemanagement_libraries(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Library",
        "required": "true"
      }
    ],
    "return": "Library",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nbody = PureCloudPlatformClientV2.Library() # Library | Library\n\ntry:\n    # Create a response library.\n    api_response = api_instance.post_responsemanagement_libraries(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->post_responsemanagement_libraries: %s\\n\" % e)"
  },
  "post_responsemanagement_libraries_bulk": {
    "operationId": "post_responsemanagement_libraries_bulk",
    "functionName": "post_responsemanagement_libraries_bulk",
    "signature": "post_responsemanagement_libraries_bulk(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LibraryBatchRequest",
        "required": "true"
      }
    ],
    "return": "LibraryEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nbody = PureCloudPlatformClientV2.LibraryBatchRequest() # LibraryBatchRequest | LibraryIDs (max allowed 50)\n\ntry:\n    # Get response libraries.\n    api_response = api_instance.post_responsemanagement_libraries_bulk(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->post_responsemanagement_libraries_bulk: %s\\n\" % e)"
  },
  "post_responsemanagement_responseassets_search": {
    "operationId": "post_responsemanagement_responseassets_search",
    "functionName": "post_responsemanagement_responseassets_search",
    "signature": "post_responsemanagement_responseassets_search(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "ResponseAssetSearchRequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ResponseAssetSearchResults",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nbody = PureCloudPlatformClientV2.ResponseAssetSearchRequest() # ResponseAssetSearchRequest | request\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Search response assets\n    api_response = api_instance.post_responsemanagement_responseassets_search(body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->post_responsemanagement_responseassets_search: %s\\n\" % e)"
  },
  "post_responsemanagement_responseassets_uploads": {
    "operationId": "post_responsemanagement_responseassets_uploads",
    "functionName": "post_responsemanagement_responseassets_uploads",
    "signature": "post_responsemanagement_responseassets_uploads(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateResponseAssetRequest",
        "required": "true"
      }
    ],
    "return": "CreateResponseAssetResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nbody = PureCloudPlatformClientV2.CreateResponseAssetRequest() # CreateResponseAssetRequest | request\n\ntry:\n    # Creates pre-signed url for uploading response asset\n    api_response = api_instance.post_responsemanagement_responseassets_uploads(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->post_responsemanagement_responseassets_uploads: %s\\n\" % e)"
  },
  "post_responsemanagement_responses": {
    "operationId": "post_responsemanagement_responses",
    "functionName": "post_responsemanagement_responses",
    "signature": "post_responsemanagement_responses(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "Response",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Response",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nbody = PureCloudPlatformClientV2.Response() # Response | Response\nexpand = 'expand_example' # str | Expand instructions for the return value. (optional)\n\ntry:\n    # Create a response.\n    api_response = api_instance.post_responsemanagement_responses(body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->post_responsemanagement_responses: %s\\n\" % e)"
  },
  "post_responsemanagement_responses_query": {
    "operationId": "post_responsemanagement_responses_query",
    "functionName": "post_responsemanagement_responses_query",
    "signature": "post_responsemanagement_responses_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ResponseQueryRequest",
        "required": "true"
      }
    ],
    "return": "ResponseQueryResults",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nbody = PureCloudPlatformClientV2.ResponseQueryRequest() # ResponseQueryRequest | Response\n\ntry:\n    # Query responses\n    api_response = api_instance.post_responsemanagement_responses_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->post_responsemanagement_responses_query: %s\\n\" % e)"
  },
  "put_responsemanagement_library": {
    "operationId": "put_responsemanagement_library",
    "functionName": "put_responsemanagement_library",
    "signature": "put_responsemanagement_library(library_id, body)",
    "parameters": [
      {
        "name": "library_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Library",
        "required": "true"
      }
    ],
    "return": "Library",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nlibrary_id = 'library_id_example' # str | Library ID\nbody = PureCloudPlatformClientV2.Library() # Library | Library\n\ntry:\n    # Update an existing response library.\n    api_response = api_instance.put_responsemanagement_library(library_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->put_responsemanagement_library: %s\\n\" % e)"
  },
  "put_responsemanagement_response": {
    "operationId": "put_responsemanagement_response",
    "functionName": "put_responsemanagement_response",
    "signature": "put_responsemanagement_response(response_id, body, expand)",
    "parameters": [
      {
        "name": "response_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Response",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Response",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nresponse_id = 'response_id_example' # str | Response ID\nbody = PureCloudPlatformClientV2.Response() # Response | Response\nexpand = 'expand_example' # str | Expand instructions for the return value. (optional)\n\ntry:\n    # Update an existing response.\n    api_response = api_instance.put_responsemanagement_response(response_id, body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->put_responsemanagement_response: %s\\n\" % e)"
  },
  "put_responsemanagement_responseasset": {
    "operationId": "put_responsemanagement_responseasset",
    "functionName": "put_responsemanagement_responseasset",
    "signature": "put_responsemanagement_responseasset(response_asset_id, body)",
    "parameters": [
      {
        "name": "response_asset_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ResponseAssetRequest",
        "required": "true"
      }
    ],
    "return": "ResponseAsset",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ResponseManagementApi();\nresponse_asset_id = 'response_asset_id_example' # str | Asset Id\nbody = PureCloudPlatformClientV2.ResponseAssetRequest() # ResponseAssetRequest | request\n\ntry:\n    # Update response asset\n    api_response = api_instance.put_responsemanagement_responseasset(response_asset_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ResponseManagementApi->put_responsemanagement_responseasset: %s\\n\" % e)"
  },
  "delete_routing_assessment": {
    "operationId": "delete_routing_assessment",
    "functionName": "delete_routing_assessment",
    "signature": "delete_routing_assessment(assessment_id)",
    "parameters": [
      {
        "name": "assessment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nassessment_id = 'assessment_id_example' # str | Benefit Assessment ID\n\ntry:\n    # Delete single benefit assessment.\n    api_instance.delete_routing_assessment(assessment_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_assessment: %s\\n\" % e)"
  },
  "delete_routing_email_domain": {
    "operationId": "delete_routing_email_domain",
    "functionName": "delete_routing_email_domain",
    "signature": "delete_routing_email_domain(domain_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_id = 'domain_id_example' # str | domain ID\n\ntry:\n    # Delete a domain\n    api_instance.delete_routing_email_domain(domain_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_email_domain: %s\\n\" % e)"
  },
  "delete_routing_email_domain_route": {
    "operationId": "delete_routing_email_domain_route",
    "functionName": "delete_routing_email_domain_route",
    "signature": "delete_routing_email_domain_route(domain_name, route_id)",
    "parameters": [
      {
        "name": "domain_name",
        "type": "str",
        "required": "true"
      },
      {
        "name": "route_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_name = 'domain_name_example' # str | email domain\nroute_id = 'route_id_example' # str | route ID\n\ntry:\n    # Delete a route\n    api_instance.delete_routing_email_domain_route(domain_name, route_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_email_domain_route: %s\\n\" % e)"
  },
  "delete_routing_email_outbound_domain": {
    "operationId": "delete_routing_email_outbound_domain",
    "functionName": "delete_routing_email_outbound_domain",
    "signature": "delete_routing_email_outbound_domain(domain_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_id = 'domain_id_example' # str | domain ID\n\ntry:\n    # Delete an outbound domain\n    api_instance.delete_routing_email_outbound_domain(domain_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_email_outbound_domain: %s\\n\" % e)"
  },
  "delete_routing_language": {
    "operationId": "delete_routing_language",
    "functionName": "delete_routing_language",
    "signature": "delete_routing_language(language_id)",
    "parameters": [
      {
        "name": "language_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nlanguage_id = 'language_id_example' # str | Language ID\n\ntry:\n    # Delete a routing language\n    api_instance.delete_routing_language(language_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_language: %s\\n\" % e)"
  },
  "delete_routing_predictor": {
    "operationId": "delete_routing_predictor",
    "functionName": "delete_routing_predictor",
    "signature": "delete_routing_predictor(predictor_id)",
    "parameters": [
      {
        "name": "predictor_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npredictor_id = 'predictor_id_example' # str | Predictor ID\n\ntry:\n    # Delete single predictor.\n    api_instance.delete_routing_predictor(predictor_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_predictor: %s\\n\" % e)"
  },
  "delete_routing_queue": {
    "operationId": "delete_routing_queue",
    "functionName": "delete_routing_queue",
    "signature": "delete_routing_queue(queue_id, force_delete)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force_delete",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\nforce_delete = True # bool | forceDelete (optional)\n\ntry:\n    # Delete a queue\n    api_instance.delete_routing_queue(queue_id, force_delete=force_delete)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_queue: %s\\n\" % e)"
  },
  "delete_routing_queue_member": {
    "operationId": "delete_routing_queue_member",
    "functionName": "delete_routing_queue_member",
    "signature": "delete_routing_queue_member(queue_id, member_id)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "member_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\nmember_id = 'member_id_example' # str | Member ID\n\ntry:\n    # Delete a queue member.\n    api_instance.delete_routing_queue_member(queue_id, member_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_queue_member: %s\\n\" % e)"
  },
  "delete_routing_queue_user": {
    "operationId": "delete_routing_queue_user",
    "functionName": "delete_routing_queue_user",
    "signature": "delete_routing_queue_user(queue_id, member_id)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "member_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\nmember_id = 'member_id_example' # str | Member ID\n\ntry:\n    # DEPRECATED: use DELETE /routing/queues/{queueId}/members/{memberId}.  Delete queue member.\n    api_instance.delete_routing_queue_user(queue_id, member_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_queue_user: %s\\n\" % e)"
  },
  "delete_routing_queue_wrapupcode": {
    "operationId": "delete_routing_queue_wrapupcode",
    "functionName": "delete_routing_queue_wrapupcode",
    "signature": "delete_routing_queue_wrapupcode(queue_id, code_id)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "code_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\ncode_id = 'code_id_example' # str | Code ID\n\ntry:\n    # Delete a wrap-up code from a queue\n    api_instance.delete_routing_queue_wrapupcode(queue_id, code_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_queue_wrapupcode: %s\\n\" % e)"
  },
  "delete_routing_settings": {
    "operationId": "delete_routing_settings",
    "functionName": "delete_routing_settings",
    "signature": "delete_routing_settings()",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\n\ntry:\n    # Delete an organization's routing settings\n    api_instance.delete_routing_settings()\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_settings: %s\\n\" % e)"
  },
  "delete_routing_skill": {
    "operationId": "delete_routing_skill",
    "functionName": "delete_routing_skill",
    "signature": "delete_routing_skill(skill_id)",
    "parameters": [
      {
        "name": "skill_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nskill_id = 'skill_id_example' # str | Skill ID\n\ntry:\n    # Delete Routing Skill\n    api_instance.delete_routing_skill(skill_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_skill: %s\\n\" % e)"
  },
  "delete_routing_skillgroup": {
    "operationId": "delete_routing_skillgroup",
    "functionName": "delete_routing_skillgroup",
    "signature": "delete_routing_skillgroup(skill_group_id)",
    "parameters": [
      {
        "name": "skill_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nskill_group_id = 'skill_group_id_example' # str | Skill Group ID\n\ntry:\n    # Remove skill group definition\n    api_instance.delete_routing_skillgroup(skill_group_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_skillgroup: %s\\n\" % e)"
  },
  "delete_routing_sms_address": {
    "operationId": "delete_routing_sms_address",
    "functionName": "delete_routing_sms_address",
    "signature": "delete_routing_sms_address(address_id)",
    "parameters": [
      {
        "name": "address_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\naddress_id = 'address_id_example' # str | Address ID\n\ntry:\n    # Delete an Address by Id for SMS\n    api_instance.delete_routing_sms_address(address_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_sms_address: %s\\n\" % e)"
  },
  "delete_routing_sms_phonenumber": {
    "operationId": "delete_routing_sms_phonenumber",
    "functionName": "delete_routing_sms_phonenumber",
    "signature": "delete_routing_sms_phonenumber(address_id)",
    "parameters": [
      {
        "name": "address_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\naddress_id = 'address_id_example' # str | Address ID\n\ntry:\n    # Delete a phone number provisioned for SMS.\n    api_instance.delete_routing_sms_phonenumber(address_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_sms_phonenumber: %s\\n\" % e)"
  },
  "delete_routing_user_utilization": {
    "operationId": "delete_routing_user_utilization",
    "functionName": "delete_routing_user_utilization",
    "signature": "delete_routing_user_utilization(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Delete the user's max utilization settings and revert to the organization-wide default.\n    api_instance.delete_routing_user_utilization(user_id)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->delete_routing_user_utilization: %s\\n\" % e)"
  },
  "delete_routing_utilization": {
    "operationId": "delete_routing_utilization",
    "functionName": "delete_routing_utilization",
    "signature": "delete_routing_utilization()",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\n\ntry:\n    # Delete the organization-wide max utilization settings and revert to the system default.\n    api_instance.delete_routing_utilization()\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_utilization: %s\\n\" % e)"
  },
  "delete_routing_utilization_label": {
    "operationId": "delete_routing_utilization_label",
    "functionName": "delete_routing_utilization_label",
    "signature": "delete_routing_utilization_label(label_id, force_delete)",
    "parameters": [
      {
        "name": "label_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force_delete",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nlabel_id = 'label_id_example' # str | Utilization Label ID\nforce_delete = False # bool | Remove all label usages (if found) without warning (optional) (default to False)\n\ntry:\n    # Delete a utilization label\n    api_instance.delete_routing_utilization_label(label_id, force_delete=force_delete)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_utilization_label: %s\\n\" % e)"
  },
  "delete_routing_utilization_tag": {
    "operationId": "delete_routing_utilization_tag",
    "functionName": "delete_routing_utilization_tag",
    "signature": "delete_routing_utilization_tag(tag_id, force_delete)",
    "parameters": [
      {
        "name": "tag_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force_delete",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ntag_id = 'tag_id_example' # str | Utilization Tag ID\nforce_delete = False # bool | Remove all tag usages (if found) without warning (optional) (default to False)\n\ntry:\n    # Delete an utilization tag\n    api_instance.delete_routing_utilization_tag(tag_id, force_delete=force_delete)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_utilization_tag: %s\\n\" % e)"
  },
  "delete_routing_wrapupcode": {
    "operationId": "delete_routing_wrapupcode",
    "functionName": "delete_routing_wrapupcode",
    "signature": "delete_routing_wrapupcode(code_id)",
    "parameters": [
      {
        "name": "code_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ncode_id = 'code_id_example' # str | Wrapup Code ID\n\ntry:\n    # Delete wrap-up code\n    api_instance.delete_routing_wrapupcode(code_id)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->delete_routing_wrapupcode: %s\\n\" % e)"
  },
  "delete_user_routinglanguage": {
    "operationId": "delete_user_routinglanguage",
    "functionName": "delete_user_routinglanguage",
    "signature": "delete_user_routinglanguage(user_id, language_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nlanguage_id = 'language_id_example' # str | languageId\n\ntry:\n    # Remove routing language from user\n    api_instance.delete_user_routinglanguage(user_id, language_id)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->delete_user_routinglanguage: %s\\n\" % e)"
  },
  "delete_user_routingskill": {
    "operationId": "delete_user_routingskill",
    "functionName": "delete_user_routingskill",
    "signature": "delete_user_routingskill(user_id, skill_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "skill_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nskill_id = 'skill_id_example' # str | skillId\n\ntry:\n    # Remove routing skill from user\n    api_instance.delete_user_routingskill(user_id, skill_id)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->delete_user_routingskill: %s\\n\" % e)"
  },
  "get_routing_assessment": {
    "operationId": "get_routing_assessment",
    "functionName": "get_routing_assessment",
    "signature": "get_routing_assessment(assessment_id)",
    "parameters": [
      {
        "name": "assessment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "BenefitAssessment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nassessment_id = 'assessment_id_example' # str | Benefit Assessment ID\n\ntry:\n    # Retrieve a single benefit assessment.\n    api_response = api_instance.get_routing_assessment(assessment_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_assessment: %s\\n\" % e)"
  },
  "get_routing_assessments": {
    "operationId": "get_routing_assessments",
    "functionName": "get_routing_assessments",
    "signature": "get_routing_assessments(before, after, limit, page_size, queue_id)",
    "parameters": [
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "queue_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "AssessmentListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\nlimit = 'limit_example' # str | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\nqueue_id = ['queue_id_example'] # list[str] | Queue ID(s) to filter assessments by. (optional)\n\ntry:\n    # Retrieve all benefit assessments.\n    api_response = api_instance.get_routing_assessments(before=before, after=after, limit=limit, page_size=page_size, queue_id=queue_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_assessments: %s\\n\" % e)"
  },
  "get_routing_assessments_job": {
    "operationId": "get_routing_assessments_job",
    "functionName": "get_routing_assessments_job",
    "signature": "get_routing_assessments_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "BenefitAssessmentJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\njob_id = 'job_id_example' # str | Benefit Assessment Job ID\n\ntry:\n    # Retrieve a single benefit assessments job.\n    api_response = api_instance.get_routing_assessments_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_assessments_job: %s\\n\" % e)"
  },
  "get_routing_assessments_jobs": {
    "operationId": "get_routing_assessments_jobs",
    "functionName": "get_routing_assessments_jobs",
    "signature": "get_routing_assessments_jobs(division_id)",
    "parameters": [
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "AssessmentJobListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndivision_id = ['division_id_example'] # list[str] | Division ID(s) to filter assessment jobs by. (optional)\n\ntry:\n    # Retrieve all benefit assessment jobs.\n    api_response = api_instance.get_routing_assessments_jobs(division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_assessments_jobs: %s\\n\" % e)"
  },
  "get_routing_availablemediatypes": {
    "operationId": "get_routing_availablemediatypes",
    "functionName": "get_routing_availablemediatypes",
    "signature": "get_routing_availablemediatypes()",
    "return": "AvailableMediaTypeEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\n\ntry:\n    # Get available media types\n    api_response = api_instance.get_routing_availablemediatypes()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_availablemediatypes: %s\\n\" % e)"
  },
  "get_routing_email_domain": {
    "operationId": "get_routing_email_domain",
    "functionName": "get_routing_email_domain",
    "signature": "get_routing_email_domain(domain_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "InboundDomain",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_id = 'domain_id_example' # str | domain ID\n\ntry:\n    # Get domain\n    api_response = api_instance.get_routing_email_domain(domain_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_email_domain: %s\\n\" % e)"
  },
  "get_routing_email_domain_route": {
    "operationId": "get_routing_email_domain_route",
    "functionName": "get_routing_email_domain_route",
    "signature": "get_routing_email_domain_route(domain_name, route_id)",
    "parameters": [
      {
        "name": "domain_name",
        "type": "str",
        "required": "true"
      },
      {
        "name": "route_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "InboundRoute",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_name = 'domain_name_example' # str | email domain\nroute_id = 'route_id_example' # str | route ID\n\ntry:\n    # Get a route\n    api_response = api_instance.get_routing_email_domain_route(domain_name, route_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_email_domain_route: %s\\n\" % e)"
  },
  "get_routing_email_domain_routes": {
    "operationId": "get_routing_email_domain_routes",
    "functionName": "get_routing_email_domain_routes",
    "signature": "get_routing_email_domain_routes(domain_name, page_size, page_number, pattern)",
    "parameters": [
      {
        "name": "domain_name",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "pattern",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "InboundRouteEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_name = 'domain_name_example' # str | email domain\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\npattern = 'pattern_example' # str | Filter routes by the route's pattern property (optional)\n\ntry:\n    # Get routes\n    api_response = api_instance.get_routing_email_domain_routes(domain_name, page_size=page_size, page_number=page_number, pattern=pattern)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_email_domain_routes: %s\\n\" % e)"
  },
  "get_routing_email_domains": {
    "operationId": "get_routing_email_domains",
    "functionName": "get_routing_email_domains",
    "signature": "get_routing_email_domains(page_size, page_number, exclude_status, filter)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "exclude_status",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "filter",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "InboundDomainEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nexclude_status = False # bool | Exclude MX record data (optional) (default to False)\nfilter = 'filter_example' # str | Optional search filter (optional)\n\ntry:\n    # Get domains\n    api_response = api_instance.get_routing_email_domains(page_size=page_size, page_number=page_number, exclude_status=exclude_status, filter=filter)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_email_domains: %s\\n\" % e)"
  },
  "get_routing_email_outbound_domain": {
    "operationId": "get_routing_email_outbound_domain",
    "functionName": "get_routing_email_outbound_domain",
    "signature": "get_routing_email_outbound_domain(domain_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OutboundDomain",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_id = 'domain_id_example' # str | domain ID\n\ntry:\n    # Get domain\n    api_response = api_instance.get_routing_email_outbound_domain(domain_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_email_outbound_domain: %s\\n\" % e)"
  },
  "get_routing_email_outbound_domain_activation": {
    "operationId": "get_routing_email_outbound_domain_activation",
    "functionName": "get_routing_email_outbound_domain_activation",
    "signature": "get_routing_email_outbound_domain_activation(domain_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EmailOutboundDomainResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_id = 'domain_id_example' # str | domain ID\n\ntry:\n    # Get activation status (cname + dkim) of an outbound domain\n    api_response = api_instance.get_routing_email_outbound_domain_activation(domain_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_email_outbound_domain_activation: %s\\n\" % e)"
  },
  "get_routing_email_outbound_domain_search": {
    "operationId": "get_routing_email_outbound_domain_search",
    "functionName": "get_routing_email_outbound_domain_search",
    "signature": "get_routing_email_outbound_domain_search(domain_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OutboundDomain",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_id = 'domain_id_example' # str | domain ID\n\ntry:\n    # Search a domain across organizations\n    api_response = api_instance.get_routing_email_outbound_domain_search(domain_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_email_outbound_domain_search: %s\\n\" % e)"
  },
  "get_routing_email_outbound_domains": {
    "operationId": "get_routing_email_outbound_domains",
    "functionName": "get_routing_email_outbound_domains",
    "signature": "get_routing_email_outbound_domains(filter)",
    "parameters": [
      {
        "name": "filter",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OutboundDomainEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nfilter = 'filter_example' # str | Optional search filter (optional)\n\ntry:\n    # Get outbound domains\n    api_response = api_instance.get_routing_email_outbound_domains(filter=filter)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_email_outbound_domains: %s\\n\" % e)"
  },
  "get_routing_email_setup": {
    "operationId": "get_routing_email_setup",
    "functionName": "get_routing_email_setup",
    "signature": "get_routing_email_setup()",
    "return": "EmailSetup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\n\ntry:\n    # Get email setup\n    api_response = api_instance.get_routing_email_setup()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_email_setup: %s\\n\" % e)"
  },
  "get_routing_language": {
    "operationId": "get_routing_language",
    "functionName": "get_routing_language",
    "signature": "get_routing_language(language_id)",
    "parameters": [
      {
        "name": "language_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Language",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nlanguage_id = 'language_id_example' # str | Language ID\n\ntry:\n    # Get a routing language\n    api_response = api_instance.get_routing_language(language_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_language: %s\\n\" % e)"
  },
  "get_routing_languages": {
    "operationId": "get_routing_languages",
    "functionName": "get_routing_languages",
    "signature": "get_routing_languages(page_size, page_number, sort_order, name, id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LanguageEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''ASC'' # str | Ascending or descending sort order (optional) (default to 'ASC')\nname = 'name_example' # str | Name (optional)\nid = ['id_example'] # list[str] | id (optional)\n\ntry:\n    # Get the list of supported languages.\n    api_response = api_instance.get_routing_languages(page_size=page_size, page_number=page_number, sort_order=sort_order, name=name, id=id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_languages: %s\\n\" % e)"
  },
  "get_routing_message_recipient": {
    "operationId": "get_routing_message_recipient",
    "functionName": "get_routing_message_recipient",
    "signature": "get_routing_message_recipient(recipient_id)",
    "parameters": [
      {
        "name": "recipient_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Recipient",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nrecipient_id = 'recipient_id_example' # str | Recipient ID\n\ntry:\n    # Get a recipient\n    api_response = api_instance.get_routing_message_recipient(recipient_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_message_recipient: %s\\n\" % e)"
  },
  "get_routing_message_recipients": {
    "operationId": "get_routing_message_recipients",
    "functionName": "get_routing_message_recipients",
    "signature": "get_routing_message_recipients(messenger_type, name, page_size, page_number)",
    "parameters": [
      {
        "name": "messenger_type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "RecipientListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nmessenger_type = 'messenger_type_example' # str | Messenger Type (optional)\nname = 'name_example' # str | Recipient Name (optional)\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get recipients\n    api_response = api_instance.get_routing_message_recipients(messenger_type=messenger_type, name=name, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_message_recipients: %s\\n\" % e)"
  },
  "get_routing_predictor": {
    "operationId": "get_routing_predictor",
    "functionName": "get_routing_predictor",
    "signature": "get_routing_predictor(predictor_id)",
    "parameters": [
      {
        "name": "predictor_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Predictor",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npredictor_id = 'predictor_id_example' # str | Predictor ID\n\ntry:\n    # Retrieve a single predictor.\n    api_response = api_instance.get_routing_predictor(predictor_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_predictor: %s\\n\" % e)"
  },
  "get_routing_predictor_model_features": {
    "operationId": "get_routing_predictor_model_features",
    "functionName": "get_routing_predictor_model_features",
    "signature": "get_routing_predictor_model_features(predictor_id, model_id)",
    "parameters": [
      {
        "name": "predictor_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "model_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PredictorModelFeatureListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npredictor_id = 'predictor_id_example' # str | Predictor ID\nmodel_id = 'model_id_example' # str | Model ID\n\ntry:\n    # Retrieve Predictor Model Features.\n    api_response = api_instance.get_routing_predictor_model_features(predictor_id, model_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_predictor_model_features: %s\\n\" % e)"
  },
  "get_routing_predictor_models": {
    "operationId": "get_routing_predictor_models",
    "functionName": "get_routing_predictor_models",
    "signature": "get_routing_predictor_models(predictor_id)",
    "parameters": [
      {
        "name": "predictor_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PredictorModels",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npredictor_id = 'predictor_id_example' # str | Predictor ID\n\ntry:\n    # Retrieve Predictor Models and Top Features.\n    api_response = api_instance.get_routing_predictor_models(predictor_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_predictor_models: %s\\n\" % e)"
  },
  "get_routing_predictors": {
    "operationId": "get_routing_predictors",
    "functionName": "get_routing_predictors",
    "signature": "get_routing_predictors(before, after, limit, page_size, queue_id)",
    "parameters": [
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "str",
        "required": "false"
      },
      {
        "name": "queue_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "PredictorListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbefore = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\nlimit = 'limit_example' # str | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize (optional)\npage_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)\nqueue_id = ['queue_id_example'] # list[str] | Comma-separated list of queue Ids to filter by. (optional)\n\ntry:\n    # Retrieve all predictors.\n    api_response = api_instance.get_routing_predictors(before=before, after=after, limit=limit, page_size=page_size, queue_id=queue_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_predictors: %s\\n\" % e)"
  },
  "get_routing_predictors_keyperformanceindicators": {
    "operationId": "get_routing_predictors_keyperformanceindicators",
    "functionName": "get_routing_predictors_keyperformanceindicators",
    "signature": "get_routing_predictors_keyperformanceindicators(kpi_group, expand)",
    "parameters": [
      {
        "name": "kpi_group",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "list[KeyPerformanceIndicator]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nkpi_group = 'kpi_group_example' # str | The Group of Key Performance Indicators to return (optional)\nexpand = ['expand_example'] # list[str] | Parameter to request additional data to return in KPI payload (optional)\n\ntry:\n    # Get a list of Key Performance Indicators\n    api_response = api_instance.get_routing_predictors_keyperformanceindicators(kpi_group=kpi_group, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_predictors_keyperformanceindicators: %s\\n\" % e)"
  },
  "get_routing_queue": {
    "operationId": "get_routing_queue",
    "functionName": "get_routing_queue",
    "signature": "get_routing_queue(queue_id)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Queue",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\n\ntry:\n    # Get details about this queue.\n    api_response = api_instance.get_routing_queue(queue_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_queue: %s\\n\" % e)"
  },
  "get_routing_queue_comparisonperiod": {
    "operationId": "get_routing_queue_comparisonperiod",
    "functionName": "get_routing_queue_comparisonperiod",
    "signature": "get_routing_queue_comparisonperiod(queue_id, comparison_period_id)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "comparison_period_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ComparisonPeriod",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue id\ncomparison_period_id = 'comparison_period_id_example' # str | ComparisonPeriod id\n\ntry:\n    # Get a Comparison Period.\n    api_response = api_instance.get_routing_queue_comparisonperiod(queue_id, comparison_period_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_queue_comparisonperiod: %s\\n\" % e)"
  },
  "get_routing_queue_comparisonperiods": {
    "operationId": "get_routing_queue_comparisonperiods",
    "functionName": "get_routing_queue_comparisonperiods",
    "signature": "get_routing_queue_comparisonperiods(queue_id)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ComparisonPeriodListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue id\n\ntry:\n    # Get list of comparison periods\n    api_response = api_instance.get_routing_queue_comparisonperiods(queue_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_queue_comparisonperiods: %s\\n\" % e)"
  },
  "get_routing_queue_estimatedwaittime": {
    "operationId": "get_routing_queue_estimatedwaittime",
    "functionName": "get_routing_queue_estimatedwaittime",
    "signature": "get_routing_queue_estimatedwaittime(queue_id, conversation_id)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "conversation_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "EstimatedWaitTimePredictions",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | queueId\nconversation_id = 'conversation_id_example' # str | conversationId (optional)\n\ntry:\n    # Get Estimated Wait Time\n    api_response = api_instance.get_routing_queue_estimatedwaittime(queue_id, conversation_id=conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_queue_estimatedwaittime: %s\\n\" % e)"
  },
  "get_routing_queue_mediatype_estimatedwaittime": {
    "operationId": "get_routing_queue_mediatype_estimatedwaittime",
    "functionName": "get_routing_queue_mediatype_estimatedwaittime",
    "signature": "get_routing_queue_mediatype_estimatedwaittime(queue_id, media_type)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "media_type",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EstimatedWaitTimePredictions",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | queueId\nmedia_type = 'media_type_example' # str | mediaType\n\ntry:\n    # Get Estimated Wait Time\n    api_response = api_instance.get_routing_queue_mediatype_estimatedwaittime(queue_id, media_type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_queue_mediatype_estimatedwaittime: %s\\n\" % e)"
  },
  "get_routing_queue_members": {
    "operationId": "get_routing_queue_members",
    "functionName": "get_routing_queue_members",
    "signature": "get_routing_queue_members(queue_id, page_number, page_size, sort_order, expand, name, profile_skills, skills, languages, routing_status, presence, member_by, joined)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "profile_skills",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "skills",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "languages",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "routing_status",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "presence",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "member_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "joined",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "QueueMemberEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\npage_number = 1 # int |  (optional) (default to 1)\npage_size = 25 # int | Max value is 100 (optional) (default to 25)\nsort_order = ''asc'' # str | Note: results are sorted by name. (optional) (default to 'asc')\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\nname = 'name_example' # str | Filter by queue member name (contains-style search) (optional)\nprofile_skills = ['profile_skills_example'] # list[str] | Filter by profile skill (contains-style search) (optional)\nskills = ['skills_example'] # list[str] | Filter by skill (contains-style search) (optional)\nlanguages = ['languages_example'] # list[str] | Filter by language (contains-style search) (optional)\nrouting_status = ['routing_status_example'] # list[str] | Filter by routing status (optional)\npresence = ['presence_example'] # list[str] | Filter by presence (optional)\nmember_by = 'member_by_example' # str | Filter by member type (optional)\njoined = True # bool | Filter by joined status (optional)\n\ntry:\n    # Get the members of this queue.\n    api_response = api_instance.get_routing_queue_members(queue_id, page_number=page_number, page_size=page_size, sort_order=sort_order, expand=expand, name=name, profile_skills=profile_skills, skills=skills, languages=languages, routing_status=routing_status, presence=presence, member_by=member_by, joined=joined)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_queue_members: %s\\n\" % e)"
  },
  "get_routing_queue_users": {
    "operationId": "get_routing_queue_users",
    "functionName": "get_routing_queue_users",
    "signature": "get_routing_queue_users(queue_id, page_number, page_size, sort_order, expand, joined, name, profile_skills, skills, languages, routing_status, presence)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "joined",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "profile_skills",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "skills",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "languages",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "routing_status",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "presence",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "QueueMemberEntityListingV1",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\npage_number = 1 # int |  (optional) (default to 1)\npage_size = 25 # int | Max value is 100 (optional) (default to 25)\nsort_order = ''asc'' # str | Note: results are sorted by name. (optional) (default to 'asc')\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\njoined = True # bool | Filter by joined status (optional)\nname = 'name_example' # str | Filter by queue member name (optional)\nprofile_skills = ['profile_skills_example'] # list[str] | Filter by profile skill (optional)\nskills = ['skills_example'] # list[str] | Filter by skill (optional)\nlanguages = ['languages_example'] # list[str] | Filter by language (optional)\nrouting_status = ['routing_status_example'] # list[str] | Filter by routing status (optional)\npresence = ['presence_example'] # list[str] | Filter by presence (optional)\n\ntry:\n    # DEPRECATED: use GET /routing/queues/{queueId}/members.  Get the members of this queue.\n    api_response = api_instance.get_routing_queue_users(queue_id, page_number=page_number, page_size=page_size, sort_order=sort_order, expand=expand, joined=joined, name=name, profile_skills=profile_skills, skills=skills, languages=languages, routing_status=routing_status, presence=presence)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_queue_users: %s\\n\" % e)"
  },
  "get_routing_queue_wrapupcodes": {
    "operationId": "get_routing_queue_wrapupcodes",
    "functionName": "get_routing_queue_wrapupcodes",
    "signature": "get_routing_queue_wrapupcodes(queue_id, page_size, page_number)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "WrapupCodeEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get the wrap-up codes for a queue\n    api_response = api_instance.get_routing_queue_wrapupcodes(queue_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_queue_wrapupcodes: %s\\n\" % e)"
  },
  "get_routing_queues": {
    "operationId": "get_routing_queues",
    "functionName": "get_routing_queues",
    "signature": "get_routing_queues(page_number, page_size, sort_order, name, id, division_id, peer_id, canned_response_library_id, has_peer)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "peer_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "canned_response_library_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "has_peer",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "QueueEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_order = ''asc'' # str | Note: results are sorted by name. (optional) (default to 'asc')\nname = 'name_example' # str | Include only queues with the given name (leading and trailing asterisks allowed) (optional)\nid = ['id_example'] # list[str] | Include only queues with the specified ID(s) (optional)\ndivision_id = ['division_id_example'] # list[str] | Include only queues in the specified division ID(s) (optional)\npeer_id = ['peer_id_example'] # list[str] | Include only queues with the specified peer ID(s) (optional)\ncanned_response_library_id = 'canned_response_library_id_example' # str | Include only queues explicitly associated with the specified canned response library ID (optional)\nhas_peer = True # bool | Include only queues with a peer ID (optional)\n\ntry:\n    # Get list of queues.\n    api_response = api_instance.get_routing_queues(page_number=page_number, page_size=page_size, sort_order=sort_order, name=name, id=id, division_id=division_id, peer_id=peer_id, canned_response_library_id=canned_response_library_id, has_peer=has_peer)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_queues: %s\\n\" % e)"
  },
  "get_routing_queues_divisionviews": {
    "operationId": "get_routing_queues_divisionviews",
    "functionName": "get_routing_queues_divisionviews",
    "signature": "get_routing_queues_divisionviews(page_size, page_number, sort_by, sort_order, name, id, division_id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "QueueEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npage_size = 25 # int | Page size [max value is 100] (optional) (default to 25)\npage_number = 1 # int | Page number [max value is 5] (optional) (default to 1)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\nname = 'name_example' # str | Name (optional)\nid = ['id_example'] # list[str] | Queue ID(s) (optional)\ndivision_id = ['division_id_example'] # list[str] | Division ID(s) (optional)\n\ntry:\n    # Get a paged listing of simplified queue objects, filterable by name, queue ID(s), or division ID(s).\n    api_response = api_instance.get_routing_queues_divisionviews(page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order, name=name, id=id, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_queues_divisionviews: %s\\n\" % e)"
  },
  "get_routing_queues_divisionviews_all": {
    "operationId": "get_routing_queues_divisionviews_all",
    "functionName": "get_routing_queues_divisionviews_all",
    "signature": "get_routing_queues_divisionviews_all(page_size, page_number, sort_order)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "QueueEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npage_size = 25 # int | Page size [max value is 500] (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''asc'' # str | Sort order (optional) (default to 'asc')\n\ntry:\n    # Get a paged listing of simplified queue objects, sorted by name.  Can be used to get a digest of all queues in an organization.\n    api_response = api_instance.get_routing_queues_divisionviews_all(page_size=page_size, page_number=page_number, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_queues_divisionviews_all: %s\\n\" % e)"
  },
  "get_routing_queues_me": {
    "operationId": "get_routing_queues_me",
    "functionName": "get_routing_queues_me",
    "signature": "get_routing_queues_me(page_number, page_size, joined, sort_order)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "joined",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UserQueueEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\njoined = True # bool | Filter by joined status. (optional)\nsort_order = ''asc'' # str | Note: results are sorted by name. (optional) (default to 'asc')\n\ntry:\n    # Get a paged listing of queues the user is a member of.\n    api_response = api_instance.get_routing_queues_me(page_number=page_number, page_size=page_size, joined=joined, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_queues_me: %s\\n\" % e)"
  },
  "get_routing_settings": {
    "operationId": "get_routing_settings",
    "functionName": "get_routing_settings",
    "signature": "get_routing_settings()",
    "return": "RoutingSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\n\ntry:\n    # Get an organization's routing settings\n    api_response = api_instance.get_routing_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_settings: %s\\n\" % e)"
  },
  "get_routing_settings_contactcenter": {
    "operationId": "get_routing_settings_contactcenter",
    "functionName": "get_routing_settings_contactcenter",
    "signature": "get_routing_settings_contactcenter()",
    "return": "ContactCenterSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\n\ntry:\n    # Get Contact Center Settings\n    api_response = api_instance.get_routing_settings_contactcenter()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_settings_contactcenter: %s\\n\" % e)"
  },
  "get_routing_settings_transcription": {
    "operationId": "get_routing_settings_transcription",
    "functionName": "get_routing_settings_transcription",
    "signature": "get_routing_settings_transcription()",
    "return": "TranscriptionSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\n\ntry:\n    # Get Transcription Settings\n    api_response = api_instance.get_routing_settings_transcription()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_settings_transcription: %s\\n\" % e)"
  },
  "get_routing_skill": {
    "operationId": "get_routing_skill",
    "functionName": "get_routing_skill",
    "signature": "get_routing_skill(skill_id)",
    "parameters": [
      {
        "name": "skill_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "RoutingSkill",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nskill_id = 'skill_id_example' # str | Skill ID\n\ntry:\n    # Get Routing Skill\n    api_response = api_instance.get_routing_skill(skill_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_skill: %s\\n\" % e)"
  },
  "get_routing_skillgroup": {
    "operationId": "get_routing_skillgroup",
    "functionName": "get_routing_skillgroup",
    "signature": "get_routing_skillgroup(skill_group_id)",
    "parameters": [
      {
        "name": "skill_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SkillGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nskill_group_id = 'skill_group_id_example' # str | Skill Group ID\n\ntry:\n    # Get skill group\n    api_response = api_instance.get_routing_skillgroup(skill_group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_skillgroup: %s\\n\" % e)"
  },
  "get_routing_skillgroup_members": {
    "operationId": "get_routing_skillgroup_members",
    "functionName": "get_routing_skillgroup_members",
    "signature": "get_routing_skillgroup_members(skill_group_id, page_size, after, before, expand)",
    "parameters": [
      {
        "name": "skill_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SkillGroupMemberEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nskill_group_id = 'skill_group_id_example' # str | Skill Group ID\npage_size = 25 # int | Page size (optional) (default to 25)\nafter = 'after_example' # str | The cursor that points to the next item (optional)\nbefore = 'before_example' # str | The cursor that points to the previous item (optional)\nexpand = 'expand_example' # str | Expand the name on each user (optional)\n\ntry:\n    # Get skill group members\n    api_response = api_instance.get_routing_skillgroup_members(skill_group_id, page_size=page_size, after=after, before=before, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_skillgroup_members: %s\\n\" % e)"
  },
  "get_routing_skillgroup_members_divisions": {
    "operationId": "get_routing_skillgroup_members_divisions",
    "functionName": "get_routing_skillgroup_members_divisions",
    "signature": "get_routing_skillgroup_members_divisions(skill_group_id, expand)",
    "parameters": [
      {
        "name": "skill_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SkillGroupMemberDivisionList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nskill_group_id = 'skill_group_id_example' # str | Skill Group ID\nexpand = 'expand_example' # str | Expand the name on each user (optional)\n\ntry:\n    # Get list of member divisions for this skill group.\n    api_response = api_instance.get_routing_skillgroup_members_divisions(skill_group_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_skillgroup_members_divisions: %s\\n\" % e)"
  },
  "get_routing_skillgroups": {
    "operationId": "get_routing_skillgroups",
    "functionName": "get_routing_skillgroups",
    "signature": "get_routing_skillgroups(page_size, name, after, before)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SkillGroupEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\nname = 'name_example' # str | Return only skill group names whose names start with this value (case-insensitive matching) (optional)\nafter = 'after_example' # str | The cursor that points to the next item (optional)\nbefore = 'before_example' # str | The cursor that points to the previous item (optional)\n\ntry:\n    # Get skill group listing\n    api_response = api_instance.get_routing_skillgroups(page_size=page_size, name=name, after=after, before=before)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_skillgroups: %s\\n\" % e)"
  },
  "get_routing_skills": {
    "operationId": "get_routing_skills",
    "functionName": "get_routing_skills",
    "signature": "get_routing_skills(page_size, page_number, name, id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "SkillEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nname = 'name_example' # str | Filter for results that start with this value (optional)\nid = ['id_example'] # list[str] | id (optional)\n\ntry:\n    # Get the list of routing skills.\n    api_response = api_instance.get_routing_skills(page_size=page_size, page_number=page_number, name=name, id=id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_skills: %s\\n\" % e)"
  },
  "get_routing_sms_address": {
    "operationId": "get_routing_sms_address",
    "functionName": "get_routing_sms_address",
    "signature": "get_routing_sms_address(address_id)",
    "parameters": [
      {
        "name": "address_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SmsAddress",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\naddress_id = 'address_id_example' # str | Address ID\n\ntry:\n    # Get an Address by Id for SMS\n    api_response = api_instance.get_routing_sms_address(address_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_sms_address: %s\\n\" % e)"
  },
  "get_routing_sms_addresses": {
    "operationId": "get_routing_sms_addresses",
    "functionName": "get_routing_sms_addresses",
    "signature": "get_routing_sms_addresses(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "SmsAddressEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a list of Addresses for SMS\n    api_response = api_instance.get_routing_sms_addresses(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_sms_addresses: %s\\n\" % e)"
  },
  "get_routing_sms_availablephonenumbers": {
    "operationId": "get_routing_sms_availablephonenumbers",
    "functionName": "get_routing_sms_availablephonenumbers",
    "signature": "get_routing_sms_availablephonenumbers(country_code, phone_number_type, region, city, area_code, pattern, address_requirement)",
    "parameters": [
      {
        "name": "country_code",
        "type": "str",
        "required": "true"
      },
      {
        "name": "phone_number_type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "region",
        "type": "str",
        "required": "false"
      },
      {
        "name": "city",
        "type": "str",
        "required": "false"
      },
      {
        "name": "area_code",
        "type": "str",
        "required": "false"
      },
      {
        "name": "pattern",
        "type": "str",
        "required": "false"
      },
      {
        "name": "address_requirement",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SMSAvailablePhoneNumberEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ncountry_code = 'country_code_example' # str | The ISO 3166-1 alpha-2 country code of the county for which available phone numbers should be returned\nphone_number_type = 'phone_number_type_example' # str | Type of available phone numbers searched\nregion = 'region_example' # str | Region/province/state that can be used to restrict the numbers returned (optional)\ncity = 'city_example' # str | City that can be used to restrict the numbers returned (optional)\narea_code = 'area_code_example' # str | Area code that can be used to restrict the numbers returned (optional)\npattern = 'pattern_example' # str | A pattern to match phone numbers. Valid characters are '*' and [0-9a-zA-Z]. The '*' character will match any single digit. (optional)\naddress_requirement = 'address_requirement_example' # str | This indicates whether the phone number requires to have an Address registered. (optional)\n\ntry:\n    # Get a list of available phone numbers for SMS provisioning.\n    api_response = api_instance.get_routing_sms_availablephonenumbers(country_code, phone_number_type, region=region, city=city, area_code=area_code, pattern=pattern, address_requirement=address_requirement)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_sms_availablephonenumbers: %s\\n\" % e)"
  },
  "get_routing_sms_phonenumber": {
    "operationId": "get_routing_sms_phonenumber",
    "functionName": "get_routing_sms_phonenumber",
    "signature": "get_routing_sms_phonenumber(address_id, expand)",
    "parameters": [
      {
        "name": "address_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SmsPhoneNumber",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\naddress_id = 'address_id_example' # str | Address ID\nexpand = 'expand_example' # str | Expand response with additional information (optional)\n\ntry:\n    # Get a phone number provisioned for SMS.\n    api_response = api_instance.get_routing_sms_phonenumber(address_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_sms_phonenumber: %s\\n\" % e)"
  },
  "get_routing_sms_phonenumbers": {
    "operationId": "get_routing_sms_phonenumbers",
    "functionName": "get_routing_sms_phonenumbers",
    "signature": "get_routing_sms_phonenumbers(phone_number, phone_number_type, phone_number_status, country_code, page_size, page_number, sort_by, sort_order, language, integration_id)",
    "parameters": [
      {
        "name": "phone_number",
        "type": "str",
        "required": "false"
      },
      {
        "name": "phone_number_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "phone_number_status",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "country_code",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "language",
        "type": "str",
        "required": "false"
      },
      {
        "name": "integration_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SmsPhoneNumberEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nphone_number = 'phone_number_example' # str | Filter on phone number address. Allowable characters are the digits '0-9' and the wild card character '\\\\*'. If just digits are present, a contains search is done on the address pattern. For example, '317' could be matched anywhere in the address. An '\\\\*' will match multiple digits. For example, to match a specific area code within the US a pattern like '1317*' could be used. (optional)\nphone_number_type = ['phone_number_type_example'] # list[str] | Filter on phone number type (optional)\nphone_number_status = ['phone_number_status_example'] # list[str] | Filter on phone number status (optional)\ncountry_code = ['country_code_example'] # list[str] | Filter on country code (optional)\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = 'sort_by_example' # str | Optional field to sort results (optional)\nsort_order = 'sort_order_example' # str | Sort order (optional)\nlanguage = ''en-US'' # str | A language tag (which is sometimes referred to as a \\\"locale identifier\\\") to use to localize country field and sort operations (optional) (default to 'en-US')\nintegration_id = 'integration_id_example' # str | Filter on the Genesys Cloud integration id to which the phone number belongs to (optional)\n\ntry:\n    # Get a list of provisioned phone numbers.\n    api_response = api_instance.get_routing_sms_phonenumbers(phone_number=phone_number, phone_number_type=phone_number_type, phone_number_status=phone_number_status, country_code=country_code, page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order, language=language, integration_id=integration_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_sms_phonenumbers: %s\\n\" % e)"
  },
  "get_routing_user_utilization": {
    "operationId": "get_routing_user_utilization",
    "functionName": "get_routing_user_utilization",
    "signature": "get_routing_user_utilization(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AgentMaxUtilizationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Get the user's max utilization settings.  If not configured, the organization-wide default is returned.\n    api_response = api_instance.get_routing_user_utilization(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_routing_user_utilization: %s\\n\" % e)"
  },
  "get_routing_utilization": {
    "operationId": "get_routing_utilization",
    "functionName": "get_routing_utilization",
    "signature": "get_routing_utilization()",
    "return": "UtilizationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\n\ntry:\n    # Get the organization-wide max utilization settings.\n    api_response = api_instance.get_routing_utilization()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_utilization: %s\\n\" % e)"
  },
  "get_routing_utilization_label": {
    "operationId": "get_routing_utilization_label",
    "functionName": "get_routing_utilization_label",
    "signature": "get_routing_utilization_label(label_id)",
    "parameters": [
      {
        "name": "label_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UtilizationLabel",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nlabel_id = 'label_id_example' # str | Utilization Label ID\n\ntry:\n    # Get details about this utilization label\n    api_response = api_instance.get_routing_utilization_label(label_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_utilization_label: %s\\n\" % e)"
  },
  "get_routing_utilization_label_agents": {
    "operationId": "get_routing_utilization_label_agents",
    "functionName": "get_routing_utilization_label_agents",
    "signature": "get_routing_utilization_label_agents(label_id)",
    "parameters": [
      {
        "name": "label_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[object]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nlabel_id = 'label_id_example' # str | Utilization Label ID\n\ntry:\n    # Get list of agent ids associated with a utilization label\n    api_response = api_instance.get_routing_utilization_label_agents(label_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_utilization_label_agents: %s\\n\" % e)"
  },
  "get_routing_utilization_labels": {
    "operationId": "get_routing_utilization_labels",
    "functionName": "get_routing_utilization_labels",
    "signature": "get_routing_utilization_labels(page_size, page_number, sort_order, name)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UtilizationLabelEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''ascending'' # str | Sort order by name (optional) (default to 'ascending')\nname = 'name_example' # str | Utilization label's name (Wildcard is supported, e.g., 'label1*', '*label*' (optional)\n\ntry:\n    # Get list of utilization labels\n    api_response = api_instance.get_routing_utilization_labels(page_size=page_size, page_number=page_number, sort_order=sort_order, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_utilization_labels: %s\\n\" % e)"
  },
  "get_routing_utilization_tag": {
    "operationId": "get_routing_utilization_tag",
    "functionName": "get_routing_utilization_tag",
    "signature": "get_routing_utilization_tag(tag_id)",
    "parameters": [
      {
        "name": "tag_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UtilizationTag",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ntag_id = 'tag_id_example' # str | Utilization Tag ID\n\ntry:\n    # Get details about this utilization tag\n    api_response = api_instance.get_routing_utilization_tag(tag_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_utilization_tag: %s\\n\" % e)"
  },
  "get_routing_utilization_tag_agents": {
    "operationId": "get_routing_utilization_tag_agents",
    "functionName": "get_routing_utilization_tag_agents",
    "signature": "get_routing_utilization_tag_agents(tag_id)",
    "parameters": [
      {
        "name": "tag_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[object]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ntag_id = 'tag_id_example' # str | Utilization Tag ID\n\ntry:\n    # Get list of agent ids associated with a utilization tag\n    api_response = api_instance.get_routing_utilization_tag_agents(tag_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_utilization_tag_agents: %s\\n\" % e)"
  },
  "get_routing_utilization_tags": {
    "operationId": "get_routing_utilization_tags",
    "functionName": "get_routing_utilization_tags",
    "signature": "get_routing_utilization_tags(page_size, page_number, sort_order, name)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UtilizationTagEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''ascending'' # str | Sort order by name (optional) (default to 'ascending')\nname = 'name_example' # str | Utilization tag's name (Wildcard is supported, e.g., 'tag1*') (optional)\n\ntry:\n    # Get list of utilization tags\n    api_response = api_instance.get_routing_utilization_tags(page_size=page_size, page_number=page_number, sort_order=sort_order, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_utilization_tags: %s\\n\" % e)"
  },
  "get_routing_wrapupcode": {
    "operationId": "get_routing_wrapupcode",
    "functionName": "get_routing_wrapupcode",
    "signature": "get_routing_wrapupcode(code_id)",
    "parameters": [
      {
        "name": "code_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ncode_id = 'code_id_example' # str | Wrapup Code ID\n\ntry:\n    # Get details about this wrap-up code.\n    api_response = api_instance.get_routing_wrapupcode(code_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_wrapupcode: %s\\n\" % e)"
  },
  "get_routing_wrapupcodes": {
    "operationId": "get_routing_wrapupcodes",
    "functionName": "get_routing_wrapupcodes",
    "signature": "get_routing_wrapupcodes(page_size, page_number, sort_by, sort_order, name, id, division_id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "WrapupCodeEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nsort_order = ''ascending'' # str | Sort order (optional) (default to 'ascending')\nname = 'name_example' # str | Wrapup code's name ('Sort by' param is ignored unless this field is provided) (optional)\nid = ['id_example'] # list[str] | Filter by wrapup code ID(s) (optional)\ndivision_id = ['division_id_example'] # list[str] | Filter by division ID(s) (optional)\n\ntry:\n    # Get list of wrapup codes.\n    api_response = api_instance.get_routing_wrapupcodes(page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order, name=name, id=id, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_wrapupcodes: %s\\n\" % e)"
  },
  "get_routing_wrapupcodes_divisionview": {
    "operationId": "get_routing_wrapupcodes_divisionview",
    "functionName": "get_routing_wrapupcodes_divisionview",
    "signature": "get_routing_wrapupcodes_divisionview(code_id)",
    "parameters": [
      {
        "name": "code_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ncode_id = 'code_id_example' # str | Wrapup Code ID\n\ntry:\n    # Get a simplified wrap-up code.\n    api_response = api_instance.get_routing_wrapupcodes_divisionview(code_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_wrapupcodes_divisionview: %s\\n\" % e)"
  },
  "get_routing_wrapupcodes_divisionviews": {
    "operationId": "get_routing_wrapupcodes_divisionviews",
    "functionName": "get_routing_wrapupcodes_divisionviews",
    "signature": "get_routing_wrapupcodes_divisionviews(page_size, page_number, name, id, division_id, include_state)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "include_state",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WrapupCodeEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nname = 'name_example' # str | Name (trailing asterisks allowed) (optional)\nid = ['id_example'] # list[str] | Wrapup code ID(s) (optional)\ndivision_id = ['division_id_example'] # list[str] | Division ID(s) (optional)\ninclude_state = 'include_state_example' # str | Wrapup code state(s) to include (optional)\n\ntry:\n    # Get a paged listing of simplified wrapup code objects, filterable by name, wrapup code ID(s), or division ID(s).\n    api_response = api_instance.get_routing_wrapupcodes_divisionviews(page_size=page_size, page_number=page_number, name=name, id=id, division_id=division_id, include_state=include_state)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->get_routing_wrapupcodes_divisionviews: %s\\n\" % e)"
  },
  "get_user_queues": {
    "operationId": "get_user_queues",
    "functionName": "get_user_queues",
    "signature": "get_user_queues(user_id, page_size, page_number, joined, division_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "joined",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "UserQueueEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\njoined = True # bool | Is joined to the queue (optional) (default to True)\ndivision_id = ['division_id_example'] # list[str] | Division ID(s) (optional)\n\ntry:\n    # Get queues for user\n    api_response = api_instance.get_user_queues(user_id, page_size=page_size, page_number=page_number, joined=joined, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_queues: %s\\n\" % e)"
  },
  "get_user_routinglanguages": {
    "operationId": "get_user_routinglanguages",
    "functionName": "get_user_routinglanguages",
    "signature": "get_user_routinglanguages(user_id, page_size, page_number, sort_order)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UserLanguageEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''ASC'' # str | Ascending or descending sort order (optional) (default to 'ASC')\n\ntry:\n    # List routing language for user\n    api_response = api_instance.get_user_routinglanguages(user_id, page_size=page_size, page_number=page_number, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_routinglanguages: %s\\n\" % e)"
  },
  "get_user_routingskills": {
    "operationId": "get_user_routingskills",
    "functionName": "get_user_routingskills",
    "signature": "get_user_routingskills(user_id, page_size, page_number, sort_order)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UserSkillEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''ASC'' # str | Ascending or descending sort order (optional) (default to 'ASC')\n\ntry:\n    # List routing skills for user\n    api_response = api_instance.get_user_routingskills(user_id, page_size=page_size, page_number=page_number, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_routingskills: %s\\n\" % e)"
  },
  "get_user_skillgroups": {
    "operationId": "get_user_skillgroups",
    "functionName": "get_user_skillgroups",
    "signature": "get_user_skillgroups(user_id, page_size, after, before)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UserSkillGroupEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\npage_size = 25 # int | Page size (optional) (default to 25)\nafter = 'after_example' # str | The cursor that points to the next page (optional)\nbefore = 'before_example' # str | The cursor that points to the previous page (optional)\n\ntry:\n    # Get skill groups for a user\n    api_response = api_instance.get_user_skillgroups(user_id, page_size=page_size, after=after, before=before)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_skillgroups: %s\\n\" % e)"
  },
  "patch_routing_conversation": {
    "operationId": "patch_routing_conversation",
    "functionName": "patch_routing_conversation",
    "signature": "patch_routing_conversation(conversation_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoutingConversationAttributesRequest",
        "required": "true"
      }
    ],
    "return": "RoutingConversationAttributesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\nbody = PureCloudPlatformClientV2.RoutingConversationAttributesRequest() # RoutingConversationAttributesRequest | Conversation Attributes\n\ntry:\n    # Update attributes of an in-queue conversation\n    api_response = api_instance.patch_routing_conversation(conversation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->patch_routing_conversation: %s\\n\" % e)"
  },
  "patch_routing_email_domain": {
    "operationId": "patch_routing_email_domain",
    "functionName": "patch_routing_email_domain",
    "signature": "patch_routing_email_domain(domain_id, body)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "InboundDomainPatchRequest",
        "required": "true"
      }
    ],
    "return": "InboundDomain",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_id = 'domain_id_example' # str | domain ID\nbody = PureCloudPlatformClientV2.InboundDomainPatchRequest() # InboundDomainPatchRequest | Domain settings\n\ntry:\n    # Update domain settings\n    api_response = api_instance.patch_routing_email_domain(domain_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->patch_routing_email_domain: %s\\n\" % e)"
  },
  "patch_routing_email_domain_validate": {
    "operationId": "patch_routing_email_domain_validate",
    "functionName": "patch_routing_email_domain_validate",
    "signature": "patch_routing_email_domain_validate(domain_id, body)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "InboundDomainPatchRequest",
        "required": "true"
      }
    ],
    "return": "InboundDomain",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_id = 'domain_id_example' # str | domain ID\nbody = PureCloudPlatformClientV2.InboundDomainPatchRequest() # InboundDomainPatchRequest | Domain settings\n\ntry:\n    # Validate domain settings\n    api_response = api_instance.patch_routing_email_domain_validate(domain_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->patch_routing_email_domain_validate: %s\\n\" % e)"
  },
  "patch_routing_predictor": {
    "operationId": "patch_routing_predictor",
    "functionName": "patch_routing_predictor",
    "signature": "patch_routing_predictor(predictor_id, body)",
    "parameters": [
      {
        "name": "predictor_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchPredictorRequest",
        "required": "false"
      }
    ],
    "return": "Predictor",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\npredictor_id = 'predictor_id_example' # str | Predictor ID\nbody = PureCloudPlatformClientV2.PatchPredictorRequest() # PatchPredictorRequest |  (optional)\n\ntry:\n    # Update single predictor.\n    api_response = api_instance.patch_routing_predictor(predictor_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->patch_routing_predictor: %s\\n\" % e)"
  },
  "patch_routing_queue_member": {
    "operationId": "patch_routing_queue_member",
    "functionName": "patch_routing_queue_member",
    "signature": "patch_routing_queue_member(queue_id, member_id, body)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "member_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "QueueMember",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\nmember_id = 'member_id_example' # str | Member ID\nbody = PureCloudPlatformClientV2.QueueMember() # QueueMember | Queue Member\n\ntry:\n    # Update the ring number OR joined status for a queue member.\n    api_instance.patch_routing_queue_member(queue_id, member_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->patch_routing_queue_member: %s\\n\" % e)"
  },
  "patch_routing_queue_members": {
    "operationId": "patch_routing_queue_members",
    "functionName": "patch_routing_queue_members",
    "signature": "patch_routing_queue_members(queue_id, body)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[QueueMember]",
        "required": "true"
      }
    ],
    "return": "QueueMemberEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\nbody = [PureCloudPlatformClientV2.QueueMember()] # list[QueueMember] | Queue Members\n\ntry:\n    # Join or unjoin a set of users for a queue\n    api_response = api_instance.patch_routing_queue_members(queue_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->patch_routing_queue_members: %s\\n\" % e)"
  },
  "patch_routing_queue_user": {
    "operationId": "patch_routing_queue_user",
    "functionName": "patch_routing_queue_user",
    "signature": "patch_routing_queue_user(queue_id, member_id, body)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "member_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "QueueMember",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\nmember_id = 'member_id_example' # str | Member ID\nbody = PureCloudPlatformClientV2.QueueMember() # QueueMember | Queue Member\n\ntry:\n    # DEPRECATED: use PATCH /routing/queues/{queueId}/members/{memberId}.  Update the ring number OR joined status for a User in a Queue.\n    api_instance.patch_routing_queue_user(queue_id, member_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->patch_routing_queue_user: %s\\n\" % e)"
  },
  "patch_routing_queue_users": {
    "operationId": "patch_routing_queue_users",
    "functionName": "patch_routing_queue_users",
    "signature": "patch_routing_queue_users(queue_id, body)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[QueueMember]",
        "required": "true"
      }
    ],
    "return": "QueueMemberEntityListingV1",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\nbody = [PureCloudPlatformClientV2.QueueMember()] # list[QueueMember] | Queue Members\n\ntry:\n    # DEPRECATED: use PATCH /routing/queues/{queueId}/members.  Join or unjoin a set of users for a queue.\n    api_response = api_instance.patch_routing_queue_users(queue_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->patch_routing_queue_users: %s\\n\" % e)"
  },
  "patch_routing_settings_contactcenter": {
    "operationId": "patch_routing_settings_contactcenter",
    "functionName": "patch_routing_settings_contactcenter",
    "signature": "patch_routing_settings_contactcenter(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ContactCenterSettings",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.ContactCenterSettings() # ContactCenterSettings | Contact Center Settings\n\ntry:\n    # Update Contact Center Settings\n    api_instance.patch_routing_settings_contactcenter(body)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->patch_routing_settings_contactcenter: %s\\n\" % e)"
  },
  "patch_routing_settings_transcription": {
    "operationId": "patch_routing_settings_transcription",
    "functionName": "patch_routing_settings_transcription",
    "signature": "patch_routing_settings_transcription(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TranscriptionSettings",
        "required": "true"
      }
    ],
    "return": "TranscriptionSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.TranscriptionSettings() # TranscriptionSettings | Organization Settings\n\ntry:\n    # Patch Transcription Settings\n    api_response = api_instance.patch_routing_settings_transcription(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->patch_routing_settings_transcription: %s\\n\" % e)"
  },
  "patch_routing_skillgroup": {
    "operationId": "patch_routing_skillgroup",
    "functionName": "patch_routing_skillgroup",
    "signature": "patch_routing_skillgroup(skill_group_id, body)",
    "parameters": [
      {
        "name": "skill_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SkillGroup",
        "required": "true"
      }
    ],
    "return": "SkillGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nskill_group_id = 'skill_group_id_example' # str | Skill Group ID\nbody = PureCloudPlatformClientV2.SkillGroup() # SkillGroup | Update skill groups\n\ntry:\n    # Update skill group definition\n    api_response = api_instance.patch_routing_skillgroup(skill_group_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->patch_routing_skillgroup: %s\\n\" % e)"
  },
  "patch_user_queue": {
    "operationId": "patch_user_queue",
    "functionName": "patch_user_queue",
    "signature": "patch_user_queue(queue_id, user_id, body)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserQueue",
        "required": "true"
      }
    ],
    "return": "UserQueue",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nqueue_id = 'queue_id_example' # str | Queue ID\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.UserQueue() # UserQueue | Queue Member\n\ntry:\n    # Join or unjoin a queue for a user\n    api_response = api_instance.patch_user_queue(queue_id, user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->patch_user_queue: %s\\n\" % e)"
  },
  "patch_user_queues": {
    "operationId": "patch_user_queues",
    "functionName": "patch_user_queues",
    "signature": "patch_user_queues(user_id, body, division_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[UserQueue]",
        "required": "true"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "UserQueueEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = [PureCloudPlatformClientV2.UserQueue()] # list[UserQueue] | User Queues\ndivision_id = ['division_id_example'] # list[str] | Division ID(s) (optional)\n\ntry:\n    # Join or unjoin a set of queues for a user\n    api_response = api_instance.patch_user_queues(user_id, body, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->patch_user_queues: %s\\n\" % e)"
  },
  "patch_user_routinglanguage": {
    "operationId": "patch_user_routinglanguage",
    "functionName": "patch_user_routinglanguage",
    "signature": "patch_user_routinglanguage(user_id, language_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "language_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserRoutingLanguage",
        "required": "true"
      }
    ],
    "return": "UserRoutingLanguage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nlanguage_id = 'language_id_example' # str | languageId\nbody = PureCloudPlatformClientV2.UserRoutingLanguage() # UserRoutingLanguage | Language\n\ntry:\n    # Update routing language proficiency or state.\n    api_response = api_instance.patch_user_routinglanguage(user_id, language_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->patch_user_routinglanguage: %s\\n\" % e)"
  },
  "patch_user_routinglanguages_bulk": {
    "operationId": "patch_user_routinglanguages_bulk",
    "functionName": "patch_user_routinglanguages_bulk",
    "signature": "patch_user_routinglanguages_bulk(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[UserRoutingLanguagePost]",
        "required": "true"
      }
    ],
    "return": "UserLanguageEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = [PureCloudPlatformClientV2.UserRoutingLanguagePost()] # list[UserRoutingLanguagePost] | Language\n\ntry:\n    # Add bulk routing language to user. Max limit 50 languages\n    api_response = api_instance.patch_user_routinglanguages_bulk(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->patch_user_routinglanguages_bulk: %s\\n\" % e)"
  },
  "patch_user_routingskills_bulk": {
    "operationId": "patch_user_routingskills_bulk",
    "functionName": "patch_user_routingskills_bulk",
    "signature": "patch_user_routingskills_bulk(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[UserRoutingSkillPost]",
        "required": "true"
      }
    ],
    "return": "UserSkillEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = [PureCloudPlatformClientV2.UserRoutingSkillPost()] # list[UserRoutingSkillPost] | Skill\n\ntry:\n    # Bulk add routing skills to user\n    api_response = api_instance.patch_user_routingskills_bulk(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->patch_user_routingskills_bulk: %s\\n\" % e)"
  },
  "post_routing_assessments": {
    "operationId": "post_routing_assessments",
    "functionName": "post_routing_assessments",
    "signature": "post_routing_assessments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateBenefitAssessmentRequest",
        "required": "false"
      }
    ],
    "return": "BenefitAssessment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.CreateBenefitAssessmentRequest() # CreateBenefitAssessmentRequest |  (optional)\n\ntry:\n    # Create a benefit assessment.\n    api_response = api_instance.post_routing_assessments(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_assessments: %s\\n\" % e)"
  },
  "post_routing_assessments_jobs": {
    "operationId": "post_routing_assessments_jobs",
    "functionName": "post_routing_assessments_jobs",
    "signature": "post_routing_assessments_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateBenefitAssessmentJobRequest",
        "required": "false"
      }
    ],
    "return": "BenefitAssessmentJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.CreateBenefitAssessmentJobRequest() # CreateBenefitAssessmentJobRequest |  (optional)\n\ntry:\n    # Create a benefit assessment job.\n    api_response = api_instance.post_routing_assessments_jobs(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_assessments_jobs: %s\\n\" % e)"
  },
  "post_routing_email_domain_routes": {
    "operationId": "post_routing_email_domain_routes",
    "functionName": "post_routing_email_domain_routes",
    "signature": "post_routing_email_domain_routes(domain_name, body)",
    "parameters": [
      {
        "name": "domain_name",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "InboundRoute",
        "required": "true"
      }
    ],
    "return": "InboundRoute",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_name = 'domain_name_example' # str | email domain\nbody = PureCloudPlatformClientV2.InboundRoute() # InboundRoute | Route\n\ntry:\n    # Create a route\n    api_response = api_instance.post_routing_email_domain_routes(domain_name, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_email_domain_routes: %s\\n\" % e)"
  },
  "post_routing_email_domain_testconnection": {
    "operationId": "post_routing_email_domain_testconnection",
    "functionName": "post_routing_email_domain_testconnection",
    "signature": "post_routing_email_domain_testconnection(domain_id, body)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TestMessage",
        "required": "false"
      }
    ],
    "return": "TestMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_id = 'domain_id_example' # str | domain ID\nbody = PureCloudPlatformClientV2.TestMessage() # TestMessage | TestMessage (optional)\n\ntry:\n    # Tests the custom SMTP server integration connection set on this domain\n    api_response = api_instance.post_routing_email_domain_testconnection(domain_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_email_domain_testconnection: %s\\n\" % e)"
  },
  "post_routing_email_domains": {
    "operationId": "post_routing_email_domains",
    "functionName": "post_routing_email_domains",
    "signature": "post_routing_email_domains(body)",
    "parameters": [
      {
        "name": "body",
        "type": "InboundDomain",
        "required": "true"
      }
    ],
    "return": "InboundDomain",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.InboundDomain() # InboundDomain | Domain\n\ntry:\n    # Create a domain\n    api_response = api_instance.post_routing_email_domains(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_email_domains: %s\\n\" % e)"
  },
  "post_routing_email_outbound_domains": {
    "operationId": "post_routing_email_outbound_domains",
    "functionName": "post_routing_email_outbound_domains",
    "signature": "post_routing_email_outbound_domains(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OutboundDomain",
        "required": "true"
      }
    ],
    "return": "EmailOutboundDomainResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.OutboundDomain() # OutboundDomain | Domain\n\ntry:\n    # Create a domain\n    api_response = api_instance.post_routing_email_outbound_domains(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_email_outbound_domains: %s\\n\" % e)"
  },
  "post_routing_email_outbound_domains_simulated": {
    "operationId": "post_routing_email_outbound_domains_simulated",
    "functionName": "post_routing_email_outbound_domains_simulated",
    "signature": "post_routing_email_outbound_domains_simulated(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OutboundDomain",
        "required": "true"
      }
    ],
    "return": "EmailOutboundDomainResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.OutboundDomain() # OutboundDomain | Domain\n\ntry:\n    # Create a simulated domain\n    api_response = api_instance.post_routing_email_outbound_domains_simulated(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_email_outbound_domains_simulated: %s\\n\" % e)"
  },
  "post_routing_languages": {
    "operationId": "post_routing_languages",
    "functionName": "post_routing_languages",
    "signature": "post_routing_languages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Language",
        "required": "true"
      }
    ],
    "return": "Language",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.Language() # Language | Language\n\ntry:\n    # Create Language\n    api_response = api_instance.post_routing_languages(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_languages: %s\\n\" % e)"
  },
  "post_routing_predictors": {
    "operationId": "post_routing_predictors",
    "functionName": "post_routing_predictors",
    "signature": "post_routing_predictors(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreatePredictorRequest",
        "required": "false"
      }
    ],
    "return": "Predictor",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.CreatePredictorRequest() # CreatePredictorRequest |  (optional)\n\ntry:\n    # Create a predictor.\n    api_response = api_instance.post_routing_predictors(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_predictors: %s\\n\" % e)"
  },
  "post_routing_queue_members": {
    "operationId": "post_routing_queue_members",
    "functionName": "post_routing_queue_members",
    "signature": "post_routing_queue_members(queue_id, body, delete)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[WritableEntity]",
        "required": "true"
      },
      {
        "name": "delete",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\nbody = [PureCloudPlatformClientV2.WritableEntity()] # list[WritableEntity] | Queue Members\ndelete = False # bool | True to delete queue members (optional) (default to False)\n\ntry:\n    # Bulk add or delete up to 100 queue members\n    api_instance.post_routing_queue_members(queue_id, body, delete=delete)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_queue_members: %s\\n\" % e)"
  },
  "post_routing_queue_users": {
    "operationId": "post_routing_queue_users",
    "functionName": "post_routing_queue_users",
    "signature": "post_routing_queue_users(queue_id, body, delete)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[WritableEntity]",
        "required": "true"
      },
      {
        "name": "delete",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\nbody = [PureCloudPlatformClientV2.WritableEntity()] # list[WritableEntity] | Queue Members\ndelete = False # bool | True to delete queue members (optional) (default to False)\n\ntry:\n    # DEPRECATED: use POST /routing/queues/{queueId}/members.  Bulk add or delete up to 100 queue members.\n    api_instance.post_routing_queue_users(queue_id, body, delete=delete)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_queue_users: %s\\n\" % e)"
  },
  "post_routing_queue_wrapupcodes": {
    "operationId": "post_routing_queue_wrapupcodes",
    "functionName": "post_routing_queue_wrapupcodes",
    "signature": "post_routing_queue_wrapupcodes(queue_id, body)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[WrapUpCodeReference]",
        "required": "true"
      }
    ],
    "return": "list[WrapupCode]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\nbody = [PureCloudPlatformClientV2.WrapUpCodeReference()] # list[WrapUpCodeReference] | List of wrapup codes\n\ntry:\n    # Add up to 100 wrap-up codes to a queue\n    api_response = api_instance.post_routing_queue_wrapupcodes(queue_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_queue_wrapupcodes: %s\\n\" % e)"
  },
  "post_routing_queues": {
    "operationId": "post_routing_queues",
    "functionName": "post_routing_queues",
    "signature": "post_routing_queues(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateQueueRequest",
        "required": "true"
      }
    ],
    "return": "Queue",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.CreateQueueRequest() # CreateQueueRequest | Queue\n\ntry:\n    # Create a queue\n    api_response = api_instance.post_routing_queues(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_queues: %s\\n\" % e)"
  },
  "post_routing_skillgroup_members_divisions": {
    "operationId": "post_routing_skillgroup_members_divisions",
    "functionName": "post_routing_skillgroup_members_divisions",
    "signature": "post_routing_skillgroup_members_divisions(skill_group_id, body)",
    "parameters": [
      {
        "name": "skill_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SkillGroupMemberDivisions",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nskill_group_id = 'skill_group_id_example' # str | Skill Group ID\nbody = PureCloudPlatformClientV2.SkillGroupMemberDivisions() # SkillGroupMemberDivisions |  (optional)\n\ntry:\n    # Add or remove member divisions for this skill group.\n    api_instance.post_routing_skillgroup_members_divisions(skill_group_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_skillgroup_members_divisions: %s\\n\" % e)"
  },
  "post_routing_skillgroups": {
    "operationId": "post_routing_skillgroups",
    "functionName": "post_routing_skillgroups",
    "signature": "post_routing_skillgroups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SkillGroupWithMemberDivisions",
        "required": "true"
      }
    ],
    "return": "SkillGroupWithMemberDivisions",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.SkillGroupWithMemberDivisions() # SkillGroupWithMemberDivisions | Create skill group\n\ntry:\n    # Create a skill group\n    api_response = api_instance.post_routing_skillgroups(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_skillgroups: %s\\n\" % e)"
  },
  "post_routing_skills": {
    "operationId": "post_routing_skills",
    "functionName": "post_routing_skills",
    "signature": "post_routing_skills(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RoutingSkill",
        "required": "true"
      }
    ],
    "return": "RoutingSkill",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.RoutingSkill() # RoutingSkill | Skill\n\ntry:\n    # Create Skill\n    api_response = api_instance.post_routing_skills(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_skills: %s\\n\" % e)"
  },
  "post_routing_sms_addresses": {
    "operationId": "post_routing_sms_addresses",
    "functionName": "post_routing_sms_addresses",
    "signature": "post_routing_sms_addresses(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SmsAddressProvision",
        "required": "true"
      }
    ],
    "return": "SmsAddress",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.SmsAddressProvision() # SmsAddressProvision | SmsAddress\n\ntry:\n    # Provision an Address for SMS\n    api_response = api_instance.post_routing_sms_addresses(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_sms_addresses: %s\\n\" % e)"
  },
  "post_routing_sms_phonenumbers": {
    "operationId": "post_routing_sms_phonenumbers",
    "functionName": "post_routing_sms_phonenumbers",
    "signature": "post_routing_sms_phonenumbers(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SmsPhoneNumberProvision",
        "required": "true"
      }
    ],
    "return": "SmsPhoneNumber",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.SmsPhoneNumberProvision() # SmsPhoneNumberProvision | SmsPhoneNumber\n\ntry:\n    # Provision a phone number for SMS\n    api_response = api_instance.post_routing_sms_phonenumbers(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_sms_phonenumbers: %s\\n\" % e)"
  },
  "post_routing_sms_phonenumbers_alphanumeric": {
    "operationId": "post_routing_sms_phonenumbers_alphanumeric",
    "functionName": "post_routing_sms_phonenumbers_alphanumeric",
    "signature": "post_routing_sms_phonenumbers_alphanumeric(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SmsAlphanumericProvision",
        "required": "true"
      }
    ],
    "return": "SmsPhoneNumber",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.SmsAlphanumericProvision() # SmsAlphanumericProvision | SmsPhoneNumber\n\ntry:\n    # Provision an alphanumeric number for SMS\n    api_response = api_instance.post_routing_sms_phonenumbers_alphanumeric(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_sms_phonenumbers_alphanumeric: %s\\n\" % e)"
  },
  "post_routing_sms_phonenumbers_import": {
    "operationId": "post_routing_sms_phonenumbers_import",
    "functionName": "post_routing_sms_phonenumbers_import",
    "signature": "post_routing_sms_phonenumbers_import(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SmsPhoneNumberImport",
        "required": "true"
      }
    ],
    "return": "SmsPhoneNumber",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.SmsPhoneNumberImport() # SmsPhoneNumberImport | SmsPhoneNumber\n\ntry:\n    # Imports a phone number for SMS\n    api_response = api_instance.post_routing_sms_phonenumbers_import(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_sms_phonenumbers_import: %s\\n\" % e)"
  },
  "post_routing_utilization_labels": {
    "operationId": "post_routing_utilization_labels",
    "functionName": "post_routing_utilization_labels",
    "signature": "post_routing_utilization_labels(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateUtilizationLabelRequest",
        "required": "true"
      }
    ],
    "return": "UtilizationLabel",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.CreateUtilizationLabelRequest() # CreateUtilizationLabelRequest | UtilizationLabel\n\ntry:\n    # Create a utilization label\n    api_response = api_instance.post_routing_utilization_labels(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_utilization_labels: %s\\n\" % e)"
  },
  "post_routing_utilization_tags": {
    "operationId": "post_routing_utilization_tags",
    "functionName": "post_routing_utilization_tags",
    "signature": "post_routing_utilization_tags(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateUtilizationTagRequest",
        "required": "true"
      }
    ],
    "return": "UtilizationTag",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.CreateUtilizationTagRequest() # CreateUtilizationTagRequest | UtilizationTag\n\ntry:\n    # Create an utilization tag\n    api_response = api_instance.post_routing_utilization_tags(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_utilization_tags: %s\\n\" % e)"
  },
  "post_routing_wrapupcodes": {
    "operationId": "post_routing_wrapupcodes",
    "functionName": "post_routing_wrapupcodes",
    "signature": "post_routing_wrapupcodes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WrapupCodeRequest",
        "required": "true"
      }
    ],
    "return": "WrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.WrapupCodeRequest() # WrapupCodeRequest | WrapupCode\n\ntry:\n    # Create a wrap-up code\n    api_response = api_instance.post_routing_wrapupcodes(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->post_routing_wrapupcodes: %s\\n\" % e)"
  },
  "post_user_routinglanguages": {
    "operationId": "post_user_routinglanguages",
    "functionName": "post_user_routinglanguages",
    "signature": "post_user_routinglanguages(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserRoutingLanguagePost",
        "required": "true"
      }
    ],
    "return": "UserRoutingLanguage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.UserRoutingLanguagePost() # UserRoutingLanguagePost | Language\n\ntry:\n    # Add routing language to user\n    api_response = api_instance.post_user_routinglanguages(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_user_routinglanguages: %s\\n\" % e)"
  },
  "post_user_routingskills": {
    "operationId": "post_user_routingskills",
    "functionName": "post_user_routingskills",
    "signature": "post_user_routingskills(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserRoutingSkillPost",
        "required": "true"
      }
    ],
    "return": "UserRoutingSkill",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.UserRoutingSkillPost() # UserRoutingSkillPost | Skill\n\ntry:\n    # Add routing skill to user\n    api_response = api_instance.post_user_routingskills(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_user_routingskills: %s\\n\" % e)"
  },
  "put_routing_email_domain_route": {
    "operationId": "put_routing_email_domain_route",
    "functionName": "put_routing_email_domain_route",
    "signature": "put_routing_email_domain_route(domain_name, route_id, body)",
    "parameters": [
      {
        "name": "domain_name",
        "type": "str",
        "required": "true"
      },
      {
        "name": "route_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "InboundRoute",
        "required": "true"
      }
    ],
    "return": "InboundRoute",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_name = 'domain_name_example' # str | email domain\nroute_id = 'route_id_example' # str | route ID\nbody = PureCloudPlatformClientV2.InboundRoute() # InboundRoute | Route\n\ntry:\n    # Update a route\n    api_response = api_instance.put_routing_email_domain_route(domain_name, route_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->put_routing_email_domain_route: %s\\n\" % e)"
  },
  "put_routing_email_outbound_domain_activation": {
    "operationId": "put_routing_email_outbound_domain_activation",
    "functionName": "put_routing_email_outbound_domain_activation",
    "signature": "put_routing_email_outbound_domain_activation(domain_id)",
    "parameters": [
      {
        "name": "domain_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EmailOutboundDomainResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ndomain_id = 'domain_id_example' # str | domain ID\n\ntry:\n    # Request an activation status (cname + dkim) update of an outbound domain\n    api_response = api_instance.put_routing_email_outbound_domain_activation(domain_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->put_routing_email_outbound_domain_activation: %s\\n\" % e)"
  },
  "put_routing_message_recipient": {
    "operationId": "put_routing_message_recipient",
    "functionName": "put_routing_message_recipient",
    "signature": "put_routing_message_recipient(recipient_id, body)",
    "parameters": [
      {
        "name": "recipient_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RecipientRequest",
        "required": "true"
      }
    ],
    "return": "Recipient",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nrecipient_id = 'recipient_id_example' # str | Recipient ID\nbody = PureCloudPlatformClientV2.RecipientRequest() # RecipientRequest | Recipient\n\ntry:\n    # Update a recipient\n    api_response = api_instance.put_routing_message_recipient(recipient_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->put_routing_message_recipient: %s\\n\" % e)"
  },
  "put_routing_queue": {
    "operationId": "put_routing_queue",
    "functionName": "put_routing_queue",
    "signature": "put_routing_queue(queue_id, body)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "QueueRequest",
        "required": "true"
      }
    ],
    "return": "Queue",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nqueue_id = 'queue_id_example' # str | Queue ID\nbody = PureCloudPlatformClientV2.QueueRequest() # QueueRequest | Queue\n\ntry:\n    # Update a queue\n    api_response = api_instance.put_routing_queue(queue_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->put_routing_queue: %s\\n\" % e)"
  },
  "put_routing_settings": {
    "operationId": "put_routing_settings",
    "functionName": "put_routing_settings",
    "signature": "put_routing_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RoutingSettings",
        "required": "true"
      }
    ],
    "return": "RoutingSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.RoutingSettings() # RoutingSettings | Organization Settings\n\ntry:\n    # Update an organization's routing settings\n    api_response = api_instance.put_routing_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->put_routing_settings: %s\\n\" % e)"
  },
  "put_routing_settings_transcription": {
    "operationId": "put_routing_settings_transcription",
    "functionName": "put_routing_settings_transcription",
    "signature": "put_routing_settings_transcription(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TranscriptionSettings",
        "required": "true"
      }
    ],
    "return": "TranscriptionSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.TranscriptionSettings() # TranscriptionSettings | Organization Settings\n\ntry:\n    # Update Transcription Settings\n    api_response = api_instance.put_routing_settings_transcription(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->put_routing_settings_transcription: %s\\n\" % e)"
  },
  "put_routing_sms_phonenumber": {
    "operationId": "put_routing_sms_phonenumber",
    "functionName": "put_routing_sms_phonenumber",
    "signature": "put_routing_sms_phonenumber(address_id, body)",
    "parameters": [
      {
        "name": "address_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SmsPhoneNumber",
        "required": "true"
      }
    ],
    "return": "SmsPhoneNumber",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\naddress_id = 'address_id_example' # str | Address ID\nbody = PureCloudPlatformClientV2.SmsPhoneNumber() # SmsPhoneNumber | SmsPhoneNumber\n\ntry:\n    # Update a phone number provisioned for SMS.\n    api_response = api_instance.put_routing_sms_phonenumber(address_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->put_routing_sms_phonenumber: %s\\n\" % e)"
  },
  "put_routing_user_utilization": {
    "operationId": "put_routing_user_utilization",
    "functionName": "put_routing_user_utilization",
    "signature": "put_routing_user_utilization(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UtilizationRequest",
        "required": "true"
      }
    ],
    "return": "AgentMaxUtilizationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.UtilizationRequest() # UtilizationRequest | utilization\n\ntry:\n    # Update the user's max utilization settings.  Include only those media types requiring custom configuration.\n    api_response = api_instance.put_routing_user_utilization(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->put_routing_user_utilization: %s\\n\" % e)"
  },
  "put_routing_utilization": {
    "operationId": "put_routing_utilization",
    "functionName": "put_routing_utilization",
    "signature": "put_routing_utilization(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UtilizationRequest",
        "required": "true"
      }
    ],
    "return": "UtilizationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nbody = PureCloudPlatformClientV2.UtilizationRequest() # UtilizationRequest | utilization\n\ntry:\n    # Update the organization-wide max utilization settings.  Include only those media types requiring custom configuration.\n    api_response = api_instance.put_routing_utilization(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->put_routing_utilization: %s\\n\" % e)"
  },
  "put_routing_utilization_label": {
    "operationId": "put_routing_utilization_label",
    "functionName": "put_routing_utilization_label",
    "signature": "put_routing_utilization_label(label_id, body)",
    "parameters": [
      {
        "name": "label_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateUtilizationLabelRequest",
        "required": "true"
      }
    ],
    "return": "UtilizationLabel",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\nlabel_id = 'label_id_example' # str | Utilization Label ID\nbody = PureCloudPlatformClientV2.UpdateUtilizationLabelRequest() # UpdateUtilizationLabelRequest | UtilizationLabel\n\ntry:\n    # Update a utilization label\n    api_response = api_instance.put_routing_utilization_label(label_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->put_routing_utilization_label: %s\\n\" % e)"
  },
  "put_routing_wrapupcode": {
    "operationId": "put_routing_wrapupcode",
    "functionName": "put_routing_wrapupcode",
    "signature": "put_routing_wrapupcode(code_id, body)",
    "parameters": [
      {
        "name": "code_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WrapupCodeRequest",
        "required": "true"
      }
    ],
    "return": "WrapupCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.RoutingApi();\ncode_id = 'code_id_example' # str | Wrapup Code ID\nbody = PureCloudPlatformClientV2.WrapupCodeRequest() # WrapupCodeRequest | WrapupCode\n\ntry:\n    # Update wrap-up code\n    api_response = api_instance.put_routing_wrapupcode(code_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling RoutingApi->put_routing_wrapupcode: %s\\n\" % e)"
  },
  "put_user_routingskill": {
    "operationId": "put_user_routingskill",
    "functionName": "put_user_routingskill",
    "signature": "put_user_routingskill(user_id, skill_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "skill_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserRoutingSkill",
        "required": "true"
      }
    ],
    "return": "UserRoutingSkill",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nskill_id = 'skill_id_example' # str | skillId\nbody = PureCloudPlatformClientV2.UserRoutingSkill() # UserRoutingSkill | Skill\n\ntry:\n    # Update routing skill proficiency or state.\n    api_response = api_instance.put_user_routingskill(user_id, skill_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->put_user_routingskill: %s\\n\" % e)"
  },
  "put_user_routingskills_bulk": {
    "operationId": "put_user_routingskills_bulk",
    "functionName": "put_user_routingskills_bulk",
    "signature": "put_user_routingskills_bulk(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[UserRoutingSkillPost]",
        "required": "true"
      }
    ],
    "return": "UserSkillEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = [PureCloudPlatformClientV2.UserRoutingSkillPost()] # list[UserRoutingSkillPost] | Skill\n\ntry:\n    # Replace all routing skills assigned to a user\n    api_response = api_instance.put_user_routingskills_bulk(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->put_user_routingskills_bulk: %s\\n\" % e)"
  },
  "delete_scim_user": {
    "operationId": "delete_scim_user",
    "functionName": "delete_scim_user",
    "signature": "delete_scim_user(user_id, if_match)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "if_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nuser_id = 'user_id_example' # str | The ID of a user. Returned with GET /api/v2/scim/users.\nif_match = 'if_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional)\n\ntry:\n    # Delete a user\n    api_response = api_instance.delete_scim_user(user_id, if_match=if_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->delete_scim_user: %s\\n\" % e)"
  },
  "delete_scim_v2_user": {
    "operationId": "delete_scim_v2_user",
    "functionName": "delete_scim_v2_user",
    "signature": "delete_scim_v2_user(user_id, if_match)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "if_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nuser_id = 'user_id_example' # str | The ID of a user. Returned with GET /api/v2/scim/v2/users.\nif_match = 'if_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional)\n\ntry:\n    # Delete a user\n    api_response = api_instance.delete_scim_v2_user(user_id, if_match=if_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->delete_scim_v2_user: %s\\n\" % e)"
  },
  "get_scim_group": {
    "operationId": "get_scim_group",
    "functionName": "get_scim_group",
    "signature": "get_scim_group(group_id, attributes, excluded_attributes, if_none_match)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "excluded_attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "if_none_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2Group",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\ngroup_id = 'group_id_example' # str | The ID of a group. Returned with GET /api/v2/scim/groups.\nattributes = ['attributes_example'] # list[str] | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nexcluded_attributes = ['excluded_attributes_example'] # list[str] | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nif_none_match = 'if_none_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified. (optional)\n\ntry:\n    # Get a group\n    api_response = api_instance.get_scim_group(group_id, attributes=attributes, excluded_attributes=excluded_attributes, if_none_match=if_none_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_group: %s\\n\" % e)"
  },
  "get_scim_groups": {
    "operationId": "get_scim_groups",
    "functionName": "get_scim_groups",
    "signature": "get_scim_groups(start_index, count, attributes, excluded_attributes, filter)",
    "parameters": [
      {
        "name": "start_index",
        "type": "int",
        "required": "false"
      },
      {
        "name": "count",
        "type": "int",
        "required": "false"
      },
      {
        "name": "attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "excluded_attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "filter",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimGroupListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nstart_index = 1 # int | The 1-based index of the first query result. (optional) (default to 1)\ncount = 25 # int | The requested number of items per page. A value of 0 returns \\\"totalResults\\\". A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the \\\"excludedAttributes\\\" or \\\"attributes\\\" query parameters to exclude or only include secondary lookup values such as \\\"externalId\\\",  \\\"roles\\\", \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages\\\", or \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills\\\". (optional) (default to 25)\nattributes = ['attributes_example'] # list[str] | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nexcluded_attributes = ['excluded_attributes_example'] # list[str] | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nfilter = 'displayName eq groupName' # str | Filters results. If nothing is specified, returns all groups. Examples of valid values: \\\"id eq 5f4bc742-a019-4e38-8e2a-d39d5bc0b0f3\\\", \\\"displayname eq Sales\\\". (optional)\n\ntry:\n    # Get a list of groups\n    api_response = api_instance.get_scim_groups(start_index=start_index, count=count, attributes=attributes, excluded_attributes=excluded_attributes, filter=filter)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_groups: %s\\n\" % e)"
  },
  "get_scim_resourcetype": {
    "operationId": "get_scim_resourcetype",
    "functionName": "get_scim_resourcetype",
    "signature": "get_scim_resourcetype(resource_type)",
    "parameters": [
      {
        "name": "resource_type",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ScimConfigResourceType",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nresource_type = 'resource_type_example' # str | The type of resource. Returned with GET /api/v2/scim/resourcetypes.\n\ntry:\n    # Get a resource type\n    api_response = api_instance.get_scim_resourcetype(resource_type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_resourcetype: %s\\n\" % e)"
  },
  "get_scim_resourcetypes": {
    "operationId": "get_scim_resourcetypes",
    "functionName": "get_scim_resourcetypes",
    "signature": "get_scim_resourcetypes()",
    "return": "ScimConfigResourceTypesListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\n\ntry:\n    # Get a list of resource types\n    api_response = api_instance.get_scim_resourcetypes()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_resourcetypes: %s\\n\" % e)"
  },
  "get_scim_schema": {
    "operationId": "get_scim_schema",
    "functionName": "get_scim_schema",
    "signature": "get_scim_schema(schema_id)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ScimV2SchemaDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nschema_id = 'schema_id_example' # str | The ID of a schema. Returned with GET /api/v2/scim/schemas.\n\ntry:\n    # Get a SCIM schema\n    api_response = api_instance.get_scim_schema(schema_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_schema: %s\\n\" % e)"
  },
  "get_scim_schemas": {
    "operationId": "get_scim_schemas",
    "functionName": "get_scim_schemas",
    "signature": "get_scim_schemas(filter)",
    "parameters": [
      {
        "name": "filter",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2SchemaListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nfilter = 'displayName eq groupName' # str | Filtered results are invalid and return 403 Unauthorized. (optional)\n\ntry:\n    # Get a list of SCIM schemas\n    api_response = api_instance.get_scim_schemas(filter=filter)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_schemas: %s\\n\" % e)"
  },
  "get_scim_serviceproviderconfig": {
    "operationId": "get_scim_serviceproviderconfig",
    "functionName": "get_scim_serviceproviderconfig",
    "signature": "get_scim_serviceproviderconfig(if_none_match)",
    "parameters": [
      {
        "name": "if_none_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimServiceProviderConfig",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nif_none_match = 'if_none_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/serviceproviderconfig. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.  (optional)\n\ntry:\n    # Get a service provider's configuration\n    api_response = api_instance.get_scim_serviceproviderconfig(if_none_match=if_none_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_serviceproviderconfig: %s\\n\" % e)"
  },
  "get_scim_user": {
    "operationId": "get_scim_user",
    "functionName": "get_scim_user",
    "signature": "get_scim_user(user_id, attributes, excluded_attributes, if_none_match)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "excluded_attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "if_none_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2User",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nuser_id = 'user_id_example' # str | The ID of a user. Returned with GET /api/v2/scim/users.\nattributes = ['attributes_example'] # list[str] | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nexcluded_attributes = ['excluded_attributes_example'] # list[str] | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nif_none_match = 'if_none_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified. (optional)\n\ntry:\n    # Get a user\n    api_response = api_instance.get_scim_user(user_id, attributes=attributes, excluded_attributes=excluded_attributes, if_none_match=if_none_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_user: %s\\n\" % e)"
  },
  "get_scim_users": {
    "operationId": "get_scim_users",
    "functionName": "get_scim_users",
    "signature": "get_scim_users(start_index, count, attributes, excluded_attributes, filter)",
    "parameters": [
      {
        "name": "start_index",
        "type": "int",
        "required": "false"
      },
      {
        "name": "count",
        "type": "int",
        "required": "false"
      },
      {
        "name": "attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "excluded_attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "filter",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimUserListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nstart_index = 1 # int | The 1-based index of the first query result. (optional) (default to 1)\ncount = 25 # int | The requested number of items per page. A value of 0 returns \\\"totalResults\\\". A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the \\\"excludedAttributes\\\" or \\\"attributes\\\" query parameters to exclude or only include secondary lookup values such as \\\"externalId\\\",  \\\"roles\\\", \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages\\\", or \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills\\\". (optional) (default to 25)\nattributes = ['attributes_example'] # list[str] | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nexcluded_attributes = ['excluded_attributes_example'] # list[str] | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nfilter = 'filter_example' # str | Filters results. If nothing is specified, returns all active users. Examples of valid values: \\\"id eq 857449b0-d9e7-4cd0-acbf-a6adfb9ef1e9\\\", \\\"userName eq search@sample.org\\\", \\\"manager eq 16e10e2f-1136-43fe-bb84-eac073168a49\\\", \\\"email eq search@sample.org\\\", \\\"division eq divisionName\\\", \\\"externalId eq 167844\\\", \\\"active eq false\\\", \\\"employeeNumber eq 9876543210\\\". (optional)\n\ntry:\n    # Get a list of users\n    api_response = api_instance.get_scim_users(start_index=start_index, count=count, attributes=attributes, excluded_attributes=excluded_attributes, filter=filter)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_users: %s\\n\" % e)"
  },
  "get_scim_v2_group": {
    "operationId": "get_scim_v2_group",
    "functionName": "get_scim_v2_group",
    "signature": "get_scim_v2_group(group_id, attributes, excluded_attributes, if_none_match)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "excluded_attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "if_none_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2Group",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\ngroup_id = 'group_id_example' # str | The ID of a group. Returned with GET /api/v2/scim/v2/groups.\nattributes = ['attributes_example'] # list[str] | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nexcluded_attributes = ['excluded_attributes_example'] # list[str] | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nif_none_match = 'if_none_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified. (optional)\n\ntry:\n    # Get a group\n    api_response = api_instance.get_scim_v2_group(group_id, attributes=attributes, excluded_attributes=excluded_attributes, if_none_match=if_none_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_v2_group: %s\\n\" % e)"
  },
  "get_scim_v2_groups": {
    "operationId": "get_scim_v2_groups",
    "functionName": "get_scim_v2_groups",
    "signature": "get_scim_v2_groups(filter, start_index, count, attributes, excluded_attributes)",
    "parameters": [
      {
        "name": "filter",
        "type": "str",
        "required": "true"
      },
      {
        "name": "start_index",
        "type": "int",
        "required": "false"
      },
      {
        "name": "count",
        "type": "int",
        "required": "false"
      },
      {
        "name": "attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "excluded_attributes",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ScimGroupListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nfilter = 'displayName eq groupName' # str | Filters results. If nothing is specified, returns all groups. Examples of valid values: \\\"id eq 5f4bc742-a019-4e38-8e2a-d39d5bc0b0f3\\\", \\\"displayname eq Sales\\\".\nstart_index = 1 # int | The 1-based index of the first query result. (optional) (default to 1)\ncount = 25 # int | The requested number of items per page. A value of 0 returns \\\"totalResults\\\". A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the \\\"excludedAttributes\\\" or \\\"attributes\\\" query parameters to exclude or only include secondary lookup values such as \\\"externalId\\\",  \\\"roles\\\", \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages\\\", or \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills\\\". (optional) (default to 25)\nattributes = ['attributes_example'] # list[str] | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nexcluded_attributes = ['excluded_attributes_example'] # list[str] | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\n\ntry:\n    # Get a list of groups\n    api_response = api_instance.get_scim_v2_groups(filter, start_index=start_index, count=count, attributes=attributes, excluded_attributes=excluded_attributes)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_v2_groups: %s\\n\" % e)"
  },
  "get_scim_v2_resourcetype": {
    "operationId": "get_scim_v2_resourcetype",
    "functionName": "get_scim_v2_resourcetype",
    "signature": "get_scim_v2_resourcetype(resource_type)",
    "parameters": [
      {
        "name": "resource_type",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ScimConfigResourceType",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nresource_type = 'resource_type_example' # str | The type of resource. Returned with GET /api/v2/scim/v2/resourcetypes.\n\ntry:\n    # Get a resource type\n    api_response = api_instance.get_scim_v2_resourcetype(resource_type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_v2_resourcetype: %s\\n\" % e)"
  },
  "get_scim_v2_resourcetypes": {
    "operationId": "get_scim_v2_resourcetypes",
    "functionName": "get_scim_v2_resourcetypes",
    "signature": "get_scim_v2_resourcetypes()",
    "return": "ScimConfigResourceTypesListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\n\ntry:\n    # Get a list of resource types\n    api_response = api_instance.get_scim_v2_resourcetypes()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_v2_resourcetypes: %s\\n\" % e)"
  },
  "get_scim_v2_schema": {
    "operationId": "get_scim_v2_schema",
    "functionName": "get_scim_v2_schema",
    "signature": "get_scim_v2_schema(schema_id)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ScimV2SchemaDefinition",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nschema_id = 'schema_id_example' # str | The ID of a schema. Returned with GET /api/v2/scim/v2/schemas.\n\ntry:\n    # Get a SCIM schema\n    api_response = api_instance.get_scim_v2_schema(schema_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_v2_schema: %s\\n\" % e)"
  },
  "get_scim_v2_schemas": {
    "operationId": "get_scim_v2_schemas",
    "functionName": "get_scim_v2_schemas",
    "signature": "get_scim_v2_schemas(filter)",
    "parameters": [
      {
        "name": "filter",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2SchemaListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nfilter = 'displayName eq groupName' # str | Filtered results are invalid and return 403 Unauthorized. (optional)\n\ntry:\n    # Get a list of SCIM schemas\n    api_response = api_instance.get_scim_v2_schemas(filter=filter)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_v2_schemas: %s\\n\" % e)"
  },
  "get_scim_v2_serviceproviderconfig": {
    "operationId": "get_scim_v2_serviceproviderconfig",
    "functionName": "get_scim_v2_serviceproviderconfig",
    "signature": "get_scim_v2_serviceproviderconfig(if_none_match)",
    "parameters": [
      {
        "name": "if_none_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimServiceProviderConfig",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nif_none_match = 'if_none_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/serviceproviderconfig. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.  (optional)\n\ntry:\n    # Get a service provider's configuration\n    api_response = api_instance.get_scim_v2_serviceproviderconfig(if_none_match=if_none_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_v2_serviceproviderconfig: %s\\n\" % e)"
  },
  "get_scim_v2_user": {
    "operationId": "get_scim_v2_user",
    "functionName": "get_scim_v2_user",
    "signature": "get_scim_v2_user(user_id, attributes, excluded_attributes, if_none_match)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "excluded_attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "if_none_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2User",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nuser_id = 'user_id_example' # str | The ID of a user. Returned with GET /api/v2/scim/v2/users.\nattributes = ['attributes_example'] # list[str] | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nexcluded_attributes = ['excluded_attributes_example'] # list[str] | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nif_none_match = 'if_none_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified. (optional)\n\ntry:\n    # Get a user\n    api_response = api_instance.get_scim_v2_user(user_id, attributes=attributes, excluded_attributes=excluded_attributes, if_none_match=if_none_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_v2_user: %s\\n\" % e)"
  },
  "get_scim_v2_users": {
    "operationId": "get_scim_v2_users",
    "functionName": "get_scim_v2_users",
    "signature": "get_scim_v2_users(start_index, count, attributes, excluded_attributes, filter)",
    "parameters": [
      {
        "name": "start_index",
        "type": "int",
        "required": "false"
      },
      {
        "name": "count",
        "type": "int",
        "required": "false"
      },
      {
        "name": "attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "excluded_attributes",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "filter",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimUserListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nstart_index = 1 # int | The 1-based index of the first query result. (optional) (default to 1)\ncount = 25 # int | The requested number of items per page. A value of 0 returns \\\"totalResults\\\". A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the \\\"excludedAttributes\\\" or \\\"attributes\\\" query parameters to exclude or only include secondary lookup values such as \\\"externalId\\\",  \\\"roles\\\", \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages\\\", or \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills\\\". (optional) (default to 25)\nattributes = ['attributes_example'] # list[str] | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nexcluded_attributes = ['excluded_attributes_example'] # list[str] | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional)\nfilter = 'filter_example' # str | Filters results. If nothing is specified, returns all active users. Examples of valid values: \\\"id eq 857449b0-d9e7-4cd0-acbf-a6adfb9ef1e9\\\", \\\"userName eq search@sample.org\\\", \\\"manager eq 16e10e2f-1136-43fe-bb84-eac073168a49\\\", \\\"email eq search@sample.org\\\", \\\"division eq divisionName\\\", \\\"externalId eq 167844\\\", \\\"active eq false\\\", \\\"employeeNumber eq 9876543210\\\". (optional)\n\ntry:\n    # Get a list of users\n    api_response = api_instance.get_scim_v2_users(start_index=start_index, count=count, attributes=attributes, excluded_attributes=excluded_attributes, filter=filter)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->get_scim_v2_users: %s\\n\" % e)"
  },
  "patch_scim_group": {
    "operationId": "patch_scim_group",
    "functionName": "patch_scim_group",
    "signature": "patch_scim_group(group_id, body, if_match)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2PatchRequest",
        "required": "true"
      },
      {
        "name": "if_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2Group",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\ngroup_id = 'group_id_example' # str | The ID of a group. Returned with GET /api/v2/scim/groups.\nbody = PureCloudPlatformClientV2.ScimV2PatchRequest() # ScimV2PatchRequest | The information used to modify a group.\nif_match = 'if_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional)\n\ntry:\n    # Modify a group\n    api_response = api_instance.patch_scim_group(group_id, body, if_match=if_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->patch_scim_group: %s\\n\" % e)"
  },
  "patch_scim_user": {
    "operationId": "patch_scim_user",
    "functionName": "patch_scim_user",
    "signature": "patch_scim_user(user_id, body, if_match)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2PatchRequest",
        "required": "true"
      },
      {
        "name": "if_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2User",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nuser_id = 'user_id_example' # str | The ID of a user. Returned with GET /api/v2/scim/users.\nbody = PureCloudPlatformClientV2.ScimV2PatchRequest() # ScimV2PatchRequest | The information used to modify a user.\nif_match = 'if_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional)\n\ntry:\n    # Modify a user\n    api_response = api_instance.patch_scim_user(user_id, body, if_match=if_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->patch_scim_user: %s\\n\" % e)"
  },
  "patch_scim_v2_group": {
    "operationId": "patch_scim_v2_group",
    "functionName": "patch_scim_v2_group",
    "signature": "patch_scim_v2_group(group_id, body, if_match)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2PatchRequest",
        "required": "true"
      },
      {
        "name": "if_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2Group",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\ngroup_id = 'group_id_example' # str | The ID of a group. Returned with GET /api/v2/scim/v2/groups.\nbody = PureCloudPlatformClientV2.ScimV2PatchRequest() # ScimV2PatchRequest | The information used to modify a group.\nif_match = 'if_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional)\n\ntry:\n    # Modify a group\n    api_response = api_instance.patch_scim_v2_group(group_id, body, if_match=if_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->patch_scim_v2_group: %s\\n\" % e)"
  },
  "patch_scim_v2_user": {
    "operationId": "patch_scim_v2_user",
    "functionName": "patch_scim_v2_user",
    "signature": "patch_scim_v2_user(user_id, body, if_match)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2PatchRequest",
        "required": "true"
      },
      {
        "name": "if_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2User",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nuser_id = 'user_id_example' # str | The ID of a user. Returned with GET /api/v2/scim/v2/users.\nbody = PureCloudPlatformClientV2.ScimV2PatchRequest() # ScimV2PatchRequest | The information used to modify a user.\nif_match = 'if_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional)\n\ntry:\n    # Modify a user\n    api_response = api_instance.patch_scim_v2_user(user_id, body, if_match=if_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->patch_scim_v2_user: %s\\n\" % e)"
  },
  "post_scim_users": {
    "operationId": "post_scim_users",
    "functionName": "post_scim_users",
    "signature": "post_scim_users(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ScimV2CreateUser",
        "required": "true"
      }
    ],
    "return": "ScimV2User",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nbody = PureCloudPlatformClientV2.ScimV2CreateUser() # ScimV2CreateUser | The information used to create a user.\n\ntry:\n    # Create a user\n    api_response = api_instance.post_scim_users(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->post_scim_users: %s\\n\" % e)"
  },
  "post_scim_v2_users": {
    "operationId": "post_scim_v2_users",
    "functionName": "post_scim_v2_users",
    "signature": "post_scim_v2_users(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ScimV2CreateUser",
        "required": "true"
      }
    ],
    "return": "ScimV2User",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nbody = PureCloudPlatformClientV2.ScimV2CreateUser() # ScimV2CreateUser | The information used to create a user.\n\ntry:\n    # Create a user\n    api_response = api_instance.post_scim_v2_users(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->post_scim_v2_users: %s\\n\" % e)"
  },
  "put_scim_group": {
    "operationId": "put_scim_group",
    "functionName": "put_scim_group",
    "signature": "put_scim_group(group_id, body, if_match)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2Group",
        "required": "true"
      },
      {
        "name": "if_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2Group",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\ngroup_id = 'group_id_example' # str | The ID of a group. Returned with GET /api/v2/scim/groups.\nbody = PureCloudPlatformClientV2.ScimV2Group() # ScimV2Group | The information used to replace a group.\nif_match = 'if_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional)\n\ntry:\n    # Replace a group\n    api_response = api_instance.put_scim_group(group_id, body, if_match=if_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->put_scim_group: %s\\n\" % e)"
  },
  "put_scim_user": {
    "operationId": "put_scim_user",
    "functionName": "put_scim_user",
    "signature": "put_scim_user(user_id, body, if_match)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2User",
        "required": "true"
      },
      {
        "name": "if_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2User",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nuser_id = 'user_id_example' # str | The ID of a user. Returned with GET /api/v2/scim/users.\nbody = PureCloudPlatformClientV2.ScimV2User() # ScimV2User | The information used to replace a user.\nif_match = 'if_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional)\n\ntry:\n    # Replace a user\n    api_response = api_instance.put_scim_user(user_id, body, if_match=if_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->put_scim_user: %s\\n\" % e)"
  },
  "put_scim_v2_group": {
    "operationId": "put_scim_v2_group",
    "functionName": "put_scim_v2_group",
    "signature": "put_scim_v2_group(group_id, body, if_match)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2Group",
        "required": "true"
      },
      {
        "name": "if_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2Group",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\ngroup_id = 'group_id_example' # str | The ID of a group. Returned with GET /api/v2/scim/v2/groups.\nbody = PureCloudPlatformClientV2.ScimV2Group() # ScimV2Group | The information used to replace a group.\nif_match = 'if_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional)\n\ntry:\n    # Replace a group\n    api_response = api_instance.put_scim_v2_group(group_id, body, if_match=if_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->put_scim_v2_group: %s\\n\" % e)"
  },
  "put_scim_v2_user": {
    "operationId": "put_scim_v2_user",
    "functionName": "put_scim_v2_user",
    "signature": "put_scim_v2_user(user_id, body, if_match)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2User",
        "required": "true"
      },
      {
        "name": "if_match",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScimV2User",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SCIMApi();\nuser_id = 'user_id_example' # str | The ID of a user. Returned with GET /api/v2/scim/v2/users.\nbody = PureCloudPlatformClientV2.ScimV2User() # ScimV2User | The information used to replace a user.\nif_match = 'if_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional)\n\ntry:\n    # Replace a user\n    api_response = api_instance.put_scim_v2_user(user_id, body, if_match=if_match)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SCIMApi->put_scim_v2_user: %s\\n\" % e)"
  },
  "post_screenrecording_token": {
    "operationId": "post_screenrecording_token",
    "functionName": "post_screenrecording_token",
    "signature": "post_screenrecording_token(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ScreenRecordingUserAuthenticatedInfo",
        "required": "false"
      }
    ],
    "return": "SignedData",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScreenRecordingApi();\nbody = PureCloudPlatformClientV2.ScreenRecordingUserAuthenticatedInfo() # ScreenRecordingUserAuthenticatedInfo |  (optional)\n\ntry:\n    # Sign identifying information for screen recording\n    api_response = api_instance.post_screenrecording_token(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScreenRecordingApi->post_screenrecording_token: %s\\n\" % e)"
  },
  "get_script": {
    "operationId": "get_script",
    "functionName": "get_script",
    "signature": "get_script(script_id)",
    "parameters": [
      {
        "name": "script_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Script",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\nscript_id = 'script_id_example' # str | Script ID\n\ntry:\n    # Get a script\n    api_response = api_instance.get_script(script_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->get_script: %s\\n\" % e)"
  },
  "get_script_page": {
    "operationId": "get_script_page",
    "functionName": "get_script_page",
    "signature": "get_script_page(script_id, page_id, script_data_version)",
    "parameters": [
      {
        "name": "script_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "script_data_version",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Page",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\nscript_id = 'script_id_example' # str | Script ID\npage_id = 'page_id_example' # str | Page ID\nscript_data_version = 'script_data_version_example' # str | Advanced usage - controls the data version of the script (optional)\n\ntry:\n    # Get a page\n    api_response = api_instance.get_script_page(script_id, page_id, script_data_version=script_data_version)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->get_script_page: %s\\n\" % e)"
  },
  "get_script_pages": {
    "operationId": "get_script_pages",
    "functionName": "get_script_pages",
    "signature": "get_script_pages(script_id, script_data_version)",
    "parameters": [
      {
        "name": "script_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "script_data_version",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "list[Page]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\nscript_id = 'script_id_example' # str | Script ID\nscript_data_version = 'script_data_version_example' # str | Advanced usage - controls the data version of the script (optional)\n\ntry:\n    # Get the list of pages\n    api_response = api_instance.get_script_pages(script_id, script_data_version=script_data_version)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->get_script_pages: %s\\n\" % e)"
  },
  "get_scripts": {
    "operationId": "get_scripts",
    "functionName": "get_scripts",
    "signature": "get_scripts(page_size, page_number, expand, name, feature, flow_id, sort_by, sort_order, script_data_version, division_ids)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "str",
        "required": "false"
      },
      {
        "name": "flow_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "script_data_version",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_ids",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScriptEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nexpand = 'expand_example' # str | Expand (optional)\nname = 'name_example' # str | Name filter (optional)\nfeature = 'feature_example' # str | Feature filter (optional)\nflow_id = 'flow_id_example' # str | Secure flow id filter (optional)\nsort_by = 'sort_by_example' # str | SortBy (optional)\nsort_order = 'sort_order_example' # str | SortOrder (optional)\nscript_data_version = 'script_data_version_example' # str | Advanced usage - controls the data version of the script (optional)\ndivision_ids = 'division_ids_example' # str | Filters scripts to requested divisionIds (optional)\n\ntry:\n    # Get the list of scripts\n    api_response = api_instance.get_scripts(page_size=page_size, page_number=page_number, expand=expand, name=name, feature=feature, flow_id=flow_id, sort_by=sort_by, sort_order=sort_order, script_data_version=script_data_version, division_ids=division_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->get_scripts: %s\\n\" % e)"
  },
  "get_scripts_divisionviews": {
    "operationId": "get_scripts_divisionviews",
    "functionName": "get_scripts_divisionviews",
    "signature": "get_scripts_divisionviews(page_size, page_number, expand, name, feature, flow_id, sort_by, sort_order, script_data_version, division_ids)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "str",
        "required": "false"
      },
      {
        "name": "flow_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "script_data_version",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_ids",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScriptEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nexpand = 'expand_example' # str | Expand (optional)\nname = 'name_example' # str | Name filter (optional)\nfeature = 'feature_example' # str | Feature filter (optional)\nflow_id = 'flow_id_example' # str | Secure flow id filter (optional)\nsort_by = 'sort_by_example' # str | SortBy (optional)\nsort_order = 'sort_order_example' # str | SortOrder (optional)\nscript_data_version = 'script_data_version_example' # str | Advanced usage - controls the data version of the script (optional)\ndivision_ids = 'division_ids_example' # str | Filters scripts to requested divisionIds (optional)\n\ntry:\n    # Get the metadata for a list of scripts\n    api_response = api_instance.get_scripts_divisionviews(page_size=page_size, page_number=page_number, expand=expand, name=name, feature=feature, flow_id=flow_id, sort_by=sort_by, sort_order=sort_order, script_data_version=script_data_version, division_ids=division_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->get_scripts_divisionviews: %s\\n\" % e)"
  },
  "get_scripts_published": {
    "operationId": "get_scripts_published",
    "functionName": "get_scripts_published",
    "signature": "get_scripts_published(page_size, page_number, expand, name, feature, flow_id, script_data_version, division_ids)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "str",
        "required": "false"
      },
      {
        "name": "flow_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "script_data_version",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_ids",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScriptEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nexpand = 'expand_example' # str | Expand (optional)\nname = 'name_example' # str | Name filter (optional)\nfeature = 'feature_example' # str | Feature filter (optional)\nflow_id = 'flow_id_example' # str | Secure flow id filter (optional)\nscript_data_version = 'script_data_version_example' # str | Advanced usage - controls the data version of the script (optional)\ndivision_ids = 'division_ids_example' # str | Filters scripts to requested divisionIds (optional)\n\ntry:\n    # Get the published scripts.\n    api_response = api_instance.get_scripts_published(page_size=page_size, page_number=page_number, expand=expand, name=name, feature=feature, flow_id=flow_id, script_data_version=script_data_version, division_ids=division_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->get_scripts_published: %s\\n\" % e)"
  },
  "get_scripts_published_divisionviews": {
    "operationId": "get_scripts_published_divisionviews",
    "functionName": "get_scripts_published_divisionviews",
    "signature": "get_scripts_published_divisionviews(page_size, page_number, expand, name, feature, flow_id, script_data_version, division_ids)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "str",
        "required": "false"
      },
      {
        "name": "flow_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "script_data_version",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_ids",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ScriptEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nexpand = 'expand_example' # str | Expand (optional)\nname = 'name_example' # str | Name filter (optional)\nfeature = 'feature_example' # str | Feature filter (optional)\nflow_id = 'flow_id_example' # str | Secure flow id filter (optional)\nscript_data_version = 'script_data_version_example' # str | Advanced usage - controls the data version of the script (optional)\ndivision_ids = 'division_ids_example' # str | Filters scripts to requested divisionIds (optional)\n\ntry:\n    # Get the published scripts metadata.\n    api_response = api_instance.get_scripts_published_divisionviews(page_size=page_size, page_number=page_number, expand=expand, name=name, feature=feature, flow_id=flow_id, script_data_version=script_data_version, division_ids=division_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->get_scripts_published_divisionviews: %s\\n\" % e)"
  },
  "get_scripts_published_script_id": {
    "operationId": "get_scripts_published_script_id",
    "functionName": "get_scripts_published_script_id",
    "signature": "get_scripts_published_script_id(script_id, script_data_version)",
    "parameters": [
      {
        "name": "script_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "script_data_version",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Script",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\nscript_id = 'script_id_example' # str | Script ID\nscript_data_version = 'script_data_version_example' # str | Advanced usage - controls the data version of the script (optional)\n\ntry:\n    # Get the published script.\n    api_response = api_instance.get_scripts_published_script_id(script_id, script_data_version=script_data_version)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->get_scripts_published_script_id: %s\\n\" % e)"
  },
  "get_scripts_published_script_id_page": {
    "operationId": "get_scripts_published_script_id_page",
    "functionName": "get_scripts_published_script_id_page",
    "signature": "get_scripts_published_script_id_page(script_id, page_id, script_data_version)",
    "parameters": [
      {
        "name": "script_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "script_data_version",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Page",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\nscript_id = 'script_id_example' # str | Script ID\npage_id = 'page_id_example' # str | Page ID\nscript_data_version = 'script_data_version_example' # str | Advanced usage - controls the data version of the script (optional)\n\ntry:\n    # Get the published page.\n    api_response = api_instance.get_scripts_published_script_id_page(script_id, page_id, script_data_version=script_data_version)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->get_scripts_published_script_id_page: %s\\n\" % e)"
  },
  "get_scripts_published_script_id_pages": {
    "operationId": "get_scripts_published_script_id_pages",
    "functionName": "get_scripts_published_script_id_pages",
    "signature": "get_scripts_published_script_id_pages(script_id, script_data_version)",
    "parameters": [
      {
        "name": "script_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "script_data_version",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "list[Page]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\nscript_id = 'script_id_example' # str | Script ID\nscript_data_version = 'script_data_version_example' # str | Advanced usage - controls the data version of the script (optional)\n\ntry:\n    # Get the list of published pages\n    api_response = api_instance.get_scripts_published_script_id_pages(script_id, script_data_version=script_data_version)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->get_scripts_published_script_id_pages: %s\\n\" % e)"
  },
  "get_scripts_published_script_id_variables": {
    "operationId": "get_scripts_published_script_id_variables",
    "functionName": "get_scripts_published_script_id_variables",
    "signature": "get_scripts_published_script_id_variables(script_id, input, output, type, script_data_version)",
    "parameters": [
      {
        "name": "script_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "input",
        "type": "str",
        "required": "false"
      },
      {
        "name": "output",
        "type": "str",
        "required": "false"
      },
      {
        "name": "type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "script_data_version",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\nscript_id = 'script_id_example' # str | Script ID\ninput = 'input_example' # str | input (optional)\noutput = 'output_example' # str | output (optional)\ntype = 'type_example' # str | type (optional)\nscript_data_version = 'script_data_version_example' # str | Advanced usage - controls the data version of the script (optional)\n\ntry:\n    # Get the published variables\n    api_response = api_instance.get_scripts_published_script_id_variables(script_id, input=input, output=output, type=type, script_data_version=script_data_version)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->get_scripts_published_script_id_variables: %s\\n\" % e)"
  },
  "get_scripts_upload_status": {
    "operationId": "get_scripts_upload_status",
    "functionName": "get_scripts_upload_status",
    "signature": "get_scripts_upload_status(upload_id, long_poll)",
    "parameters": [
      {
        "name": "upload_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "long_poll",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "ImportScriptStatusResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\nupload_id = 'upload_id_example' # str | Upload ID\nlong_poll = False # bool | Enable longPolling endpoint (optional) (default to False)\n\ntry:\n    # Get the upload status of an imported script\n    api_response = api_instance.get_scripts_upload_status(upload_id, long_poll=long_poll)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->get_scripts_upload_status: %s\\n\" % e)"
  },
  "post_script_export": {
    "operationId": "post_script_export",
    "functionName": "post_script_export",
    "signature": "post_script_export(script_id, body)",
    "parameters": [
      {
        "name": "script_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ExportScriptRequest",
        "required": "false"
      }
    ],
    "return": "ExportScriptResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\nscript_id = 'script_id_example' # str | Script ID\nbody = PureCloudPlatformClientV2.ExportScriptRequest() # ExportScriptRequest |  (optional)\n\ntry:\n    # Export a script via download service.\n    api_response = api_instance.post_script_export(script_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->post_script_export: %s\\n\" % e)"
  },
  "post_scripts_published": {
    "operationId": "post_scripts_published",
    "functionName": "post_scripts_published",
    "signature": "post_scripts_published(script_data_version, body)",
    "parameters": [
      {
        "name": "script_data_version",
        "type": "str",
        "required": "false"
      },
      {
        "name": "body",
        "type": "PublishScriptRequestData",
        "required": "false"
      }
    ],
    "return": "Script",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.ScriptsApi();\nscript_data_version = 'script_data_version_example' # str | Advanced usage - controls the data version of the script (optional)\nbody = PureCloudPlatformClientV2.PublishScriptRequestData() # PublishScriptRequestData | body (optional)\n\ntry:\n    # Publish a script.\n    api_response = api_instance.post_scripts_published(script_data_version=script_data_version, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ScriptsApi->post_scripts_published: %s\\n\" % e)"
  },
  "get_documentation_gkn_search": {
    "operationId": "get_documentation_gkn_search",
    "functionName": "get_documentation_gkn_search",
    "signature": "get_documentation_gkn_search(q64)",
    "parameters": [
      {
        "name": "q64",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "GKNDocumentationSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SearchApi();\nq64 = 'q64_example' # str | q64\n\ntry:\n    # Search gkn documentation using the q64 value returned from a previous search\n    api_response = api_instance.get_documentation_gkn_search(q64)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SearchApi->get_documentation_gkn_search: %s\\n\" % e)"
  },
  "get_documentation_search": {
    "operationId": "get_documentation_search",
    "functionName": "get_documentation_search",
    "signature": "get_documentation_search(q64)",
    "parameters": [
      {
        "name": "q64",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DocumentationSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SearchApi();\nq64 = 'q64_example' # str | q64\n\ntry:\n    # Search documentation using the q64 value returned from a previous search\n    api_response = api_instance.get_documentation_search(q64)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SearchApi->get_documentation_search: %s\\n\" % e)"
  },
  "get_search": {
    "operationId": "get_search",
    "functionName": "get_search",
    "signature": "get_search(q64, expand, profile)",
    "parameters": [
      {
        "name": "q64",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "profile",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "JsonNodeSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SuggestApi();\nq64 = 'q64_example' # str | q64\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\nprofile = True # bool | profile (optional) (default to True)\n\ntry:\n    # Search using the q64 value returned from a previous search.\n    api_response = api_instance.get_search(q64, expand=expand, profile=profile)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SuggestApi->get_search: %s\\n\" % e)"
  },
  "get_search_suggest": {
    "operationId": "get_search_suggest",
    "functionName": "get_search_suggest",
    "signature": "get_search_suggest(q64, expand, profile)",
    "parameters": [
      {
        "name": "q64",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "profile",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "JsonNodeSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SuggestApi();\nq64 = 'q64_example' # str | q64\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\nprofile = True # bool | profile (optional) (default to True)\n\ntry:\n    # Suggest resources using the q64 value returned from a previous suggest query.\n    api_response = api_instance.get_search_suggest(q64, expand=expand, profile=profile)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SuggestApi->get_search_suggest: %s\\n\" % e)"
  },
  "get_users_search": {
    "operationId": "get_users_search",
    "functionName": "get_users_search",
    "signature": "get_users_search(q64, expand, integration_presence_source)",
    "parameters": [
      {
        "name": "q64",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "integration_presence_source",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UsersSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nq64 = 'q64_example' # str | q64\nexpand = ['expand_example'] # list[str] | expand (optional)\nintegration_presence_source = 'integration_presence_source_example' # str | integrationPresenceSource (optional)\n\ntry:\n    # Search users using the q64 value returned from a previous search\n    api_response = api_instance.get_users_search(q64, expand=expand, integration_presence_source=integration_presence_source)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_users_search: %s\\n\" % e)"
  },
  "get_voicemail_search": {
    "operationId": "get_voicemail_search",
    "functionName": "get_voicemail_search",
    "signature": "get_voicemail_search(q64, expand)",
    "parameters": [
      {
        "name": "q64",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "VoicemailsSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nq64 = 'q64_example' # str | q64\nexpand = ['expand_example'] # list[str] | expand (optional)\n\ntry:\n    # Search voicemails using the q64 value returned from a previous search\n    api_response = api_instance.get_voicemail_search(q64, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_search: %s\\n\" % e)"
  },
  "post_documentation_all_search": {
    "operationId": "post_documentation_all_search",
    "functionName": "post_documentation_all_search",
    "signature": "post_documentation_all_search(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DocumentationV2SearchRequest",
        "required": "true"
      }
    ],
    "return": "JsonNodeSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SearchApi();\nbody = PureCloudPlatformClientV2.DocumentationV2SearchRequest() # DocumentationV2SearchRequest | Search request options\n\ntry:\n    # Search all documents\n    api_response = api_instance.post_documentation_all_search(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SearchApi->post_documentation_all_search: %s\\n\" % e)"
  },
  "post_documentation_gkn_search": {
    "operationId": "post_documentation_gkn_search",
    "functionName": "post_documentation_gkn_search",
    "signature": "post_documentation_gkn_search(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GKNDocumentationSearchRequest",
        "required": "true"
      }
    ],
    "return": "GKNDocumentationSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SearchApi();\nbody = PureCloudPlatformClientV2.GKNDocumentationSearchRequest() # GKNDocumentationSearchRequest | Search request options\n\ntry:\n    # Search gkn documentation\n    api_response = api_instance.post_documentation_gkn_search(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SearchApi->post_documentation_gkn_search: %s\\n\" % e)"
  },
  "post_documentation_search": {
    "operationId": "post_documentation_search",
    "functionName": "post_documentation_search",
    "signature": "post_documentation_search(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DocumentationSearchRequest",
        "required": "true"
      }
    ],
    "return": "DocumentationSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SearchApi();\nbody = PureCloudPlatformClientV2.DocumentationSearchRequest() # DocumentationSearchRequest | Search request options\n\ntry:\n    # Search documentation\n    api_response = api_instance.post_documentation_search(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SearchApi->post_documentation_search: %s\\n\" % e)"
  },
  "post_search": {
    "operationId": "post_search",
    "functionName": "post_search",
    "signature": "post_search(body, profile)",
    "parameters": [
      {
        "name": "body",
        "type": "SearchRequest",
        "required": "true"
      },
      {
        "name": "profile",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "JsonNodeSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SuggestApi();\nbody = PureCloudPlatformClientV2.SearchRequest() # SearchRequest | Search request options\nprofile = True # bool | profile (optional) (default to True)\n\ntry:\n    # Search resources.\n    api_response = api_instance.post_search(body, profile=profile)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SuggestApi->post_search: %s\\n\" % e)"
  },
  "post_search_suggest": {
    "operationId": "post_search_suggest",
    "functionName": "post_search_suggest",
    "signature": "post_search_suggest(body, profile)",
    "parameters": [
      {
        "name": "body",
        "type": "SuggestSearchRequest",
        "required": "true"
      },
      {
        "name": "profile",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "JsonNodeSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SuggestApi();\nbody = PureCloudPlatformClientV2.SuggestSearchRequest() # SuggestSearchRequest | Search request options\nprofile = True # bool | profile (optional) (default to True)\n\ntry:\n    # Suggest resources.\n    api_response = api_instance.post_search_suggest(body, profile=profile)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SuggestApi->post_search_suggest: %s\\n\" % e)"
  },
  "post_speechandtextanalytics_transcripts_search": {
    "operationId": "post_speechandtextanalytics_transcripts_search",
    "functionName": "post_speechandtextanalytics_transcripts_search",
    "signature": "post_speechandtextanalytics_transcripts_search(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TranscriptSearchRequest",
        "required": "true"
      }
    ],
    "return": "JsonSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nbody = PureCloudPlatformClientV2.TranscriptSearchRequest() # TranscriptSearchRequest | Search request options\n\ntry:\n    # Search resources.\n    api_response = api_instance.post_speechandtextanalytics_transcripts_search(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->post_speechandtextanalytics_transcripts_search: %s\\n\" % e)"
  },
  "post_teams_search": {
    "operationId": "post_teams_search",
    "functionName": "post_teams_search",
    "signature": "post_teams_search(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TeamSearchRequest",
        "required": "true"
      }
    ],
    "return": "TeamsSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TeamsApi();\nbody = PureCloudPlatformClientV2.TeamSearchRequest() # TeamSearchRequest | Search request options\n\ntry:\n    # Search resources.\n    api_response = api_instance.post_teams_search(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TeamsApi->post_teams_search: %s\\n\" % e)"
  },
  "post_users_search": {
    "operationId": "post_users_search",
    "functionName": "post_users_search",
    "signature": "post_users_search(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserSearchRequest",
        "required": "true"
      }
    ],
    "return": "UsersSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = PureCloudPlatformClientV2.UserSearchRequest() # UserSearchRequest | Search request options\n\ntry:\n    # Search users\n    api_response = api_instance.post_users_search(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_users_search: %s\\n\" % e)"
  },
  "post_users_search_conversation_target": {
    "operationId": "post_users_search_conversation_target",
    "functionName": "post_users_search_conversation_target",
    "signature": "post_users_search_conversation_target(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserSearchRequest",
        "required": "true"
      }
    ],
    "return": "UsersSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = PureCloudPlatformClientV2.UserSearchRequest() # UserSearchRequest | Search request options\n\ntry:\n    # Search users as conversation targets\n    api_response = api_instance.post_users_search_conversation_target(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_users_search_conversation_target: %s\\n\" % e)"
  },
  "post_users_search_queuemembers_manage": {
    "operationId": "post_users_search_queuemembers_manage",
    "functionName": "post_users_search_queuemembers_manage",
    "signature": "post_users_search_queuemembers_manage(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserSearchRequest",
        "required": "true"
      }
    ],
    "return": "UsersSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = PureCloudPlatformClientV2.UserSearchRequest() # UserSearchRequest | Search request options\n\ntry:\n    # Search manage queue member\n    api_response = api_instance.post_users_search_queuemembers_manage(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_users_search_queuemembers_manage: %s\\n\" % e)"
  },
  "post_users_search_teams_assign": {
    "operationId": "post_users_search_teams_assign",
    "functionName": "post_users_search_teams_assign",
    "signature": "post_users_search_teams_assign(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserSearchRequest",
        "required": "true"
      }
    ],
    "return": "UsersSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = PureCloudPlatformClientV2.UserSearchRequest() # UserSearchRequest | Search request options\n\ntry:\n    # Search users assigned to teams\n    api_response = api_instance.post_users_search_teams_assign(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_users_search_teams_assign: %s\\n\" % e)"
  },
  "post_voicemail_search": {
    "operationId": "post_voicemail_search",
    "functionName": "post_voicemail_search",
    "signature": "post_voicemail_search(body)",
    "parameters": [
      {
        "name": "body",
        "type": "VoicemailSearchRequest",
        "required": "true"
      }
    ],
    "return": "VoicemailsSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nbody = PureCloudPlatformClientV2.VoicemailSearchRequest() # VoicemailSearchRequest | Search request options\n\ntry:\n    # Search voicemails\n    api_response = api_instance.post_voicemail_search(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->post_voicemail_search: %s\\n\" % e)"
  },
  "get_settings_executiondata": {
    "operationId": "get_settings_executiondata",
    "functionName": "get_settings_executiondata",
    "signature": "get_settings_executiondata()",
    "return": "ExecutionDataGlobalSettingsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SettingsApi();\n\ntry:\n    # Get the execution history enabled setting.\n    api_response = api_instance.get_settings_executiondata()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SettingsApi->get_settings_executiondata: %s\\n\" % e)"
  },
  "patch_settings_executiondata": {
    "operationId": "patch_settings_executiondata",
    "functionName": "patch_settings_executiondata",
    "signature": "patch_settings_executiondata(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ExecutionDataSettingsRequest",
        "required": "true"
      }
    ],
    "return": "ExecutionDataGlobalSettingsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SettingsApi();\nbody = PureCloudPlatformClientV2.ExecutionDataSettingsRequest() # ExecutionDataSettingsRequest | New Execution Data Setting\n\ntry:\n    # Edit the execution history on off setting.\n    api_response = api_instance.patch_settings_executiondata(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SettingsApi->patch_settings_executiondata: %s\\n\" % e)"
  },
  "delete_speechandtextanalytics_category": {
    "operationId": "delete_speechandtextanalytics_category",
    "functionName": "delete_speechandtextanalytics_category",
    "signature": "delete_speechandtextanalytics_category(category_id)",
    "parameters": [
      {
        "name": "category_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\ncategory_id = 'category_id_example' # str | The id of the category\n\ntry:\n    # Delete a Speech & Text Analytics category by ID\n    api_instance.delete_speechandtextanalytics_category(category_id)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->delete_speechandtextanalytics_category: %s\\n\" % e)"
  },
  "delete_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id": {
    "operationId": "delete_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id",
    "functionName": "delete_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id",
    "signature": "delete_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id(dictionary_feedback_id)",
    "parameters": [
      {
        "name": "dictionary_feedback_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\ndictionary_feedback_id = 'dictionary_feedback_id_example' # str | The Id of the Dictionary Feedback\n\ntry:\n    # Delete a Speech & Text Analytics DictionaryFeedback by Id\n    api_instance.delete_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id(dictionary_feedback_id)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->delete_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id: %s\\n\" % e)"
  },
  "delete_speechandtextanalytics_program": {
    "operationId": "delete_speechandtextanalytics_program",
    "functionName": "delete_speechandtextanalytics_program",
    "signature": "delete_speechandtextanalytics_program(program_id, force_delete)",
    "parameters": [
      {
        "name": "program_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force_delete",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nprogram_id = 'program_id_example' # str | The id of the program\nforce_delete = False # bool | Indicates whether the program is forced to be deleted or not. Required when the program to delete is the default program. (optional) (default to False)\n\ntry:\n    # Delete a Speech & Text Analytics program by id\n    api_instance.delete_speechandtextanalytics_program(program_id, force_delete=force_delete)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->delete_speechandtextanalytics_program: %s\\n\" % e)"
  },
  "delete_speechandtextanalytics_sentimentfeedback": {
    "operationId": "delete_speechandtextanalytics_sentimentfeedback",
    "functionName": "delete_speechandtextanalytics_sentimentfeedback",
    "signature": "delete_speechandtextanalytics_sentimentfeedback()",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\n\ntry:\n    # Delete All Speech & Text Analytics SentimentFeedback\n    api_instance.delete_speechandtextanalytics_sentimentfeedback()\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->delete_speechandtextanalytics_sentimentfeedback: %s\\n\" % e)"
  },
  "delete_speechandtextanalytics_sentimentfeedback_sentiment_feedback_id": {
    "operationId": "delete_speechandtextanalytics_sentimentfeedback_sentiment_feedback_id",
    "functionName": "delete_speechandtextanalytics_sentimentfeedback_sentiment_feedback_id",
    "signature": "delete_speechandtextanalytics_sentimentfeedback_sentiment_feedback_id(sentiment_feedback_id)",
    "parameters": [
      {
        "name": "sentiment_feedback_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nsentiment_feedback_id = 'sentiment_feedback_id_example' # str | The Id of the SentimentFeedback\n\ntry:\n    # Delete a Speech & Text Analytics SentimentFeedback by Id\n    api_instance.delete_speechandtextanalytics_sentimentfeedback_sentiment_feedback_id(sentiment_feedback_id)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->delete_speechandtextanalytics_sentimentfeedback_sentiment_feedback_id: %s\\n\" % e)"
  },
  "delete_speechandtextanalytics_topic": {
    "operationId": "delete_speechandtextanalytics_topic",
    "functionName": "delete_speechandtextanalytics_topic",
    "signature": "delete_speechandtextanalytics_topic(topic_id)",
    "parameters": [
      {
        "name": "topic_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\ntopic_id = 'topic_id_example' # str | The id of the topic\n\ntry:\n    # Delete a Speech & Text Analytics topic by id\n    api_instance.delete_speechandtextanalytics_topic(topic_id)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->delete_speechandtextanalytics_topic: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_categories": {
    "operationId": "get_speechandtextanalytics_categories",
    "functionName": "get_speechandtextanalytics_categories",
    "signature": "get_speechandtextanalytics_categories(page_size, page_number, name, sort_order, sort_by, ids)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "ids",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "CategoriesEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\npage_size = 25 # int | The page size for the listing. The max that will be returned is 50. (optional) (default to 25)\npage_number = 1 # int | The page number for the listing (optional) (default to 1)\nname = 'name_example' # str | The category name filter applied to the listing (optional)\nsort_order = ''asc'' # str | The sort order for the listing (optional) (default to 'asc')\nsort_by = ''name'' # str | The field to sort by for the listing (optional) (default to 'name')\nids = ['ids_example'] # list[str] | Comma separated Category IDs to filter by. Cannot be used with other filters. Maximum of 50 IDs allowed. (optional)\n\ntry:\n    # Get the list of Speech and Text Analytics categories\n    api_response = api_instance.get_speechandtextanalytics_categories(page_size=page_size, page_number=page_number, name=name, sort_order=sort_order, sort_by=sort_by, ids=ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_categories: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_category": {
    "operationId": "get_speechandtextanalytics_category",
    "functionName": "get_speechandtextanalytics_category",
    "signature": "get_speechandtextanalytics_category(category_id)",
    "parameters": [
      {
        "name": "category_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "StaCategory",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\ncategory_id = 'category_id_example' # str | The id of the category\n\ntry:\n    # Get a Speech & Text Analytics Category by ID\n    api_response = api_instance.get_speechandtextanalytics_category(category_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_category: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_conversation": {
    "operationId": "get_speechandtextanalytics_conversation",
    "functionName": "get_speechandtextanalytics_conversation",
    "signature": "get_speechandtextanalytics_conversation(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ConversationMetrics",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nconversation_id = 'conversation_id_example' # str | Conversation Id\n\ntry:\n    # Get Speech and Text Analytics for a specific conversation\n    api_response = api_instance.get_speechandtextanalytics_conversation(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_conversation: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_conversation_categories": {
    "operationId": "get_speechandtextanalytics_conversation_categories",
    "functionName": "get_speechandtextanalytics_conversation_categories",
    "signature": "get_speechandtextanalytics_conversation_categories(conversation_id, page_size, page_number)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "ConversationCategoriesEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nconversation_id = 'conversation_id_example' # str | The id of the conversation\npage_size = 25 # int | The page size for the listing. The max that will be returned is 50. (optional) (default to 25)\npage_number = 1 # int | The page number for the listing (optional) (default to 1)\n\ntry:\n    # Get the list of detected Speech and Text Analytics categories of conversation\n    api_response = api_instance.get_speechandtextanalytics_conversation_categories(conversation_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_conversation_categories: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_conversation_communication_transcripturl": {
    "operationId": "get_speechandtextanalytics_conversation_communication_transcripturl",
    "functionName": "get_speechandtextanalytics_conversation_communication_transcripturl",
    "signature": "get_speechandtextanalytics_conversation_communication_transcripturl(conversation_id, communication_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TranscriptUrl",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\ncommunication_id = 'communication_id_example' # str | Communication ID\n\ntry:\n    # Get the pre-signed S3 URL for the transcript of a specific communication of a conversation\n    api_response = api_instance.get_speechandtextanalytics_conversation_communication_transcripturl(conversation_id, communication_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_conversation_communication_transcripturl: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_conversation_communication_transcripturls": {
    "operationId": "get_speechandtextanalytics_conversation_communication_transcripturls",
    "functionName": "get_speechandtextanalytics_conversation_communication_transcripturls",
    "signature": "get_speechandtextanalytics_conversation_communication_transcripturls(conversation_id, communication_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TranscriptUrls",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nconversation_id = 'conversation_id_example' # str | Conversation ID\ncommunication_id = 'communication_id_example' # str | Communication ID\n\ntry:\n    # Get the list of pre-signed S3 URL for the transcripts of a specific communication of a conversation\n    api_response = api_instance.get_speechandtextanalytics_conversation_communication_transcripturls(conversation_id, communication_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_conversation_communication_transcripturls: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_dictionaryfeedback": {
    "operationId": "get_speechandtextanalytics_dictionaryfeedback",
    "functionName": "get_speechandtextanalytics_dictionaryfeedback",
    "signature": "get_speechandtextanalytics_dictionaryfeedback(dialect, next_page, page_size)",
    "parameters": [
      {
        "name": "dialect",
        "type": "str",
        "required": "false"
      },
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "DictionaryFeedbackEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\ndialect = 'en-US' # str | The key for filter the listing by dialect, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard (optional)\nnext_page = 'next_page_example' # str | The key for listing the next page (optional)\npage_size = 500 # int | The page size for the listing (optional) (default to 500)\n\ntry:\n    # Get the list of Speech & Text Analytics dictionary feedbacks\n    api_response = api_instance.get_speechandtextanalytics_dictionaryfeedback(dialect=dialect, next_page=next_page, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_dictionaryfeedback: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id": {
    "operationId": "get_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id",
    "functionName": "get_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id",
    "signature": "get_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id(dictionary_feedback_id)",
    "parameters": [
      {
        "name": "dictionary_feedback_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DictionaryFeedback",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\ndictionary_feedback_id = 'dictionary_feedback_id_example' # str | The Id of the Dictionary Feedback\n\ntry:\n    # Get a Speech & Text Analytics dictionary feedback by id\n    api_response = api_instance.get_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id(dictionary_feedback_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_program": {
    "operationId": "get_speechandtextanalytics_program",
    "functionName": "get_speechandtextanalytics_program",
    "signature": "get_speechandtextanalytics_program(program_id)",
    "parameters": [
      {
        "name": "program_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Program",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nprogram_id = 'program_id_example' # str | The id of the program\n\ntry:\n    # Get a Speech & Text Analytics program by id\n    api_response = api_instance.get_speechandtextanalytics_program(program_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_program: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_program_mappings": {
    "operationId": "get_speechandtextanalytics_program_mappings",
    "functionName": "get_speechandtextanalytics_program_mappings",
    "signature": "get_speechandtextanalytics_program_mappings(program_id)",
    "parameters": [
      {
        "name": "program_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ProgramMappings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nprogram_id = 'program_id_example' # str | The id of the program\n\ntry:\n    # Get Speech & Text Analytics program mappings to queues and flows by id\n    api_response = api_instance.get_speechandtextanalytics_program_mappings(program_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_program_mappings: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_program_transcriptionengines": {
    "operationId": "get_speechandtextanalytics_program_transcriptionengines",
    "functionName": "get_speechandtextanalytics_program_transcriptionengines",
    "signature": "get_speechandtextanalytics_program_transcriptionengines(program_id)",
    "parameters": [
      {
        "name": "program_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ProgramTranscriptionEngines",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nprogram_id = 'program_id_example' # str | The id of the program\n\ntry:\n    # Get transcription engine settings of a program\n    api_response = api_instance.get_speechandtextanalytics_program_transcriptionengines(program_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_program_transcriptionengines: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_programs": {
    "operationId": "get_speechandtextanalytics_programs",
    "functionName": "get_speechandtextanalytics_programs",
    "signature": "get_speechandtextanalytics_programs(next_page, page_size, state)",
    "parameters": [
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "state",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ProgramsEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nnext_page = 'next_page_example' # str | The key for listing the next page (optional)\npage_size = 20 # int | The page size for the listing (optional) (default to 20)\nstate = 'state_example' # str | Program state. Defaults to Latest (optional)\n\ntry:\n    # Get the list of Speech & Text Analytics programs\n    api_response = api_instance.get_speechandtextanalytics_programs(next_page=next_page, page_size=page_size, state=state)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_programs: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_programs_general_job": {
    "operationId": "get_speechandtextanalytics_programs_general_job",
    "functionName": "get_speechandtextanalytics_programs_general_job",
    "signature": "get_speechandtextanalytics_programs_general_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "GeneralProgramJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\njob_id = 'job_id_example' # str | The id of the publish programs job\n\ntry:\n    # Get a Speech & Text Analytics general program job by id\n    api_response = api_instance.get_speechandtextanalytics_programs_general_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_programs_general_job: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_programs_mappings": {
    "operationId": "get_speechandtextanalytics_programs_mappings",
    "functionName": "get_speechandtextanalytics_programs_mappings",
    "signature": "get_speechandtextanalytics_programs_mappings(next_page, page_size)",
    "parameters": [
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "ProgramsMappingsEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nnext_page = 'next_page_example' # str | The key for listing the next page (optional)\npage_size = 20 # int | The page size for the listing (optional) (default to 20)\n\ntry:\n    # Get the list of Speech & Text Analytics programs mappings to queues and flows\n    api_response = api_instance.get_speechandtextanalytics_programs_mappings(next_page=next_page, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_programs_mappings: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_programs_publishjob": {
    "operationId": "get_speechandtextanalytics_programs_publishjob",
    "functionName": "get_speechandtextanalytics_programs_publishjob",
    "signature": "get_speechandtextanalytics_programs_publishjob(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ProgramJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\njob_id = 'job_id_example' # str | The id of the publish programs job\n\ntry:\n    # Get a Speech & Text Analytics publish programs job by id\n    api_response = api_instance.get_speechandtextanalytics_programs_publishjob(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_programs_publishjob: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_programs_transcriptionengines_dialects": {
    "operationId": "get_speechandtextanalytics_programs_transcriptionengines_dialects",
    "functionName": "get_speechandtextanalytics_programs_transcriptionengines_dialects",
    "signature": "get_speechandtextanalytics_programs_transcriptionengines_dialects()",
    "return": "SupportedDialectsEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\n\ntry:\n    # Get supported dialects for each transcription engine\n    api_response = api_instance.get_speechandtextanalytics_programs_transcriptionengines_dialects()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_programs_transcriptionengines_dialects: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_programs_unpublished": {
    "operationId": "get_speechandtextanalytics_programs_unpublished",
    "functionName": "get_speechandtextanalytics_programs_unpublished",
    "signature": "get_speechandtextanalytics_programs_unpublished(next_page, page_size)",
    "parameters": [
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "UnpublishedProgramsEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nnext_page = 'next_page_example' # str | The key for listing the next page (optional)\npage_size = 20 # int | The page size for the listing (optional) (default to 20)\n\ntry:\n    # Get the list of Speech & Text Analytics unpublished programs\n    api_response = api_instance.get_speechandtextanalytics_programs_unpublished(next_page=next_page, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_programs_unpublished: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_sentiment_dialects": {
    "operationId": "get_speechandtextanalytics_sentiment_dialects",
    "functionName": "get_speechandtextanalytics_sentiment_dialects",
    "signature": "get_speechandtextanalytics_sentiment_dialects()",
    "return": "EntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\n\ntry:\n    # Get the list of Speech & Text Analytics sentiment supported dialects\n    api_response = api_instance.get_speechandtextanalytics_sentiment_dialects()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_sentiment_dialects: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_sentimentfeedback": {
    "operationId": "get_speechandtextanalytics_sentimentfeedback",
    "functionName": "get_speechandtextanalytics_sentimentfeedback",
    "signature": "get_speechandtextanalytics_sentimentfeedback(dialect)",
    "parameters": [
      {
        "name": "dialect",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SentimentFeedbackEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\ndialect = 'en-US' # str | The key for filter the listing by dialect, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard (optional)\n\ntry:\n    # Get the list of Speech & Text Analytics SentimentFeedback\n    api_response = api_instance.get_speechandtextanalytics_sentimentfeedback(dialect=dialect)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_sentimentfeedback: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_settings": {
    "operationId": "get_speechandtextanalytics_settings",
    "functionName": "get_speechandtextanalytics_settings",
    "signature": "get_speechandtextanalytics_settings()",
    "return": "SpeechTextAnalyticsSettingsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\n\ntry:\n    # Get Speech And Text Analytics Settings\n    api_response = api_instance.get_speechandtextanalytics_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_settings: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_topic": {
    "operationId": "get_speechandtextanalytics_topic",
    "functionName": "get_speechandtextanalytics_topic",
    "signature": "get_speechandtextanalytics_topic(topic_id)",
    "parameters": [
      {
        "name": "topic_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Topic",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\ntopic_id = 'topic_id_example' # str | The id of the topic\n\ntry:\n    # Get a Speech & Text Analytics topic by id\n    api_response = api_instance.get_speechandtextanalytics_topic(topic_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_topic: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_topics": {
    "operationId": "get_speechandtextanalytics_topics",
    "functionName": "get_speechandtextanalytics_topics",
    "signature": "get_speechandtextanalytics_topics(next_page, page_size, state, name, ids, dialects, sort_by, sort_order)",
    "parameters": [
      {
        "name": "next_page",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "state",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "ids",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "dialects",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TopicsEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nnext_page = 'next_page_example' # str | The key for listing the next page (optional)\npage_size = 20 # int | The page size for the listing. The max that will be returned is 500. (optional) (default to 20)\nstate = 'state_example' # str | Topic state. Defaults to latest (optional)\nname = 'name_example' # str | Case insensitive partial name to filter by (optional)\nids = ['ids_example'] # list[str] | Comma separated Topic IDs to filter by. Cannot be used with other filters. Maximum of 50 IDs allowed. (optional)\ndialects = ['dialects_example'] # list[str] | Comma separated dialect strings to filter by. Maximum of 15 dialects allowed. (optional)\nsort_by = 'sort_by_example' # str | Sort results by. Defaults to name (optional)\nsort_order = 'sort_order_example' # str | Sort order. Defaults to asc (optional)\n\ntry:\n    # Get the list of Speech & Text Analytics topics\n    api_response = api_instance.get_speechandtextanalytics_topics(next_page=next_page, page_size=page_size, state=state, name=name, ids=ids, dialects=dialects, sort_by=sort_by, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_topics: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_topics_dialects": {
    "operationId": "get_speechandtextanalytics_topics_dialects",
    "functionName": "get_speechandtextanalytics_topics_dialects",
    "signature": "get_speechandtextanalytics_topics_dialects()",
    "return": "EntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\n\ntry:\n    # Get list of supported Speech & Text Analytics topics dialects\n    api_response = api_instance.get_speechandtextanalytics_topics_dialects()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_topics_dialects: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_topics_general": {
    "operationId": "get_speechandtextanalytics_topics_general",
    "functionName": "get_speechandtextanalytics_topics_general",
    "signature": "get_speechandtextanalytics_topics_general(dialect)",
    "parameters": [
      {
        "name": "dialect",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "GeneralTopicsEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\ndialect = 'dialect_example' # str | The dialect of the general topics, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard (optional)\n\ntry:\n    # Get the Speech & Text Analytics general topics for a given dialect\n    api_response = api_instance.get_speechandtextanalytics_topics_general(dialect=dialect)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_topics_general: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_topics_general_status": {
    "operationId": "get_speechandtextanalytics_topics_general_status",
    "functionName": "get_speechandtextanalytics_topics_general_status",
    "signature": "get_speechandtextanalytics_topics_general_status(dialect)",
    "parameters": [
      {
        "name": "dialect",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UnifiedGeneralTopicEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\ndialect = 'dialect_example' # str | The dialect of the general topics, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard (optional)\n\ntry:\n    # Get the list of general topics from the org and the system with their current status\n    api_response = api_instance.get_speechandtextanalytics_topics_general_status(dialect=dialect)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_topics_general_status: %s\\n\" % e)"
  },
  "get_speechandtextanalytics_topics_publishjob": {
    "operationId": "get_speechandtextanalytics_topics_publishjob",
    "functionName": "get_speechandtextanalytics_topics_publishjob",
    "signature": "get_speechandtextanalytics_topics_publishjob(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TopicJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\njob_id = 'job_id_example' # str | The id of the publish topics job\n\ntry:\n    # Get a Speech & Text Analytics publish topics job by id\n    api_response = api_instance.get_speechandtextanalytics_topics_publishjob(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->get_speechandtextanalytics_topics_publishjob: %s\\n\" % e)"
  },
  "patch_speechandtextanalytics_settings": {
    "operationId": "patch_speechandtextanalytics_settings",
    "functionName": "patch_speechandtextanalytics_settings",
    "signature": "patch_speechandtextanalytics_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SpeechTextAnalyticsSettingsRequest",
        "required": "true"
      }
    ],
    "return": "SpeechTextAnalyticsSettingsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nbody = PureCloudPlatformClientV2.SpeechTextAnalyticsSettingsRequest() # SpeechTextAnalyticsSettingsRequest | Speech And Text Analytics Settings\n\ntry:\n    # Patch Speech And Text Analytics Settings\n    api_response = api_instance.patch_speechandtextanalytics_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->patch_speechandtextanalytics_settings: %s\\n\" % e)"
  },
  "post_speechandtextanalytics_categories": {
    "operationId": "post_speechandtextanalytics_categories",
    "functionName": "post_speechandtextanalytics_categories",
    "signature": "post_speechandtextanalytics_categories(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CategoryRequest",
        "required": "true"
      }
    ],
    "return": "StaCategory",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nbody = PureCloudPlatformClientV2.CategoryRequest() # CategoryRequest | The category to create\n\ntry:\n    # Create new Speech & Text Analytics category\n    api_response = api_instance.post_speechandtextanalytics_categories(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->post_speechandtextanalytics_categories: %s\\n\" % e)"
  },
  "post_speechandtextanalytics_dictionaryfeedback": {
    "operationId": "post_speechandtextanalytics_dictionaryfeedback",
    "functionName": "post_speechandtextanalytics_dictionaryfeedback",
    "signature": "post_speechandtextanalytics_dictionaryfeedback(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DictionaryFeedback",
        "required": "true"
      }
    ],
    "return": "DictionaryFeedback",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nbody = PureCloudPlatformClientV2.DictionaryFeedback() # DictionaryFeedback | The DictionaryFeedback to create\n\ntry:\n    # Create a Speech & Text Analytics DictionaryFeedback\n    api_response = api_instance.post_speechandtextanalytics_dictionaryfeedback(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->post_speechandtextanalytics_dictionaryfeedback: %s\\n\" % e)"
  },
  "post_speechandtextanalytics_programs": {
    "operationId": "post_speechandtextanalytics_programs",
    "functionName": "post_speechandtextanalytics_programs",
    "signature": "post_speechandtextanalytics_programs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ProgramRequest",
        "required": "true"
      }
    ],
    "return": "Program",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nbody = PureCloudPlatformClientV2.ProgramRequest() # ProgramRequest | The program to create\n\ntry:\n    # Create new Speech & Text Analytics program\n    api_response = api_instance.post_speechandtextanalytics_programs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->post_speechandtextanalytics_programs: %s\\n\" % e)"
  },
  "post_speechandtextanalytics_programs_general_jobs": {
    "operationId": "post_speechandtextanalytics_programs_general_jobs",
    "functionName": "post_speechandtextanalytics_programs_general_jobs",
    "signature": "post_speechandtextanalytics_programs_general_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GeneralProgramJobRequest",
        "required": "true"
      }
    ],
    "return": "GeneralProgramJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nbody = PureCloudPlatformClientV2.GeneralProgramJobRequest() # GeneralProgramJobRequest | The general programs job to create\n\ntry:\n    # Create new Speech & Text Analytics general program job\n    api_response = api_instance.post_speechandtextanalytics_programs_general_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->post_speechandtextanalytics_programs_general_jobs: %s\\n\" % e)"
  },
  "post_speechandtextanalytics_programs_publishjobs": {
    "operationId": "post_speechandtextanalytics_programs_publishjobs",
    "functionName": "post_speechandtextanalytics_programs_publishjobs",
    "signature": "post_speechandtextanalytics_programs_publishjobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ProgramJobRequest",
        "required": "true"
      }
    ],
    "return": "ProgramJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nbody = PureCloudPlatformClientV2.ProgramJobRequest() # ProgramJobRequest | The publish programs job to create\n\ntry:\n    # Create new Speech & Text Analytics publish programs job\n    api_response = api_instance.post_speechandtextanalytics_programs_publishjobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->post_speechandtextanalytics_programs_publishjobs: %s\\n\" % e)"
  },
  "post_speechandtextanalytics_sentimentfeedback": {
    "operationId": "post_speechandtextanalytics_sentimentfeedback",
    "functionName": "post_speechandtextanalytics_sentimentfeedback",
    "signature": "post_speechandtextanalytics_sentimentfeedback(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SentimentFeedback",
        "required": "true"
      }
    ],
    "return": "SentimentFeedback",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nbody = PureCloudPlatformClientV2.SentimentFeedback() # SentimentFeedback | The SentimentFeedback to create\n\ntry:\n    # Create a Speech & Text Analytics SentimentFeedback\n    api_response = api_instance.post_speechandtextanalytics_sentimentfeedback(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->post_speechandtextanalytics_sentimentfeedback: %s\\n\" % e)"
  },
  "post_speechandtextanalytics_topics": {
    "operationId": "post_speechandtextanalytics_topics",
    "functionName": "post_speechandtextanalytics_topics",
    "signature": "post_speechandtextanalytics_topics(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TopicRequest",
        "required": "true"
      }
    ],
    "return": "Topic",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nbody = PureCloudPlatformClientV2.TopicRequest() # TopicRequest | The topic to create\n\ntry:\n    # Create new Speech & Text Analytics topic\n    api_response = api_instance.post_speechandtextanalytics_topics(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->post_speechandtextanalytics_topics: %s\\n\" % e)"
  },
  "post_speechandtextanalytics_topics_publishjobs": {
    "operationId": "post_speechandtextanalytics_topics_publishjobs",
    "functionName": "post_speechandtextanalytics_topics_publishjobs",
    "signature": "post_speechandtextanalytics_topics_publishjobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TopicJobRequest",
        "required": "true"
      }
    ],
    "return": "TopicJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nbody = PureCloudPlatformClientV2.TopicJobRequest() # TopicJobRequest | The publish topics job to create\n\ntry:\n    # Create new Speech & Text Analytics publish topics job\n    api_response = api_instance.post_speechandtextanalytics_topics_publishjobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->post_speechandtextanalytics_topics_publishjobs: %s\\n\" % e)"
  },
  "put_speechandtextanalytics_category": {
    "operationId": "put_speechandtextanalytics_category",
    "functionName": "put_speechandtextanalytics_category",
    "signature": "put_speechandtextanalytics_category(category_id, body)",
    "parameters": [
      {
        "name": "category_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CategoryRequest",
        "required": "true"
      }
    ],
    "return": "StaCategory",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\ncategory_id = 'category_id_example' # str | The id of the category\nbody = PureCloudPlatformClientV2.CategoryRequest() # CategoryRequest | The updated category\n\ntry:\n    # Update a Speech & Text Analytics category by ID\n    api_response = api_instance.put_speechandtextanalytics_category(category_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->put_speechandtextanalytics_category: %s\\n\" % e)"
  },
  "put_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id": {
    "operationId": "put_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id",
    "functionName": "put_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id",
    "signature": "put_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id(dictionary_feedback_id, body)",
    "parameters": [
      {
        "name": "dictionary_feedback_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DictionaryFeedback",
        "required": "false"
      }
    ],
    "return": "DictionaryFeedback",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\ndictionary_feedback_id = 'dictionary_feedback_id_example' # str | The Id of the Dictionary Feedback\nbody = PureCloudPlatformClientV2.DictionaryFeedback() # DictionaryFeedback |  (optional)\n\ntry:\n    # Update existing Speech & Text Analytics dictionary feedback by id\n    api_response = api_instance.put_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id(dictionary_feedback_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->put_speechandtextanalytics_dictionaryfeedback_dictionary_feedback_id: %s\\n\" % e)"
  },
  "put_speechandtextanalytics_program": {
    "operationId": "put_speechandtextanalytics_program",
    "functionName": "put_speechandtextanalytics_program",
    "signature": "put_speechandtextanalytics_program(program_id, body)",
    "parameters": [
      {
        "name": "program_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ProgramRequest",
        "required": "true"
      }
    ],
    "return": "Program",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nprogram_id = 'program_id_example' # str | The id of the program\nbody = PureCloudPlatformClientV2.ProgramRequest() # ProgramRequest | The program to update\n\ntry:\n    # Update existing Speech & Text Analytics program\n    api_response = api_instance.put_speechandtextanalytics_program(program_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->put_speechandtextanalytics_program: %s\\n\" % e)"
  },
  "put_speechandtextanalytics_program_mappings": {
    "operationId": "put_speechandtextanalytics_program_mappings",
    "functionName": "put_speechandtextanalytics_program_mappings",
    "signature": "put_speechandtextanalytics_program_mappings(program_id, body)",
    "parameters": [
      {
        "name": "program_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ProgramMappingsRequest",
        "required": "true"
      }
    ],
    "return": "ProgramMappings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nprogram_id = 'program_id_example' # str | The id of the program\nbody = PureCloudPlatformClientV2.ProgramMappingsRequest() # ProgramMappingsRequest | The program to set mappings for\n\ntry:\n    # Set Speech & Text Analytics program mappings to queues and flows\n    api_response = api_instance.put_speechandtextanalytics_program_mappings(program_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->put_speechandtextanalytics_program_mappings: %s\\n\" % e)"
  },
  "put_speechandtextanalytics_program_transcriptionengines": {
    "operationId": "put_speechandtextanalytics_program_transcriptionengines",
    "functionName": "put_speechandtextanalytics_program_transcriptionengines",
    "signature": "put_speechandtextanalytics_program_transcriptionengines(program_id, body)",
    "parameters": [
      {
        "name": "program_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TranscriptionEnginesRequest",
        "required": "true"
      }
    ],
    "return": "ProgramTranscriptionEngines",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nprogram_id = 'program_id_example' # str | The id of the program\nbody = PureCloudPlatformClientV2.TranscriptionEnginesRequest() # TranscriptionEnginesRequest | Program transcription engine setting\n\ntry:\n    # Update transcription engine settings of a program\n    api_response = api_instance.put_speechandtextanalytics_program_transcriptionengines(program_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->put_speechandtextanalytics_program_transcriptionengines: %s\\n\" % e)"
  },
  "put_speechandtextanalytics_settings": {
    "operationId": "put_speechandtextanalytics_settings",
    "functionName": "put_speechandtextanalytics_settings",
    "signature": "put_speechandtextanalytics_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SpeechTextAnalyticsSettingsRequest",
        "required": "true"
      }
    ],
    "return": "SpeechTextAnalyticsSettingsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\nbody = PureCloudPlatformClientV2.SpeechTextAnalyticsSettingsRequest() # SpeechTextAnalyticsSettingsRequest | Speech And Text Analytics Settings\n\ntry:\n    # Update Speech And Text Analytics Settings\n    api_response = api_instance.put_speechandtextanalytics_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->put_speechandtextanalytics_settings: %s\\n\" % e)"
  },
  "put_speechandtextanalytics_topic": {
    "operationId": "put_speechandtextanalytics_topic",
    "functionName": "put_speechandtextanalytics_topic",
    "signature": "put_speechandtextanalytics_topic(topic_id, body)",
    "parameters": [
      {
        "name": "topic_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TopicRequest",
        "required": "true"
      }
    ],
    "return": "Topic",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.SpeechTextAnalyticsApi();\ntopic_id = 'topic_id_example' # str | The id of the topic\nbody = PureCloudPlatformClientV2.TopicRequest() # TopicRequest | The topic to update\n\ntry:\n    # Update existing Speech & Text Analytics topic\n    api_response = api_instance.put_speechandtextanalytics_topic(topic_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling SpeechTextAnalyticsApi->put_speechandtextanalytics_topic: %s\\n\" % e)"
  },
  "delete_station_associateduser": {
    "operationId": "delete_station_associateduser",
    "functionName": "delete_station_associateduser",
    "signature": "delete_station_associateduser(station_id)",
    "parameters": [
      {
        "name": "station_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.StationsApi();\nstation_id = 'station_id_example' # str | Station ID\n\ntry:\n    # Unassigns the user assigned to this station\n    api_instance.delete_station_associateduser(station_id)\nexcept ApiException as e:\n    print(\"Exception when calling StationsApi->delete_station_associateduser: %s\\n\" % e)"
  },
  "get_station": {
    "operationId": "get_station",
    "functionName": "get_station",
    "signature": "get_station(station_id)",
    "parameters": [
      {
        "name": "station_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Station",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.StationsApi();\nstation_id = 'station_id_example' # str | Station ID\n\ntry:\n    # Get station.\n    api_response = api_instance.get_station(station_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling StationsApi->get_station: %s\\n\" % e)"
  },
  "get_stations": {
    "operationId": "get_stations",
    "functionName": "get_stations",
    "signature": "get_stations(page_size, page_number, sort_by, name, user_selectable, web_rtc_user_id, id, line_appearance_id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "user_selectable",
        "type": "str",
        "required": "false"
      },
      {
        "name": "web_rtc_user_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "line_appearance_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "StationEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.StationsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nname = 'name_example' # str | Name (optional)\nuser_selectable = 'user_selectable_example' # str | True for stations that the user can select otherwise false (optional)\nweb_rtc_user_id = 'web_rtc_user_id_example' # str | Filter for the webRtc station of the webRtcUserId (optional)\nid = 'id_example' # str | Comma separated list of stationIds (optional)\nline_appearance_id = 'line_appearance_id_example' # str | lineAppearanceId (optional)\n\ntry:\n    # Get the list of available stations.\n    api_response = api_instance.get_stations(page_size=page_size, page_number=page_number, sort_by=sort_by, name=name, user_selectable=user_selectable, web_rtc_user_id=web_rtc_user_id, id=id, line_appearance_id=line_appearance_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling StationsApi->get_stations: %s\\n\" % e)"
  },
  "delete_taskmanagement_workbin": {
    "operationId": "delete_taskmanagement_workbin",
    "functionName": "delete_taskmanagement_workbin",
    "signature": "delete_taskmanagement_workbin(workbin_id)",
    "parameters": [
      {
        "name": "workbin_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkbin_id = 'workbin_id_example' # str | Workbin ID\n\ntry:\n    # Delete a workbin\n    api_instance.delete_taskmanagement_workbin(workbin_id)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->delete_taskmanagement_workbin: %s\\n\" % e)"
  },
  "delete_taskmanagement_workitem": {
    "operationId": "delete_taskmanagement_workitem",
    "functionName": "delete_taskmanagement_workitem",
    "signature": "delete_taskmanagement_workitem(workitem_id)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | Workitem ID\n\ntry:\n    # Delete a workitem\n    api_instance.delete_taskmanagement_workitem(workitem_id)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->delete_taskmanagement_workitem: %s\\n\" % e)"
  },
  "delete_taskmanagement_workitems_schema": {
    "operationId": "delete_taskmanagement_workitems_schema",
    "functionName": "delete_taskmanagement_workitems_schema",
    "signature": "delete_taskmanagement_workitems_schema(schema_id)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nschema_id = 'schema_id_example' # str | Schema ID\n\ntry:\n    # Delete a schema\n    api_instance.delete_taskmanagement_workitems_schema(schema_id)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->delete_taskmanagement_workitems_schema: %s\\n\" % e)"
  },
  "delete_taskmanagement_worktype": {
    "operationId": "delete_taskmanagement_worktype",
    "functionName": "delete_taskmanagement_worktype",
    "signature": "delete_taskmanagement_worktype(worktype_id)",
    "parameters": [
      {
        "name": "worktype_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworktype_id = 'worktype_id_example' # str | Worktype id\n\ntry:\n    # Delete a worktype\n    api_instance.delete_taskmanagement_worktype(worktype_id)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->delete_taskmanagement_worktype: %s\\n\" % e)"
  },
  "delete_taskmanagement_worktype_status": {
    "operationId": "delete_taskmanagement_worktype_status",
    "functionName": "delete_taskmanagement_worktype_status",
    "signature": "delete_taskmanagement_worktype_status(worktype_id, status_id)",
    "parameters": [
      {
        "name": "worktype_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "status_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworktype_id = 'worktype_id_example' # str | Worktype id\nstatus_id = 'status_id_example' # str | Status id\n\ntry:\n    # Delete a status\n    api_instance.delete_taskmanagement_worktype_status(worktype_id, status_id)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->delete_taskmanagement_worktype_status: %s\\n\" % e)"
  },
  "get_taskmanagement_workbin": {
    "operationId": "get_taskmanagement_workbin",
    "functionName": "get_taskmanagement_workbin",
    "signature": "get_taskmanagement_workbin(workbin_id)",
    "parameters": [
      {
        "name": "workbin_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Workbin",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkbin_id = 'workbin_id_example' # str | Workbin ID\n\ntry:\n    # Get a workbin\n    api_response = api_instance.get_taskmanagement_workbin(workbin_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workbin: %s\\n\" % e)"
  },
  "get_taskmanagement_workbin_history": {
    "operationId": "get_taskmanagement_workbin_history",
    "functionName": "get_taskmanagement_workbin_history",
    "signature": "get_taskmanagement_workbin_history(workbin_id, after, page_size, sort_order)",
    "parameters": [
      {
        "name": "workbin_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WorkbinChangeListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkbin_id = 'workbin_id_example' # str | Workbin ID\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 25 # int | Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200. (optional) (default to 25)\nsort_order = ''descending'' # str | Ascending or descending sort order (optional) (default to 'descending')\n\ntry:\n    # Get a listing of a workbin's attribute change history\n    api_response = api_instance.get_taskmanagement_workbin_history(workbin_id, after=after, page_size=page_size, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workbin_history: %s\\n\" % e)"
  },
  "get_taskmanagement_workbin_version": {
    "operationId": "get_taskmanagement_workbin_version",
    "functionName": "get_taskmanagement_workbin_version",
    "signature": "get_taskmanagement_workbin_version(workbin_id, entity_version)",
    "parameters": [
      {
        "name": "workbin_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "entity_version",
        "type": "int",
        "required": "true"
      }
    ],
    "return": "WorkbinVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkbin_id = 'workbin_id_example' # str | Workbin ID\nentity_version = 56 # int | Workbin version\n\ntry:\n    # Get a version of a workbin\n    api_response = api_instance.get_taskmanagement_workbin_version(workbin_id, entity_version)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workbin_version: %s\\n\" % e)"
  },
  "get_taskmanagement_workbin_versions": {
    "operationId": "get_taskmanagement_workbin_versions",
    "functionName": "get_taskmanagement_workbin_versions",
    "signature": "get_taskmanagement_workbin_versions(workbin_id, after, page_size, sort_order)",
    "parameters": [
      {
        "name": "workbin_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WorkbinVersionListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkbin_id = 'workbin_id_example' # str | Workbin ID\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 25 # int | Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200. (optional) (default to 25)\nsort_order = ''descending'' # str | Ascending or descending sort order (optional) (default to 'descending')\n\ntry:\n    # Get all versions of a workbin\n    api_response = api_instance.get_taskmanagement_workbin_versions(workbin_id, after=after, page_size=page_size, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workbin_versions: %s\\n\" % e)"
  },
  "get_taskmanagement_workitem": {
    "operationId": "get_taskmanagement_workitem",
    "functionName": "get_taskmanagement_workitem",
    "signature": "get_taskmanagement_workitem(workitem_id, expands)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expands",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "Workitem",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | Workitem ID\nexpands = 'expands_example' # str | Which fields to expand. Comma separated if more than one. (optional)\n\ntry:\n    # Get a workitem\n    api_response = api_instance.get_taskmanagement_workitem(workitem_id, expands=expands)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workitem: %s\\n\" % e)"
  },
  "get_taskmanagement_workitem_history": {
    "operationId": "get_taskmanagement_workitem_history",
    "functionName": "get_taskmanagement_workitem_history",
    "signature": "get_taskmanagement_workitem_history(workitem_id, after, page_size, sort_order)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WorkitemChangeListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | Workitem ID\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 25 # int | Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200. (optional) (default to 25)\nsort_order = ''descending'' # str | Ascending or descending sort order (optional) (default to 'descending')\n\ntry:\n    # Get a listing of a workitem's attribute change history\n    api_response = api_instance.get_taskmanagement_workitem_history(workitem_id, after=after, page_size=page_size, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workitem_history: %s\\n\" % e)"
  },
  "get_taskmanagement_workitem_user_wrapups": {
    "operationId": "get_taskmanagement_workitem_user_wrapups",
    "functionName": "get_taskmanagement_workitem_user_wrapups",
    "signature": "get_taskmanagement_workitem_user_wrapups(workitem_id, user_id, expands, after, page_size, sort_order)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expands",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WorkitemWrapup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | The ID of the Workitem.\nuser_id = 'user_id_example' # str | The ID of the user\nexpands = 'expands_example' # str | Which fields, if any, to expand. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 25 # int | Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 50. (optional) (default to 25)\nsort_order = ''descending'' # str | Ascending or descending sort order (optional) (default to 'descending')\n\ntry:\n    # Get all wrapup codes added for the given user for a workitem.\n    api_response = api_instance.get_taskmanagement_workitem_user_wrapups(workitem_id, user_id, expands=expands, after=after, page_size=page_size, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workitem_user_wrapups: %s\\n\" % e)"
  },
  "get_taskmanagement_workitem_version": {
    "operationId": "get_taskmanagement_workitem_version",
    "functionName": "get_taskmanagement_workitem_version",
    "signature": "get_taskmanagement_workitem_version(workitem_id, entity_version)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "entity_version",
        "type": "int",
        "required": "true"
      }
    ],
    "return": "WorkitemVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | Workitem ID\nentity_version = 56 # int | Workitem version\n\ntry:\n    # Get a version of a workitem\n    api_response = api_instance.get_taskmanagement_workitem_version(workitem_id, entity_version)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workitem_version: %s\\n\" % e)"
  },
  "get_taskmanagement_workitem_versions": {
    "operationId": "get_taskmanagement_workitem_versions",
    "functionName": "get_taskmanagement_workitem_versions",
    "signature": "get_taskmanagement_workitem_versions(workitem_id, after, page_size, sort_order)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WorkitemVersionListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | Workitem ID\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 25 # int | Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200. (optional) (default to 25)\nsort_order = ''descending'' # str | Ascending or descending sort order (optional) (default to 'descending')\n\ntry:\n    # Get all versions of a workitem\n    api_response = api_instance.get_taskmanagement_workitem_versions(workitem_id, after=after, page_size=page_size, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workitem_versions: %s\\n\" % e)"
  },
  "get_taskmanagement_workitem_wrapups": {
    "operationId": "get_taskmanagement_workitem_wrapups",
    "functionName": "get_taskmanagement_workitem_wrapups",
    "signature": "get_taskmanagement_workitem_wrapups(workitem_id, expands, after, page_size, sort_order)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expands",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WorkitemWrapupEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | The ID of the Workitem.\nexpands = 'expands_example' # str | Which fields, if any, to expand. (optional)\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 25 # int | Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 50. (optional) (default to 25)\nsort_order = ''descending'' # str | Ascending or descending sort order (optional) (default to 'descending')\n\ntry:\n    # Get all wrapup codes added for all users for a workitem.\n    api_response = api_instance.get_taskmanagement_workitem_wrapups(workitem_id, expands=expands, after=after, page_size=page_size, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workitem_wrapups: %s\\n\" % e)"
  },
  "get_taskmanagement_workitems_query_job": {
    "operationId": "get_taskmanagement_workitems_query_job",
    "functionName": "get_taskmanagement_workitems_query_job",
    "signature": "get_taskmanagement_workitems_query_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WorkitemQueryJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get the workitem query job associated with the job id.\n    api_response = api_instance.get_taskmanagement_workitems_query_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workitems_query_job: %s\\n\" % e)"
  },
  "get_taskmanagement_workitems_query_job_results": {
    "operationId": "get_taskmanagement_workitems_query_job_results",
    "functionName": "get_taskmanagement_workitems_query_job_results",
    "signature": "get_taskmanagement_workitems_query_job_results(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WorkitemPagedEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Get results from for workitem query job \n    api_response = api_instance.get_taskmanagement_workitems_query_job_results(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workitems_query_job_results: %s\\n\" % e)"
  },
  "get_taskmanagement_workitems_schema": {
    "operationId": "get_taskmanagement_workitems_schema",
    "functionName": "get_taskmanagement_workitems_schema",
    "signature": "get_taskmanagement_workitems_schema(schema_id)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nschema_id = 'schema_id_example' # str | Schema ID\n\ntry:\n    # Get a schema\n    api_response = api_instance.get_taskmanagement_workitems_schema(schema_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workitems_schema: %s\\n\" % e)"
  },
  "get_taskmanagement_workitems_schema_version": {
    "operationId": "get_taskmanagement_workitems_schema_version",
    "functionName": "get_taskmanagement_workitems_schema_version",
    "signature": "get_taskmanagement_workitems_schema_version(schema_id, version_id)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nschema_id = 'schema_id_example' # str | Schema ID\nversion_id = 'version_id_example' # str | Schema version\n\ntry:\n    # Get a specific version of a schema\n    api_response = api_instance.get_taskmanagement_workitems_schema_version(schema_id, version_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workitems_schema_version: %s\\n\" % e)"
  },
  "get_taskmanagement_workitems_schema_versions": {
    "operationId": "get_taskmanagement_workitems_schema_versions",
    "functionName": "get_taskmanagement_workitems_schema_versions",
    "signature": "get_taskmanagement_workitems_schema_versions(schema_id)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nschema_id = 'schema_id_example' # str | Schema ID\n\ntry:\n    # Get all versions of a schema\n    api_response = api_instance.get_taskmanagement_workitems_schema_versions(schema_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workitems_schema_versions: %s\\n\" % e)"
  },
  "get_taskmanagement_workitems_schemas": {
    "operationId": "get_taskmanagement_workitems_schemas",
    "functionName": "get_taskmanagement_workitems_schemas",
    "signature": "get_taskmanagement_workitems_schemas()",
    "return": "DataSchemaListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\n\ntry:\n    # Get a list of schemas.\n    api_response = api_instance.get_taskmanagement_workitems_schemas()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_workitems_schemas: %s\\n\" % e)"
  },
  "get_taskmanagement_worktype": {
    "operationId": "get_taskmanagement_worktype",
    "functionName": "get_taskmanagement_worktype",
    "signature": "get_taskmanagement_worktype(worktype_id, expands)",
    "parameters": [
      {
        "name": "worktype_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expands",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "Worktype",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworktype_id = 'worktype_id_example' # str | Worktype id\nexpands = ['expands_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Get a worktype\n    api_response = api_instance.get_taskmanagement_worktype(worktype_id, expands=expands)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_worktype: %s\\n\" % e)"
  },
  "get_taskmanagement_worktype_history": {
    "operationId": "get_taskmanagement_worktype_history",
    "functionName": "get_taskmanagement_worktype_history",
    "signature": "get_taskmanagement_worktype_history(worktype_id, after, page_size, sort_order)",
    "parameters": [
      {
        "name": "worktype_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WorktypeChangeListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworktype_id = 'worktype_id_example' # str | Worktype id\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 25 # int | Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200. (optional) (default to 25)\nsort_order = ''descending'' # str | Ascending or descending sort order (optional) (default to 'descending')\n\ntry:\n    # Get a listing of a worktype's attribute change history\n    api_response = api_instance.get_taskmanagement_worktype_history(worktype_id, after=after, page_size=page_size, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_worktype_history: %s\\n\" % e)"
  },
  "get_taskmanagement_worktype_status": {
    "operationId": "get_taskmanagement_worktype_status",
    "functionName": "get_taskmanagement_worktype_status",
    "signature": "get_taskmanagement_worktype_status(worktype_id, status_id)",
    "parameters": [
      {
        "name": "worktype_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "status_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WorkitemStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworktype_id = 'worktype_id_example' # str | Worktype id\nstatus_id = 'status_id_example' # str | Status id\n\ntry:\n    # Get a status\n    api_response = api_instance.get_taskmanagement_worktype_status(worktype_id, status_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_worktype_status: %s\\n\" % e)"
  },
  "get_taskmanagement_worktype_statuses": {
    "operationId": "get_taskmanagement_worktype_statuses",
    "functionName": "get_taskmanagement_worktype_statuses",
    "signature": "get_taskmanagement_worktype_statuses(worktype_id)",
    "parameters": [
      {
        "name": "worktype_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WorkitemStatusListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworktype_id = 'worktype_id_example' # str | Worktype id\n\ntry:\n    # Get list of statuses for this worktype.\n    api_response = api_instance.get_taskmanagement_worktype_statuses(worktype_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_worktype_statuses: %s\\n\" % e)"
  },
  "get_taskmanagement_worktype_version": {
    "operationId": "get_taskmanagement_worktype_version",
    "functionName": "get_taskmanagement_worktype_version",
    "signature": "get_taskmanagement_worktype_version(worktype_id, entity_version)",
    "parameters": [
      {
        "name": "worktype_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "entity_version",
        "type": "int",
        "required": "true"
      }
    ],
    "return": "WorktypeVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworktype_id = 'worktype_id_example' # str | Worktype id\nentity_version = 56 # int | Worktype version\n\ntry:\n    # Get a version of a worktype\n    api_response = api_instance.get_taskmanagement_worktype_version(worktype_id, entity_version)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_worktype_version: %s\\n\" % e)"
  },
  "get_taskmanagement_worktype_versions": {
    "operationId": "get_taskmanagement_worktype_versions",
    "functionName": "get_taskmanagement_worktype_versions",
    "signature": "get_taskmanagement_worktype_versions(worktype_id, after, page_size, sort_order)",
    "parameters": [
      {
        "name": "worktype_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WorktypeVersionListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworktype_id = 'worktype_id_example' # str | Worktype id\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)\npage_size = 25 # int | Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 200. (optional) (default to 25)\nsort_order = ''descending'' # str | Ascending or descending sort order (optional) (default to 'descending')\n\ntry:\n    # Get all versions of a worktype\n    api_response = api_instance.get_taskmanagement_worktype_versions(worktype_id, after=after, page_size=page_size, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->get_taskmanagement_worktype_versions: %s\\n\" % e)"
  },
  "patch_taskmanagement_workbin": {
    "operationId": "patch_taskmanagement_workbin",
    "functionName": "patch_taskmanagement_workbin",
    "signature": "patch_taskmanagement_workbin(workbin_id, body)",
    "parameters": [
      {
        "name": "workbin_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WorkbinUpdate",
        "required": "true"
      }
    ],
    "return": "Workbin",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkbin_id = 'workbin_id_example' # str | Workbin ID\nbody = PureCloudPlatformClientV2.WorkbinUpdate() # WorkbinUpdate | Json with attributes and their new values: {\\\"description\\\":\\\"new description\\\", \\\"name\\\":\\\"new name\\\"}.\n\ntry:\n    # Update the attributes of a workbin\n    api_response = api_instance.patch_taskmanagement_workbin(workbin_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->patch_taskmanagement_workbin: %s\\n\" % e)"
  },
  "patch_taskmanagement_workitem": {
    "operationId": "patch_taskmanagement_workitem",
    "functionName": "patch_taskmanagement_workitem",
    "signature": "patch_taskmanagement_workitem(workitem_id, body)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WorkitemUpdate",
        "required": "true"
      }
    ],
    "return": "Workitem",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | Workitem ID\nbody = PureCloudPlatformClientV2.WorkitemUpdate() # WorkitemUpdate | Workitem\n\ntry:\n    # Update the attributes of a workitem\n    api_response = api_instance.patch_taskmanagement_workitem(workitem_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->patch_taskmanagement_workitem: %s\\n\" % e)"
  },
  "patch_taskmanagement_workitem_assignment": {
    "operationId": "patch_taskmanagement_workitem_assignment",
    "functionName": "patch_taskmanagement_workitem_assignment",
    "signature": "patch_taskmanagement_workitem_assignment(workitem_id, body)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WorkitemManualAssign",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | Workitem ID\nbody = PureCloudPlatformClientV2.WorkitemManualAssign() # WorkitemManualAssign | Targeted user\n\ntry:\n    # Attempts to manually assign a specified workitem to a specified user.  Ignores bullseye ring, PAR score, skills, and languages.\n    api_instance.patch_taskmanagement_workitem_assignment(workitem_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->patch_taskmanagement_workitem_assignment: %s\\n\" % e)"
  },
  "patch_taskmanagement_workitem_user_wrapups": {
    "operationId": "patch_taskmanagement_workitem_user_wrapups",
    "functionName": "patch_taskmanagement_workitem_user_wrapups",
    "signature": "patch_taskmanagement_workitem_user_wrapups(workitem_id, user_id, body)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WorkitemWrapupUpdate",
        "required": "true"
      }
    ],
    "return": "WorkitemWrapup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | The ID of the Workitem.\nuser_id = 'user_id_example' # str | The ID of the user\nbody = PureCloudPlatformClientV2.WorkitemWrapupUpdate() # WorkitemWrapupUpdate | Request body to add/remove a wrapup code for a workitem\n\ntry:\n    # Add/Remove a wrapup code for a given user in a workitem.\n    api_response = api_instance.patch_taskmanagement_workitem_user_wrapups(workitem_id, user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->patch_taskmanagement_workitem_user_wrapups: %s\\n\" % e)"
  },
  "patch_taskmanagement_workitem_users_me_wrapups": {
    "operationId": "patch_taskmanagement_workitem_users_me_wrapups",
    "functionName": "patch_taskmanagement_workitem_users_me_wrapups",
    "signature": "patch_taskmanagement_workitem_users_me_wrapups(workitem_id, body)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WorkitemWrapupUpdate",
        "required": "true"
      }
    ],
    "return": "WorkitemWrapup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | The ID of the Workitem.\nbody = PureCloudPlatformClientV2.WorkitemWrapupUpdate() # WorkitemWrapupUpdate | Request body to add/remove the wrapup code for workitem\n\ntry:\n    # Add/Remove a wrapup code for the current user in a workitem.\n    api_response = api_instance.patch_taskmanagement_workitem_users_me_wrapups(workitem_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->patch_taskmanagement_workitem_users_me_wrapups: %s\\n\" % e)"
  },
  "patch_taskmanagement_worktype": {
    "operationId": "patch_taskmanagement_worktype",
    "functionName": "patch_taskmanagement_worktype",
    "signature": "patch_taskmanagement_worktype(worktype_id, body)",
    "parameters": [
      {
        "name": "worktype_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WorktypeUpdate",
        "required": "false"
      }
    ],
    "return": "Worktype",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworktype_id = 'worktype_id_example' # str | Worktype id\nbody = PureCloudPlatformClientV2.WorktypeUpdate() # WorktypeUpdate | body (optional)\n\ntry:\n    # Update the attributes of a worktype\n    api_response = api_instance.patch_taskmanagement_worktype(worktype_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->patch_taskmanagement_worktype: %s\\n\" % e)"
  },
  "patch_taskmanagement_worktype_status": {
    "operationId": "patch_taskmanagement_worktype_status",
    "functionName": "patch_taskmanagement_worktype_status",
    "signature": "patch_taskmanagement_worktype_status(worktype_id, status_id, body)",
    "parameters": [
      {
        "name": "worktype_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "status_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WorkitemStatusUpdate",
        "required": "false"
      }
    ],
    "return": "WorkitemStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworktype_id = 'worktype_id_example' # str | Worktype id\nstatus_id = 'status_id_example' # str | Status id\nbody = PureCloudPlatformClientV2.WorkitemStatusUpdate() # WorkitemStatusUpdate | body (optional)\n\ntry:\n    # Update the attributes of a status\n    api_response = api_instance.patch_taskmanagement_worktype_status(worktype_id, status_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->patch_taskmanagement_worktype_status: %s\\n\" % e)"
  },
  "post_taskmanagement_workbins": {
    "operationId": "post_taskmanagement_workbins",
    "functionName": "post_taskmanagement_workbins",
    "signature": "post_taskmanagement_workbins(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WorkbinCreate",
        "required": "false"
      }
    ],
    "return": "Workbin",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nbody = PureCloudPlatformClientV2.WorkbinCreate() # WorkbinCreate | body (optional)\n\ntry:\n    # Create a workbin\n    api_response = api_instance.post_taskmanagement_workbins(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->post_taskmanagement_workbins: %s\\n\" % e)"
  },
  "post_taskmanagement_workbins_query": {
    "operationId": "post_taskmanagement_workbins_query",
    "functionName": "post_taskmanagement_workbins_query",
    "signature": "post_taskmanagement_workbins_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WorkbinQueryRequest",
        "required": "true"
      }
    ],
    "return": "WorkbinQueryEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nbody = PureCloudPlatformClientV2.WorkbinQueryRequest() # WorkbinQueryRequest | QueryPostRequest\n\ntry:\n    # Query for workbins\n    api_response = api_instance.post_taskmanagement_workbins_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->post_taskmanagement_workbins_query: %s\\n\" % e)"
  },
  "post_taskmanagement_workitem_acd_cancel": {
    "operationId": "post_taskmanagement_workitem_acd_cancel",
    "functionName": "post_taskmanagement_workitem_acd_cancel",
    "signature": "post_taskmanagement_workitem_acd_cancel(workitem_id)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Workitem",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | Workitem ID\n\ntry:\n    # Cancel the assignment process for a workitem that is currently queued for assignment through ACD.\n    api_response = api_instance.post_taskmanagement_workitem_acd_cancel(workitem_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->post_taskmanagement_workitem_acd_cancel: %s\\n\" % e)"
  },
  "post_taskmanagement_workitem_disconnect": {
    "operationId": "post_taskmanagement_workitem_disconnect",
    "functionName": "post_taskmanagement_workitem_disconnect",
    "signature": "post_taskmanagement_workitem_disconnect(workitem_id)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Workitem",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | Workitem ID\n\ntry:\n    # Disconnect the assignee of the workitem\n    api_response = api_instance.post_taskmanagement_workitem_disconnect(workitem_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->post_taskmanagement_workitem_disconnect: %s\\n\" % e)"
  },
  "post_taskmanagement_workitem_terminate": {
    "operationId": "post_taskmanagement_workitem_terminate",
    "functionName": "post_taskmanagement_workitem_terminate",
    "signature": "post_taskmanagement_workitem_terminate(workitem_id, body)",
    "parameters": [
      {
        "name": "workitem_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WorkitemTerminate",
        "required": "false"
      }
    ],
    "return": "Workitem",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworkitem_id = 'workitem_id_example' # str | Workitem ID\nbody = PureCloudPlatformClientV2.WorkitemTerminate() # WorkitemTerminate | Terminated request (optional)\n\ntry:\n    # Terminate a workitem\n    api_response = api_instance.post_taskmanagement_workitem_terminate(workitem_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->post_taskmanagement_workitem_terminate: %s\\n\" % e)"
  },
  "post_taskmanagement_workitems": {
    "operationId": "post_taskmanagement_workitems",
    "functionName": "post_taskmanagement_workitems",
    "signature": "post_taskmanagement_workitems(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WorkitemCreate",
        "required": "true"
      }
    ],
    "return": "Workitem",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nbody = PureCloudPlatformClientV2.WorkitemCreate() # WorkitemCreate | Workitem\n\ntry:\n    # Create a workitem\n    api_response = api_instance.post_taskmanagement_workitems(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->post_taskmanagement_workitems: %s\\n\" % e)"
  },
  "post_taskmanagement_workitems_query": {
    "operationId": "post_taskmanagement_workitems_query",
    "functionName": "post_taskmanagement_workitems_query",
    "signature": "post_taskmanagement_workitems_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WorkitemQueryPostRequest",
        "required": "true"
      }
    ],
    "return": "WorkitemPostQueryEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nbody = PureCloudPlatformClientV2.WorkitemQueryPostRequest() # WorkitemQueryPostRequest | WorkitemQueryPostRequest\n\ntry:\n    # Query for workitems\n    api_response = api_instance.post_taskmanagement_workitems_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->post_taskmanagement_workitems_query: %s\\n\" % e)"
  },
  "post_taskmanagement_workitems_query_jobs": {
    "operationId": "post_taskmanagement_workitems_query_jobs",
    "functionName": "post_taskmanagement_workitems_query_jobs",
    "signature": "post_taskmanagement_workitems_query_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WorkitemQueryJobCreate",
        "required": "true"
      }
    ],
    "return": "WorkitemQueryJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nbody = PureCloudPlatformClientV2.WorkitemQueryJobCreate() # WorkitemQueryJobCreate | WorkitemQueryJobCreate\n\ntry:\n    # Create a workitem query job\n    api_response = api_instance.post_taskmanagement_workitems_query_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->post_taskmanagement_workitems_query_jobs: %s\\n\" % e)"
  },
  "post_taskmanagement_workitems_schemas": {
    "operationId": "post_taskmanagement_workitems_schemas",
    "functionName": "post_taskmanagement_workitems_schemas",
    "signature": "post_taskmanagement_workitems_schemas(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DataSchema",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nbody = PureCloudPlatformClientV2.DataSchema() # DataSchema | Schema\n\ntry:\n    # Create a schema\n    api_response = api_instance.post_taskmanagement_workitems_schemas(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->post_taskmanagement_workitems_schemas: %s\\n\" % e)"
  },
  "post_taskmanagement_worktype_statuses": {
    "operationId": "post_taskmanagement_worktype_statuses",
    "functionName": "post_taskmanagement_worktype_statuses",
    "signature": "post_taskmanagement_worktype_statuses(worktype_id, body)",
    "parameters": [
      {
        "name": "worktype_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WorkitemStatusCreate",
        "required": "false"
      }
    ],
    "return": "WorkitemStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nworktype_id = 'worktype_id_example' # str | Worktype id\nbody = PureCloudPlatformClientV2.WorkitemStatusCreate() # WorkitemStatusCreate | body (optional)\n\ntry:\n    # Add a status to a worktype\n    api_response = api_instance.post_taskmanagement_worktype_statuses(worktype_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->post_taskmanagement_worktype_statuses: %s\\n\" % e)"
  },
  "post_taskmanagement_worktypes": {
    "operationId": "post_taskmanagement_worktypes",
    "functionName": "post_taskmanagement_worktypes",
    "signature": "post_taskmanagement_worktypes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WorktypeCreate",
        "required": "false"
      }
    ],
    "return": "Worktype",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nbody = PureCloudPlatformClientV2.WorktypeCreate() # WorktypeCreate | body (optional)\n\ntry:\n    # Create a worktype\n    api_response = api_instance.post_taskmanagement_worktypes(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->post_taskmanagement_worktypes: %s\\n\" % e)"
  },
  "post_taskmanagement_worktypes_query": {
    "operationId": "post_taskmanagement_worktypes_query",
    "functionName": "post_taskmanagement_worktypes_query",
    "signature": "post_taskmanagement_worktypes_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WorktypeQueryRequest",
        "required": "true"
      }
    ],
    "return": "WorktypeQueryEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nbody = PureCloudPlatformClientV2.WorktypeQueryRequest() # WorktypeQueryRequest | QueryPostRequest\n\ntry:\n    # Query for worktypes\n    api_response = api_instance.post_taskmanagement_worktypes_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->post_taskmanagement_worktypes_query: %s\\n\" % e)"
  },
  "put_taskmanagement_workitems_schema": {
    "operationId": "put_taskmanagement_workitems_schema",
    "functionName": "put_taskmanagement_workitems_schema",
    "signature": "put_taskmanagement_workitems_schema(schema_id, body)",
    "parameters": [
      {
        "name": "schema_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DataSchema",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TaskManagementApi();\nschema_id = 'schema_id_example' # str | Schema ID\nbody = PureCloudPlatformClientV2.DataSchema() # DataSchema | Data Schema\n\ntry:\n    # Update a schema\n    api_response = api_instance.put_taskmanagement_workitems_schema(schema_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TaskManagementApi->put_taskmanagement_workitems_schema: %s\\n\" % e)"
  },
  "delete_team": {
    "operationId": "delete_team",
    "functionName": "delete_team",
    "signature": "delete_team(team_id)",
    "parameters": [
      {
        "name": "team_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TeamsApi();\nteam_id = 'team_id_example' # str | Team ID\n\ntry:\n    # Delete team\n    api_instance.delete_team(team_id)\nexcept ApiException as e:\n    print(\"Exception when calling TeamsApi->delete_team: %s\\n\" % e)"
  },
  "delete_team_members": {
    "operationId": "delete_team_members",
    "functionName": "delete_team_members",
    "signature": "delete_team_members(team_id, id)",
    "parameters": [
      {
        "name": "team_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TeamsApi();\nteam_id = 'team_id_example' # str | Team ID\nid = 'id_example' # str | Comma separated list of member ids to remove\n\ntry:\n    # Delete team members\n    api_instance.delete_team_members(team_id, id)\nexcept ApiException as e:\n    print(\"Exception when calling TeamsApi->delete_team_members: %s\\n\" % e)"
  },
  "get_team": {
    "operationId": "get_team",
    "functionName": "get_team",
    "signature": "get_team(team_id)",
    "parameters": [
      {
        "name": "team_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Team",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TeamsApi();\nteam_id = 'team_id_example' # str | Team ID\n\ntry:\n    # Get team\n    api_response = api_instance.get_team(team_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TeamsApi->get_team: %s\\n\" % e)"
  },
  "get_team_members": {
    "operationId": "get_team_members",
    "functionName": "get_team_members",
    "signature": "get_team_members(team_id, page_size, before, after, expand)",
    "parameters": [
      {
        "name": "team_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TeamMemberEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TeamsApi();\nteam_id = 'team_id_example' # str | Team ID\npage_size = 25 # int | Page size (optional) (default to 25)\nbefore = 'before_example' # str | The cursor that points to the previous item in the complete list of teams (optional)\nafter = 'after_example' # str | The cursor that points to the next item in the complete list of teams (optional)\nexpand = 'expand_example' # str | Expand the name on each user (optional)\n\ntry:\n    # Get team membership\n    api_response = api_instance.get_team_members(team_id, page_size=page_size, before=before, after=after, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TeamsApi->get_team_members: %s\\n\" % e)"
  },
  "get_teams": {
    "operationId": "get_teams",
    "functionName": "get_teams",
    "signature": "get_teams(page_size, name, after, before, expand)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TeamEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TeamsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\nname = 'name_example' # str | Return only teams whose names start with this value (case-insensitive matching) (optional)\nafter = 'after_example' # str | The cursor that points to the next item in the complete list of teams (optional)\nbefore = 'before_example' # str | The cursor that points to the previous item in the complete list of teams (optional)\nexpand = 'expand_example' # str | Expand the name on each user (optional)\n\ntry:\n    # Get Team listing\n    api_response = api_instance.get_teams(page_size=page_size, name=name, after=after, before=before, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TeamsApi->get_teams: %s\\n\" % e)"
  },
  "patch_team": {
    "operationId": "patch_team",
    "functionName": "patch_team",
    "signature": "patch_team(team_id, body)",
    "parameters": [
      {
        "name": "team_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Team",
        "required": "true"
      }
    ],
    "return": "Team",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TeamsApi();\nteam_id = 'team_id_example' # str | Team ID\nbody = PureCloudPlatformClientV2.Team() # Team | Team\n\ntry:\n    # Update team\n    api_response = api_instance.patch_team(team_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TeamsApi->patch_team: %s\\n\" % e)"
  },
  "post_team_members": {
    "operationId": "post_team_members",
    "functionName": "post_team_members",
    "signature": "post_team_members(team_id, body)",
    "parameters": [
      {
        "name": "team_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TeamMembers",
        "required": "true"
      }
    ],
    "return": "TeamMemberAddListingResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TeamsApi();\nteam_id = 'team_id_example' # str | Team ID\nbody = PureCloudPlatformClientV2.TeamMembers() # TeamMembers | TeamMembers\n\ntry:\n    # Add team members\n    api_response = api_instance.post_team_members(team_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TeamsApi->post_team_members: %s\\n\" % e)"
  },
  "post_teams": {
    "operationId": "post_teams",
    "functionName": "post_teams",
    "signature": "post_teams(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Team",
        "required": "true"
      }
    ],
    "return": "Team",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TeamsApi();\nbody = PureCloudPlatformClientV2.Team() # Team | Team\n\ntry:\n    # Create a team\n    api_response = api_instance.post_teams(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TeamsApi->post_teams: %s\\n\" % e)"
  },
  "get_telephony_mediaregions": {
    "operationId": "get_telephony_mediaregions",
    "functionName": "get_telephony_mediaregions",
    "signature": "get_telephony_mediaregions()",
    "return": "MediaRegions",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyApi();\n\ntry:\n    # Retrieve the list of AWS regions media can stream through.\n    api_response = api_instance.get_telephony_mediaregions()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyApi->get_telephony_mediaregions: %s\\n\" % e)"
  },
  "get_telephony_sipmessages_conversation": {
    "operationId": "get_telephony_sipmessages_conversation",
    "functionName": "get_telephony_sipmessages_conversation",
    "signature": "get_telephony_sipmessages_conversation(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Callmessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyApi();\nconversation_id = 'conversation_id_example' # str | Conversation id\n\ntry:\n    # Get a SIP message.\n    api_response = api_instance.get_telephony_sipmessages_conversation(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyApi->get_telephony_sipmessages_conversation: %s\\n\" % e)"
  },
  "get_telephony_sipmessages_conversation_headers": {
    "operationId": "get_telephony_sipmessages_conversation_headers",
    "functionName": "get_telephony_sipmessages_conversation_headers",
    "signature": "get_telephony_sipmessages_conversation_headers(conversation_id, keys)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "keys",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "Callheader",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyApi();\nconversation_id = 'conversation_id_example' # str | Conversation id\nkeys = ['keys_example'] # list[str] | comma-separated list of header identifiers to query. e.g. ruri,to,from (optional)\n\ntry:\n    # Get SIP headers.\n    api_response = api_instance.get_telephony_sipmessages_conversation_headers(conversation_id, keys=keys)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyApi->get_telephony_sipmessages_conversation_headers: %s\\n\" % e)"
  },
  "get_telephony_siptraces": {
    "operationId": "get_telephony_siptraces",
    "functionName": "get_telephony_siptraces",
    "signature": "get_telephony_siptraces(date_start, date_end, call_id, to_user, from_user, conversation_id)",
    "parameters": [
      {
        "name": "date_start",
        "type": "datetime",
        "required": "true"
      },
      {
        "name": "date_end",
        "type": "datetime",
        "required": "true"
      },
      {
        "name": "call_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "to_user",
        "type": "str",
        "required": "false"
      },
      {
        "name": "from_user",
        "type": "str",
        "required": "false"
      },
      {
        "name": "conversation_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "SipSearchResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyApi();\ndate_start = '2013-10-20T19:20:30+01:00' # datetime | Start date of the search. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\ndate_end = '2013-10-20T19:20:30+01:00' # datetime | End date of the search. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\ncall_id = 'call_id_example' # str | unique identification of the placed call (optional)\nto_user = 'to_user_example' # str | User to who the call was placed (optional)\nfrom_user = 'from_user_example' # str | user who placed the call (optional)\nconversation_id = 'conversation_id_example' # str | Unique identification of the conversation (optional)\n\ntry:\n    # Fetch SIP metadata\n    api_response = api_instance.get_telephony_siptraces(date_start, date_end, call_id=call_id, to_user=to_user, from_user=from_user, conversation_id=conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyApi->get_telephony_siptraces: %s\\n\" % e)"
  },
  "get_telephony_siptraces_download_download_id": {
    "operationId": "get_telephony_siptraces_download_download_id",
    "functionName": "get_telephony_siptraces_download_download_id",
    "signature": "get_telephony_siptraces_download_download_id(download_id)",
    "parameters": [
      {
        "name": "download_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SignedUrlResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyApi();\ndownload_id = 'download_id_example' # str | unique id for the downloaded file in S3\n\ntry:\n    # Get signed S3 URL for a pcap download\n    api_response = api_instance.get_telephony_siptraces_download_download_id(download_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyApi->get_telephony_siptraces_download_download_id: %s\\n\" % e)"
  },
  "post_telephony_siptraces_download": {
    "operationId": "post_telephony_siptraces_download",
    "functionName": "post_telephony_siptraces_download",
    "signature": "post_telephony_siptraces_download(sip_search_public_request)",
    "parameters": [
      {
        "name": "sip_search_public_request",
        "type": "SIPSearchPublicRequest",
        "required": "true"
      }
    ],
    "return": "SipDownloadResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyApi();\nsip_search_public_request = PureCloudPlatformClientV2.SIPSearchPublicRequest() # SIPSearchPublicRequest | \n\ntry:\n    # Request a download of a pcap file to S3\n    api_response = api_instance.post_telephony_siptraces_download(sip_search_public_request)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyApi->post_telephony_siptraces_download: %s\\n\" % e)"
  },
  "delete_telephony_providers_edge": {
    "operationId": "delete_telephony_providers_edge",
    "functionName": "delete_telephony_providers_edge",
    "signature": "delete_telephony_providers_edge(edge_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\n\ntry:\n    # Delete a edge.\n    api_instance.delete_telephony_providers_edge(edge_id)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->delete_telephony_providers_edge: %s\\n\" % e)"
  },
  "delete_telephony_providers_edge_logicalinterface": {
    "operationId": "delete_telephony_providers_edge_logicalinterface",
    "functionName": "delete_telephony_providers_edge_logicalinterface",
    "signature": "delete_telephony_providers_edge_logicalinterface(edge_id, interface_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "interface_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\ninterface_id = 'interface_id_example' # str | Interface ID\n\ntry:\n    # Delete an edge logical interface\n    api_instance.delete_telephony_providers_edge_logicalinterface(edge_id, interface_id)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->delete_telephony_providers_edge_logicalinterface: %s\\n\" % e)"
  },
  "delete_telephony_providers_edge_softwareupdate": {
    "operationId": "delete_telephony_providers_edge_softwareupdate",
    "functionName": "delete_telephony_providers_edge_softwareupdate",
    "signature": "delete_telephony_providers_edge_softwareupdate(edge_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\n\ntry:\n    # Cancels any in-progress update for this edge.\n    api_instance.delete_telephony_providers_edge_softwareupdate(edge_id)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->delete_telephony_providers_edge_softwareupdate: %s\\n\" % e)"
  },
  "delete_telephony_providers_edges_certificateauthority": {
    "operationId": "delete_telephony_providers_edges_certificateauthority",
    "functionName": "delete_telephony_providers_edges_certificateauthority",
    "signature": "delete_telephony_providers_edges_certificateauthority(certificate_id)",
    "parameters": [
      {
        "name": "certificate_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ncertificate_id = 'certificate_id_example' # str | Certificate ID\n\ntry:\n    # Delete a certificate authority.\n    api_instance.delete_telephony_providers_edges_certificateauthority(certificate_id)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->delete_telephony_providers_edges_certificateauthority: %s\\n\" % e)"
  },
  "delete_telephony_providers_edges_didpool": {
    "operationId": "delete_telephony_providers_edges_didpool",
    "functionName": "delete_telephony_providers_edges_didpool",
    "signature": "delete_telephony_providers_edges_didpool(did_pool_id)",
    "parameters": [
      {
        "name": "did_pool_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ndid_pool_id = 'did_pool_id_example' # str | DID pool ID\n\ntry:\n    # Delete a DID Pool by ID.\n    api_instance.delete_telephony_providers_edges_didpool(did_pool_id)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->delete_telephony_providers_edges_didpool: %s\\n\" % e)"
  },
  "delete_telephony_providers_edges_edgegroup": {
    "operationId": "delete_telephony_providers_edges_edgegroup",
    "functionName": "delete_telephony_providers_edges_edgegroup",
    "signature": "delete_telephony_providers_edges_edgegroup(edge_group_id)",
    "parameters": [
      {
        "name": "edge_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_group_id = 'edge_group_id_example' # str | Edge group ID\n\ntry:\n    # Delete an edge group.\n    api_instance.delete_telephony_providers_edges_edgegroup(edge_group_id)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->delete_telephony_providers_edges_edgegroup: %s\\n\" % e)"
  },
  "delete_telephony_providers_edges_extensionpool": {
    "operationId": "delete_telephony_providers_edges_extensionpool",
    "functionName": "delete_telephony_providers_edges_extensionpool",
    "signature": "delete_telephony_providers_edges_extensionpool(extension_pool_id)",
    "parameters": [
      {
        "name": "extension_pool_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nextension_pool_id = 'extension_pool_id_example' # str | Extension pool ID\n\ntry:\n    # Delete an extension pool by ID\n    api_instance.delete_telephony_providers_edges_extensionpool(extension_pool_id)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->delete_telephony_providers_edges_extensionpool: %s\\n\" % e)"
  },
  "delete_telephony_providers_edges_phone": {
    "operationId": "delete_telephony_providers_edges_phone",
    "functionName": "delete_telephony_providers_edges_phone",
    "signature": "delete_telephony_providers_edges_phone(phone_id)",
    "parameters": [
      {
        "name": "phone_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nphone_id = 'phone_id_example' # str | Phone ID\n\ntry:\n    # Delete a Phone by ID\n    api_instance.delete_telephony_providers_edges_phone(phone_id)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->delete_telephony_providers_edges_phone: %s\\n\" % e)"
  },
  "delete_telephony_providers_edges_phonebasesetting": {
    "operationId": "delete_telephony_providers_edges_phonebasesetting",
    "functionName": "delete_telephony_providers_edges_phonebasesetting",
    "signature": "delete_telephony_providers_edges_phonebasesetting(phone_base_id)",
    "parameters": [
      {
        "name": "phone_base_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nphone_base_id = 'phone_base_id_example' # str | Phone base ID\n\ntry:\n    # Delete a Phone Base Settings by ID\n    api_instance.delete_telephony_providers_edges_phonebasesetting(phone_base_id)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->delete_telephony_providers_edges_phonebasesetting: %s\\n\" % e)"
  },
  "delete_telephony_providers_edges_site": {
    "operationId": "delete_telephony_providers_edges_site",
    "functionName": "delete_telephony_providers_edges_site",
    "signature": "delete_telephony_providers_edges_site(site_id)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\n\ntry:\n    # Delete a Site by ID\n    api_instance.delete_telephony_providers_edges_site(site_id)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->delete_telephony_providers_edges_site: %s\\n\" % e)"
  },
  "delete_telephony_providers_edges_site_outboundroute": {
    "operationId": "delete_telephony_providers_edges_site_outboundroute",
    "functionName": "delete_telephony_providers_edges_site_outboundroute",
    "signature": "delete_telephony_providers_edges_site_outboundroute(site_id, outbound_route_id)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "outbound_route_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\noutbound_route_id = 'outbound_route_id_example' # str | Outbound route ID\n\ntry:\n    # Delete Outbound Route\n    api_instance.delete_telephony_providers_edges_site_outboundroute(site_id, outbound_route_id)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->delete_telephony_providers_edges_site_outboundroute: %s\\n\" % e)"
  },
  "delete_telephony_providers_edges_trunkbasesetting": {
    "operationId": "delete_telephony_providers_edges_trunkbasesetting",
    "functionName": "delete_telephony_providers_edges_trunkbasesetting",
    "signature": "delete_telephony_providers_edges_trunkbasesetting(trunk_base_settings_id)",
    "parameters": [
      {
        "name": "trunk_base_settings_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ntrunk_base_settings_id = 'trunk_base_settings_id_example' # str | Trunk Base ID\n\ntry:\n    # Delete a Trunk Base Settings object by ID\n    api_instance.delete_telephony_providers_edges_trunkbasesetting(trunk_base_settings_id)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->delete_telephony_providers_edges_trunkbasesetting: %s\\n\" % e)"
  },
  "get_telephony_providers_edge": {
    "operationId": "get_telephony_providers_edge",
    "functionName": "get_telephony_providers_edge",
    "signature": "get_telephony_providers_edge(edge_id, expand)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "Edge",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\nexpand = ['expand_example'] # list[str] | Fields to expand in the response, comma-separated (optional)\n\ntry:\n    # Get edge.\n    api_response = api_instance.get_telephony_providers_edge(edge_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_diagnostic_nslookup": {
    "operationId": "get_telephony_providers_edge_diagnostic_nslookup",
    "functionName": "get_telephony_providers_edge_diagnostic_nslookup",
    "signature": "get_telephony_providers_edge_diagnostic_nslookup(edge_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnosticResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge Id\n\ntry:\n    # Get networking-related information from an Edge for a target IP or host.\n    api_response = api_instance.get_telephony_providers_edge_diagnostic_nslookup(edge_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_diagnostic_nslookup: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_diagnostic_ping": {
    "operationId": "get_telephony_providers_edge_diagnostic_ping",
    "functionName": "get_telephony_providers_edge_diagnostic_ping",
    "signature": "get_telephony_providers_edge_diagnostic_ping(edge_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnosticResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge Id\n\ntry:\n    # Get networking-related information from an Edge for a target IP or host.\n    api_response = api_instance.get_telephony_providers_edge_diagnostic_ping(edge_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_diagnostic_ping: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_diagnostic_route": {
    "operationId": "get_telephony_providers_edge_diagnostic_route",
    "functionName": "get_telephony_providers_edge_diagnostic_route",
    "signature": "get_telephony_providers_edge_diagnostic_route(edge_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnosticResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge Id\n\ntry:\n    # Get networking-related information from an Edge for a target IP or host.\n    api_response = api_instance.get_telephony_providers_edge_diagnostic_route(edge_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_diagnostic_route: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_diagnostic_tracepath": {
    "operationId": "get_telephony_providers_edge_diagnostic_tracepath",
    "functionName": "get_telephony_providers_edge_diagnostic_tracepath",
    "signature": "get_telephony_providers_edge_diagnostic_tracepath(edge_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnosticResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge Id\n\ntry:\n    # Get networking-related information from an Edge for a target IP or host.\n    api_response = api_instance.get_telephony_providers_edge_diagnostic_tracepath(edge_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_diagnostic_tracepath: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_logicalinterface": {
    "operationId": "get_telephony_providers_edge_logicalinterface",
    "functionName": "get_telephony_providers_edge_logicalinterface",
    "signature": "get_telephony_providers_edge_logicalinterface(edge_id, interface_id, expand)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "interface_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "DomainLogicalInterface",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\ninterface_id = 'interface_id_example' # str | Interface ID\nexpand = ['expand_example'] # list[str] | Field to expand in the response (optional)\n\ntry:\n    # Get an edge logical interface\n    api_response = api_instance.get_telephony_providers_edge_logicalinterface(edge_id, interface_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_logicalinterface: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_logicalinterfaces": {
    "operationId": "get_telephony_providers_edge_logicalinterfaces",
    "functionName": "get_telephony_providers_edge_logicalinterfaces",
    "signature": "get_telephony_providers_edge_logicalinterfaces(edge_id, expand)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LogicalInterfaceEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\nexpand = ['expand_example'] # list[str] | Field to expand in the response (optional)\n\ntry:\n    # Get edge logical interfaces.\n    api_response = api_instance.get_telephony_providers_edge_logicalinterfaces(edge_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_logicalinterfaces: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_logs_job": {
    "operationId": "get_telephony_providers_edge_logs_job",
    "functionName": "get_telephony_providers_edge_logs_job",
    "signature": "get_telephony_providers_edge_logs_job(edge_id, job_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EdgeLogsJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\njob_id = 'job_id_example' # str | Job ID\n\ntry:\n    # Get an Edge logs job.\n    api_response = api_instance.get_telephony_providers_edge_logs_job(edge_id, job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_logs_job: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_metrics": {
    "operationId": "get_telephony_providers_edge_metrics",
    "functionName": "get_telephony_providers_edge_metrics",
    "signature": "get_telephony_providers_edge_metrics(edge_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EdgeMetrics",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge Id\n\ntry:\n    # Get the edge metrics.\n    api_response = api_instance.get_telephony_providers_edge_metrics(edge_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_metrics: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_physicalinterface": {
    "operationId": "get_telephony_providers_edge_physicalinterface",
    "functionName": "get_telephony_providers_edge_physicalinterface",
    "signature": "get_telephony_providers_edge_physicalinterface(edge_id, interface_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "interface_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DomainPhysicalInterface",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\ninterface_id = 'interface_id_example' # str | Interface ID\n\ntry:\n    # Get edge physical interface.\n    api_response = api_instance.get_telephony_providers_edge_physicalinterface(edge_id, interface_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_physicalinterface: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_physicalinterfaces": {
    "operationId": "get_telephony_providers_edge_physicalinterfaces",
    "functionName": "get_telephony_providers_edge_physicalinterfaces",
    "signature": "get_telephony_providers_edge_physicalinterfaces(edge_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PhysicalInterfaceEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\n\ntry:\n    # Retrieve a list of all configured physical interfaces from a specific edge.\n    api_response = api_instance.get_telephony_providers_edge_physicalinterfaces(edge_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_physicalinterfaces: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_setuppackage": {
    "operationId": "get_telephony_providers_edge_setuppackage",
    "functionName": "get_telephony_providers_edge_setuppackage",
    "signature": "get_telephony_providers_edge_setuppackage(edge_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "VmPairingInfo",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\n\ntry:\n    # Get the setup package for a locally deployed edge device. This is needed to complete the setup process for the virtual edge.\n    api_response = api_instance.get_telephony_providers_edge_setuppackage(edge_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_setuppackage: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_softwareupdate": {
    "operationId": "get_telephony_providers_edge_softwareupdate",
    "functionName": "get_telephony_providers_edge_softwareupdate",
    "signature": "get_telephony_providers_edge_softwareupdate(edge_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DomainEdgeSoftwareUpdateDto",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\n\ntry:\n    # Gets software update status information about any edge.\n    api_response = api_instance.get_telephony_providers_edge_softwareupdate(edge_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_softwareupdate: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_softwareversions": {
    "operationId": "get_telephony_providers_edge_softwareversions",
    "functionName": "get_telephony_providers_edge_softwareversions",
    "signature": "get_telephony_providers_edge_softwareversions(edge_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DomainEdgeSoftwareVersionDtoEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\n\ntry:\n    # Gets all the available software versions for this edge.\n    api_response = api_instance.get_telephony_providers_edge_softwareversions(edge_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_softwareversions: %s\\n\" % e)"
  },
  "get_telephony_providers_edge_trunks": {
    "operationId": "get_telephony_providers_edge_trunks",
    "functionName": "get_telephony_providers_edge_trunks",
    "signature": "get_telephony_providers_edge_trunks(edge_id, page_number, page_size, sort_by, sort_order, trunk_base_id, trunk_type)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "trunk_base_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "trunk_type",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TrunkEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | Value by which to sort (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\ntrunk_base_id = 'trunk_base_id_example' # str | Filter by Trunk Base Ids (optional)\ntrunk_type = 'trunk_type_example' # str | Filter by a Trunk type (optional)\n\ntry:\n    # Get the list of available trunks for the given Edge.\n    api_response = api_instance.get_telephony_providers_edge_trunks(edge_id, page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, trunk_base_id=trunk_base_id, trunk_type=trunk_type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edge_trunks: %s\\n\" % e)"
  },
  "get_telephony_providers_edges": {
    "operationId": "get_telephony_providers_edges",
    "functionName": "get_telephony_providers_edges",
    "signature": "get_telephony_providers_edges(page_size, page_number, name, site_id, edge_group_id, sort_by, managed, show_cloud_media)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "site_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "edge_group_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "managed",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "show_cloud_media",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "EdgeEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nname = 'name_example' # str | Name (optional)\nsite_id = 'site_id_example' # str | Filter by site.id (optional)\nedge_group_id = 'edge_group_id_example' # str | Filter by edgeGroup.id (optional)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nmanaged = True # bool | Filter by managed (optional)\nshow_cloud_media = True # bool | True to show the cloud media devices in the result. (optional) (default to True)\n\ntry:\n    # Get the list of edges.\n    api_response = api_instance.get_telephony_providers_edges(page_size=page_size, page_number=page_number, name=name, site_id=site_id, edge_group_id=edge_group_id, sort_by=sort_by, managed=managed, show_cloud_media=show_cloud_media)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_certificateauthorities": {
    "operationId": "get_telephony_providers_edges_certificateauthorities",
    "functionName": "get_telephony_providers_edges_certificateauthorities",
    "signature": "get_telephony_providers_edges_certificateauthorities()",
    "return": "CertificateAuthorityEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\n\ntry:\n    # Get the list of certificate authorities.\n    api_response = api_instance.get_telephony_providers_edges_certificateauthorities()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_certificateauthorities: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_certificateauthority": {
    "operationId": "get_telephony_providers_edges_certificateauthority",
    "functionName": "get_telephony_providers_edges_certificateauthority",
    "signature": "get_telephony_providers_edges_certificateauthority(certificate_id)",
    "parameters": [
      {
        "name": "certificate_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DomainCertificateAuthority",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ncertificate_id = 'certificate_id_example' # str | Certificate ID\n\ntry:\n    # Get a certificate authority.\n    api_response = api_instance.get_telephony_providers_edges_certificateauthority(certificate_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_certificateauthority: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_did": {
    "operationId": "get_telephony_providers_edges_did",
    "functionName": "get_telephony_providers_edges_did",
    "signature": "get_telephony_providers_edges_did(did_id)",
    "parameters": [
      {
        "name": "did_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DID",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ndid_id = 'did_id_example' # str | DID ID\n\ntry:\n    # Get a DID by ID.\n    api_response = api_instance.get_telephony_providers_edges_did(did_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_did: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_didpool": {
    "operationId": "get_telephony_providers_edges_didpool",
    "functionName": "get_telephony_providers_edges_didpool",
    "signature": "get_telephony_providers_edges_didpool(did_pool_id)",
    "parameters": [
      {
        "name": "did_pool_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DIDPool",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ndid_pool_id = 'did_pool_id_example' # str | DID pool ID\n\ntry:\n    # Get a DID Pool by ID.\n    api_response = api_instance.get_telephony_providers_edges_didpool(did_pool_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_didpool: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_didpools": {
    "operationId": "get_telephony_providers_edges_didpools",
    "functionName": "get_telephony_providers_edges_didpools",
    "signature": "get_telephony_providers_edges_didpools(page_size, page_number, sort_by, id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "DIDPoolEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''number'' # str | Sort by (optional) (default to 'number')\nid = ['id_example'] # list[str] | Filter by a specific list of ID's (optional)\n\ntry:\n    # Get a listing of DID Pools\n    api_response = api_instance.get_telephony_providers_edges_didpools(page_size=page_size, page_number=page_number, sort_by=sort_by, id=id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_didpools: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_didpools_dids": {
    "operationId": "get_telephony_providers_edges_didpools_dids",
    "functionName": "get_telephony_providers_edges_didpools_dids",
    "signature": "get_telephony_providers_edges_didpools_dids(type, id, number_match, page_size, page_number, sort_order)",
    "parameters": [
      {
        "name": "type",
        "type": "str",
        "required": "true"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "number_match",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "DIDNumberEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ntype = 'type_example' # str | The type of numbers to return.\nid = ['id_example'] # list[str] | Filter by a specific list of DID Pools.  If this is not provided, numbers from all DID Pools will be returned. (optional)\nnumber_match = 'number_match_example' # str | A number to filter the results by. (optional)\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''ascending'' # str | Sort order (optional) (default to 'ascending')\n\ntry:\n    # Get a listing of unassigned and/or assigned numbers in a set of DID Pools.\n    api_response = api_instance.get_telephony_providers_edges_didpools_dids(type, id=id, number_match=number_match, page_size=page_size, page_number=page_number, sort_order=sort_order)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_didpools_dids: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_dids": {
    "operationId": "get_telephony_providers_edges_dids",
    "functionName": "get_telephony_providers_edges_dids",
    "signature": "get_telephony_providers_edges_dids(page_size, page_number, sort_by, sort_order, phone_number, owner_id, did_pool_id, id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "phone_number",
        "type": "str",
        "required": "false"
      },
      {
        "name": "owner_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "did_pool_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "DIDEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''number'' # str | Sort by (optional) (default to 'number')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nphone_number = 'phone_number_example' # str | Filter by phoneNumber (optional)\nowner_id = 'owner_id_example' # str | Filter by the owner of a phone number (optional)\ndid_pool_id = 'did_pool_id_example' # str | Filter by the DID Pool assignment (optional)\nid = ['id_example'] # list[str] | Filter by a specific list of ID's (optional)\n\ntry:\n    # Get a listing of DIDs\n    api_response = api_instance.get_telephony_providers_edges_dids(page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order, phone_number=phone_number, owner_id=owner_id, did_pool_id=did_pool_id, id=id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_dids: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_edgegroup": {
    "operationId": "get_telephony_providers_edges_edgegroup",
    "functionName": "get_telephony_providers_edges_edgegroup",
    "signature": "get_telephony_providers_edges_edgegroup(edge_group_id, expand)",
    "parameters": [
      {
        "name": "edge_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "EdgeGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_group_id = 'edge_group_id_example' # str | Edge group ID\nexpand = ['expand_example'] # list[str] | Fields to expand in the response (optional)\n\ntry:\n    # Get edge group.\n    api_response = api_instance.get_telephony_providers_edges_edgegroup(edge_group_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_edgegroup: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_edgegroup_edgetrunkbase": {
    "operationId": "get_telephony_providers_edges_edgegroup_edgetrunkbase",
    "functionName": "get_telephony_providers_edges_edgegroup_edgetrunkbase",
    "signature": "get_telephony_providers_edges_edgegroup_edgetrunkbase(edgegroup_id, edgetrunkbase_id)",
    "parameters": [
      {
        "name": "edgegroup_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "edgetrunkbase_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "EdgeTrunkBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedgegroup_id = 'edgegroup_id_example' # str | Edge Group ID\nedgetrunkbase_id = 'edgetrunkbase_id_example' # str | Edge Trunk Base ID\n\ntry:\n    # Gets the edge trunk base associated with the edge group\n    api_response = api_instance.get_telephony_providers_edges_edgegroup_edgetrunkbase(edgegroup_id, edgetrunkbase_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_edgegroup_edgetrunkbase: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_edgegroups": {
    "operationId": "get_telephony_providers_edges_edgegroups",
    "functionName": "get_telephony_providers_edges_edgegroups",
    "signature": "get_telephony_providers_edges_edgegroups(page_size, page_number, name, sort_by, managed)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "managed",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "EdgeGroupEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nname = 'name_example' # str | Name (optional)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nmanaged = True # bool | Filter by managed (optional)\n\ntry:\n    # Get the list of edge groups.\n    api_response = api_instance.get_telephony_providers_edges_edgegroups(page_size=page_size, page_number=page_number, name=name, sort_by=sort_by, managed=managed)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_edgegroups: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_edgeversionreport": {
    "operationId": "get_telephony_providers_edges_edgeversionreport",
    "functionName": "get_telephony_providers_edges_edgeversionreport",
    "signature": "get_telephony_providers_edges_edgeversionreport()",
    "return": "EdgeVersionReport",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\n\ntry:\n    # Get the edge version report.\n    api_response = api_instance.get_telephony_providers_edges_edgeversionreport()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_edgeversionreport: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_expired": {
    "operationId": "get_telephony_providers_edges_expired",
    "functionName": "get_telephony_providers_edges_expired",
    "signature": "get_telephony_providers_edges_expired()",
    "return": "ExpiredEdgeListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\n\ntry:\n    # List of edges more than 4 edge versions behind the latest software.\n    api_response = api_instance.get_telephony_providers_edges_expired()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_expired: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_extension": {
    "operationId": "get_telephony_providers_edges_extension",
    "functionName": "get_telephony_providers_edges_extension",
    "signature": "get_telephony_providers_edges_extension(extension_id)",
    "parameters": [
      {
        "name": "extension_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Extension",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nextension_id = 'extension_id_example' # str | Extension ID\n\ntry:\n    # Get an extension by ID.\n    api_response = api_instance.get_telephony_providers_edges_extension(extension_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_extension: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_extensionpool": {
    "operationId": "get_telephony_providers_edges_extensionpool",
    "functionName": "get_telephony_providers_edges_extensionpool",
    "signature": "get_telephony_providers_edges_extensionpool(extension_pool_id)",
    "parameters": [
      {
        "name": "extension_pool_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ExtensionPool",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nextension_pool_id = 'extension_pool_id_example' # str | Extension pool ID\n\ntry:\n    # Get an extension pool by ID\n    api_response = api_instance.get_telephony_providers_edges_extensionpool(extension_pool_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_extensionpool: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_extensionpools": {
    "operationId": "get_telephony_providers_edges_extensionpools",
    "functionName": "get_telephony_providers_edges_extensionpools",
    "signature": "get_telephony_providers_edges_extensionpools(page_size, page_number, sort_by, number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "number",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ExtensionPoolEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = 'sort_by_example' # str | Sort by (optional)\nnumber = 'number_example' # str | Deprecated, filtering by number not supported (optional)\n\ntry:\n    # Get a listing of extension pools\n    api_response = api_instance.get_telephony_providers_edges_extensionpools(page_size=page_size, page_number=page_number, sort_by=sort_by, number=number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_extensionpools: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_extensionpools_divisionviews": {
    "operationId": "get_telephony_providers_edges_extensionpools_divisionviews",
    "functionName": "get_telephony_providers_edges_extensionpools_divisionviews",
    "signature": "get_telephony_providers_edges_extensionpools_divisionviews(page_number, page_size, sort_by, sort_order, id, name, division_id)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ExtensionPoolDivisionViewEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nid = ['id_example'] # list[str] | ID of the Extension Pools to filter by. (optional)\nname = 'name_example' # str | Name of the Extension Pools to filter by. (optional)\ndivision_id = ['division_id_example'] # list[str] | List of divisionIds on which to filter. (optional)\n\ntry:\n    # Get a pageable list of basic extension pool objects filterable by query parameters.\n    api_response = api_instance.get_telephony_providers_edges_extensionpools_divisionviews(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, id=id, name=name, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_extensionpools_divisionviews: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_extensions": {
    "operationId": "get_telephony_providers_edges_extensions",
    "functionName": "get_telephony_providers_edges_extensions",
    "signature": "get_telephony_providers_edges_extensions(page_size, page_number, sort_by, sort_order, number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "number",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ExtensionEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''number'' # str | Sort by (optional) (default to 'number')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nnumber = 'number_example' # str | Filter by number (optional)\n\ntry:\n    # Get a listing of extensions\n    api_response = api_instance.get_telephony_providers_edges_extensions(page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order, number=number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_extensions: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_line": {
    "operationId": "get_telephony_providers_edges_line",
    "functionName": "get_telephony_providers_edges_line",
    "signature": "get_telephony_providers_edges_line(line_id)",
    "parameters": [
      {
        "name": "line_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Line",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nline_id = 'line_id_example' # str | Line ID\n\ntry:\n    # Get a Line by ID\n    api_response = api_instance.get_telephony_providers_edges_line(line_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_line: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_linebasesetting": {
    "operationId": "get_telephony_providers_edges_linebasesetting",
    "functionName": "get_telephony_providers_edges_linebasesetting",
    "signature": "get_telephony_providers_edges_linebasesetting(line_base_id)",
    "parameters": [
      {
        "name": "line_base_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "LineBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nline_base_id = 'line_base_id_example' # str | Line base ID\n\ntry:\n    # Get a line base settings object by ID\n    api_response = api_instance.get_telephony_providers_edges_linebasesetting(line_base_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_linebasesetting: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_linebasesettings": {
    "operationId": "get_telephony_providers_edges_linebasesettings",
    "functionName": "get_telephony_providers_edges_linebasesettings",
    "signature": "get_telephony_providers_edges_linebasesettings(page_number, page_size, sort_by, sort_order, expand)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LineBaseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | Value by which to sort (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nexpand = ['expand_example'] # list[str] | Fields to expand in the response, comma-separated (optional)\n\ntry:\n    # Get a listing of line base settings objects\n    api_response = api_instance.get_telephony_providers_edges_linebasesettings(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_linebasesettings: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_lines": {
    "operationId": "get_telephony_providers_edges_lines",
    "functionName": "get_telephony_providers_edges_lines",
    "signature": "get_telephony_providers_edges_lines(page_size, page_number, name, sort_by, expand)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LineEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nname = 'name_example' # str | Name (optional)\nsort_by = ''name'' # str | Value by which to sort (optional) (default to 'name')\nexpand = ['expand_example'] # list[str] | Fields to expand in the response, comma-separated. The edgeGroup value is deprecated. (optional)\n\ntry:\n    # Get a list of Lines\n    api_response = api_instance.get_telephony_providers_edges_lines(page_size=page_size, page_number=page_number, name=name, sort_by=sort_by, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_lines: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_lines_template": {
    "operationId": "get_telephony_providers_edges_lines_template",
    "functionName": "get_telephony_providers_edges_lines_template",
    "signature": "get_telephony_providers_edges_lines_template(line_base_settings_id)",
    "parameters": [
      {
        "name": "line_base_settings_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Line",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nline_base_settings_id = 'line_base_settings_id_example' # str | The id of a Line Base Settings object upon which to base this Line\n\ntry:\n    # Get a Line instance template based on a Line Base Settings object. This object can then be modified and saved as a new Line instance\n    api_response = api_instance.get_telephony_providers_edges_lines_template(line_base_settings_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_lines_template: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_logicalinterfaces": {
    "operationId": "get_telephony_providers_edges_logicalinterfaces",
    "functionName": "get_telephony_providers_edges_logicalinterfaces",
    "signature": "get_telephony_providers_edges_logicalinterfaces(edge_ids, expand)",
    "parameters": [
      {
        "name": "edge_ids",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "LogicalInterfaceEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_ids = 'edge_ids_example' # str | Comma separated list of Edge Id's\nexpand = ['expand_example'] # list[str] | Field to expand in the response (optional)\n\ntry:\n    # Get edge logical interfaces.\n    api_response = api_instance.get_telephony_providers_edges_logicalinterfaces(edge_ids, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_logicalinterfaces: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_mediastatistics_conversation": {
    "operationId": "get_telephony_providers_edges_mediastatistics_conversation",
    "functionName": "get_telephony_providers_edges_mediastatistics_conversation",
    "signature": "get_telephony_providers_edges_mediastatistics_conversation(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MediaStatisticsListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nconversation_id = 'conversation_id_example' # str | Identifier of the conversation\n\ntry:\n    # Get media endpoint statistics events.\n    api_response = api_instance.get_telephony_providers_edges_mediastatistics_conversation(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_mediastatistics_conversation: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_mediastatistics_conversation_communication": {
    "operationId": "get_telephony_providers_edges_mediastatistics_conversation_communication",
    "functionName": "get_telephony_providers_edges_mediastatistics_conversation_communication",
    "signature": "get_telephony_providers_edges_mediastatistics_conversation_communication(conversation_id, communication_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "communication_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "MediaStatistics",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nconversation_id = 'conversation_id_example' # str | Identifier of the conversation\ncommunication_id = 'communication_id_example' # str | Identifier of the media session\n\ntry:\n    # Get media endpoint statistics event.\n    api_response = api_instance.get_telephony_providers_edges_mediastatistics_conversation_communication(conversation_id, communication_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_mediastatistics_conversation_communication: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_metrics": {
    "operationId": "get_telephony_providers_edges_metrics",
    "functionName": "get_telephony_providers_edges_metrics",
    "signature": "get_telephony_providers_edges_metrics(edge_ids)",
    "parameters": [
      {
        "name": "edge_ids",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[EdgeMetrics]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_ids = 'edge_ids_example' # str | Comma separated list of Edge Id's. Maximum of 100 edge ids allowed.\n\ntry:\n    # Get the metrics for a list of edges.\n    api_response = api_instance.get_telephony_providers_edges_metrics(edge_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_metrics: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_outboundroutes": {
    "operationId": "get_telephony_providers_edges_outboundroutes",
    "functionName": "get_telephony_providers_edges_outboundroutes",
    "signature": "get_telephony_providers_edges_outboundroutes(page_size, page_number, name, site_id, external_trunk_bases_ids, sort_by)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "site_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "external_trunk_bases_ids",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OutboundRouteEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nname = 'name_example' # str | Name (optional)\nsite_id = 'site_id_example' # str | Filter by site.id (optional)\nexternal_trunk_bases_ids = 'external_trunk_bases_ids_example' # str | Filter by externalTrunkBases.ids (optional)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\n\ntry:\n    # Get outbound routes\n    api_response = api_instance.get_telephony_providers_edges_outboundroutes(page_size=page_size, page_number=page_number, name=name, site_id=site_id, external_trunk_bases_ids=external_trunk_bases_ids, sort_by=sort_by)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_outboundroutes: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_phone": {
    "operationId": "get_telephony_providers_edges_phone",
    "functionName": "get_telephony_providers_edges_phone",
    "signature": "get_telephony_providers_edges_phone(phone_id)",
    "parameters": [
      {
        "name": "phone_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Phone",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nphone_id = 'phone_id_example' # str | Phone ID\n\ntry:\n    # Get a Phone by ID\n    api_response = api_instance.get_telephony_providers_edges_phone(phone_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_phone: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_phonebasesetting": {
    "operationId": "get_telephony_providers_edges_phonebasesetting",
    "functionName": "get_telephony_providers_edges_phonebasesetting",
    "signature": "get_telephony_providers_edges_phonebasesetting(phone_base_id)",
    "parameters": [
      {
        "name": "phone_base_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PhoneBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nphone_base_id = 'phone_base_id_example' # str | Phone base ID\n\ntry:\n    # Get a Phone Base Settings object by ID\n    api_response = api_instance.get_telephony_providers_edges_phonebasesetting(phone_base_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_phonebasesetting: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_phonebasesettings": {
    "operationId": "get_telephony_providers_edges_phonebasesettings",
    "functionName": "get_telephony_providers_edges_phonebasesettings",
    "signature": "get_telephony_providers_edges_phonebasesettings(page_size, page_number, sort_by, sort_order, expand, name)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "PhoneBaseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''name'' # str | Value by which to sort (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nexpand = ['expand_example'] # list[str] | Fields to expand in the response, comma-separated (optional)\nname = 'name_example' # str | Name (optional)\n\ntry:\n    # Get a list of Phone Base Settings objects\n    api_response = api_instance.get_telephony_providers_edges_phonebasesettings(page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order, expand=expand, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_phonebasesettings: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_phonebasesettings_availablemetabases": {
    "operationId": "get_telephony_providers_edges_phonebasesettings_availablemetabases",
    "functionName": "get_telephony_providers_edges_phonebasesettings_availablemetabases",
    "signature": "get_telephony_providers_edges_phonebasesettings_availablemetabases(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "PhoneMetaBaseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a list of available makes and models to create a new Phone Base Settings\n    api_response = api_instance.get_telephony_providers_edges_phonebasesettings_availablemetabases(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_phonebasesettings_availablemetabases: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_phonebasesettings_template": {
    "operationId": "get_telephony_providers_edges_phonebasesettings_template",
    "functionName": "get_telephony_providers_edges_phonebasesettings_template",
    "signature": "get_telephony_providers_edges_phonebasesettings_template(phone_metabase_id)",
    "parameters": [
      {
        "name": "phone_metabase_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PhoneBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nphone_metabase_id = 'phone_metabase_id_example' # str | The id of a metabase object upon which to base this Phone Base Settings\n\ntry:\n    # Get a Phone Base Settings instance template from a given make and model. This object can then be modified and saved as a new Phone Base Settings instance\n    api_response = api_instance.get_telephony_providers_edges_phonebasesettings_template(phone_metabase_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_phonebasesettings_template: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_phones": {
    "operationId": "get_telephony_providers_edges_phones",
    "functionName": "get_telephony_providers_edges_phones",
    "signature": "get_telephony_providers_edges_phones(page_number, page_size, sort_by, sort_order, site_id, web_rtc_user_id, phone_base_settings_id, lines_logged_in_user_id, lines_default_for_user_id, phone_hardware_id, lines_id, lines_name, name, status_operational_status, secondary_status_operational_status, expand, fields)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "site_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "web_rtc_user_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "phone_base_settings_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "lines_logged_in_user_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "lines_default_for_user_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "phone_hardware_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "lines_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "lines_name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "status_operational_status",
        "type": "str",
        "required": "false"
      },
      {
        "name": "secondary_status_operational_status",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "fields",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "PhoneEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | The field to sort by (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nsite_id = 'site_id_example' # str | Filter by site.id (optional)\nweb_rtc_user_id = 'web_rtc_user_id_example' # str | Filter by webRtcUser.id (optional)\nphone_base_settings_id = 'phone_base_settings_id_example' # str | Filter by phoneBaseSettings.id (optional)\nlines_logged_in_user_id = 'lines_logged_in_user_id_example' # str | Filter by lines.loggedInUser.id (optional)\nlines_default_for_user_id = 'lines_default_for_user_id_example' # str | Filter by lines.defaultForUser.id (optional)\nphone_hardware_id = 'phone_hardware_id_example' # str | Filter by phone_hardwareId (optional)\nlines_id = 'lines_id_example' # str | Filter by lines.id (optional)\nlines_name = 'lines_name_example' # str | Filter by lines.name (optional)\nname = 'name_example' # str | Name of the Phone to filter by, comma-separated (optional)\nstatus_operational_status = 'status_operational_status_example' # str | The primary status to filter by (optional)\nsecondary_status_operational_status = 'secondary_status_operational_status_example' # str | The secondary status to filter by (optional)\nexpand = ['expand_example'] # list[str] | Fields to expand in the response, comma-separated (optional)\nfields = ['fields_example'] # list[str] | Fields and properties to get, comma-separated (optional)\n\ntry:\n    # Get a list of Phone Instances. A maximum of 10,000 results is returned when filtering the results or sorting by a field other than the ID. Sorting by only the ID has no result limit. Each filter supports a wildcard, *, as a value to search for partial values.\n    api_response = api_instance.get_telephony_providers_edges_phones(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, site_id=site_id, web_rtc_user_id=web_rtc_user_id, phone_base_settings_id=phone_base_settings_id, lines_logged_in_user_id=lines_logged_in_user_id, lines_default_for_user_id=lines_default_for_user_id, phone_hardware_id=phone_hardware_id, lines_id=lines_id, lines_name=lines_name, name=name, status_operational_status=status_operational_status, secondary_status_operational_status=secondary_status_operational_status, expand=expand, fields=fields)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_phones: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_phones_template": {
    "operationId": "get_telephony_providers_edges_phones_template",
    "functionName": "get_telephony_providers_edges_phones_template",
    "signature": "get_telephony_providers_edges_phones_template(phone_base_settings_id)",
    "parameters": [
      {
        "name": "phone_base_settings_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Phone",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nphone_base_settings_id = 'phone_base_settings_id_example' # str | The id of a Phone Base Settings object upon which to base this Phone\n\ntry:\n    # Get a Phone instance template based on a Phone Base Settings object. This object can then be modified and saved as a new Phone instance\n    api_response = api_instance.get_telephony_providers_edges_phones_template(phone_base_settings_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_phones_template: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_physicalinterfaces": {
    "operationId": "get_telephony_providers_edges_physicalinterfaces",
    "functionName": "get_telephony_providers_edges_physicalinterfaces",
    "signature": "get_telephony_providers_edges_physicalinterfaces(edge_ids)",
    "parameters": [
      {
        "name": "edge_ids",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PhysicalInterfaceEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_ids = 'edge_ids_example' # str | Comma separated list of Edge Id's\n\ntry:\n    # Get physical interfaces for edges.\n    api_response = api_instance.get_telephony_providers_edges_physicalinterfaces(edge_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_physicalinterfaces: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_site": {
    "operationId": "get_telephony_providers_edges_site",
    "functionName": "get_telephony_providers_edges_site",
    "signature": "get_telephony_providers_edges_site(site_id)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Site",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\n\ntry:\n    # Get a Site by ID.\n    api_response = api_instance.get_telephony_providers_edges_site(site_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_site: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_site_numberplan": {
    "operationId": "get_telephony_providers_edges_site_numberplan",
    "functionName": "get_telephony_providers_edges_site_numberplan",
    "signature": "get_telephony_providers_edges_site_numberplan(site_id, number_plan_id)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "number_plan_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "NumberPlan",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\nnumber_plan_id = 'number_plan_id_example' # str | Number Plan ID\n\ntry:\n    # Get a Number Plan by ID.\n    api_response = api_instance.get_telephony_providers_edges_site_numberplan(site_id, number_plan_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_site_numberplan: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_site_numberplans": {
    "operationId": "get_telephony_providers_edges_site_numberplans",
    "functionName": "get_telephony_providers_edges_site_numberplans",
    "signature": "get_telephony_providers_edges_site_numberplans(site_id)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[NumberPlan]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\n\ntry:\n    # Get the list of Number Plans for this Site. Only fetches the first 200 records.\n    api_response = api_instance.get_telephony_providers_edges_site_numberplans(site_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_site_numberplans: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_site_numberplans_classifications": {
    "operationId": "get_telephony_providers_edges_site_numberplans_classifications",
    "functionName": "get_telephony_providers_edges_site_numberplans_classifications",
    "signature": "get_telephony_providers_edges_site_numberplans_classifications(site_id, classification)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "classification",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "list[str]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\nclassification = 'classification_example' # str | Classification (optional)\n\ntry:\n    # Get a list of Classifications for this Site\n    api_response = api_instance.get_telephony_providers_edges_site_numberplans_classifications(site_id, classification=classification)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_site_numberplans_classifications: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_site_outboundroute": {
    "operationId": "get_telephony_providers_edges_site_outboundroute",
    "functionName": "get_telephony_providers_edges_site_outboundroute",
    "signature": "get_telephony_providers_edges_site_outboundroute(site_id, outbound_route_id)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "outbound_route_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OutboundRouteBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\noutbound_route_id = 'outbound_route_id_example' # str | Outbound route ID\n\ntry:\n    # Get an outbound route\n    api_response = api_instance.get_telephony_providers_edges_site_outboundroute(site_id, outbound_route_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_site_outboundroute: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_site_outboundroutes": {
    "operationId": "get_telephony_providers_edges_site_outboundroutes",
    "functionName": "get_telephony_providers_edges_site_outboundroutes",
    "signature": "get_telephony_providers_edges_site_outboundroutes(site_id, page_size, page_number, name, external_trunk_bases_ids, sort_by)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "external_trunk_bases_ids",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "OutboundRouteBaseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nname = 'name_example' # str | Name (optional)\nexternal_trunk_bases_ids = 'external_trunk_bases_ids_example' # str | externalTrunkBases.ids (optional)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\n\ntry:\n    # Get outbound routes\n    api_response = api_instance.get_telephony_providers_edges_site_outboundroutes(site_id, page_size=page_size, page_number=page_number, name=name, external_trunk_bases_ids=external_trunk_bases_ids, sort_by=sort_by)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_site_outboundroutes: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_site_siteconnections": {
    "operationId": "get_telephony_providers_edges_site_siteconnections",
    "functionName": "get_telephony_providers_edges_site_siteconnections",
    "signature": "get_telephony_providers_edges_site_siteconnections(site_id)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SiteConnections",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\n\ntry:\n    # Get site connections for a site.\n    api_response = api_instance.get_telephony_providers_edges_site_siteconnections(site_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_site_siteconnections: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_sites": {
    "operationId": "get_telephony_providers_edges_sites",
    "functionName": "get_telephony_providers_edges_sites",
    "signature": "get_telephony_providers_edges_sites(page_size, page_number, sort_by, sort_order, name, location_id, managed, expand)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "location_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "managed",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "SiteEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_by = ''name'' # str | Sort by (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nname = 'name_example' # str | Name (optional)\nlocation_id = 'location_id_example' # str | Location Id (optional)\nmanaged = True # bool | Filter by managed (optional)\nexpand = ['expand_example'] # list[str] | Fields to expand in the response, comma-separated (optional)\n\ntry:\n    # Get the list of Sites.\n    api_response = api_instance.get_telephony_providers_edges_sites(page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order, name=name, location_id=location_id, managed=managed, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_sites: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_timezones": {
    "operationId": "get_telephony_providers_edges_timezones",
    "functionName": "get_telephony_providers_edges_timezones",
    "signature": "get_telephony_providers_edges_timezones(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "TimeZoneEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_size = 1000 # int | Page size (optional) (default to 1000)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get a list of Edge-compatible time zones\n    api_response = api_instance.get_telephony_providers_edges_timezones(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_timezones: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_trunk": {
    "operationId": "get_telephony_providers_edges_trunk",
    "functionName": "get_telephony_providers_edges_trunk",
    "signature": "get_telephony_providers_edges_trunk(trunk_id)",
    "parameters": [
      {
        "name": "trunk_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "Trunk",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ntrunk_id = 'trunk_id_example' # str | Trunk ID\n\ntry:\n    # Get a Trunk by ID\n    api_response = api_instance.get_telephony_providers_edges_trunk(trunk_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_trunk: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_trunk_metrics": {
    "operationId": "get_telephony_providers_edges_trunk_metrics",
    "functionName": "get_telephony_providers_edges_trunk_metrics",
    "signature": "get_telephony_providers_edges_trunk_metrics(trunk_id)",
    "parameters": [
      {
        "name": "trunk_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TrunkMetrics",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ntrunk_id = 'trunk_id_example' # str | Trunk Id\n\ntry:\n    # Get the trunk metrics.\n    api_response = api_instance.get_telephony_providers_edges_trunk_metrics(trunk_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_trunk_metrics: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_trunkbasesetting": {
    "operationId": "get_telephony_providers_edges_trunkbasesetting",
    "functionName": "get_telephony_providers_edges_trunkbasesetting",
    "signature": "get_telephony_providers_edges_trunkbasesetting(trunk_base_settings_id, ignore_hidden)",
    "parameters": [
      {
        "name": "trunk_base_settings_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "ignore_hidden",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "TrunkBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ntrunk_base_settings_id = 'trunk_base_settings_id_example' # str | Trunk Base ID\nignore_hidden = True # bool | Set this to true to not receive trunk properties that are meant to be hidden or for internal system usage only. (optional)\n\ntry:\n    # Get a Trunk Base Settings object by ID\n    api_response = api_instance.get_telephony_providers_edges_trunkbasesetting(trunk_base_settings_id, ignore_hidden=ignore_hidden)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_trunkbasesetting: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_trunkbasesettings": {
    "operationId": "get_telephony_providers_edges_trunkbasesettings",
    "functionName": "get_telephony_providers_edges_trunkbasesettings",
    "signature": "get_telephony_providers_edges_trunkbasesettings(page_number, page_size, sort_by, sort_order, recording_enabled, ignore_hidden, managed, expand, name)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "recording_enabled",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "ignore_hidden",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "managed",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "name",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TrunkBaseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | Value by which to sort (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nrecording_enabled = True # bool | Filter trunks by recording enabled (optional)\nignore_hidden = True # bool | Set this to true to not receive trunk properties that are meant to be hidden or for internal system usage only. (optional)\nmanaged = True # bool | Filter by managed (optional)\nexpand = ['expand_example'] # list[str] | Fields to expand in the response, comma-separated (optional)\nname = 'name_example' # str | Name of the TrunkBase to filter by (optional)\n\ntry:\n    # Get Trunk Base Settings listing\n    api_response = api_instance.get_telephony_providers_edges_trunkbasesettings(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, recording_enabled=recording_enabled, ignore_hidden=ignore_hidden, managed=managed, expand=expand, name=name)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_trunkbasesettings: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_trunkbasesettings_availablemetabases": {
    "operationId": "get_telephony_providers_edges_trunkbasesettings_availablemetabases",
    "functionName": "get_telephony_providers_edges_trunkbasesettings_availablemetabases",
    "signature": "get_telephony_providers_edges_trunkbasesettings_availablemetabases(type, page_size, page_number)",
    "parameters": [
      {
        "name": "type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "TrunkMetabaseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ntype = 'type_example' # str |  (optional)\npage_size = 25 # int |  (optional) (default to 25)\npage_number = 1 # int |  (optional) (default to 1)\n\ntry:\n    # Get a list of available makes and models to create a new Trunk Base Settings\n    api_response = api_instance.get_telephony_providers_edges_trunkbasesettings_availablemetabases(type=type, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_trunkbasesettings_availablemetabases: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_trunkbasesettings_template": {
    "operationId": "get_telephony_providers_edges_trunkbasesettings_template",
    "functionName": "get_telephony_providers_edges_trunkbasesettings_template",
    "signature": "get_telephony_providers_edges_trunkbasesettings_template(trunk_metabase_id)",
    "parameters": [
      {
        "name": "trunk_metabase_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TrunkBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ntrunk_metabase_id = 'trunk_metabase_id_example' # str | The id of a metabase object upon which to base this Trunk Base Settings\n\ntry:\n    # Get a Trunk Base Settings instance template from a given make and model. This object can then be modified and saved as a new Trunk Base Settings instance\n    api_response = api_instance.get_telephony_providers_edges_trunkbasesettings_template(trunk_metabase_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_trunkbasesettings_template: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_trunks": {
    "operationId": "get_telephony_providers_edges_trunks",
    "functionName": "get_telephony_providers_edges_trunks",
    "signature": "get_telephony_providers_edges_trunks(page_number, page_size, sort_by, sort_order, edge_id, trunk_base_id, trunk_type)",
    "parameters": [
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_by",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "edge_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "trunk_base_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "trunk_type",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TrunkEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\npage_number = 1 # int | Page number (optional) (default to 1)\npage_size = 25 # int | Page size (optional) (default to 25)\nsort_by = ''name'' # str | Value by which to sort (optional) (default to 'name')\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nedge_id = 'edge_id_example' # str | Filter by Edge Ids (optional)\ntrunk_base_id = 'trunk_base_id_example' # str | Filter by Trunk Base Ids (optional)\ntrunk_type = 'trunk_type_example' # str | Filter by a Trunk type (optional)\n\ntry:\n    # Get the list of available trunks.\n    api_response = api_instance.get_telephony_providers_edges_trunks(page_number=page_number, page_size=page_size, sort_by=sort_by, sort_order=sort_order, edge_id=edge_id, trunk_base_id=trunk_base_id, trunk_type=trunk_type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_trunks: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_trunks_metrics": {
    "operationId": "get_telephony_providers_edges_trunks_metrics",
    "functionName": "get_telephony_providers_edges_trunks_metrics",
    "signature": "get_telephony_providers_edges_trunks_metrics(trunk_ids)",
    "parameters": [
      {
        "name": "trunk_ids",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[TrunkMetrics]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ntrunk_ids = 'trunk_ids_example' # str | Comma separated list of Trunk Id's\n\ntry:\n    # Get the metrics for a list of trunks.\n    api_response = api_instance.get_telephony_providers_edges_trunks_metrics(trunk_ids)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_trunks_metrics: %s\\n\" % e)"
  },
  "get_telephony_providers_edges_trunkswithrecording": {
    "operationId": "get_telephony_providers_edges_trunkswithrecording",
    "functionName": "get_telephony_providers_edges_trunkswithrecording",
    "signature": "get_telephony_providers_edges_trunkswithrecording(trunk_type)",
    "parameters": [
      {
        "name": "trunk_type",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "TrunkRecordingEnabledCount",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ntrunk_type = 'trunk_type_example' # str | The type of this trunk base. (optional)\n\ntry:\n    # Get Counts of trunks that have recording disabled or enabled\n    api_response = api_instance.get_telephony_providers_edges_trunkswithrecording(trunk_type=trunk_type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->get_telephony_providers_edges_trunkswithrecording: %s\\n\" % e)"
  },
  "patch_telephony_providers_edges_site_siteconnections": {
    "operationId": "patch_telephony_providers_edges_site_siteconnections",
    "functionName": "patch_telephony_providers_edges_site_siteconnections",
    "signature": "patch_telephony_providers_edges_site_siteconnections(site_id, body)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DisableSiteConnectionsRequest",
        "required": "true"
      }
    ],
    "return": "SiteConnections",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\nbody = PureCloudPlatformClientV2.DisableSiteConnectionsRequest() # DisableSiteConnectionsRequest | Site\n\ntry:\n    # Disable site connections for a site.\n    api_response = api_instance.patch_telephony_providers_edges_site_siteconnections(site_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->patch_telephony_providers_edges_site_siteconnections: %s\\n\" % e)"
  },
  "post_telephony_providers_edge_diagnostic_nslookup": {
    "operationId": "post_telephony_providers_edge_diagnostic_nslookup",
    "functionName": "post_telephony_providers_edge_diagnostic_nslookup",
    "signature": "post_telephony_providers_edge_diagnostic_nslookup(edge_id, body)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeNetworkDiagnosticRequest",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnostic",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge Id\nbody = PureCloudPlatformClientV2.EdgeNetworkDiagnosticRequest() # EdgeNetworkDiagnosticRequest | request payload to get network diagnostic\n\ntry:\n    # Nslookup request command to collect networking-related information from an Edge for a target IP or host.\n    api_response = api_instance.post_telephony_providers_edge_diagnostic_nslookup(edge_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edge_diagnostic_nslookup: %s\\n\" % e)"
  },
  "post_telephony_providers_edge_diagnostic_ping": {
    "operationId": "post_telephony_providers_edge_diagnostic_ping",
    "functionName": "post_telephony_providers_edge_diagnostic_ping",
    "signature": "post_telephony_providers_edge_diagnostic_ping(edge_id, body)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeNetworkDiagnosticRequest",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnostic",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge Id\nbody = PureCloudPlatformClientV2.EdgeNetworkDiagnosticRequest() # EdgeNetworkDiagnosticRequest | request payload to get network diagnostic\n\ntry:\n    # Ping Request command to collect networking-related information from an Edge for a target IP or host.\n    api_response = api_instance.post_telephony_providers_edge_diagnostic_ping(edge_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edge_diagnostic_ping: %s\\n\" % e)"
  },
  "post_telephony_providers_edge_diagnostic_route": {
    "operationId": "post_telephony_providers_edge_diagnostic_route",
    "functionName": "post_telephony_providers_edge_diagnostic_route",
    "signature": "post_telephony_providers_edge_diagnostic_route(edge_id, body)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeNetworkDiagnosticRequest",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnostic",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge Id\nbody = PureCloudPlatformClientV2.EdgeNetworkDiagnosticRequest() # EdgeNetworkDiagnosticRequest | request payload to get network diagnostic\n\ntry:\n    # Route request command to collect networking-related information from an Edge for a target IP or host.\n    api_response = api_instance.post_telephony_providers_edge_diagnostic_route(edge_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edge_diagnostic_route: %s\\n\" % e)"
  },
  "post_telephony_providers_edge_diagnostic_tracepath": {
    "operationId": "post_telephony_providers_edge_diagnostic_tracepath",
    "functionName": "post_telephony_providers_edge_diagnostic_tracepath",
    "signature": "post_telephony_providers_edge_diagnostic_tracepath(edge_id, body)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeNetworkDiagnosticRequest",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnostic",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge Id\nbody = PureCloudPlatformClientV2.EdgeNetworkDiagnosticRequest() # EdgeNetworkDiagnosticRequest | request payload to get network diagnostic\n\ntry:\n    # Tracepath request command to collect networking-related information from an Edge for a target IP or host.\n    api_response = api_instance.post_telephony_providers_edge_diagnostic_tracepath(edge_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edge_diagnostic_tracepath: %s\\n\" % e)"
  },
  "post_telephony_providers_edge_logicalinterfaces": {
    "operationId": "post_telephony_providers_edge_logicalinterfaces",
    "functionName": "post_telephony_providers_edge_logicalinterfaces",
    "signature": "post_telephony_providers_edge_logicalinterfaces(edge_id, body)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainLogicalInterface",
        "required": "true"
      }
    ],
    "return": "DomainLogicalInterface",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\nbody = PureCloudPlatformClientV2.DomainLogicalInterface() # DomainLogicalInterface | Logical interface\n\ntry:\n    # Create an edge logical interface.\n    api_response = api_instance.post_telephony_providers_edge_logicalinterfaces(edge_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edge_logicalinterfaces: %s\\n\" % e)"
  },
  "post_telephony_providers_edge_logs_job_upload": {
    "operationId": "post_telephony_providers_edge_logs_job_upload",
    "functionName": "post_telephony_providers_edge_logs_job_upload",
    "signature": "post_telephony_providers_edge_logs_job_upload(edge_id, job_id, body)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeLogsJobUploadRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\njob_id = 'job_id_example' # str | Job ID\nbody = PureCloudPlatformClientV2.EdgeLogsJobUploadRequest() # EdgeLogsJobUploadRequest | Log upload request\n\ntry:\n    # Request that the specified fileIds be uploaded from the Edge.\n    api_instance.post_telephony_providers_edge_logs_job_upload(edge_id, job_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edge_logs_job_upload: %s\\n\" % e)"
  },
  "post_telephony_providers_edge_logs_jobs": {
    "operationId": "post_telephony_providers_edge_logs_jobs",
    "functionName": "post_telephony_providers_edge_logs_jobs",
    "signature": "post_telephony_providers_edge_logs_jobs(edge_id, body)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeLogsJobRequest",
        "required": "true"
      }
    ],
    "return": "EdgeLogsJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\nbody = PureCloudPlatformClientV2.EdgeLogsJobRequest() # EdgeLogsJobRequest | EdgeLogsJobRequest\n\ntry:\n    # Create a job to upload a list of Edge logs.\n    api_response = api_instance.post_telephony_providers_edge_logs_jobs(edge_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edge_logs_jobs: %s\\n\" % e)"
  },
  "post_telephony_providers_edge_reboot": {
    "operationId": "post_telephony_providers_edge_reboot",
    "functionName": "post_telephony_providers_edge_reboot",
    "signature": "post_telephony_providers_edge_reboot(edge_id, body)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeRebootParameters",
        "required": "false"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\nbody = PureCloudPlatformClientV2.EdgeRebootParameters() # EdgeRebootParameters | Parameters for the edge reboot (optional)\n\ntry:\n    # Reboot an Edge\n    api_response = api_instance.post_telephony_providers_edge_reboot(edge_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edge_reboot: %s\\n\" % e)"
  },
  "post_telephony_providers_edge_softwareupdate": {
    "operationId": "post_telephony_providers_edge_softwareupdate",
    "functionName": "post_telephony_providers_edge_softwareupdate",
    "signature": "post_telephony_providers_edge_softwareupdate(edge_id, body)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainEdgeSoftwareUpdateDto",
        "required": "true"
      }
    ],
    "return": "DomainEdgeSoftwareUpdateDto",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\nbody = PureCloudPlatformClientV2.DomainEdgeSoftwareUpdateDto() # DomainEdgeSoftwareUpdateDto | Software update request\n\ntry:\n    # Starts a software update for this edge.\n    api_response = api_instance.post_telephony_providers_edge_softwareupdate(edge_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edge_softwareupdate: %s\\n\" % e)"
  },
  "post_telephony_providers_edge_statuscode": {
    "operationId": "post_telephony_providers_edge_statuscode",
    "functionName": "post_telephony_providers_edge_statuscode",
    "signature": "post_telephony_providers_edge_statuscode(edge_id, body)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeServiceStateRequest",
        "required": "false"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\nbody = PureCloudPlatformClientV2.EdgeServiceStateRequest() # EdgeServiceStateRequest | Edge Service State (optional)\n\ntry:\n    # Take an Edge in or out of service\n    api_response = api_instance.post_telephony_providers_edge_statuscode(edge_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edge_statuscode: %s\\n\" % e)"
  },
  "post_telephony_providers_edge_unpair": {
    "operationId": "post_telephony_providers_edge_unpair",
    "functionName": "post_telephony_providers_edge_unpair",
    "signature": "post_telephony_providers_edge_unpair(edge_id)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge Id\n\ntry:\n    # Unpair an Edge\n    api_response = api_instance.post_telephony_providers_edge_unpair(edge_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edge_unpair: %s\\n\" % e)"
  },
  "post_telephony_providers_edges": {
    "operationId": "post_telephony_providers_edges",
    "functionName": "post_telephony_providers_edges",
    "signature": "post_telephony_providers_edges(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Edge",
        "required": "true"
      }
    ],
    "return": "Edge",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nbody = PureCloudPlatformClientV2.Edge() # Edge | Edge\n\ntry:\n    # Create an edge.\n    api_response = api_instance.post_telephony_providers_edges(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edges: %s\\n\" % e)"
  },
  "post_telephony_providers_edges_addressvalidation": {
    "operationId": "post_telephony_providers_edges_addressvalidation",
    "functionName": "post_telephony_providers_edges_addressvalidation",
    "signature": "post_telephony_providers_edges_addressvalidation(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ValidateAddressRequest",
        "required": "true"
      }
    ],
    "return": "ValidateAddressResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nbody = PureCloudPlatformClientV2.ValidateAddressRequest() # ValidateAddressRequest | Address\n\ntry:\n    # Validates a street address\n    api_response = api_instance.post_telephony_providers_edges_addressvalidation(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edges_addressvalidation: %s\\n\" % e)"
  },
  "post_telephony_providers_edges_certificateauthorities": {
    "operationId": "post_telephony_providers_edges_certificateauthorities",
    "functionName": "post_telephony_providers_edges_certificateauthorities",
    "signature": "post_telephony_providers_edges_certificateauthorities(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DomainCertificateAuthority",
        "required": "true"
      }
    ],
    "return": "DomainCertificateAuthority",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nbody = PureCloudPlatformClientV2.DomainCertificateAuthority() # DomainCertificateAuthority | CertificateAuthority\n\ntry:\n    # Create a certificate authority.\n    api_response = api_instance.post_telephony_providers_edges_certificateauthorities(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edges_certificateauthorities: %s\\n\" % e)"
  },
  "post_telephony_providers_edges_didpools": {
    "operationId": "post_telephony_providers_edges_didpools",
    "functionName": "post_telephony_providers_edges_didpools",
    "signature": "post_telephony_providers_edges_didpools(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DIDPool",
        "required": "true"
      }
    ],
    "return": "DIDPool",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nbody = PureCloudPlatformClientV2.DIDPool() # DIDPool | DID pool\n\ntry:\n    # Create a new DID pool\n    api_response = api_instance.post_telephony_providers_edges_didpools(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edges_didpools: %s\\n\" % e)"
  },
  "post_telephony_providers_edges_edgegroups": {
    "operationId": "post_telephony_providers_edges_edgegroups",
    "functionName": "post_telephony_providers_edges_edgegroups",
    "signature": "post_telephony_providers_edges_edgegroups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EdgeGroup",
        "required": "true"
      }
    ],
    "return": "EdgeGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nbody = PureCloudPlatformClientV2.EdgeGroup() # EdgeGroup | EdgeGroup\n\ntry:\n    # Create an edge group.\n    api_response = api_instance.post_telephony_providers_edges_edgegroups(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edges_edgegroups: %s\\n\" % e)"
  },
  "post_telephony_providers_edges_extensionpools": {
    "operationId": "post_telephony_providers_edges_extensionpools",
    "functionName": "post_telephony_providers_edges_extensionpools",
    "signature": "post_telephony_providers_edges_extensionpools(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ExtensionPool",
        "required": "true"
      }
    ],
    "return": "ExtensionPool",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nbody = PureCloudPlatformClientV2.ExtensionPool() # ExtensionPool | ExtensionPool\n\ntry:\n    # Create a new extension pool\n    api_response = api_instance.post_telephony_providers_edges_extensionpools(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edges_extensionpools: %s\\n\" % e)"
  },
  "post_telephony_providers_edges_phone_reboot": {
    "operationId": "post_telephony_providers_edges_phone_reboot",
    "functionName": "post_telephony_providers_edges_phone_reboot",
    "signature": "post_telephony_providers_edges_phone_reboot(phone_id)",
    "parameters": [
      {
        "name": "phone_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nphone_id = 'phone_id_example' # str | Phone Id\n\ntry:\n    # Reboot a Phone\n    api_instance.post_telephony_providers_edges_phone_reboot(phone_id)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edges_phone_reboot: %s\\n\" % e)"
  },
  "post_telephony_providers_edges_phonebasesettings": {
    "operationId": "post_telephony_providers_edges_phonebasesettings",
    "functionName": "post_telephony_providers_edges_phonebasesettings",
    "signature": "post_telephony_providers_edges_phonebasesettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PhoneBase",
        "required": "true"
      }
    ],
    "return": "PhoneBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nbody = PureCloudPlatformClientV2.PhoneBase() # PhoneBase | Phone base settings\n\ntry:\n    # Create a new Phone Base Settings object\n    api_response = api_instance.post_telephony_providers_edges_phonebasesettings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edges_phonebasesettings: %s\\n\" % e)"
  },
  "post_telephony_providers_edges_phones": {
    "operationId": "post_telephony_providers_edges_phones",
    "functionName": "post_telephony_providers_edges_phones",
    "signature": "post_telephony_providers_edges_phones(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Phone",
        "required": "true"
      }
    ],
    "return": "Phone",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nbody = PureCloudPlatformClientV2.Phone() # Phone | Phone\n\ntry:\n    # Create a new Phone\n    api_response = api_instance.post_telephony_providers_edges_phones(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edges_phones: %s\\n\" % e)"
  },
  "post_telephony_providers_edges_phones_reboot": {
    "operationId": "post_telephony_providers_edges_phones_reboot",
    "functionName": "post_telephony_providers_edges_phones_reboot",
    "signature": "post_telephony_providers_edges_phones_reboot(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PhonesReboot",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nbody = PureCloudPlatformClientV2.PhonesReboot() # PhonesReboot | Phones\n\ntry:\n    # Reboot Multiple Phones\n    api_instance.post_telephony_providers_edges_phones_reboot(body)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edges_phones_reboot: %s\\n\" % e)"
  },
  "post_telephony_providers_edges_site_outboundroutes": {
    "operationId": "post_telephony_providers_edges_site_outboundroutes",
    "functionName": "post_telephony_providers_edges_site_outboundroutes",
    "signature": "post_telephony_providers_edges_site_outboundroutes(site_id, body)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OutboundRouteBase",
        "required": "true"
      }
    ],
    "return": "OutboundRouteBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\nbody = PureCloudPlatformClientV2.OutboundRouteBase() # OutboundRouteBase | OutboundRoute\n\ntry:\n    # Create outbound route\n    api_response = api_instance.post_telephony_providers_edges_site_outboundroutes(site_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edges_site_outboundroutes: %s\\n\" % e)"
  },
  "post_telephony_providers_edges_sites": {
    "operationId": "post_telephony_providers_edges_sites",
    "functionName": "post_telephony_providers_edges_sites",
    "signature": "post_telephony_providers_edges_sites(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Site",
        "required": "true"
      }
    ],
    "return": "Site",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nbody = PureCloudPlatformClientV2.Site() # Site | Site\n\ntry:\n    # Create a Site.\n    api_response = api_instance.post_telephony_providers_edges_sites(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edges_sites: %s\\n\" % e)"
  },
  "post_telephony_providers_edges_trunkbasesettings": {
    "operationId": "post_telephony_providers_edges_trunkbasesettings",
    "functionName": "post_telephony_providers_edges_trunkbasesettings",
    "signature": "post_telephony_providers_edges_trunkbasesettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TrunkBase",
        "required": "true"
      }
    ],
    "return": "TrunkBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nbody = PureCloudPlatformClientV2.TrunkBase() # TrunkBase | Trunk base settings\n\ntry:\n    # Create a Trunk Base Settings object\n    api_response = api_instance.post_telephony_providers_edges_trunkbasesettings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->post_telephony_providers_edges_trunkbasesettings: %s\\n\" % e)"
  },
  "put_telephony_providers_edge": {
    "operationId": "put_telephony_providers_edge",
    "functionName": "put_telephony_providers_edge",
    "signature": "put_telephony_providers_edge(edge_id, body)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Edge",
        "required": "true"
      }
    ],
    "return": "Edge",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\nbody = PureCloudPlatformClientV2.Edge() # Edge | Edge\n\ntry:\n    # Update a edge.\n    api_response = api_instance.put_telephony_providers_edge(edge_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edge: %s\\n\" % e)"
  },
  "put_telephony_providers_edge_logicalinterface": {
    "operationId": "put_telephony_providers_edge_logicalinterface",
    "functionName": "put_telephony_providers_edge_logicalinterface",
    "signature": "put_telephony_providers_edge_logicalinterface(edge_id, interface_id, body)",
    "parameters": [
      {
        "name": "edge_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "interface_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainLogicalInterface",
        "required": "true"
      }
    ],
    "return": "DomainLogicalInterface",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_id = 'edge_id_example' # str | Edge ID\ninterface_id = 'interface_id_example' # str | Interface ID\nbody = PureCloudPlatformClientV2.DomainLogicalInterface() # DomainLogicalInterface | Logical interface\n\ntry:\n    # Update an edge logical interface.\n    api_response = api_instance.put_telephony_providers_edge_logicalinterface(edge_id, interface_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edge_logicalinterface: %s\\n\" % e)"
  },
  "put_telephony_providers_edges_certificateauthority": {
    "operationId": "put_telephony_providers_edges_certificateauthority",
    "functionName": "put_telephony_providers_edges_certificateauthority",
    "signature": "put_telephony_providers_edges_certificateauthority(certificate_id, body)",
    "parameters": [
      {
        "name": "certificate_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainCertificateAuthority",
        "required": "true"
      }
    ],
    "return": "DomainCertificateAuthority",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ncertificate_id = 'certificate_id_example' # str | Certificate ID\nbody = PureCloudPlatformClientV2.DomainCertificateAuthority() # DomainCertificateAuthority | Certificate authority\n\ntry:\n    # Update a certificate authority.\n    api_response = api_instance.put_telephony_providers_edges_certificateauthority(certificate_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edges_certificateauthority: %s\\n\" % e)"
  },
  "put_telephony_providers_edges_didpool": {
    "operationId": "put_telephony_providers_edges_didpool",
    "functionName": "put_telephony_providers_edges_didpool",
    "signature": "put_telephony_providers_edges_didpool(did_pool_id, body)",
    "parameters": [
      {
        "name": "did_pool_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DIDPool",
        "required": "true"
      }
    ],
    "return": "DIDPool",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ndid_pool_id = 'did_pool_id_example' # str | DID pool ID\nbody = PureCloudPlatformClientV2.DIDPool() # DIDPool | DID pool\n\ntry:\n    # Update a DID Pool by ID.\n    api_response = api_instance.put_telephony_providers_edges_didpool(did_pool_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edges_didpool: %s\\n\" % e)"
  },
  "put_telephony_providers_edges_edgegroup": {
    "operationId": "put_telephony_providers_edges_edgegroup",
    "functionName": "put_telephony_providers_edges_edgegroup",
    "signature": "put_telephony_providers_edges_edgegroup(edge_group_id, body)",
    "parameters": [
      {
        "name": "edge_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeGroup",
        "required": "true"
      }
    ],
    "return": "EdgeGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedge_group_id = 'edge_group_id_example' # str | Edge group ID\nbody = PureCloudPlatformClientV2.EdgeGroup() # EdgeGroup | EdgeGroup\n\ntry:\n    # Update an edge group.\n    api_response = api_instance.put_telephony_providers_edges_edgegroup(edge_group_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edges_edgegroup: %s\\n\" % e)"
  },
  "put_telephony_providers_edges_edgegroup_edgetrunkbase": {
    "operationId": "put_telephony_providers_edges_edgegroup_edgetrunkbase",
    "functionName": "put_telephony_providers_edges_edgegroup_edgetrunkbase",
    "signature": "put_telephony_providers_edges_edgegroup_edgetrunkbase(edgegroup_id, edgetrunkbase_id, body)",
    "parameters": [
      {
        "name": "edgegroup_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "edgetrunkbase_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeTrunkBase",
        "required": "true"
      }
    ],
    "return": "EdgeTrunkBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nedgegroup_id = 'edgegroup_id_example' # str | Edge Group ID\nedgetrunkbase_id = 'edgetrunkbase_id_example' # str | Edge Trunk Base ID\nbody = PureCloudPlatformClientV2.EdgeTrunkBase() # EdgeTrunkBase | EdgeTrunkBase\n\ntry:\n    # Update the edge trunk base associated with the edge group\n    api_response = api_instance.put_telephony_providers_edges_edgegroup_edgetrunkbase(edgegroup_id, edgetrunkbase_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edges_edgegroup_edgetrunkbase: %s\\n\" % e)"
  },
  "put_telephony_providers_edges_extensionpool": {
    "operationId": "put_telephony_providers_edges_extensionpool",
    "functionName": "put_telephony_providers_edges_extensionpool",
    "signature": "put_telephony_providers_edges_extensionpool(extension_pool_id, body)",
    "parameters": [
      {
        "name": "extension_pool_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ExtensionPool",
        "required": "true"
      }
    ],
    "return": "ExtensionPool",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nextension_pool_id = 'extension_pool_id_example' # str | Extension pool ID\nbody = PureCloudPlatformClientV2.ExtensionPool() # ExtensionPool | ExtensionPool\n\ntry:\n    # Update an extension pool by ID\n    api_response = api_instance.put_telephony_providers_edges_extensionpool(extension_pool_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edges_extensionpool: %s\\n\" % e)"
  },
  "put_telephony_providers_edges_phone": {
    "operationId": "put_telephony_providers_edges_phone",
    "functionName": "put_telephony_providers_edges_phone",
    "signature": "put_telephony_providers_edges_phone(phone_id, body)",
    "parameters": [
      {
        "name": "phone_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Phone",
        "required": "true"
      }
    ],
    "return": "Phone",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nphone_id = 'phone_id_example' # str | Phone ID\nbody = PureCloudPlatformClientV2.Phone() # Phone | Phone\n\ntry:\n    # Update a Phone by ID\n    api_response = api_instance.put_telephony_providers_edges_phone(phone_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edges_phone: %s\\n\" % e)"
  },
  "put_telephony_providers_edges_phonebasesetting": {
    "operationId": "put_telephony_providers_edges_phonebasesetting",
    "functionName": "put_telephony_providers_edges_phonebasesetting",
    "signature": "put_telephony_providers_edges_phonebasesetting(phone_base_id, body)",
    "parameters": [
      {
        "name": "phone_base_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PhoneBase",
        "required": "true"
      }
    ],
    "return": "PhoneBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nphone_base_id = 'phone_base_id_example' # str | Phone base ID\nbody = PureCloudPlatformClientV2.PhoneBase() # PhoneBase | Phone base settings\n\ntry:\n    # Update a Phone Base Settings by ID\n    api_response = api_instance.put_telephony_providers_edges_phonebasesetting(phone_base_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edges_phonebasesetting: %s\\n\" % e)"
  },
  "put_telephony_providers_edges_site": {
    "operationId": "put_telephony_providers_edges_site",
    "functionName": "put_telephony_providers_edges_site",
    "signature": "put_telephony_providers_edges_site(site_id, body)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Site",
        "required": "true"
      }
    ],
    "return": "Site",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\nbody = PureCloudPlatformClientV2.Site() # Site | Site\n\ntry:\n    # Update a Site by ID.\n    api_response = api_instance.put_telephony_providers_edges_site(site_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edges_site: %s\\n\" % e)"
  },
  "put_telephony_providers_edges_site_numberplans": {
    "operationId": "put_telephony_providers_edges_site_numberplans",
    "functionName": "put_telephony_providers_edges_site_numberplans",
    "signature": "put_telephony_providers_edges_site_numberplans(site_id, body)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[NumberPlan]",
        "required": "true"
      }
    ],
    "return": "list[NumberPlan]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\nbody = [PureCloudPlatformClientV2.NumberPlan()] # list[NumberPlan] | List of number plans\n\ntry:\n    # Update the list of Number Plans. A user can update maximum 200 number plans at a time.\n    api_response = api_instance.put_telephony_providers_edges_site_numberplans(site_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edges_site_numberplans: %s\\n\" % e)"
  },
  "put_telephony_providers_edges_site_outboundroute": {
    "operationId": "put_telephony_providers_edges_site_outboundroute",
    "functionName": "put_telephony_providers_edges_site_outboundroute",
    "signature": "put_telephony_providers_edges_site_outboundroute(site_id, outbound_route_id, body)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "outbound_route_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OutboundRouteBase",
        "required": "true"
      }
    ],
    "return": "OutboundRouteBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\noutbound_route_id = 'outbound_route_id_example' # str | Outbound route ID\nbody = PureCloudPlatformClientV2.OutboundRouteBase() # OutboundRouteBase | OutboundRoute\n\ntry:\n    # Update outbound route\n    api_response = api_instance.put_telephony_providers_edges_site_outboundroute(site_id, outbound_route_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edges_site_outboundroute: %s\\n\" % e)"
  },
  "put_telephony_providers_edges_site_siteconnections": {
    "operationId": "put_telephony_providers_edges_site_siteconnections",
    "functionName": "put_telephony_providers_edges_site_siteconnections",
    "signature": "put_telephony_providers_edges_site_siteconnections(site_id, body)",
    "parameters": [
      {
        "name": "site_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SiteConnections",
        "required": "true"
      }
    ],
    "return": "SiteConnections",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\nsite_id = 'site_id_example' # str | Site ID\nbody = PureCloudPlatformClientV2.SiteConnections() # SiteConnections | Site\n\ntry:\n    # Update site connections for a site.\n    api_response = api_instance.put_telephony_providers_edges_site_siteconnections(site_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edges_site_siteconnections: %s\\n\" % e)"
  },
  "put_telephony_providers_edges_trunkbasesetting": {
    "operationId": "put_telephony_providers_edges_trunkbasesetting",
    "functionName": "put_telephony_providers_edges_trunkbasesetting",
    "signature": "put_telephony_providers_edges_trunkbasesetting(trunk_base_settings_id, body)",
    "parameters": [
      {
        "name": "trunk_base_settings_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TrunkBase",
        "required": "true"
      }
    ],
    "return": "TrunkBase",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TelephonyProvidersEdgeApi();\ntrunk_base_settings_id = 'trunk_base_settings_id_example' # str | Trunk Base ID\nbody = PureCloudPlatformClientV2.TrunkBase() # TrunkBase | Trunk base settings\n\ntry:\n    # Update a Trunk Base Settings object by ID\n    api_response = api_instance.put_telephony_providers_edges_trunkbasesetting(trunk_base_settings_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TelephonyProvidersEdgeApi->put_telephony_providers_edges_trunkbasesetting: %s\\n\" % e)"
  },
  "get_textbots_bots_search": {
    "operationId": "get_textbots_bots_search",
    "functionName": "get_textbots_bots_search",
    "signature": "get_textbots_bots_search(bot_type, bot_name, bot_id, page_size)",
    "parameters": [
      {
        "name": "bot_type",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "bot_name",
        "type": "str",
        "required": "false"
      },
      {
        "name": "bot_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "BotSearchResponseEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TextbotsApi();\nbot_type = ['bot_type_example'] # list[str] | Bot types (optional)\nbot_name = 'bot_name_example' # str | Bot name (optional)\nbot_id = ['bot_id_example'] # list[str] | Bot IDs (optional)\npage_size = 25 # int | The maximum results to return (optional) (default to 25)\n\ntry:\n    # Find bots using the currently configured friendly name or ID.\n    api_response = api_instance.get_textbots_bots_search(bot_type=bot_type, bot_name=bot_name, bot_id=bot_id, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TextbotsApi->get_textbots_bots_search: %s\\n\" % e)"
  },
  "post_textbots_botflows_session_turns": {
    "operationId": "post_textbots_botflows_session_turns",
    "functionName": "post_textbots_botflows_session_turns",
    "signature": "post_textbots_botflows_session_turns(session_id, turn_request)",
    "parameters": [
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "turn_request",
        "type": "TextBotFlowTurnRequest",
        "required": "true"
      }
    ],
    "return": "TextBotFlowTurnResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TextbotsApi();\nsession_id = 'session_id_example' # str | The bot flow session ID, typically obtained from 'POST /api/v2/textbots/botflows/sessions'\nturn_request = PureCloudPlatformClientV2.TextBotFlowTurnRequest() # TextBotFlowTurnRequest | \n\ntry:\n    # Issue a bot flow turn event\n    api_response = api_instance.post_textbots_botflows_session_turns(session_id, turn_request)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TextbotsApi->post_textbots_botflows_session_turns: %s\\n\" % e)"
  },
  "post_textbots_botflows_sessions": {
    "operationId": "post_textbots_botflows_sessions",
    "functionName": "post_textbots_botflows_sessions",
    "signature": "post_textbots_botflows_sessions(launch_request)",
    "parameters": [
      {
        "name": "launch_request",
        "type": "TextBotFlowLaunchRequest",
        "required": "true"
      }
    ],
    "return": "TextBotFlowLaunchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TextbotsApi();\nlaunch_request = PureCloudPlatformClientV2.TextBotFlowLaunchRequest() # TextBotFlowLaunchRequest | \n\ntry:\n    # Create an execution instance of a bot flow definition.\n    api_response = api_instance.post_textbots_botflows_sessions(launch_request)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TextbotsApi->post_textbots_botflows_sessions: %s\\n\" % e)"
  },
  "post_textbots_bots_execute": {
    "operationId": "post_textbots_bots_execute",
    "functionName": "post_textbots_bots_execute",
    "signature": "post_textbots_bots_execute(post_text_request)",
    "parameters": [
      {
        "name": "post_text_request",
        "type": "PostTextRequest",
        "required": "true"
      }
    ],
    "return": "PostTextResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TextbotsApi();\npost_text_request = PureCloudPlatformClientV2.PostTextRequest() # PostTextRequest | \n\ntry:\n    # Send an intent to a bot to start a dialog/interact with it via text\n    api_response = api_instance.post_textbots_bots_execute(post_text_request)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TextbotsApi->post_textbots_bots_execute: %s\\n\" % e)"
  },
  "delete_token": {
    "operationId": "delete_token",
    "functionName": "delete_token",
    "signature": "delete_token(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TokensApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Delete all auth tokens for the specified user.\n    api_instance.delete_token(user_id)\nexcept ApiException as e:\n    print(\"Exception when calling TokensApi->delete_token: %s\\n\" % e)"
  },
  "delete_tokens_me": {
    "operationId": "delete_tokens_me",
    "functionName": "delete_tokens_me",
    "signature": "delete_tokens_me()",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TokensApi();\n\ntry:\n    # Delete auth token used to make the request.\n    api_instance.delete_tokens_me()\nexcept ApiException as e:\n    print(\"Exception when calling TokensApi->delete_tokens_me: %s\\n\" % e)"
  },
  "get_tokens_me": {
    "operationId": "get_tokens_me",
    "functionName": "get_tokens_me",
    "signature": "get_tokens_me(preserve_idle_ttl)",
    "parameters": [
      {
        "name": "preserve_idle_ttl",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "TokenInfo",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TokensApi();\npreserve_idle_ttl = True # bool | preserveIdleTTL indicates whether the idle token timeout should be reset or preserved. If preserveIdleTTL is true, then TTL value is not reset. If unset or false, the value is reset. (optional)\n\ntry:\n    # Fetch information about the current token\n    api_response = api_instance.get_tokens_me(preserve_idle_ttl=preserve_idle_ttl)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TokensApi->get_tokens_me: %s\\n\" % e)"
  },
  "get_tokens_timeout": {
    "operationId": "get_tokens_timeout",
    "functionName": "get_tokens_timeout",
    "signature": "get_tokens_timeout()",
    "return": "IdleTokenTimeout",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TokensApi();\n\ntry:\n    # Get the current Idle Token Timeout Value\n    api_response = api_instance.get_tokens_timeout()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TokensApi->get_tokens_timeout: %s\\n\" % e)"
  },
  "head_tokens_me": {
    "operationId": "head_tokens_me",
    "functionName": "head_tokens_me",
    "signature": "head_tokens_me()",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TokensApi();\n\ntry:\n    # Verify user token\n    api_instance.head_tokens_me()\nexcept ApiException as e:\n    print(\"Exception when calling TokensApi->head_tokens_me: %s\\n\" % e)"
  },
  "put_tokens_timeout": {
    "operationId": "put_tokens_timeout",
    "functionName": "put_tokens_timeout",
    "signature": "put_tokens_timeout(body)",
    "parameters": [
      {
        "name": "body",
        "type": "IdleTokenTimeout",
        "required": "false"
      }
    ],
    "return": "IdleTokenTimeout",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.TokensApi();\nbody = PureCloudPlatformClientV2.IdleTokenTimeout() # IdleTokenTimeout |  (optional)\n\ntry:\n    # Update or Enable/Disable the Idle Token Timeout\n    api_response = api_instance.put_tokens_timeout(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling TokensApi->put_tokens_timeout: %s\\n\" % e)"
  },
  "post_languageunderstanding_miner_uploads": {
    "operationId": "post_languageunderstanding_miner_uploads",
    "functionName": "post_languageunderstanding_miner_uploads",
    "signature": "post_languageunderstanding_miner_uploads(miner_id, body)",
    "parameters": [
      {
        "name": "miner_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Empty",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UploadsApi();\nminer_id = 'miner_id_example' # str | Miner ID\nbody = NULL # Empty | query\n\ntry:\n    # Creates a presigned URL for uploading a chat corpus which will be used for mining by intent miner\n    api_response = api_instance.post_languageunderstanding_miner_uploads(miner_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UploadsApi->post_languageunderstanding_miner_uploads: %s\\n\" % e)"
  },
  "post_uploads_learning_coverart": {
    "operationId": "post_uploads_learning_coverart",
    "functionName": "post_uploads_learning_coverart",
    "signature": "post_uploads_learning_coverart(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LearningCoverArtUploadUrlRequest",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UploadsApi();\nbody = PureCloudPlatformClientV2.LearningCoverArtUploadUrlRequest() # LearningCoverArtUploadUrlRequest | query\n\ntry:\n    # Generates pre-signed URL to upload cover art for learning modules\n    api_response = api_instance.post_uploads_learning_coverart(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UploadsApi->post_uploads_learning_coverart: %s\\n\" % e)"
  },
  "post_uploads_publicassets_images": {
    "operationId": "post_uploads_publicassets_images",
    "functionName": "post_uploads_publicassets_images",
    "signature": "post_uploads_publicassets_images(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UploadUrlRequest",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UploadsApi();\nbody = PureCloudPlatformClientV2.UploadUrlRequest() # UploadUrlRequest | query\n\ntry:\n    # Creates presigned url for uploading a public asset image\n    api_response = api_instance.post_uploads_publicassets_images(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UploadsApi->post_uploads_publicassets_images: %s\\n\" % e)"
  },
  "post_uploads_recordings": {
    "operationId": "post_uploads_recordings",
    "functionName": "post_uploads_recordings",
    "signature": "post_uploads_recordings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UploadUrlRequest",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UploadsApi();\nbody = PureCloudPlatformClientV2.UploadUrlRequest() # UploadUrlRequest | query\n\ntry:\n    # Creates presigned url for uploading a recording file\n    api_response = api_instance.post_uploads_recordings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UploadsApi->post_uploads_recordings: %s\\n\" % e)"
  },
  "post_uploads_workforcemanagement_historicaldata_csv": {
    "operationId": "post_uploads_workforcemanagement_historicaldata_csv",
    "functionName": "post_uploads_workforcemanagement_historicaldata_csv",
    "signature": "post_uploads_workforcemanagement_historicaldata_csv(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UploadUrlRequest",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UploadsApi();\nbody = PureCloudPlatformClientV2.UploadUrlRequest() # UploadUrlRequest | query\n\ntry:\n    # Creates presigned url for uploading WFM historical data file. Requires data in csv format.\n    api_response = api_instance.post_uploads_workforcemanagement_historicaldata_csv(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UploadsApi->post_uploads_workforcemanagement_historicaldata_csv: %s\\n\" % e)"
  },
  "get_usage_query_execution_id_results": {
    "operationId": "get_usage_query_execution_id_results",
    "functionName": "get_usage_query_execution_id_results",
    "signature": "get_usage_query_execution_id_results(execution_id)",
    "parameters": [
      {
        "name": "execution_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ApiUsageQueryResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsageApi();\nexecution_id = 'execution_id_example' # str | ID of the query execution\n\ntry:\n    # Get the results of a usage query\n    api_response = api_instance.get_usage_query_execution_id_results(execution_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsageApi->get_usage_query_execution_id_results: %s\\n\" % e)"
  },
  "get_usage_simplesearch_execution_id_results": {
    "operationId": "get_usage_simplesearch_execution_id_results",
    "functionName": "get_usage_simplesearch_execution_id_results",
    "signature": "get_usage_simplesearch_execution_id_results(execution_id, after, page_size)",
    "parameters": [
      {
        "name": "execution_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "ApiUsageQueryResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsageApi();\nexecution_id = 'execution_id_example' # str | ID of the search execution\nafter = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned (optional)\npage_size = 56 # int | The max number of entities to be returned per request. Maximum page size of 1000 (optional)\n\ntry:\n    # Get the results of a usage search. Number of records to be returned is limited to 20,000 results.\n    api_response = api_instance.get_usage_simplesearch_execution_id_results(execution_id, after=after, page_size=page_size)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsageApi->get_usage_simplesearch_execution_id_results: %s\\n\" % e)"
  },
  "post_usage_query": {
    "operationId": "post_usage_query",
    "functionName": "post_usage_query",
    "signature": "post_usage_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ApiUsageOrganizationQuery",
        "required": "true"
      }
    ],
    "return": "UsageExecutionResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsageApi();\nbody = PureCloudPlatformClientV2.ApiUsageOrganizationQuery() # ApiUsageOrganizationQuery | Query\n\ntry:\n    # Query organization API Usage - \n    api_response = api_instance.post_usage_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsageApi->post_usage_query: %s\\n\" % e)"
  },
  "post_usage_simplesearch": {
    "operationId": "post_usage_simplesearch",
    "functionName": "post_usage_simplesearch",
    "signature": "post_usage_simplesearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ApiUsageSimpleSearch",
        "required": "true"
      }
    ],
    "return": "UsageExecutionResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsageApi();\nbody = PureCloudPlatformClientV2.ApiUsageSimpleSearch() # ApiUsageSimpleSearch | SimpleSearch\n\ntry:\n    # Search organization API Usage\n    api_response = api_instance.post_usage_simplesearch(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsageApi->post_usage_simplesearch: %s\\n\" % e)"
  },
  "delete_userrecording": {
    "operationId": "delete_userrecording",
    "functionName": "delete_userrecording",
    "signature": "delete_userrecording(recording_id)",
    "parameters": [
      {
        "name": "recording_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UserRecordingsApi();\nrecording_id = 'recording_id_example' # str | User Recording ID\n\ntry:\n    # Delete a user recording.\n    api_instance.delete_userrecording(recording_id)\nexcept ApiException as e:\n    print(\"Exception when calling UserRecordingsApi->delete_userrecording: %s\\n\" % e)"
  },
  "get_userrecording": {
    "operationId": "get_userrecording",
    "functionName": "get_userrecording",
    "signature": "get_userrecording(recording_id, expand)",
    "parameters": [
      {
        "name": "recording_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "UserRecording",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UserRecordingsApi();\nrecording_id = 'recording_id_example' # str | User Recording ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Get a user recording.\n    api_response = api_instance.get_userrecording(recording_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UserRecordingsApi->get_userrecording: %s\\n\" % e)"
  },
  "get_userrecording_media": {
    "operationId": "get_userrecording_media",
    "functionName": "get_userrecording_media",
    "signature": "get_userrecording_media(recording_id, format_id, async)",
    "parameters": [
      {
        "name": "recording_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "format_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "async",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "DownloadResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UserRecordingsApi();\nrecording_id = 'recording_id_example' # str | User Recording ID\nformat_id = ''WEBM'' # str | The desired media format. (optional) (default to 'WEBM')\nasync = True # bool | When set to true, api will return 202 response until the recording is ready for download (optional)\n\ntry:\n    # Download a user recording.\n    api_response = api_instance.get_userrecording_media(recording_id, format_id=format_id, async=async)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UserRecordingsApi->get_userrecording_media: %s\\n\" % e)"
  },
  "get_userrecordings": {
    "operationId": "get_userrecordings",
    "functionName": "get_userrecordings",
    "signature": "get_userrecordings(page_size, page_number, expand)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "UserRecordingEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UserRecordingsApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Get a list of user recordings.\n    api_response = api_instance.get_userrecordings(page_size=page_size, page_number=page_number, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UserRecordingsApi->get_userrecordings: %s\\n\" % e)"
  },
  "get_userrecordings_summary": {
    "operationId": "get_userrecordings_summary",
    "functionName": "get_userrecordings_summary",
    "signature": "get_userrecordings_summary()",
    "return": "FaxSummary",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UserRecordingsApi();\n\ntry:\n    # Get user recording summary\n    api_response = api_instance.get_userrecordings_summary()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UserRecordingsApi->get_userrecordings_summary: %s\\n\" % e)"
  },
  "put_userrecording": {
    "operationId": "put_userrecording",
    "functionName": "put_userrecording",
    "signature": "put_userrecording(recording_id, body, expand)",
    "parameters": [
      {
        "name": "recording_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserRecording",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "UserRecording",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UserRecordingsApi();\nrecording_id = 'recording_id_example' # str | User Recording ID\nbody = PureCloudPlatformClientV2.UserRecording() # UserRecording | UserRecording\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\n\ntry:\n    # Update a user recording.\n    api_response = api_instance.put_userrecording(recording_id, body, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UserRecordingsApi->put_userrecording: %s\\n\" % e)"
  },
  "delete_user": {
    "operationId": "delete_user",
    "functionName": "delete_user",
    "signature": "delete_user(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Delete user\n    api_response = api_instance.delete_user(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->delete_user: %s\\n\" % e)"
  },
  "delete_user_station_associatedstation": {
    "operationId": "delete_user_station_associatedstation",
    "functionName": "delete_user_station_associatedstation",
    "signature": "delete_user_station_associatedstation(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Clear associated station\n    api_instance.delete_user_station_associatedstation(user_id)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->delete_user_station_associatedstation: %s\\n\" % e)"
  },
  "delete_user_station_defaultstation": {
    "operationId": "delete_user_station_defaultstation",
    "functionName": "delete_user_station_defaultstation",
    "signature": "delete_user_station_defaultstation(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Clear default station\n    api_instance.delete_user_station_defaultstation(user_id)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->delete_user_station_defaultstation: %s\\n\" % e)"
  },
  "delete_user_verifier": {
    "operationId": "delete_user_verifier",
    "functionName": "delete_user_verifier",
    "signature": "delete_user_verifier(user_id, verifier_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "verifier_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nverifier_id = 'verifier_id_example' # str | Verifier ID\n\ntry:\n    # Delete a verifier\n    api_instance.delete_user_verifier(user_id, verifier_id)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->delete_user_verifier: %s\\n\" % e)"
  },
  "get_profiles_users": {
    "operationId": "get_profiles_users",
    "functionName": "get_profiles_users",
    "signature": "get_profiles_users(page_size, page_number, id, jid, sort_order, expand, integration_presence_source)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "jid",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "integration_presence_source",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UserProfileEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nid = ['id_example'] # list[str] | id (optional)\njid = ['jid_example'] # list[str] | jid (optional)\nsort_order = ''ASC'' # str | Ascending or descending sort order (optional) (default to 'ASC')\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\nintegration_presence_source = 'integration_presence_source_example' # str | Gets an integration presence for users instead of their defaults. This parameter will only be used when presence is provided as an \\\"expand\\\". (optional)\n\ntry:\n    # Get a user profile listing\n    api_response = api_instance.get_profiles_users(page_size=page_size, page_number=page_number, id=id, jid=jid, sort_order=sort_order, expand=expand, integration_presence_source=integration_presence_source)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_profiles_users: %s\\n\" % e)"
  },
  "get_user": {
    "operationId": "get_user",
    "functionName": "get_user",
    "signature": "get_user(user_id, expand, integration_presence_source, state)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "integration_presence_source",
        "type": "str",
        "required": "false"
      },
      {
        "name": "state",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "User",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\nintegration_presence_source = 'integration_presence_source_example' # str | Gets an integration presence for a user instead of their default. (optional)\nstate = ''active'' # str | Search for a user with this state (optional) (default to 'active')\n\ntry:\n    # Get user.\n    api_response = api_instance.get_user(user_id, expand=expand, integration_presence_source=integration_presence_source, state=state)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user: %s\\n\" % e)"
  },
  "get_user_adjacents": {
    "operationId": "get_user_adjacents",
    "functionName": "get_user_adjacents",
    "signature": "get_user_adjacents(user_id, expand)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "Adjacents",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Get adjacents\n    api_response = api_instance.get_user_adjacents(user_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_adjacents: %s\\n\" % e)"
  },
  "get_user_callforwarding": {
    "operationId": "get_user_callforwarding",
    "functionName": "get_user_callforwarding",
    "signature": "get_user_callforwarding(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CallForwarding",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Get a user's CallForwarding\n    api_response = api_instance.get_user_callforwarding(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_callforwarding: %s\\n\" % e)"
  },
  "get_user_directreports": {
    "operationId": "get_user_directreports",
    "functionName": "get_user_directreports",
    "signature": "get_user_directreports(user_id, expand)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "list[User]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Get direct reports\n    api_response = api_instance.get_user_directreports(user_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_directreports: %s\\n\" % e)"
  },
  "get_user_favorites": {
    "operationId": "get_user_favorites",
    "functionName": "get_user_favorites",
    "signature": "get_user_favorites(user_id, page_size, page_number, sort_order, expand)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "UserEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''ASC'' # str | Sort order (optional) (default to 'ASC')\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Deprecated; will be revived with new contract\n    api_response = api_instance.get_user_favorites(user_id, page_size=page_size, page_number=page_number, sort_order=sort_order, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_favorites: %s\\n\" % e)"
  },
  "get_user_outofoffice": {
    "operationId": "get_user_outofoffice",
    "functionName": "get_user_outofoffice",
    "signature": "get_user_outofoffice(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "OutOfOffice",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Get a OutOfOffice\n    api_response = api_instance.get_user_outofoffice(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_outofoffice: %s\\n\" % e)"
  },
  "get_user_profile": {
    "operationId": "get_user_profile",
    "functionName": "get_user_profile",
    "signature": "get_user_profile(user_id, expand, integration_presence_source)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "integration_presence_source",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UserProfile",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | userId\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\nintegration_presence_source = 'integration_presence_source_example' # str | Gets an integration presence for a user instead of their default. (optional)\n\ntry:\n    # Get user profile\n    api_response = api_instance.get_user_profile(user_id, expand=expand, integration_presence_source=integration_presence_source)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_profile: %s\\n\" % e)"
  },
  "get_user_profileskills": {
    "operationId": "get_user_profileskills",
    "functionName": "get_user_profileskills",
    "signature": "get_user_profileskills(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "list[str]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # List profile skills for a user\n    api_response = api_instance.get_user_profileskills(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_profileskills: %s\\n\" % e)"
  },
  "get_user_routingstatus": {
    "operationId": "get_user_routingstatus",
    "functionName": "get_user_routingstatus",
    "signature": "get_user_routingstatus(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "RoutingStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Fetch the routing status of a user\n    api_response = api_instance.get_user_routingstatus(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_routingstatus: %s\\n\" % e)"
  },
  "get_user_state": {
    "operationId": "get_user_state",
    "functionName": "get_user_state",
    "signature": "get_user_state(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UserState",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Get user state information.\n    api_response = api_instance.get_user_state(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_state: %s\\n\" % e)"
  },
  "get_user_station": {
    "operationId": "get_user_station",
    "functionName": "get_user_station",
    "signature": "get_user_station(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "UserStations",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Get station information for user\n    api_response = api_instance.get_user_station(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_station: %s\\n\" % e)"
  },
  "get_user_superiors": {
    "operationId": "get_user_superiors",
    "functionName": "get_user_superiors",
    "signature": "get_user_superiors(user_id, expand)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "list[User]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\n\ntry:\n    # Get superiors\n    api_response = api_instance.get_user_superiors(user_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_superiors: %s\\n\" % e)"
  },
  "get_user_trustors": {
    "operationId": "get_user_trustors",
    "functionName": "get_user_trustors",
    "signature": "get_user_trustors(user_id, page_size, page_number)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "TrustorEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # List the organizations that have authorized/trusted the user.\n    api_response = api_instance.get_user_trustors(user_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_trustors: %s\\n\" % e)"
  },
  "get_user_verifiers": {
    "operationId": "get_user_verifiers",
    "functionName": "get_user_verifiers",
    "signature": "get_user_verifiers(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "VerifierEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Get a list of verifiers\n    api_response = api_instance.get_user_verifiers(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_user_verifiers: %s\\n\" % e)"
  },
  "get_users": {
    "operationId": "get_users",
    "functionName": "get_users",
    "signature": "get_users(page_size, page_number, id, jabber_id, sort_order, expand, integration_presence_source, state)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "jabber_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "integration_presence_source",
        "type": "str",
        "required": "false"
      },
      {
        "name": "state",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UserEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nid = ['id_example'] # list[str] | A list of user IDs to fetch by bulk (optional)\njabber_id = ['jabber_id_example'] # list[str] | A list of jabberIds to fetch by bulk (cannot be used with the \\\"id\\\" parameter) (optional)\nsort_order = ''ASC'' # str | Ascending or descending sort order (optional) (default to 'ASC')\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)\nintegration_presence_source = 'integration_presence_source_example' # str | Gets an integration presence for users instead of their defaults. This parameter will only be used when presence is provided as an \\\"expand\\\". When using this parameter the maximum number of users that can be returned is 100. (optional)\nstate = ''active'' # str | Only list users of this state (optional) (default to 'active')\n\ntry:\n    # Get the list of available users.\n    api_response = api_instance.get_users(page_size=page_size, page_number=page_number, id=id, jabber_id=jabber_id, sort_order=sort_order, expand=expand, integration_presence_source=integration_presence_source, state=state)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_users: %s\\n\" % e)"
  },
  "get_users_development_activities": {
    "operationId": "get_users_development_activities",
    "functionName": "get_users_development_activities",
    "signature": "get_users_development_activities(user_id, module_id, interval, completion_interval, overdue, pcPass, page_size, page_number, sort_order, types, statuses, relationship)",
    "parameters": [
      {
        "name": "user_id",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "module_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "completion_interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "str",
        "required": "false"
      },
      {
        "name": "pcPass",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "types",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "relationship",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "DevelopmentActivityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = ['user_id_example'] # list[str] | Specifies the list of user IDs to be queried, up to 100 user IDs. It searches for any relationship for the userId. (optional)\nmodule_id = 'module_id_example' # str | Specifies the ID of the learning module. (optional)\ninterval = 'interval_example' # str | Specifies the dateDue range to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\ncompletion_interval = 'completion_interval_example' # str | Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\noverdue = ''Any'' # str | Specifies if non-overdue, overdue, or all activities are returned. If not specified, all activities are returned (optional) (default to 'Any')\npcPass = ''Any'' # str | Specifies if only the failed (pass is \\\"False\\\") or passed (pass is \\\"True\\\") activities are returned. If pass is \\\"Any\\\" or if the pass parameter is not supplied, all activities are returned (optional) (default to 'Any')\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''Desc'' # str | Specifies result set sort order sorted by the date due; if not specified, default sort order is descending (Desc) (optional) (default to 'Desc')\ntypes = ['types_example'] # list[str] | Specifies the activity types. (optional)\nstatuses = ['statuses_example'] # list[str] | Specifies the activity statuses to filter by (optional)\nrelationship = ['relationship_example'] # list[str] | Specifies how the current user relation should be interpreted, and filters the activities returned to only the activities that have the specified relationship. If a value besides Attendee is specified, it will only return Coaching Appointments. If not specified, no filtering is applied. (optional)\n\ntry:\n    # Get list of Development Activities\n    api_response = api_instance.get_users_development_activities(user_id=user_id, module_id=module_id, interval=interval, completion_interval=completion_interval, overdue=overdue, pcPass=pcPass, page_size=page_size, page_number=page_number, sort_order=sort_order, types=types, statuses=statuses, relationship=relationship)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_users_development_activities: %s\\n\" % e)"
  },
  "get_users_development_activities_me": {
    "operationId": "get_users_development_activities_me",
    "functionName": "get_users_development_activities_me",
    "signature": "get_users_development_activities_me(module_id, interval, completion_interval, overdue, pcPass, page_size, page_number, sort_order, types, statuses, relationship)",
    "parameters": [
      {
        "name": "module_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "completion_interval",
        "type": "str",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "str",
        "required": "false"
      },
      {
        "name": "pcPass",
        "type": "str",
        "required": "false"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "types",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "relationship",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "DevelopmentActivityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nmodule_id = 'module_id_example' # str | Specifies the ID of the learning module. (optional)\ninterval = 'interval_example' # str | Specifies the dateDue range to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\ncompletion_interval = 'completion_interval_example' # str | Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)\noverdue = ''Any'' # str | Specifies if non-overdue, overdue, or all activities are returned. If not specified, all activities are returned (optional) (default to 'Any')\npcPass = ''Any'' # str | Specifies if only the failed (pass is \\\"False\\\") or passed (pass is \\\"True\\\") activities are returned. If pass is \\\"Any\\\" or if the pass parameter is not supplied, all activities are returned (optional) (default to 'Any')\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\nsort_order = ''Desc'' # str | Specifies result set sort order sorted by the date due; if not specified, default sort order is descending (Desc) (optional) (default to 'Desc')\ntypes = ['types_example'] # list[str] | Specifies the activity types. (optional)\nstatuses = ['statuses_example'] # list[str] | Specifies the activity statuses to filter by (optional)\nrelationship = ['relationship_example'] # list[str] | Specifies how the current user relation should be interpreted, and filters the activities returned to only the activities that have the specified relationship. If a value besides Attendee is specified, it will only return Coaching Appointments. If not specified, no filtering is applied. (optional)\n\ntry:\n    # Get list of Development Activities for current user\n    api_response = api_instance.get_users_development_activities_me(module_id=module_id, interval=interval, completion_interval=completion_interval, overdue=overdue, pcPass=pcPass, page_size=page_size, page_number=page_number, sort_order=sort_order, types=types, statuses=statuses, relationship=relationship)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_users_development_activities_me: %s\\n\" % e)"
  },
  "get_users_development_activity": {
    "operationId": "get_users_development_activity",
    "functionName": "get_users_development_activity",
    "signature": "get_users_development_activity(activity_id, type)",
    "parameters": [
      {
        "name": "activity_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "type",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "DevelopmentActivity",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nactivity_id = 'activity_id_example' # str | Specifies the activity ID, maps to either assignment or appointment ID\ntype = 'type_example' # str | Specifies the activity type.\n\ntry:\n    # Get a Development Activity\n    api_response = api_instance.get_users_development_activity(activity_id, type)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_users_development_activity: %s\\n\" % e)"
  },
  "get_users_me": {
    "operationId": "get_users_me",
    "functionName": "get_users_me",
    "signature": "get_users_me(expand, integration_presence_source)",
    "parameters": [
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "integration_presence_source",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "UserMe",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nexpand = ['expand_example'] # list[str] | Which fields, if any, to expand. (optional)\nintegration_presence_source = 'integration_presence_source_example' # str | Get your presence for a given integration. This parameter will only be used when presence is provided as an \\\"expand\\\". (optional)\n\ntry:\n    # Get current user details.\n    api_response = api_instance.get_users_me(expand=expand, integration_presence_source=integration_presence_source)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->get_users_me: %s\\n\" % e)"
  },
  "patch_user": {
    "operationId": "patch_user",
    "functionName": "patch_user",
    "signature": "patch_user(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateUser",
        "required": "true"
      }
    ],
    "return": "User",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.UpdateUser() # UpdateUser | User\n\ntry:\n    # Update user\n    api_response = api_instance.patch_user(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->patch_user: %s\\n\" % e)"
  },
  "patch_user_callforwarding": {
    "operationId": "patch_user_callforwarding",
    "functionName": "patch_user_callforwarding",
    "signature": "patch_user_callforwarding(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CallForwarding",
        "required": "true"
      }
    ],
    "return": "CallForwarding",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.CallForwarding() # CallForwarding | Call forwarding\n\ntry:\n    # Patch a user's CallForwarding\n    api_response = api_instance.patch_user_callforwarding(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->patch_user_callforwarding: %s\\n\" % e)"
  },
  "patch_users_bulk": {
    "operationId": "patch_users_bulk",
    "functionName": "patch_users_bulk",
    "signature": "patch_users_bulk(body)",
    "parameters": [
      {
        "name": "body",
        "type": "list[PatchUser]",
        "required": "true"
      }
    ],
    "return": "UserEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = [PureCloudPlatformClientV2.PatchUser()] # list[PatchUser] | Users\n\ntry:\n    # Update bulk acd autoanswer on users. Max 50 users can be updated at a time.\n    api_response = api_instance.patch_users_bulk(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->patch_users_bulk: %s\\n\" % e)"
  },
  "post_user_externalid": {
    "operationId": "post_user_externalid",
    "functionName": "post_user_externalid",
    "signature": "post_user_externalid(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserExternalIdentifier",
        "required": "true"
      }
    ],
    "return": "list[UserExternalIdentifier]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.UserExternalIdentifier() # UserExternalIdentifier | \n\ntry:\n    # Create mapping between external identifier and user. Limit 100 per entity.\n    api_response = api_instance.post_user_externalid(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_user_externalid: %s\\n\" % e)"
  },
  "post_user_invite": {
    "operationId": "post_user_invite",
    "functionName": "post_user_invite",
    "signature": "post_user_invite(user_id, force)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force",
        "type": "bool",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nforce = False # bool | Resend the invitation even if one is already outstanding (optional) (default to False)\n\ntry:\n    # Send an activation email to the user\n    api_instance.post_user_invite(user_id, force=force)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_user_invite: %s\\n\" % e)"
  },
  "post_user_password": {
    "operationId": "post_user_password",
    "functionName": "post_user_password",
    "signature": "post_user_password(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ChangePasswordRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.ChangePasswordRequest() # ChangePasswordRequest | Password\n\ntry:\n    # Change a users password\n    api_instance.post_user_password(user_id, body)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_user_password: %s\\n\" % e)"
  },
  "post_users": {
    "operationId": "post_users",
    "functionName": "post_users",
    "signature": "post_users(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateUser",
        "required": "true"
      }
    ],
    "return": "User",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = PureCloudPlatformClientV2.CreateUser() # CreateUser | User\n\ntry:\n    # Create user\n    api_response = api_instance.post_users(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_users: %s\\n\" % e)"
  },
  "post_users_development_activities_aggregates_query": {
    "operationId": "post_users_development_activities_aggregates_query",
    "functionName": "post_users_development_activities_aggregates_query",
    "signature": "post_users_development_activities_aggregates_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DevelopmentActivityAggregateParam",
        "required": "true"
      }
    ],
    "return": "DevelopmentActivityAggregateResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = PureCloudPlatformClientV2.DevelopmentActivityAggregateParam() # DevelopmentActivityAggregateParam | Aggregate Request\n\ntry:\n    # Retrieve aggregated development activity data\n    api_response = api_instance.post_users_development_activities_aggregates_query(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_users_development_activities_aggregates_query: %s\\n\" % e)"
  },
  "post_users_me_password": {
    "operationId": "post_users_me_password",
    "functionName": "post_users_me_password",
    "signature": "post_users_me_password(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ChangeMyPasswordRequest",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nbody = PureCloudPlatformClientV2.ChangeMyPasswordRequest() # ChangeMyPasswordRequest | Password\n\ntry:\n    # Change your password\n    api_instance.post_users_me_password(body)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->post_users_me_password: %s\\n\" % e)"
  },
  "put_user_callforwarding": {
    "operationId": "put_user_callforwarding",
    "functionName": "put_user_callforwarding",
    "signature": "put_user_callforwarding(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CallForwarding",
        "required": "true"
      }
    ],
    "return": "CallForwarding",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.CallForwarding() # CallForwarding | Call forwarding\n\ntry:\n    # Update a user's CallForwarding\n    api_response = api_instance.put_user_callforwarding(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->put_user_callforwarding: %s\\n\" % e)"
  },
  "put_user_outofoffice": {
    "operationId": "put_user_outofoffice",
    "functionName": "put_user_outofoffice",
    "signature": "put_user_outofoffice(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OutOfOffice",
        "required": "true"
      }
    ],
    "return": "OutOfOffice",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.OutOfOffice() # OutOfOffice | The updated OutOffOffice\n\ntry:\n    # Update an OutOfOffice\n    api_response = api_instance.put_user_outofoffice(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->put_user_outofoffice: %s\\n\" % e)"
  },
  "put_user_profileskills": {
    "operationId": "put_user_profileskills",
    "functionName": "put_user_profileskills",
    "signature": "put_user_profileskills(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "list[str]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = ['body_example'] # list[str] | Skills\n\ntry:\n    # Update profile skills for a user\n    api_response = api_instance.put_user_profileskills(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->put_user_profileskills: %s\\n\" % e)"
  },
  "put_user_routingstatus": {
    "operationId": "put_user_routingstatus",
    "functionName": "put_user_routingstatus",
    "signature": "put_user_routingstatus(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoutingStatus",
        "required": "true"
      }
    ],
    "return": "RoutingStatus",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.RoutingStatus() # RoutingStatus | Routing Status\n\ntry:\n    # Update the routing status of a user\n    api_response = api_instance.put_user_routingstatus(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->put_user_routingstatus: %s\\n\" % e)"
  },
  "put_user_state": {
    "operationId": "put_user_state",
    "functionName": "put_user_state",
    "signature": "put_user_state(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserState",
        "required": "true"
      }
    ],
    "return": "UserState",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.UserState() # UserState | User\n\ntry:\n    # Update user state information.\n    api_response = api_instance.put_user_state(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->put_user_state: %s\\n\" % e)"
  },
  "put_user_station_associatedstation_station_id": {
    "operationId": "put_user_station_associatedstation_station_id",
    "functionName": "put_user_station_associatedstation_station_id",
    "signature": "put_user_station_associatedstation_station_id(user_id, station_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "station_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nstation_id = 'station_id_example' # str | stationId\n\ntry:\n    # Set associated station\n    api_instance.put_user_station_associatedstation_station_id(user_id, station_id)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->put_user_station_associatedstation_station_id: %s\\n\" % e)"
  },
  "put_user_station_defaultstation_station_id": {
    "operationId": "put_user_station_defaultstation_station_id",
    "functionName": "put_user_station_defaultstation_station_id",
    "signature": "put_user_station_defaultstation_station_id(user_id, station_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "station_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nstation_id = 'station_id_example' # str | stationId\n\ntry:\n    # Set default station\n    api_instance.put_user_station_defaultstation_station_id(user_id, station_id)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->put_user_station_defaultstation_station_id: %s\\n\" % e)"
  },
  "put_user_verifier": {
    "operationId": "put_user_verifier",
    "functionName": "put_user_verifier",
    "signature": "put_user_verifier(user_id, verifier_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "verifier_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateVerifierRequest",
        "required": "true"
      }
    ],
    "return": "Verifier",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UsersApi();\nuser_id = 'user_id_example' # str | User ID\nverifier_id = 'verifier_id_example' # str | Verifier ID\nbody = PureCloudPlatformClientV2.UpdateVerifierRequest() # UpdateVerifierRequest | Verifier Update\n\ntry:\n    # Update a verifier\n    api_response = api_instance.put_user_verifier(user_id, verifier_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UsersApi->put_user_verifier: %s\\n\" % e)"
  },
  "get_date": {
    "operationId": "get_date",
    "functionName": "get_date",
    "signature": "get_date()",
    "return": "ServerDate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UtilitiesApi();\n\ntry:\n    # Get the current system date/time\n    api_response = api_instance.get_date()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UtilitiesApi->get_date: %s\\n\" % e)"
  },
  "get_ipranges": {
    "operationId": "get_ipranges",
    "functionName": "get_ipranges",
    "signature": "get_ipranges()",
    "return": "IpAddressRangeListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UtilitiesApi();\n\ntry:\n    # Get public ip address ranges for Genesys Cloud\n    api_response = api_instance.get_ipranges()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UtilitiesApi->get_ipranges: %s\\n\" % e)"
  },
  "get_timezones": {
    "operationId": "get_timezones",
    "functionName": "get_timezones",
    "signature": "get_timezones(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "TimeZoneEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UtilitiesApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get time zones list\n    api_response = api_instance.get_timezones(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UtilitiesApi->get_timezones: %s\\n\" % e)"
  },
  "post_certificate_details": {
    "operationId": "post_certificate_details",
    "functionName": "post_certificate_details",
    "signature": "post_certificate_details(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Certificate",
        "required": "true"
      }
    ],
    "return": "ParsedCertificate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.UtilitiesApi();\nbody = PureCloudPlatformClientV2.Certificate() # Certificate | Certificate\n\ntry:\n    # Returns the information about an X509 PEM encoded certificate or certificate chain.\n    api_response = api_instance.post_certificate_details(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UtilitiesApi->post_certificate_details: %s\\n\" % e)"
  },
  "delete_voicemail_message": {
    "operationId": "delete_voicemail_message",
    "functionName": "delete_voicemail_message",
    "signature": "delete_voicemail_message(message_id)",
    "parameters": [
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nmessage_id = 'message_id_example' # str | Message ID\n\ntry:\n    # Delete a voicemail message.\n    api_instance.delete_voicemail_message(message_id)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->delete_voicemail_message: %s\\n\" % e)"
  },
  "delete_voicemail_messages": {
    "operationId": "delete_voicemail_messages",
    "functionName": "delete_voicemail_messages",
    "signature": "delete_voicemail_messages()",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\n\ntry:\n    # Delete all voicemail messages\n    api_instance.delete_voicemail_messages()\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->delete_voicemail_messages: %s\\n\" % e)"
  },
  "get_voicemail_group_mailbox": {
    "operationId": "get_voicemail_group_mailbox",
    "functionName": "get_voicemail_group_mailbox",
    "signature": "get_voicemail_group_mailbox(group_id)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "VoicemailMailboxInfo",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\ngroup_id = 'group_id_example' # str | groupId\n\ntry:\n    # Get the group's mailbox information\n    api_response = api_instance.get_voicemail_group_mailbox(group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_group_mailbox: %s\\n\" % e)"
  },
  "get_voicemail_group_messages": {
    "operationId": "get_voicemail_group_messages",
    "functionName": "get_voicemail_group_messages",
    "signature": "get_voicemail_group_messages(group_id, page_size, page_number)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "VoicemailMessageEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\ngroup_id = 'group_id_example' # str | Group ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # List voicemail messages\n    api_response = api_instance.get_voicemail_group_messages(group_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_group_messages: %s\\n\" % e)"
  },
  "get_voicemail_group_policy": {
    "operationId": "get_voicemail_group_policy",
    "functionName": "get_voicemail_group_policy",
    "signature": "get_voicemail_group_policy(group_id)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "VoicemailGroupPolicy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\ngroup_id = 'group_id_example' # str | Group ID\n\ntry:\n    # Get a group's voicemail policy\n    api_response = api_instance.get_voicemail_group_policy(group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_group_policy: %s\\n\" % e)"
  },
  "get_voicemail_mailbox": {
    "operationId": "get_voicemail_mailbox",
    "functionName": "get_voicemail_mailbox",
    "signature": "get_voicemail_mailbox()",
    "return": "VoicemailMailboxInfo",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\n\ntry:\n    # Get the current user's mailbox information\n    api_response = api_instance.get_voicemail_mailbox()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_mailbox: %s\\n\" % e)"
  },
  "get_voicemail_me_mailbox": {
    "operationId": "get_voicemail_me_mailbox",
    "functionName": "get_voicemail_me_mailbox",
    "signature": "get_voicemail_me_mailbox()",
    "return": "VoicemailMailboxInfo",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\n\ntry:\n    # Get the current user's mailbox information\n    api_response = api_instance.get_voicemail_me_mailbox()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_me_mailbox: %s\\n\" % e)"
  },
  "get_voicemail_me_messages": {
    "operationId": "get_voicemail_me_messages",
    "functionName": "get_voicemail_me_messages",
    "signature": "get_voicemail_me_messages(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "VoicemailMessageEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # List voicemail messages\n    api_response = api_instance.get_voicemail_me_messages(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_me_messages: %s\\n\" % e)"
  },
  "get_voicemail_me_policy": {
    "operationId": "get_voicemail_me_policy",
    "functionName": "get_voicemail_me_policy",
    "signature": "get_voicemail_me_policy()",
    "return": "VoicemailUserPolicy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\n\ntry:\n    # Get the current user's voicemail policy\n    api_response = api_instance.get_voicemail_me_policy()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_me_policy: %s\\n\" % e)"
  },
  "get_voicemail_message": {
    "operationId": "get_voicemail_message",
    "functionName": "get_voicemail_message",
    "signature": "get_voicemail_message(message_id, expand)",
    "parameters": [
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "VoicemailMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nmessage_id = 'message_id_example' # str | Message ID\nexpand = ['expand_example'] # list[str] | If the caller is a known user, which fields, if any, to expand (optional)\n\ntry:\n    # Get a voicemail message\n    api_response = api_instance.get_voicemail_message(message_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_message: %s\\n\" % e)"
  },
  "get_voicemail_message_media": {
    "operationId": "get_voicemail_message_media",
    "functionName": "get_voicemail_message_media",
    "signature": "get_voicemail_message_media(message_id, format_id)",
    "parameters": [
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "format_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "VoicemailMediaInfo",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nmessage_id = 'message_id_example' # str | Message ID\nformat_id = ''WEBM'' # str | The desired media format. (optional) (default to 'WEBM')\n\ntry:\n    # Get media playback URI for this voicemail message\n    api_response = api_instance.get_voicemail_message_media(message_id, format_id=format_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_message_media: %s\\n\" % e)"
  },
  "get_voicemail_messages": {
    "operationId": "get_voicemail_messages",
    "functionName": "get_voicemail_messages",
    "signature": "get_voicemail_messages(ids, expand)",
    "parameters": [
      {
        "name": "ids",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "VoicemailMessageEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nids = 'ids_example' # str | An optional comma separated list of VoicemailMessage ids (optional)\nexpand = ['expand_example'] # list[str] | If the caller is a known user, which fields, if any, to expand (optional)\n\ntry:\n    # List voicemail messages\n    api_response = api_instance.get_voicemail_messages(ids=ids, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_messages: %s\\n\" % e)"
  },
  "get_voicemail_policy": {
    "operationId": "get_voicemail_policy",
    "functionName": "get_voicemail_policy",
    "signature": "get_voicemail_policy()",
    "return": "VoicemailOrganizationPolicy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\n\ntry:\n    # Get a policy\n    api_response = api_instance.get_voicemail_policy()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_policy: %s\\n\" % e)"
  },
  "get_voicemail_queue_messages": {
    "operationId": "get_voicemail_queue_messages",
    "functionName": "get_voicemail_queue_messages",
    "signature": "get_voicemail_queue_messages(queue_id, page_size, page_number)",
    "parameters": [
      {
        "name": "queue_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "VoicemailMessageEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nqueue_id = 'queue_id_example' # str | Queue ID\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # List voicemail messages\n    api_response = api_instance.get_voicemail_queue_messages(queue_id, page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_queue_messages: %s\\n\" % e)"
  },
  "get_voicemail_userpolicy": {
    "operationId": "get_voicemail_userpolicy",
    "functionName": "get_voicemail_userpolicy",
    "signature": "get_voicemail_userpolicy(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "VoicemailUserPolicy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nuser_id = 'user_id_example' # str | User ID\n\ntry:\n    # Get a user's voicemail policy\n    api_response = api_instance.get_voicemail_userpolicy(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->get_voicemail_userpolicy: %s\\n\" % e)"
  },
  "patch_voicemail_group_policy": {
    "operationId": "patch_voicemail_group_policy",
    "functionName": "patch_voicemail_group_policy",
    "signature": "patch_voicemail_group_policy(group_id, body)",
    "parameters": [
      {
        "name": "group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "VoicemailGroupPolicy",
        "required": "true"
      }
    ],
    "return": "VoicemailGroupPolicy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\ngroup_id = 'group_id_example' # str | Group ID\nbody = PureCloudPlatformClientV2.VoicemailGroupPolicy() # VoicemailGroupPolicy | The group's voicemail policy\n\ntry:\n    # Update a group's voicemail policy\n    api_response = api_instance.patch_voicemail_group_policy(group_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->patch_voicemail_group_policy: %s\\n\" % e)"
  },
  "patch_voicemail_me_policy": {
    "operationId": "patch_voicemail_me_policy",
    "functionName": "patch_voicemail_me_policy",
    "signature": "patch_voicemail_me_policy(body)",
    "parameters": [
      {
        "name": "body",
        "type": "VoicemailUserPolicy",
        "required": "true"
      }
    ],
    "return": "VoicemailUserPolicy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nbody = PureCloudPlatformClientV2.VoicemailUserPolicy() # VoicemailUserPolicy | The user's voicemail policy\n\ntry:\n    # Update the current user's voicemail policy\n    api_response = api_instance.patch_voicemail_me_policy(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->patch_voicemail_me_policy: %s\\n\" % e)"
  },
  "patch_voicemail_message": {
    "operationId": "patch_voicemail_message",
    "functionName": "patch_voicemail_message",
    "signature": "patch_voicemail_message(message_id, body)",
    "parameters": [
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "VoicemailMessage",
        "required": "true"
      }
    ],
    "return": "VoicemailMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nmessage_id = 'message_id_example' # str | Message ID\nbody = PureCloudPlatformClientV2.VoicemailMessage() # VoicemailMessage | VoicemailMessage\n\ntry:\n    # Update a voicemail message\n    api_response = api_instance.patch_voicemail_message(message_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->patch_voicemail_message: %s\\n\" % e)"
  },
  "patch_voicemail_userpolicy": {
    "operationId": "patch_voicemail_userpolicy",
    "functionName": "patch_voicemail_userpolicy",
    "signature": "patch_voicemail_userpolicy(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "VoicemailUserPolicy",
        "required": "true"
      }
    ],
    "return": "VoicemailUserPolicy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.VoicemailUserPolicy() # VoicemailUserPolicy | The user's voicemail policy\n\ntry:\n    # Update a user's voicemail policy\n    api_response = api_instance.patch_voicemail_userpolicy(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->patch_voicemail_userpolicy: %s\\n\" % e)"
  },
  "post_voicemail_messages": {
    "operationId": "post_voicemail_messages",
    "functionName": "post_voicemail_messages",
    "signature": "post_voicemail_messages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CopyVoicemailMessage",
        "required": "false"
      }
    ],
    "return": "VoicemailMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nbody = PureCloudPlatformClientV2.CopyVoicemailMessage() # CopyVoicemailMessage |  (optional)\n\ntry:\n    # Copy a voicemail message to a user or group\n    api_response = api_instance.post_voicemail_messages(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->post_voicemail_messages: %s\\n\" % e)"
  },
  "put_voicemail_message": {
    "operationId": "put_voicemail_message",
    "functionName": "put_voicemail_message",
    "signature": "put_voicemail_message(message_id, body)",
    "parameters": [
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "VoicemailMessage",
        "required": "true"
      }
    ],
    "return": "VoicemailMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nmessage_id = 'message_id_example' # str | Message ID\nbody = PureCloudPlatformClientV2.VoicemailMessage() # VoicemailMessage | VoicemailMessage\n\ntry:\n    # Update a voicemail message\n    api_response = api_instance.put_voicemail_message(message_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->put_voicemail_message: %s\\n\" % e)"
  },
  "put_voicemail_policy": {
    "operationId": "put_voicemail_policy",
    "functionName": "put_voicemail_policy",
    "signature": "put_voicemail_policy(body)",
    "parameters": [
      {
        "name": "body",
        "type": "VoicemailOrganizationPolicy",
        "required": "true"
      }
    ],
    "return": "VoicemailOrganizationPolicy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nbody = PureCloudPlatformClientV2.VoicemailOrganizationPolicy() # VoicemailOrganizationPolicy | Policy\n\ntry:\n    # Update a policy\n    api_response = api_instance.put_voicemail_policy(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->put_voicemail_policy: %s\\n\" % e)"
  },
  "put_voicemail_userpolicy": {
    "operationId": "put_voicemail_userpolicy",
    "functionName": "put_voicemail_userpolicy",
    "signature": "put_voicemail_userpolicy(user_id, body)",
    "parameters": [
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "VoicemailUserPolicy",
        "required": "true"
      }
    ],
    "return": "VoicemailUserPolicy",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.VoicemailApi();\nuser_id = 'user_id_example' # str | User ID\nbody = PureCloudPlatformClientV2.VoicemailUserPolicy() # VoicemailUserPolicy | The user's voicemail policy\n\ntry:\n    # Update a user's voicemail policy\n    api_response = api_instance.put_voicemail_userpolicy(user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling VoicemailApi->put_voicemail_userpolicy: %s\\n\" % e)"
  },
  "delete_webchat_deployment": {
    "operationId": "delete_webchat_deployment",
    "functionName": "delete_webchat_deployment",
    "signature": "delete_webchat_deployment(deployment_id)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\ndeployment_id = 'deployment_id_example' # str | Deployment Id\n\ntry:\n    # Delete a WebChat deployment\n    api_instance.delete_webchat_deployment(deployment_id)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->delete_webchat_deployment: %s\\n\" % e)"
  },
  "delete_webchat_guest_conversation_member": {
    "operationId": "delete_webchat_guest_conversation_member",
    "functionName": "delete_webchat_guest_conversation_member",
    "signature": "delete_webchat_guest_conversation_member(conversation_id, member_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "member_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: Guest Chat JWT\nPureCloudPlatformClientV2.configuration.api_key['Authorization'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n# PureCloudPlatformClientV2.configuration.api_key_prefix['Authorization'] = 'BEARER'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nmember_id = 'member_id_example' # str | memberId\n\ntry:\n    # Remove a member from a chat conversation\n    api_instance.delete_webchat_guest_conversation_member(conversation_id, member_id)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->delete_webchat_guest_conversation_member: %s\\n\" % e)"
  },
  "delete_webchat_settings": {
    "operationId": "delete_webchat_settings",
    "functionName": "delete_webchat_settings",
    "signature": "delete_webchat_settings()",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\n\ntry:\n    # Remove WebChat deployment settings\n    api_instance.delete_webchat_settings()\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->delete_webchat_settings: %s\\n\" % e)"
  },
  "get_webchat_deployment": {
    "operationId": "get_webchat_deployment",
    "functionName": "get_webchat_deployment",
    "signature": "get_webchat_deployment(deployment_id)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WebChatDeployment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\ndeployment_id = 'deployment_id_example' # str | Deployment Id\n\ntry:\n    # Get a WebChat deployment\n    api_response = api_instance.get_webchat_deployment(deployment_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->get_webchat_deployment: %s\\n\" % e)"
  },
  "get_webchat_deployments": {
    "operationId": "get_webchat_deployments",
    "functionName": "get_webchat_deployments",
    "signature": "get_webchat_deployments()",
    "return": "WebChatDeploymentEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\n\ntry:\n    # List WebChat deployments\n    api_response = api_instance.get_webchat_deployments()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->get_webchat_deployments: %s\\n\" % e)"
  },
  "get_webchat_guest_conversation_mediarequest": {
    "operationId": "get_webchat_guest_conversation_mediarequest",
    "functionName": "get_webchat_guest_conversation_mediarequest",
    "signature": "get_webchat_guest_conversation_mediarequest(conversation_id, media_request_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "media_request_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WebChatGuestMediaRequest",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: Guest Chat JWT\nPureCloudPlatformClientV2.configuration.api_key['Authorization'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n# PureCloudPlatformClientV2.configuration.api_key_prefix['Authorization'] = 'BEARER'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nmedia_request_id = 'media_request_id_example' # str | mediaRequestId\n\ntry:\n    # Get a media request in the conversation\n    api_response = api_instance.get_webchat_guest_conversation_mediarequest(conversation_id, media_request_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->get_webchat_guest_conversation_mediarequest: %s\\n\" % e)"
  },
  "get_webchat_guest_conversation_mediarequests": {
    "operationId": "get_webchat_guest_conversation_mediarequests",
    "functionName": "get_webchat_guest_conversation_mediarequests",
    "signature": "get_webchat_guest_conversation_mediarequests(conversation_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WebChatGuestMediaRequestEntityList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: Guest Chat JWT\nPureCloudPlatformClientV2.configuration.api_key['Authorization'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n# PureCloudPlatformClientV2.configuration.api_key_prefix['Authorization'] = 'BEARER'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\nconversation_id = 'conversation_id_example' # str | conversationId\n\ntry:\n    # Get all media requests to the guest in the conversation\n    api_response = api_instance.get_webchat_guest_conversation_mediarequests(conversation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->get_webchat_guest_conversation_mediarequests: %s\\n\" % e)"
  },
  "get_webchat_guest_conversation_member": {
    "operationId": "get_webchat_guest_conversation_member",
    "functionName": "get_webchat_guest_conversation_member",
    "signature": "get_webchat_guest_conversation_member(conversation_id, member_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "member_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WebChatMemberInfo",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: Guest Chat JWT\nPureCloudPlatformClientV2.configuration.api_key['Authorization'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n# PureCloudPlatformClientV2.configuration.api_key_prefix['Authorization'] = 'BEARER'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nmember_id = 'member_id_example' # str | memberId\n\ntry:\n    # Get a web chat conversation member\n    api_response = api_instance.get_webchat_guest_conversation_member(conversation_id, member_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->get_webchat_guest_conversation_member: %s\\n\" % e)"
  },
  "get_webchat_guest_conversation_members": {
    "operationId": "get_webchat_guest_conversation_members",
    "functionName": "get_webchat_guest_conversation_members",
    "signature": "get_webchat_guest_conversation_members(conversation_id, page_size, page_number, exclude_disconnected_members)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "exclude_disconnected_members",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "WebChatMemberInfoEntityList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: Guest Chat JWT\nPureCloudPlatformClientV2.configuration.api_key['Authorization'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n# PureCloudPlatformClientV2.configuration.api_key_prefix['Authorization'] = 'BEARER'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\nconversation_id = 'conversation_id_example' # str | conversationId\npage_size = 25 # int | The number of entries to return per page, or omitted for the default. (optional) (default to 25)\npage_number = 1 # int | The page number to return, or omitted for the first page. (optional) (default to 1)\nexclude_disconnected_members = False # bool | If true, the results will not contain members who have a DISCONNECTED state. (optional) (default to False)\n\ntry:\n    # Get the members of a chat conversation.\n    api_response = api_instance.get_webchat_guest_conversation_members(conversation_id, page_size=page_size, page_number=page_number, exclude_disconnected_members=exclude_disconnected_members)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->get_webchat_guest_conversation_members: %s\\n\" % e)"
  },
  "get_webchat_guest_conversation_message": {
    "operationId": "get_webchat_guest_conversation_message",
    "functionName": "get_webchat_guest_conversation_message",
    "signature": "get_webchat_guest_conversation_message(conversation_id, message_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "message_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WebChatMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: Guest Chat JWT\nPureCloudPlatformClientV2.configuration.api_key['Authorization'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n# PureCloudPlatformClientV2.configuration.api_key_prefix['Authorization'] = 'BEARER'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nmessage_id = 'message_id_example' # str | messageId\n\ntry:\n    # Get a web chat conversation message\n    api_response = api_instance.get_webchat_guest_conversation_message(conversation_id, message_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->get_webchat_guest_conversation_message: %s\\n\" % e)"
  },
  "get_webchat_guest_conversation_messages": {
    "operationId": "get_webchat_guest_conversation_messages",
    "functionName": "get_webchat_guest_conversation_messages",
    "signature": "get_webchat_guest_conversation_messages(conversation_id, after, before, sort_order, max_results)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "after",
        "type": "str",
        "required": "false"
      },
      {
        "name": "before",
        "type": "str",
        "required": "false"
      },
      {
        "name": "sort_order",
        "type": "str",
        "required": "false"
      },
      {
        "name": "max_results",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "WebChatMessageEntityList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: Guest Chat JWT\nPureCloudPlatformClientV2.configuration.api_key['Authorization'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n# PureCloudPlatformClientV2.configuration.api_key_prefix['Authorization'] = 'BEARER'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nafter = 'after_example' # str | If available, get the messages chronologically after the id of this message (optional)\nbefore = 'before_example' # str | If available, get the messages chronologically before the id of this message (optional)\nsort_order = ''ascending'' # str | Sort order (optional) (default to 'ascending')\nmax_results = 100 # int | Limit the returned number of messages, up to a maximum of 100 (optional) (default to 100)\n\ntry:\n    # Get the messages of a chat conversation.\n    api_response = api_instance.get_webchat_guest_conversation_messages(conversation_id, after=after, before=before, sort_order=sort_order, max_results=max_results)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->get_webchat_guest_conversation_messages: %s\\n\" % e)"
  },
  "get_webchat_settings": {
    "operationId": "get_webchat_settings",
    "functionName": "get_webchat_settings",
    "signature": "get_webchat_settings()",
    "return": "WebChatSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\n\ntry:\n    # Get WebChat deployment settings\n    api_response = api_instance.get_webchat_settings()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->get_webchat_settings: %s\\n\" % e)"
  },
  "patch_webchat_guest_conversation_mediarequest": {
    "operationId": "patch_webchat_guest_conversation_mediarequest",
    "functionName": "patch_webchat_guest_conversation_mediarequest",
    "signature": "patch_webchat_guest_conversation_mediarequest(conversation_id, media_request_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "media_request_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WebChatGuestMediaRequest",
        "required": "true"
      }
    ],
    "return": "WebChatGuestMediaRequest",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: Guest Chat JWT\nPureCloudPlatformClientV2.configuration.api_key['Authorization'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n# PureCloudPlatformClientV2.configuration.api_key_prefix['Authorization'] = 'BEARER'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nmedia_request_id = 'media_request_id_example' # str | mediaRequestId\nbody = PureCloudPlatformClientV2.WebChatGuestMediaRequest() # WebChatGuestMediaRequest | Request\n\ntry:\n    # Update a media request in the conversation, setting the state to ACCEPTED/DECLINED/ERRORED\n    api_response = api_instance.patch_webchat_guest_conversation_mediarequest(conversation_id, media_request_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->patch_webchat_guest_conversation_mediarequest: %s\\n\" % e)"
  },
  "post_webchat_deployments": {
    "operationId": "post_webchat_deployments",
    "functionName": "post_webchat_deployments",
    "signature": "post_webchat_deployments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WebChatDeployment",
        "required": "true"
      }
    ],
    "return": "WebChatDeployment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\nbody = PureCloudPlatformClientV2.WebChatDeployment() # WebChatDeployment | Deployment\n\ntry:\n    # Create WebChat deployment\n    api_response = api_instance.post_webchat_deployments(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->post_webchat_deployments: %s\\n\" % e)"
  },
  "post_webchat_guest_conversation_member_messages": {
    "operationId": "post_webchat_guest_conversation_member_messages",
    "functionName": "post_webchat_guest_conversation_member_messages",
    "signature": "post_webchat_guest_conversation_member_messages(conversation_id, member_id, body)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "member_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateWebChatMessageRequest",
        "required": "true"
      }
    ],
    "return": "WebChatMessage",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: Guest Chat JWT\nPureCloudPlatformClientV2.configuration.api_key['Authorization'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n# PureCloudPlatformClientV2.configuration.api_key_prefix['Authorization'] = 'BEARER'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nmember_id = 'member_id_example' # str | memberId\nbody = PureCloudPlatformClientV2.CreateWebChatMessageRequest() # CreateWebChatMessageRequest | Message\n\ntry:\n    # Send a message in a chat conversation.\n    api_response = api_instance.post_webchat_guest_conversation_member_messages(conversation_id, member_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->post_webchat_guest_conversation_member_messages: %s\\n\" % e)"
  },
  "post_webchat_guest_conversation_member_typing": {
    "operationId": "post_webchat_guest_conversation_member_typing",
    "functionName": "post_webchat_guest_conversation_member_typing",
    "signature": "post_webchat_guest_conversation_member_typing(conversation_id, member_id)",
    "parameters": [
      {
        "name": "conversation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "member_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WebChatTyping",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: Guest Chat JWT\nPureCloudPlatformClientV2.configuration.api_key['Authorization'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n# PureCloudPlatformClientV2.configuration.api_key_prefix['Authorization'] = 'BEARER'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\nconversation_id = 'conversation_id_example' # str | conversationId\nmember_id = 'member_id_example' # str | memberId\n\ntry:\n    # Send a typing-indicator in a chat conversation.\n    api_response = api_instance.post_webchat_guest_conversation_member_typing(conversation_id, member_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->post_webchat_guest_conversation_member_typing: %s\\n\" % e)"
  },
  "post_webchat_guest_conversations": {
    "operationId": "post_webchat_guest_conversations",
    "functionName": "post_webchat_guest_conversations",
    "signature": "post_webchat_guest_conversations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateWebChatConversationRequest",
        "required": "true"
      }
    ],
    "return": "CreateWebChatConversationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\nbody = PureCloudPlatformClientV2.CreateWebChatConversationRequest() # CreateWebChatConversationRequest | CreateConversationRequest\n\ntry:\n    # Create an ACD chat conversation from an external customer.\n    api_response = api_instance.post_webchat_guest_conversations(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->post_webchat_guest_conversations: %s\\n\" % e)"
  },
  "put_webchat_deployment": {
    "operationId": "put_webchat_deployment",
    "functionName": "put_webchat_deployment",
    "signature": "put_webchat_deployment(deployment_id, body)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WebChatDeployment",
        "required": "true"
      }
    ],
    "return": "WebChatDeployment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\ndeployment_id = 'deployment_id_example' # str | Deployment Id\nbody = PureCloudPlatformClientV2.WebChatDeployment() # WebChatDeployment | Deployment\n\ntry:\n    # Update a WebChat deployment\n    api_response = api_instance.put_webchat_deployment(deployment_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->put_webchat_deployment: %s\\n\" % e)"
  },
  "put_webchat_settings": {
    "operationId": "put_webchat_settings",
    "functionName": "put_webchat_settings",
    "signature": "put_webchat_settings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WebChatSettings",
        "required": "true"
      }
    ],
    "return": "WebChatSettings",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebChatApi();\nbody = PureCloudPlatformClientV2.WebChatSettings() # WebChatSettings | webChatSettings\n\ntry:\n    # Update WebChat deployment settings\n    api_response = api_instance.put_webchat_settings(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebChatApi->put_webchat_settings: %s\\n\" % e)"
  },
  "get_webmessaging_messages": {
    "operationId": "get_webmessaging_messages",
    "functionName": "get_webmessaging_messages",
    "signature": "get_webmessaging_messages(page_size, page_number)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      }
    ],
    "return": "WebMessagingMessageEntityList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebMessagingApi();\npage_size = 25 # int | Page size (optional) (default to 25)\npage_number = 1 # int | Page number (optional) (default to 1)\n\ntry:\n    # Get the messages for a web messaging session.\n    api_response = api_instance.get_webmessaging_messages(page_size=page_size, page_number=page_number)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebMessagingApi->get_webmessaging_messages: %s\\n\" % e)"
  },
  "delete_webdeployments_configuration": {
    "operationId": "delete_webdeployments_configuration",
    "functionName": "delete_webdeployments_configuration",
    "signature": "delete_webdeployments_configuration(configuration_id)",
    "parameters": [
      {
        "name": "configuration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\nconfiguration_id = 'configuration_id_example' # str | The configuration version ID\n\ntry:\n    # Delete all versions of a configuration\n    api_instance.delete_webdeployments_configuration(configuration_id)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->delete_webdeployments_configuration: %s\\n\" % e)"
  },
  "delete_webdeployments_deployment": {
    "operationId": "delete_webdeployments_deployment",
    "functionName": "delete_webdeployments_deployment",
    "signature": "delete_webdeployments_deployment(deployment_id)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\ndeployment_id = 'deployment_id_example' # str | The deployment ID\n\ntry:\n    # Delete a deployment\n    api_instance.delete_webdeployments_deployment(deployment_id)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->delete_webdeployments_deployment: %s\\n\" % e)"
  },
  "delete_webdeployments_deployment_cobrowse_session_id": {
    "operationId": "delete_webdeployments_deployment_cobrowse_session_id",
    "functionName": "delete_webdeployments_deployment_cobrowse_session_id",
    "signature": "delete_webdeployments_deployment_cobrowse_session_id(deployment_id, session_id)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "object",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\ndeployment_id = 'deployment_id_example' # str | WebMessaging deployment ID\nsession_id = 'session_id_example' # str | Cobrowse session id or join code\n\ntry:\n    # Deletes a cobrowse session\n    api_response = api_instance.delete_webdeployments_deployment_cobrowse_session_id(deployment_id, session_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->delete_webdeployments_deployment_cobrowse_session_id: %s\\n\" % e)"
  },
  "delete_webdeployments_token_revoke": {
    "operationId": "delete_webdeployments_token_revoke",
    "functionName": "delete_webdeployments_token_revoke",
    "signature": "delete_webdeployments_token_revoke(x_journey_session_id, x_journey_session_type)",
    "parameters": [
      {
        "name": "x_journey_session_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "x_journey_session_type",
        "type": "str",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\nx_journey_session_id = 'x_journey_session_id_example' # str | The Customer's journey sessionId. (optional)\nx_journey_session_type = 'x_journey_session_type_example' # str | The Customer's journey session type. (optional)\n\ntry:\n    # Invalidate JWT\n    api_instance.delete_webdeployments_token_revoke(x_journey_session_id=x_journey_session_id, x_journey_session_type=x_journey_session_type)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->delete_webdeployments_token_revoke: %s\\n\" % e)"
  },
  "get_webdeployments_configuration_version": {
    "operationId": "get_webdeployments_configuration_version",
    "functionName": "get_webdeployments_configuration_version",
    "signature": "get_webdeployments_configuration_version(configuration_id, version_id)",
    "parameters": [
      {
        "name": "configuration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "version_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WebDeploymentConfigurationVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\nconfiguration_id = 'configuration_id_example' # str | The configuration version ID\nversion_id = 'version_id_example' # str | The version of the configuration to get\n\ntry:\n    # Get a configuration version\n    api_response = api_instance.get_webdeployments_configuration_version(configuration_id, version_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->get_webdeployments_configuration_version: %s\\n\" % e)"
  },
  "get_webdeployments_configuration_versions": {
    "operationId": "get_webdeployments_configuration_versions",
    "functionName": "get_webdeployments_configuration_versions",
    "signature": "get_webdeployments_configuration_versions(configuration_id)",
    "parameters": [
      {
        "name": "configuration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WebDeploymentConfigurationVersionEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\nconfiguration_id = 'configuration_id_example' # str | The configuration version ID\n\ntry:\n    # Get the versions of a configuration\n    api_response = api_instance.get_webdeployments_configuration_versions(configuration_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->get_webdeployments_configuration_versions: %s\\n\" % e)"
  },
  "get_webdeployments_configuration_versions_draft": {
    "operationId": "get_webdeployments_configuration_versions_draft",
    "functionName": "get_webdeployments_configuration_versions_draft",
    "signature": "get_webdeployments_configuration_versions_draft(configuration_id)",
    "parameters": [
      {
        "name": "configuration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WebDeploymentConfigurationVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\nconfiguration_id = 'configuration_id_example' # str | The configuration version ID\n\ntry:\n    # Get the configuration draft\n    api_response = api_instance.get_webdeployments_configuration_versions_draft(configuration_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->get_webdeployments_configuration_versions_draft: %s\\n\" % e)"
  },
  "get_webdeployments_configurations": {
    "operationId": "get_webdeployments_configurations",
    "functionName": "get_webdeployments_configurations",
    "signature": "get_webdeployments_configurations(show_only_published)",
    "parameters": [
      {
        "name": "show_only_published",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "WebDeploymentConfigurationVersionEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\nshow_only_published = False # bool | Get only configuration drafts with published versions (optional) (default to False)\n\ntry:\n    # View configuration drafts\n    api_response = api_instance.get_webdeployments_configurations(show_only_published=show_only_published)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->get_webdeployments_configurations: %s\\n\" % e)"
  },
  "get_webdeployments_deployment": {
    "operationId": "get_webdeployments_deployment",
    "functionName": "get_webdeployments_deployment",
    "signature": "get_webdeployments_deployment(deployment_id, expand)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "WebDeployment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\ndeployment_id = 'deployment_id_example' # str | The deployment ID\nexpand = ['expand_example'] # list[str] | The specified entity attributes will be filled. Comma separated values expected.  (optional)\n\ntry:\n    # Get a deployment\n    api_response = api_instance.get_webdeployments_deployment(deployment_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->get_webdeployments_deployment: %s\\n\" % e)"
  },
  "get_webdeployments_deployment_cobrowse_session_id": {
    "operationId": "get_webdeployments_deployment_cobrowse_session_id",
    "functionName": "get_webdeployments_deployment_cobrowse_session_id",
    "signature": "get_webdeployments_deployment_cobrowse_session_id(deployment_id, session_id)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "session_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "CobrowseWebMessagingSession",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\ndeployment_id = 'deployment_id_example' # str | WebMessaging deployment ID\nsession_id = 'session_id_example' # str | Cobrowse session id or join code\n\ntry:\n    # Retrieves a cobrowse session\n    api_response = api_instance.get_webdeployments_deployment_cobrowse_session_id(deployment_id, session_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->get_webdeployments_deployment_cobrowse_session_id: %s\\n\" % e)"
  },
  "get_webdeployments_deployment_configurations": {
    "operationId": "get_webdeployments_deployment_configurations",
    "functionName": "get_webdeployments_deployment_configurations",
    "signature": "get_webdeployments_deployment_configurations(deployment_id, type, expand)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "type",
        "type": "str",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "WebDeploymentActiveConfigurationOnDeployment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\ndeployment_id = 'deployment_id_example' # str | The deployment ID\ntype = 'type_example' # str | Get active configuration on a deployment (optional)\nexpand = ['expand_example'] # list[str] | Expand instructions for the return value (optional)\n\ntry:\n    # Get active configuration for a given deployment\n    api_response = api_instance.get_webdeployments_deployment_configurations(deployment_id, type=type, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->get_webdeployments_deployment_configurations: %s\\n\" % e)"
  },
  "get_webdeployments_deployments": {
    "operationId": "get_webdeployments_deployments",
    "functionName": "get_webdeployments_deployments",
    "signature": "get_webdeployments_deployments(expand)",
    "parameters": [
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ExpandableWebDeploymentEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\nexpand = ['expand_example'] # list[str] | The specified entity attributes will be filled. Comma separated values expected. (optional)\n\ntry:\n    # Get deployments\n    api_response = api_instance.get_webdeployments_deployments(expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->get_webdeployments_deployments: %s\\n\" % e)"
  },
  "post_webdeployments_configuration_versions_draft_publish": {
    "operationId": "post_webdeployments_configuration_versions_draft_publish",
    "functionName": "post_webdeployments_configuration_versions_draft_publish",
    "signature": "post_webdeployments_configuration_versions_draft_publish(configuration_id)",
    "parameters": [
      {
        "name": "configuration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WebDeploymentConfigurationVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\nconfiguration_id = 'configuration_id_example' # str | The configuration version ID\n\ntry:\n    # Publish the configuration draft and create a new version\n    api_response = api_instance.post_webdeployments_configuration_versions_draft_publish(configuration_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->post_webdeployments_configuration_versions_draft_publish: %s\\n\" % e)"
  },
  "post_webdeployments_configurations": {
    "operationId": "post_webdeployments_configurations",
    "functionName": "post_webdeployments_configurations",
    "signature": "post_webdeployments_configurations(configuration_version)",
    "parameters": [
      {
        "name": "configuration_version",
        "type": "WebDeploymentConfigurationVersion",
        "required": "true"
      }
    ],
    "return": "WebDeploymentConfigurationVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\nconfiguration_version = PureCloudPlatformClientV2.WebDeploymentConfigurationVersion() # WebDeploymentConfigurationVersion | \n\ntry:\n    # Create a configuration draft\n    api_response = api_instance.post_webdeployments_configurations(configuration_version)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->post_webdeployments_configurations: %s\\n\" % e)"
  },
  "post_webdeployments_deployments": {
    "operationId": "post_webdeployments_deployments",
    "functionName": "post_webdeployments_deployments",
    "signature": "post_webdeployments_deployments(deployment)",
    "parameters": [
      {
        "name": "deployment",
        "type": "WebDeployment",
        "required": "true"
      }
    ],
    "return": "WebDeployment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\ndeployment = PureCloudPlatformClientV2.WebDeployment() # WebDeployment | \n\ntry:\n    # Create a deployment\n    api_response = api_instance.post_webdeployments_deployments(deployment)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->post_webdeployments_deployments: %s\\n\" % e)"
  },
  "post_webdeployments_token_oauthcodegrantjwtexchange": {
    "operationId": "post_webdeployments_token_oauthcodegrantjwtexchange",
    "functionName": "post_webdeployments_token_oauthcodegrantjwtexchange",
    "signature": "post_webdeployments_token_oauthcodegrantjwtexchange(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WebDeploymentsOAuthExchangeRequest",
        "required": "true"
      }
    ],
    "return": "WebDeploymentsAuthorizationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\nbody = PureCloudPlatformClientV2.WebDeploymentsOAuthExchangeRequest() # WebDeploymentsOAuthExchangeRequest | webDeploymentsOAuthExchangeRequest\n\ntry:\n    # Exchange an oAuth code (obtained using the Authorization Code Flow) for a JWT that can be used by webdeployments.\n    api_response = api_instance.post_webdeployments_token_oauthcodegrantjwtexchange(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->post_webdeployments_token_oauthcodegrantjwtexchange: %s\\n\" % e)"
  },
  "post_webdeployments_token_refresh": {
    "operationId": "post_webdeployments_token_refresh",
    "functionName": "post_webdeployments_token_refresh",
    "signature": "post_webdeployments_token_refresh(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WebDeploymentsRefreshJWTRequest",
        "required": "false"
      }
    ],
    "return": "SignedData",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\nbody = PureCloudPlatformClientV2.WebDeploymentsRefreshJWTRequest() # WebDeploymentsRefreshJWTRequest |  (optional)\n\ntry:\n    # Refresh a JWT.\n    api_response = api_instance.post_webdeployments_token_refresh(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->post_webdeployments_token_refresh: %s\\n\" % e)"
  },
  "put_webdeployments_configuration_versions_draft": {
    "operationId": "put_webdeployments_configuration_versions_draft",
    "functionName": "put_webdeployments_configuration_versions_draft",
    "signature": "put_webdeployments_configuration_versions_draft(configuration_id, configuration_version)",
    "parameters": [
      {
        "name": "configuration_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "configuration_version",
        "type": "WebDeploymentConfigurationVersion",
        "required": "true"
      }
    ],
    "return": "WebDeploymentConfigurationVersion",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\nconfiguration_id = 'configuration_id_example' # str | The configuration version ID\nconfiguration_version = PureCloudPlatformClientV2.WebDeploymentConfigurationVersion() # WebDeploymentConfigurationVersion | \n\ntry:\n    # Update the configuration draft\n    api_response = api_instance.put_webdeployments_configuration_versions_draft(configuration_id, configuration_version)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->put_webdeployments_configuration_versions_draft: %s\\n\" % e)"
  },
  "put_webdeployments_deployment": {
    "operationId": "put_webdeployments_deployment",
    "functionName": "put_webdeployments_deployment",
    "signature": "put_webdeployments_deployment(deployment_id, deployment)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "deployment",
        "type": "WebDeployment",
        "required": "true"
      }
    ],
    "return": "WebDeployment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WebDeploymentsApi();\ndeployment_id = 'deployment_id_example' # str | The deployment ID\ndeployment = PureCloudPlatformClientV2.WebDeployment() # WebDeployment | \n\ntry:\n    # Update a deployment\n    api_response = api_instance.put_webdeployments_deployment(deployment_id, deployment)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WebDeploymentsApi->put_webdeployments_deployment: %s\\n\" % e)"
  },
  "delete_widgets_deployment": {
    "operationId": "delete_widgets_deployment",
    "functionName": "delete_widgets_deployment",
    "signature": "delete_widgets_deployment(deployment_id)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WidgetsApi();\ndeployment_id = 'deployment_id_example' # str | Widget Config Id\n\ntry:\n    # Delete a Widget deployment\n    api_instance.delete_widgets_deployment(deployment_id)\nexcept ApiException as e:\n    print(\"Exception when calling WidgetsApi->delete_widgets_deployment: %s\\n\" % e)"
  },
  "get_widgets_deployment": {
    "operationId": "get_widgets_deployment",
    "functionName": "get_widgets_deployment",
    "signature": "get_widgets_deployment(deployment_id)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WidgetDeployment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WidgetsApi();\ndeployment_id = 'deployment_id_example' # str | Widget Config Id\n\ntry:\n    # Get a Widget deployment\n    api_response = api_instance.get_widgets_deployment(deployment_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WidgetsApi->get_widgets_deployment: %s\\n\" % e)"
  },
  "get_widgets_deployments": {
    "operationId": "get_widgets_deployments",
    "functionName": "get_widgets_deployments",
    "signature": "get_widgets_deployments()",
    "return": "WidgetDeploymentEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WidgetsApi();\n\ntry:\n    # List Widget deployments\n    api_response = api_instance.get_widgets_deployments()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WidgetsApi->get_widgets_deployments: %s\\n\" % e)"
  },
  "post_widgets_deployments": {
    "operationId": "post_widgets_deployments",
    "functionName": "post_widgets_deployments",
    "signature": "post_widgets_deployments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WidgetDeployment",
        "required": "true"
      }
    ],
    "return": "WidgetDeployment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WidgetsApi();\nbody = PureCloudPlatformClientV2.WidgetDeployment() # WidgetDeployment | Deployment\n\ntry:\n    # Create Widget deployment\n    api_response = api_instance.post_widgets_deployments(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WidgetsApi->post_widgets_deployments: %s\\n\" % e)"
  },
  "put_widgets_deployment": {
    "operationId": "put_widgets_deployment",
    "functionName": "put_widgets_deployment",
    "signature": "put_widgets_deployment(deployment_id, body)",
    "parameters": [
      {
        "name": "deployment_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WidgetDeployment",
        "required": "true"
      }
    ],
    "return": "WidgetDeployment",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WidgetsApi();\ndeployment_id = 'deployment_id_example' # str | Widget Config Id\nbody = PureCloudPlatformClientV2.WidgetDeployment() # WidgetDeployment | Deployment\n\ntry:\n    # Update a Widget deployment\n    api_response = api_instance.put_widgets_deployment(deployment_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WidgetsApi->put_widgets_deployment: %s\\n\" % e)"
  },
  "delete_workforcemanagement_businessunit": {
    "operationId": "delete_workforcemanagement_businessunit",
    "functionName": "delete_workforcemanagement_businessunit",
    "signature": "delete_workforcemanagement_businessunit(business_unit_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\n\ntry:\n    # Delete business unit\n    api_instance.delete_workforcemanagement_businessunit(business_unit_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_businessunit: %s\\n\" % e)"
  },
  "delete_workforcemanagement_businessunit_activitycode": {
    "operationId": "delete_workforcemanagement_businessunit_activitycode",
    "functionName": "delete_workforcemanagement_businessunit_activitycode",
    "signature": "delete_workforcemanagement_businessunit_activitycode(business_unit_id, activity_code_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "activity_code_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nactivity_code_id = 'activity_code_id_example' # str | The ID of the activity code to delete\n\ntry:\n    # Deletes an activity code\n    api_instance.delete_workforcemanagement_businessunit_activitycode(business_unit_id, activity_code_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_businessunit_activitycode: %s\\n\" % e)"
  },
  "delete_workforcemanagement_businessunit_planninggroup": {
    "operationId": "delete_workforcemanagement_businessunit_planninggroup",
    "functionName": "delete_workforcemanagement_businessunit_planninggroup",
    "signature": "delete_workforcemanagement_businessunit_planninggroup(business_unit_id, planning_group_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "planning_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit.\nplanning_group_id = 'planning_group_id_example' # str | The ID of a planning group to delete\n\ntry:\n    # Deletes the planning group\n    api_instance.delete_workforcemanagement_businessunit_planninggroup(business_unit_id, planning_group_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_businessunit_planninggroup: %s\\n\" % e)"
  },
  "delete_workforcemanagement_businessunit_scheduling_run": {
    "operationId": "delete_workforcemanagement_businessunit_scheduling_run",
    "functionName": "delete_workforcemanagement_businessunit_scheduling_run",
    "signature": "delete_workforcemanagement_businessunit_scheduling_run(business_unit_id, run_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "run_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nrun_id = 'run_id_example' # str | The ID of the schedule run\n\ntry:\n    # Cancel a scheduling run\n    api_instance.delete_workforcemanagement_businessunit_scheduling_run(business_unit_id, run_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_businessunit_scheduling_run: %s\\n\" % e)"
  },
  "delete_workforcemanagement_businessunit_servicegoaltemplate": {
    "operationId": "delete_workforcemanagement_businessunit_servicegoaltemplate",
    "functionName": "delete_workforcemanagement_businessunit_servicegoaltemplate",
    "signature": "delete_workforcemanagement_businessunit_servicegoaltemplate(business_unit_id, service_goal_template_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "service_goal_template_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit.\nservice_goal_template_id = 'service_goal_template_id_example' # str | The ID of the service goal template to delete\n\ntry:\n    # Delete a service goal template\n    api_instance.delete_workforcemanagement_businessunit_servicegoaltemplate(business_unit_id, service_goal_template_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_businessunit_servicegoaltemplate: %s\\n\" % e)"
  },
  "delete_workforcemanagement_businessunit_staffinggroup": {
    "operationId": "delete_workforcemanagement_businessunit_staffinggroup",
    "functionName": "delete_workforcemanagement_businessunit_staffinggroup",
    "signature": "delete_workforcemanagement_businessunit_staffinggroup(business_unit_id, staffing_group_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "staffing_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nstaffing_group_id = 'staffing_group_id_example' # str | The ID of the staffing group to delete\n\ntry:\n    # Deletes a staffing group\n    api_instance.delete_workforcemanagement_businessunit_staffinggroup(business_unit_id, staffing_group_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_businessunit_staffinggroup: %s\\n\" % e)"
  },
  "delete_workforcemanagement_businessunit_timeofflimit": {
    "operationId": "delete_workforcemanagement_businessunit_timeofflimit",
    "functionName": "delete_workforcemanagement_businessunit_timeofflimit",
    "signature": "delete_workforcemanagement_businessunit_timeofflimit(business_unit_id, time_off_limit_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_limit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\ntime_off_limit_id = 'time_off_limit_id_example' # str | The ID of the time-off limit object to delete\n\ntry:\n    # Deletes a time-off limit object\n    api_instance.delete_workforcemanagement_businessunit_timeofflimit(business_unit_id, time_off_limit_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_businessunit_timeofflimit: %s\\n\" % e)"
  },
  "delete_workforcemanagement_businessunit_timeoffplan": {
    "operationId": "delete_workforcemanagement_businessunit_timeoffplan",
    "functionName": "delete_workforcemanagement_businessunit_timeoffplan",
    "signature": "delete_workforcemanagement_businessunit_timeoffplan(business_unit_id, time_off_plan_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_plan_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\ntime_off_plan_id = 'time_off_plan_id_example' # str | The ID of the time-off plan to delete\n\ntry:\n    # Deletes a time-off plan\n    api_instance.delete_workforcemanagement_businessunit_timeoffplan(business_unit_id, time_off_plan_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_businessunit_timeoffplan: %s\\n\" % e)"
  },
  "delete_workforcemanagement_businessunit_week_schedule": {
    "operationId": "delete_workforcemanagement_businessunit_week_schedule",
    "functionName": "delete_workforcemanagement_businessunit_week_schedule",
    "signature": "delete_workforcemanagement_businessunit_week_schedule(business_unit_id, week_id, schedule_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "BuAsyncScheduleResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nschedule_id = 'schedule_id_example' # str | The ID of the schedule\n\ntry:\n    # Delete a schedule\n    api_response = api_instance.delete_workforcemanagement_businessunit_week_schedule(business_unit_id, week_id, schedule_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_businessunit_week_schedule: %s\\n\" % e)"
  },
  "delete_workforcemanagement_businessunit_week_shorttermforecast": {
    "operationId": "delete_workforcemanagement_businessunit_week_shorttermforecast",
    "functionName": "delete_workforcemanagement_businessunit_week_shorttermforecast",
    "signature": "delete_workforcemanagement_businessunit_week_shorttermforecast(business_unit_id, week_date_id, forecast_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "forecast_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the forecast belongs\nweek_date_id = '2013-10-20' # date | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nforecast_id = 'forecast_id_example' # str | The ID of the forecast\n\ntry:\n    # Delete a short term forecast\n    api_instance.delete_workforcemanagement_businessunit_week_shorttermforecast(business_unit_id, week_date_id, forecast_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_businessunit_week_shorttermforecast: %s\\n\" % e)"
  },
  "delete_workforcemanagement_calendar_url_ics": {
    "operationId": "delete_workforcemanagement_calendar_url_ics",
    "functionName": "delete_workforcemanagement_calendar_url_ics",
    "signature": "delete_workforcemanagement_calendar_url_ics()",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\n\ntry:\n    # Disable generated calendar link for the current user\n    api_instance.delete_workforcemanagement_calendar_url_ics()\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_calendar_url_ics: %s\\n\" % e)"
  },
  "delete_workforcemanagement_managementunit": {
    "operationId": "delete_workforcemanagement_managementunit",
    "functionName": "delete_workforcemanagement_managementunit",
    "signature": "delete_workforcemanagement_managementunit(management_unit_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n\ntry:\n    # Delete management unit\n    api_instance.delete_workforcemanagement_managementunit(management_unit_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_managementunit: %s\\n\" % e)"
  },
  "delete_workforcemanagement_managementunit_timeofflimit": {
    "operationId": "delete_workforcemanagement_managementunit_timeofflimit",
    "functionName": "delete_workforcemanagement_managementunit_timeofflimit",
    "signature": "delete_workforcemanagement_managementunit_timeofflimit(management_unit_id, time_off_limit_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_limit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit.\ntime_off_limit_id = 'time_off_limit_id_example' # str | The ID of the time off limit object to delete\n\ntry:\n    # Deletes a time off limit object\n    api_instance.delete_workforcemanagement_managementunit_timeofflimit(management_unit_id, time_off_limit_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_managementunit_timeofflimit: %s\\n\" % e)"
  },
  "delete_workforcemanagement_managementunit_timeoffplan": {
    "operationId": "delete_workforcemanagement_managementunit_timeoffplan",
    "functionName": "delete_workforcemanagement_managementunit_timeoffplan",
    "signature": "delete_workforcemanagement_managementunit_timeoffplan(management_unit_id, time_off_plan_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_plan_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit\ntime_off_plan_id = 'time_off_plan_id_example' # str | The ID of the time off plan to delete\n\ntry:\n    # Deletes a time off plan\n    api_instance.delete_workforcemanagement_managementunit_timeoffplan(management_unit_id, time_off_plan_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_managementunit_timeoffplan: %s\\n\" % e)"
  },
  "delete_workforcemanagement_managementunit_workplan": {
    "operationId": "delete_workforcemanagement_managementunit_workplan",
    "functionName": "delete_workforcemanagement_managementunit_workplan",
    "signature": "delete_workforcemanagement_managementunit_workplan(management_unit_id, work_plan_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "work_plan_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nwork_plan_id = 'work_plan_id_example' # str | The ID of the work plan to delete\n\ntry:\n    # Delete a work plan\n    api_instance.delete_workforcemanagement_managementunit_workplan(management_unit_id, work_plan_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_managementunit_workplan: %s\\n\" % e)"
  },
  "delete_workforcemanagement_managementunit_workplanrotation": {
    "operationId": "delete_workforcemanagement_managementunit_workplanrotation",
    "functionName": "delete_workforcemanagement_managementunit_workplanrotation",
    "signature": "delete_workforcemanagement_managementunit_workplanrotation(management_unit_id, work_plan_rotation_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "work_plan_rotation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nwork_plan_rotation_id = 'work_plan_rotation_id_example' # str | The ID of the work plan rotation to be deleted\n\ntry:\n    # Delete a work plan rotation\n    api_instance.delete_workforcemanagement_managementunit_workplanrotation(management_unit_id, work_plan_rotation_id)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->delete_workforcemanagement_managementunit_workplanrotation: %s\\n\" % e)"
  },
  "get_workforcemanagement_adherence": {
    "operationId": "get_workforcemanagement_adherence",
    "functionName": "get_workforcemanagement_adherence",
    "signature": "get_workforcemanagement_adherence(user_id)",
    "parameters": [
      {
        "name": "user_id",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "list[UserScheduleAdherence]",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nuser_id = ['user_id_example'] # list[str] | User Id(s) for which to fetch current schedule adherence information.  Min 1, Max of 100 userIds per request\n\ntry:\n    # Get a list of UserScheduleAdherence records for the requested users\n    api_response = api_instance.get_workforcemanagement_adherence(user_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_adherence: %s\\n\" % e)"
  },
  "get_workforcemanagement_adherence_explanation": {
    "operationId": "get_workforcemanagement_adherence_explanation",
    "functionName": "get_workforcemanagement_adherence_explanation",
    "signature": "get_workforcemanagement_adherence_explanation(explanation_id)",
    "parameters": [
      {
        "name": "explanation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AdherenceExplanationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nexplanation_id = 'explanation_id_example' # str | The ID of the explanation to update\n\ntry:\n    # Get an adherence explanation for the current user\n    api_response = api_instance.get_workforcemanagement_adherence_explanation(explanation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_adherence_explanation: %s\\n\" % e)"
  },
  "get_workforcemanagement_adherence_explanations_job": {
    "operationId": "get_workforcemanagement_adherence_explanations_job",
    "functionName": "get_workforcemanagement_adherence_explanations_job",
    "signature": "get_workforcemanagement_adherence_explanations_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AdherenceExplanationJob",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\njob_id = 'job_id_example' # str | The ID of the job\n\ntry:\n    # Query the status of an adherence explanation operation. Only the user who started the operation can query the status\n    api_response = api_instance.get_workforcemanagement_adherence_explanations_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_adherence_explanations_job: %s\\n\" % e)"
  },
  "get_workforcemanagement_adherence_historical_bulk_job": {
    "operationId": "get_workforcemanagement_adherence_historical_bulk_job",
    "functionName": "get_workforcemanagement_adherence_historical_bulk_job",
    "signature": "get_workforcemanagement_adherence_historical_bulk_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WfmHistoricalAdherenceBulkResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\njob_id = 'job_id_example' # str | ID of the job to get\n\ntry:\n    # Request to fetch the status of the historical adherence bulk job. Only the user who started the operation can query the status\n    api_response = api_instance.get_workforcemanagement_adherence_historical_bulk_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_adherence_historical_bulk_job: %s\\n\" % e)"
  },
  "get_workforcemanagement_adherence_historical_job": {
    "operationId": "get_workforcemanagement_adherence_historical_job",
    "functionName": "get_workforcemanagement_adherence_historical_job",
    "signature": "get_workforcemanagement_adherence_historical_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WfmHistoricalAdherenceResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Query the status of a historical adherence request operation. Only the user who started the operation can query the status\n    api_response = api_instance.get_workforcemanagement_adherence_historical_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_adherence_historical_job: %s\\n\" % e)"
  },
  "get_workforcemanagement_adhocmodelingjob": {
    "operationId": "get_workforcemanagement_adhocmodelingjob",
    "functionName": "get_workforcemanagement_adhocmodelingjob",
    "signature": "get_workforcemanagement_adhocmodelingjob(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ModelingStatusResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\njob_id = 'job_id_example' # str | The id of the modeling job\n\ntry:\n    # To get status of the modeling job.\n    api_response = api_instance.get_workforcemanagement_adhocmodelingjob(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_adhocmodelingjob: %s\\n\" % e)"
  },
  "get_workforcemanagement_agent_adherence_explanation": {
    "operationId": "get_workforcemanagement_agent_adherence_explanation",
    "functionName": "get_workforcemanagement_agent_adherence_explanation",
    "signature": "get_workforcemanagement_agent_adherence_explanation(agent_id, explanation_id)",
    "parameters": [
      {
        "name": "agent_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "explanation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AdherenceExplanationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nagent_id = 'agent_id_example' # str | The ID of the agent to query\nexplanation_id = 'explanation_id_example' # str | The ID of the explanation to update\n\ntry:\n    # Get an adherence explanation\n    api_response = api_instance.get_workforcemanagement_agent_adherence_explanation(agent_id, explanation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_agent_adherence_explanation: %s\\n\" % e)"
  },
  "get_workforcemanagement_agent_managementunit": {
    "operationId": "get_workforcemanagement_agent_managementunit",
    "functionName": "get_workforcemanagement_agent_managementunit",
    "signature": "get_workforcemanagement_agent_managementunit(agent_id)",
    "parameters": [
      {
        "name": "agent_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "AgentManagementUnitReference",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nagent_id = 'agent_id_example' # str | The ID of the agent to look up\n\ntry:\n    # Get the management unit to which the agent belongs\n    api_response = api_instance.get_workforcemanagement_agent_managementunit(agent_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_agent_managementunit: %s\\n\" % e)"
  },
  "get_workforcemanagement_agents_me_managementunit": {
    "operationId": "get_workforcemanagement_agents_me_managementunit",
    "functionName": "get_workforcemanagement_agents_me_managementunit",
    "signature": "get_workforcemanagement_agents_me_managementunit()",
    "return": "AgentManagementUnitReference",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\n\ntry:\n    # Get the management unit to which the currently logged in agent belongs\n    api_response = api_instance.get_workforcemanagement_agents_me_managementunit()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_agents_me_managementunit: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit": {
    "operationId": "get_workforcemanagement_businessunit",
    "functionName": "get_workforcemanagement_businessunit",
    "signature": "get_workforcemanagement_businessunit(business_unit_id, expand)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "BusinessUnitResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nexpand = ['expand_example'] # list[str] | Include to access additional data on the business unit (optional)\n\ntry:\n    # Get business unit\n    api_response = api_instance.get_workforcemanagement_businessunit(business_unit_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_activitycode": {
    "operationId": "get_workforcemanagement_businessunit_activitycode",
    "functionName": "get_workforcemanagement_businessunit_activitycode",
    "signature": "get_workforcemanagement_businessunit_activitycode(business_unit_id, activity_code_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "activity_code_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "BusinessUnitActivityCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nactivity_code_id = 'activity_code_id_example' # str | The ID of the activity code to fetch\n\ntry:\n    # Get an activity code\n    api_response = api_instance.get_workforcemanagement_businessunit_activitycode(business_unit_id, activity_code_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_activitycode: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_activitycodes": {
    "operationId": "get_workforcemanagement_businessunit_activitycodes",
    "functionName": "get_workforcemanagement_businessunit_activitycodes",
    "signature": "get_workforcemanagement_businessunit_activitycodes(business_unit_id, force_download_service)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "BusinessUnitActivityCodeListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nforce_download_service = True # bool | Force the result of this operation to be sent via download service. For testing/app development purposes (optional)\n\ntry:\n    # Get activity codes\n    api_response = api_instance.get_workforcemanagement_businessunit_activitycodes(business_unit_id, force_download_service=force_download_service)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_activitycodes: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_intraday_planninggroups": {
    "operationId": "get_workforcemanagement_businessunit_intraday_planninggroups",
    "functionName": "get_workforcemanagement_businessunit_intraday_planninggroups",
    "signature": "get_workforcemanagement_businessunit_intraday_planninggroups(business_unit_id, date)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "date",
        "type": "date",
        "required": "true"
      }
    ],
    "return": "WfmIntradayPlanningGroupListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\ndate = '2013-10-20' # date | yyyy-MM-dd date string interpreted in the configured business unit time zone. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\ntry:\n    # Get intraday planning groups for the given date\n    api_response = api_instance.get_workforcemanagement_businessunit_intraday_planninggroups(business_unit_id, date)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_intraday_planninggroups: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_managementunits": {
    "operationId": "get_workforcemanagement_businessunit_managementunits",
    "functionName": "get_workforcemanagement_businessunit_managementunits",
    "signature": "get_workforcemanagement_businessunit_managementunits(business_unit_id, feature, division_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "feature",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ManagementUnitListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nfeature = 'feature_example' # str | If specified, the list of management units for which the user is authorized to use the requested feature will be returned (optional)\ndivision_id = 'division_id_example' # str | If specified, the list of management units belonging to the specified division will be returned (optional)\n\ntry:\n    # Get all authorized management units in the business unit\n    api_response = api_instance.get_workforcemanagement_businessunit_managementunits(business_unit_id, feature=feature, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_managementunits: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_planninggroup": {
    "operationId": "get_workforcemanagement_businessunit_planninggroup",
    "functionName": "get_workforcemanagement_businessunit_planninggroup",
    "signature": "get_workforcemanagement_businessunit_planninggroup(business_unit_id, planning_group_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "planning_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PlanningGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit.\nplanning_group_id = 'planning_group_id_example' # str | The ID of a planning group to fetch\n\ntry:\n    # Get a planning group\n    api_response = api_instance.get_workforcemanagement_businessunit_planninggroup(business_unit_id, planning_group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_planninggroup: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_planninggroups": {
    "operationId": "get_workforcemanagement_businessunit_planninggroups",
    "functionName": "get_workforcemanagement_businessunit_planninggroups",
    "signature": "get_workforcemanagement_businessunit_planninggroups(business_unit_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PlanningGroupList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit.\n\ntry:\n    # Gets list of planning groups\n    api_response = api_instance.get_workforcemanagement_businessunit_planninggroups(business_unit_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_planninggroups: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_scheduling_run": {
    "operationId": "get_workforcemanagement_businessunit_scheduling_run",
    "functionName": "get_workforcemanagement_businessunit_scheduling_run",
    "signature": "get_workforcemanagement_businessunit_scheduling_run(business_unit_id, run_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "run_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "BuScheduleRun",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nrun_id = 'run_id_example' # str | The ID of the schedule run\n\ntry:\n    # Get a scheduling run\n    api_response = api_instance.get_workforcemanagement_businessunit_scheduling_run(business_unit_id, run_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_scheduling_run: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_scheduling_run_result": {
    "operationId": "get_workforcemanagement_businessunit_scheduling_run_result",
    "functionName": "get_workforcemanagement_businessunit_scheduling_run_result",
    "signature": "get_workforcemanagement_businessunit_scheduling_run_result(business_unit_id, run_id, management_unit_ids, expand)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "run_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "management_unit_ids",
        "type": "list[str]",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "true"
      }
    ],
    "return": "BuRescheduleResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nrun_id = 'run_id_example' # str | The ID of the schedule run\nmanagement_unit_ids = ['management_unit_ids_example'] # list[str] | The IDs of the management units for which to fetch the reschedule results\nexpand = ['expand_example'] # list[str] | The fields to expand. Omitting will return an empty response\n\ntry:\n    # Get the result of a rescheduling operation\n    api_response = api_instance.get_workforcemanagement_businessunit_scheduling_run_result(business_unit_id, run_id, management_unit_ids, expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_scheduling_run_result: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_scheduling_runs": {
    "operationId": "get_workforcemanagement_businessunit_scheduling_runs",
    "functionName": "get_workforcemanagement_businessunit_scheduling_runs",
    "signature": "get_workforcemanagement_businessunit_scheduling_runs(business_unit_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "BuScheduleRunListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\n\ntry:\n    # Get the list of scheduling runs\n    api_response = api_instance.get_workforcemanagement_businessunit_scheduling_runs(business_unit_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_scheduling_runs: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_servicegoaltemplate": {
    "operationId": "get_workforcemanagement_businessunit_servicegoaltemplate",
    "functionName": "get_workforcemanagement_businessunit_servicegoaltemplate",
    "signature": "get_workforcemanagement_businessunit_servicegoaltemplate(business_unit_id, service_goal_template_id, expand)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "service_goal_template_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ServiceGoalTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit.\nservice_goal_template_id = 'service_goal_template_id_example' # str | The ID of a service goal template to fetch\nexpand = ['expand_example'] # list[str] | Include to access additional data on the service goal template (optional)\n\ntry:\n    # Get a service goal template\n    api_response = api_instance.get_workforcemanagement_businessunit_servicegoaltemplate(business_unit_id, service_goal_template_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_servicegoaltemplate: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_servicegoaltemplates": {
    "operationId": "get_workforcemanagement_businessunit_servicegoaltemplates",
    "functionName": "get_workforcemanagement_businessunit_servicegoaltemplates",
    "signature": "get_workforcemanagement_businessunit_servicegoaltemplates(business_unit_id, expand)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ServiceGoalTemplateList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit.\nexpand = ['expand_example'] # list[str] | Include to access additional data on the service goal template (optional)\n\ntry:\n    # Gets list of service goal templates\n    api_response = api_instance.get_workforcemanagement_businessunit_servicegoaltemplates(business_unit_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_servicegoaltemplates: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_staffinggroup": {
    "operationId": "get_workforcemanagement_businessunit_staffinggroup",
    "functionName": "get_workforcemanagement_businessunit_staffinggroup",
    "signature": "get_workforcemanagement_businessunit_staffinggroup(business_unit_id, staffing_group_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "staffing_group_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "StaffingGroupResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nstaffing_group_id = 'staffing_group_id_example' # str | The ID of the staffing group to fetch\n\ntry:\n    # Gets a staffing group\n    api_response = api_instance.get_workforcemanagement_businessunit_staffinggroup(business_unit_id, staffing_group_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_staffinggroup: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_staffinggroups": {
    "operationId": "get_workforcemanagement_businessunit_staffinggroups",
    "functionName": "get_workforcemanagement_businessunit_staffinggroups",
    "signature": "get_workforcemanagement_businessunit_staffinggroups(business_unit_id, management_unit_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "StaffingGroupListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit to get management unit specific staffing groups (optional)\n\ntry:\n    # Gets a list of staffing groups\n    api_response = api_instance.get_workforcemanagement_businessunit_staffinggroups(business_unit_id, management_unit_id=management_unit_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_staffinggroups: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_timeofflimit": {
    "operationId": "get_workforcemanagement_businessunit_timeofflimit",
    "functionName": "get_workforcemanagement_businessunit_timeofflimit",
    "signature": "get_workforcemanagement_businessunit_timeofflimit(business_unit_id, time_off_limit_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_limit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "BuTimeOffLimitResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\ntime_off_limit_id = 'time_off_limit_id_example' # str | The ID of the time-off limit to fetch\n\ntry:\n    # Gets a time-off limit object\n    api_response = api_instance.get_workforcemanagement_businessunit_timeofflimit(business_unit_id, time_off_limit_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_timeofflimit: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_timeofflimits": {
    "operationId": "get_workforcemanagement_businessunit_timeofflimits",
    "functionName": "get_workforcemanagement_businessunit_timeofflimits",
    "signature": "get_workforcemanagement_businessunit_timeofflimits(business_unit_id, management_unit_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "BuTimeOffLimitListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit to get management unit specific time-off limit objects (optional)\n\ntry:\n    # Gets a list of time-off limit objects\n    api_response = api_instance.get_workforcemanagement_businessunit_timeofflimits(business_unit_id, management_unit_id=management_unit_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_timeofflimits: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_timeoffplan": {
    "operationId": "get_workforcemanagement_businessunit_timeoffplan",
    "functionName": "get_workforcemanagement_businessunit_timeoffplan",
    "signature": "get_workforcemanagement_businessunit_timeoffplan(business_unit_id, time_off_plan_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_plan_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "BuTimeOffPlanResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\ntime_off_plan_id = 'time_off_plan_id_example' # str | The ID of the time-off plan to fetch\n\ntry:\n    # Gets a time-off plan\n    api_response = api_instance.get_workforcemanagement_businessunit_timeoffplan(business_unit_id, time_off_plan_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_timeoffplan: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_timeoffplans": {
    "operationId": "get_workforcemanagement_businessunit_timeoffplans",
    "functionName": "get_workforcemanagement_businessunit_timeoffplans",
    "signature": "get_workforcemanagement_businessunit_timeoffplans(business_unit_id, management_unit_id, force_download_service)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "false"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "BuTimeOffPlanListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit to get management unit specific staffing groups (optional)\nforce_download_service = True # bool | Force the result of this operation to be sent via download service. For testing/app development purposes (optional)\n\ntry:\n    # Gets a list of time-off plans\n    api_response = api_instance.get_workforcemanagement_businessunit_timeoffplans(business_unit_id, management_unit_id=management_unit_id, force_download_service=force_download_service)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_timeoffplans: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_schedule": {
    "operationId": "get_workforcemanagement_businessunit_week_schedule",
    "functionName": "get_workforcemanagement_businessunit_week_schedule",
    "signature": "get_workforcemanagement_businessunit_week_schedule(business_unit_id, week_id, schedule_id, expand)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "BuScheduleMetadata",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nschedule_id = 'schedule_id_example' # str | The ID of the schedule\nexpand = 'expand_example' # str | expand (optional)\n\ntry:\n    # Get the metadata for the schedule, describing which management units and agents are in the scheduleSchedule data can then be loaded with the query route\n    api_response = api_instance.get_workforcemanagement_businessunit_week_schedule(business_unit_id, week_id, schedule_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_schedule: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_schedule_generationresults": {
    "operationId": "get_workforcemanagement_businessunit_week_schedule_generationresults",
    "functionName": "get_workforcemanagement_businessunit_week_schedule_generationresults",
    "signature": "get_workforcemanagement_businessunit_week_schedule_generationresults(business_unit_id, week_id, schedule_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ScheduleGenerationResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nschedule_id = 'schedule_id_example' # str | The ID of the schedule\n\ntry:\n    # Get the generation results for a generated schedule\n    api_response = api_instance.get_workforcemanagement_businessunit_week_schedule_generationresults(business_unit_id, week_id, schedule_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_schedule_generationresults: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_schedule_headcountforecast": {
    "operationId": "get_workforcemanagement_businessunit_week_schedule_headcountforecast",
    "functionName": "get_workforcemanagement_businessunit_week_schedule_headcountforecast",
    "signature": "get_workforcemanagement_businessunit_week_schedule_headcountforecast(business_unit_id, week_id, schedule_id, force_download)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force_download",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "BuHeadcountForecastResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nschedule_id = 'schedule_id_example' # str | The ID of the schedule\nforce_download = True # bool | Whether to force the result to come via download url.  For testing purposes only (optional)\n\ntry:\n    # Get the headcount forecast by planning group for the schedule\n    api_response = api_instance.get_workforcemanagement_businessunit_week_schedule_headcountforecast(business_unit_id, week_id, schedule_id, force_download=force_download)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_schedule_headcountforecast: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_schedule_history_agent": {
    "operationId": "get_workforcemanagement_businessunit_week_schedule_history_agent",
    "functionName": "get_workforcemanagement_businessunit_week_schedule_history_agent",
    "signature": "get_workforcemanagement_businessunit_week_schedule_history_agent(business_unit_id, week_id, schedule_id, agent_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "agent_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "BuAgentScheduleHistoryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nschedule_id = 'schedule_id_example' # str | The ID of the schedule\nagent_id = 'agent_id_example' # str | THe ID of the agent\n\ntry:\n    # Loads agent's schedule history.\n    api_response = api_instance.get_workforcemanagement_businessunit_week_schedule_history_agent(business_unit_id, week_id, schedule_id, agent_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_schedule_history_agent: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_schedule_performancepredictions": {
    "operationId": "get_workforcemanagement_businessunit_week_schedule_performancepredictions",
    "functionName": "get_workforcemanagement_businessunit_week_schedule_performancepredictions",
    "signature": "get_workforcemanagement_businessunit_week_schedule_performancepredictions(business_unit_id, week_id, schedule_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PerformancePredictionResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the performance prediction belongs\nweek_id = 'week_id_example' # str | First day of schedule week in yyyy-MM-dd format\nschedule_id = 'schedule_id_example' # str | The ID of the schedule the performance prediction belongs to\n\ntry:\n    # Get the performance prediction for the associated schedule\n    api_response = api_instance.get_workforcemanagement_businessunit_week_schedule_performancepredictions(business_unit_id, week_id, schedule_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_schedule_performancepredictions: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculation": {
    "operationId": "get_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculation",
    "functionName": "get_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculation",
    "signature": "get_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculation(business_unit_id, week_id, schedule_id, recalculation_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "recalculation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "PerformancePredictionRecalculationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the performance prediction belongs\nweek_id = 'week_id_example' # str | First day of schedule week in yyyy-MM-dd format\nschedule_id = 'schedule_id_example' # str | The ID of the schedule the recalculation belongs to\nrecalculation_id = 'recalculation_id_example' # str | The ID of the recalculation request\n\ntry:\n    # Get recalculated performance prediction result\n    api_response = api_instance.get_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculation(business_unit_id, week_id, schedule_id, recalculation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculation: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_schedules": {
    "operationId": "get_workforcemanagement_businessunit_week_schedules",
    "functionName": "get_workforcemanagement_businessunit_week_schedules",
    "signature": "get_workforcemanagement_businessunit_week_schedules(business_unit_id, week_id, include_only_published, expand)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_only_published",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "BuScheduleListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = 'week_id_example' # str | First day of schedule week in yyyy-MM-dd format, or 'recent' (without quotes) to get recent schedules\ninclude_only_published = True # bool | includeOnlyPublished (optional)\nexpand = 'expand_example' # str | expand (optional)\n\ntry:\n    # Get the list of week schedules for the specified week\n    api_response = api_instance.get_workforcemanagement_businessunit_week_schedules(business_unit_id, week_id, include_only_published=include_only_published, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_schedules: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_shorttermforecast": {
    "operationId": "get_workforcemanagement_businessunit_week_shorttermforecast",
    "functionName": "get_workforcemanagement_businessunit_week_shorttermforecast",
    "signature": "get_workforcemanagement_businessunit_week_shorttermforecast(business_unit_id, week_date_id, forecast_id, expand)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "forecast_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "BuShortTermForecast",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the forecast belongs\nweek_date_id = '2013-10-20' # date | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nforecast_id = 'forecast_id_example' # str | The ID of the forecast\nexpand = ['expand_example'] # list[str] | Include to access additional data on the forecast (optional)\n\ntry:\n    # Get a short term forecast\n    api_response = api_instance.get_workforcemanagement_businessunit_week_shorttermforecast(business_unit_id, week_date_id, forecast_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_shorttermforecast: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_shorttermforecast_data": {
    "operationId": "get_workforcemanagement_businessunit_week_shorttermforecast_data",
    "functionName": "get_workforcemanagement_businessunit_week_shorttermforecast_data",
    "signature": "get_workforcemanagement_businessunit_week_shorttermforecast_data(business_unit_id, week_date_id, forecast_id, week_number, force_download_service)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "forecast_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "BuForecastResultResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the forecast belongs\nweek_date_id = '2013-10-20' # date | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nforecast_id = 'forecast_id_example' # str | The ID of the forecast\nweek_number = 56 # int | The week number to fetch (for multi-week forecasts) (optional)\nforce_download_service = True # bool | Force the result of this operation to be sent via download service.  For testing/app development purposes (optional)\n\ntry:\n    # Get the result of a short term forecast calculation\n    api_response = api_instance.get_workforcemanagement_businessunit_week_shorttermforecast_data(business_unit_id, week_date_id, forecast_id, week_number=week_number, force_download_service=force_download_service)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_shorttermforecast_data: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_shorttermforecast_generationresults": {
    "operationId": "get_workforcemanagement_businessunit_week_shorttermforecast_generationresults",
    "functionName": "get_workforcemanagement_businessunit_week_shorttermforecast_generationresults",
    "signature": "get_workforcemanagement_businessunit_week_shorttermforecast_generationresults(business_unit_id, week_date_id, forecast_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "forecast_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "BuForecastGenerationResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the forecast belongs\nweek_date_id = '2013-10-20' # date | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nforecast_id = 'forecast_id_example' # str | The ID of the forecast\n\ntry:\n    # Gets the forecast generation results\n    api_response = api_instance.get_workforcemanagement_businessunit_week_shorttermforecast_generationresults(business_unit_id, week_date_id, forecast_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_shorttermforecast_generationresults: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_shorttermforecast_longtermforecastdata": {
    "operationId": "get_workforcemanagement_businessunit_week_shorttermforecast_longtermforecastdata",
    "functionName": "get_workforcemanagement_businessunit_week_shorttermforecast_longtermforecastdata",
    "signature": "get_workforcemanagement_businessunit_week_shorttermforecast_longtermforecastdata(business_unit_id, week_date_id, forecast_id, force_download_service)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "forecast_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "LongTermForecastResultResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the forecast belongs\nweek_date_id = '2013-10-20' # date | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nforecast_id = 'forecast_id_example' # str | The ID of the forecast\nforce_download_service = True # bool | Force the result of this operation to be sent via download service.  For testing/app development purposes (optional)\n\ntry:\n    # Get the result of a long term forecast calculation\n    api_response = api_instance.get_workforcemanagement_businessunit_week_shorttermforecast_longtermforecastdata(business_unit_id, week_date_id, forecast_id, force_download_service=force_download_service)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_shorttermforecast_longtermforecastdata: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_shorttermforecast_planninggroups": {
    "operationId": "get_workforcemanagement_businessunit_week_shorttermforecast_planninggroups",
    "functionName": "get_workforcemanagement_businessunit_week_shorttermforecast_planninggroups",
    "signature": "get_workforcemanagement_businessunit_week_shorttermforecast_planninggroups(business_unit_id, week_date_id, forecast_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "forecast_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ForecastPlanningGroupsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the forecast belongs\nweek_date_id = '2013-10-20' # date | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nforecast_id = 'forecast_id_example' # str | The ID of the forecast\n\ntry:\n    # Gets the forecast planning group snapshot\n    api_response = api_instance.get_workforcemanagement_businessunit_week_shorttermforecast_planninggroups(business_unit_id, week_date_id, forecast_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_shorttermforecast_planninggroups: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_shorttermforecast_staffingrequirement": {
    "operationId": "get_workforcemanagement_businessunit_week_shorttermforecast_staffingrequirement",
    "functionName": "get_workforcemanagement_businessunit_week_shorttermforecast_staffingrequirement",
    "signature": "get_workforcemanagement_businessunit_week_shorttermforecast_staffingrequirement(business_unit_id, week_date_id, forecast_id, week_numbers)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "forecast_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_numbers",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "BuForecastStaffingRequirementsResultResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the forecast belongs\nweek_date_id = '2013-10-20' # date | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nforecast_id = 'forecast_id_example' # str | The ID of the forecast\nweek_numbers = ['week_numbers_example'] # list[str] | The week numbers to fetch (for multi-week forecasts) staffing requirements. Returns all week data if the list is not specified (optional)\n\ntry:\n    # Get the staffing requirement by planning group for a forecast\n    api_response = api_instance.get_workforcemanagement_businessunit_week_shorttermforecast_staffingrequirement(business_unit_id, week_date_id, forecast_id, week_numbers=week_numbers)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_shorttermforecast_staffingrequirement: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunit_week_shorttermforecasts": {
    "operationId": "get_workforcemanagement_businessunit_week_shorttermforecasts",
    "functionName": "get_workforcemanagement_businessunit_week_shorttermforecasts",
    "signature": "get_workforcemanagement_businessunit_week_shorttermforecasts(business_unit_id, week_date_id)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "BuShortTermForecastListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the forecast belongs\nweek_date_id = 'week_date_id_example' # str | The week start date of the forecast in yyyy-MM-dd format or 'recent' (without quotes) to fetch recent forecasts\n\ntry:\n    # Get short term forecasts\n    api_response = api_instance.get_workforcemanagement_businessunit_week_shorttermforecasts(business_unit_id, week_date_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunit_week_shorttermforecasts: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunits": {
    "operationId": "get_workforcemanagement_businessunits",
    "functionName": "get_workforcemanagement_businessunits",
    "signature": "get_workforcemanagement_businessunits(feature, division_id)",
    "parameters": [
      {
        "name": "feature",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "BusinessUnitListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nfeature = 'feature_example' # str | If specified, the list of business units for which the user is authorized to use the requested feature will be returned (optional)\ndivision_id = 'division_id_example' # str | If specified, the list of business units belonging to the specified division will be returned (optional)\n\ntry:\n    # Get business units\n    api_response = api_instance.get_workforcemanagement_businessunits(feature=feature, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunits: %s\\n\" % e)"
  },
  "get_workforcemanagement_businessunits_divisionviews": {
    "operationId": "get_workforcemanagement_businessunits_divisionviews",
    "functionName": "get_workforcemanagement_businessunits_divisionviews",
    "signature": "get_workforcemanagement_businessunits_divisionviews(division_id)",
    "parameters": [
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "BusinessUnitListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\ndivision_id = ['division_id_example'] # list[str] | The divisionIds to filter by. If omitted, will return business units in all divisions (optional)\n\ntry:\n    # Get business units across divisions\n    api_response = api_instance.get_workforcemanagement_businessunits_divisionviews(division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_businessunits_divisionviews: %s\\n\" % e)"
  },
  "get_workforcemanagement_calendar_data_ics": {
    "operationId": "get_workforcemanagement_calendar_data_ics",
    "functionName": "get_workforcemanagement_calendar_data_ics",
    "signature": "get_workforcemanagement_calendar_data_ics(calendar_id)",
    "parameters": [
      {
        "name": "calendar_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "str",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\ncalendar_id = 'calendar_id_example' # str | The id of the ics-formatted calendar\n\ntry:\n    # Get ics formatted calendar based on shareable link\n    api_response = api_instance.get_workforcemanagement_calendar_data_ics(calendar_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_calendar_data_ics: %s\\n\" % e)"
  },
  "get_workforcemanagement_calendar_url_ics": {
    "operationId": "get_workforcemanagement_calendar_url_ics",
    "functionName": "get_workforcemanagement_calendar_url_ics",
    "signature": "get_workforcemanagement_calendar_url_ics()",
    "return": "CalendarUrlResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\n\ntry:\n    # Get existing calendar link for the current user\n    api_response = api_instance.get_workforcemanagement_calendar_url_ics()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_calendar_url_ics: %s\\n\" % e)"
  },
  "get_workforcemanagement_historicaldata_deletejob": {
    "operationId": "get_workforcemanagement_historicaldata_deletejob",
    "functionName": "get_workforcemanagement_historicaldata_deletejob",
    "signature": "get_workforcemanagement_historicaldata_deletejob()",
    "return": "HistoricalImportDeleteJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\n\ntry:\n    # Retrieves delete job status for historical data imports of the organization\n    api_response = api_instance.get_workforcemanagement_historicaldata_deletejob()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_historicaldata_deletejob: %s\\n\" % e)"
  },
  "get_workforcemanagement_historicaldata_importstatus": {
    "operationId": "get_workforcemanagement_historicaldata_importstatus",
    "functionName": "get_workforcemanagement_historicaldata_importstatus",
    "signature": "get_workforcemanagement_historicaldata_importstatus()",
    "return": "HistoricalImportStatusListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\n\ntry:\n    # Retrieves status of the historical data imports of the organization\n    api_response = api_instance.get_workforcemanagement_historicaldata_importstatus()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_historicaldata_importstatus: %s\\n\" % e)"
  },
  "get_workforcemanagement_integrations_hris": {
    "operationId": "get_workforcemanagement_integrations_hris",
    "functionName": "get_workforcemanagement_integrations_hris",
    "signature": "get_workforcemanagement_integrations_hris()",
    "return": "WfmIntegrationListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\n\ntry:\n    # Get integrations\n    api_response = api_instance.get_workforcemanagement_integrations_hris()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_integrations_hris: %s\\n\" % e)"
  },
  "get_workforcemanagement_integrations_hris_timeofftypes_job": {
    "operationId": "get_workforcemanagement_integrations_hris_timeofftypes_job",
    "functionName": "get_workforcemanagement_integrations_hris_timeofftypes_job",
    "signature": "get_workforcemanagement_integrations_hris_timeofftypes_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "HrisTimeOffTypesJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\njob_id = 'job_id_example' # str | The ID of the job.\n\ntry:\n    # Query the results of time off types job\n    api_response = api_instance.get_workforcemanagement_integrations_hris_timeofftypes_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_integrations_hris_timeofftypes_job: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit": {
    "operationId": "get_workforcemanagement_managementunit",
    "functionName": "get_workforcemanagement_managementunit",
    "signature": "get_workforcemanagement_managementunit(management_unit_id, expand)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ManagementUnit",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nexpand = ['expand_example'] # list[str] |  (optional)\n\ntry:\n    # Get management unit\n    api_response = api_instance.get_workforcemanagement_managementunit(management_unit_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_activitycodes": {
    "operationId": "get_workforcemanagement_managementunit_activitycodes",
    "functionName": "get_workforcemanagement_managementunit_activitycodes",
    "signature": "get_workforcemanagement_managementunit_activitycodes(management_unit_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ActivityCodeContainer",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n\ntry:\n    # Deprecated: Instead use /api/v2/workforcemanagement/businessunits/{businessUnitId}/activitycodes. Get the list of activity codes\n    api_response = api_instance.get_workforcemanagement_managementunit_activitycodes(management_unit_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_activitycodes: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_adherence": {
    "operationId": "get_workforcemanagement_managementunit_adherence",
    "functionName": "get_workforcemanagement_managementunit_adherence",
    "signature": "get_workforcemanagement_managementunit_adherence(management_unit_id, force_download_service)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "UserScheduleAdherenceListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit\nforce_download_service = True # bool | Force the result of this operation to be sent via download service.  For testing/app development purposes (optional)\n\ntry:\n    # Get a list of user schedule adherence records for the requested management unit\n    api_response = api_instance.get_workforcemanagement_managementunit_adherence(management_unit_id, force_download_service=force_download_service)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_adherence: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_agent": {
    "operationId": "get_workforcemanagement_managementunit_agent",
    "functionName": "get_workforcemanagement_managementunit_agent",
    "signature": "get_workforcemanagement_managementunit_agent(management_unit_id, agent_id, exclude_capabilities, expand)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "agent_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "exclude_capabilities",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "WfmAgent",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nagent_id = 'agent_id_example' # str | The agent id\nexclude_capabilities = True # bool | Excludes all capabilities of the agent such as queues, languages, and skills (optional)\nexpand = ['expand_example'] # list[str] |  (optional)\n\ntry:\n    # Get data for agent in the management unit\n    api_response = api_instance.get_workforcemanagement_managementunit_agent(management_unit_id, agent_id, exclude_capabilities=exclude_capabilities, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_agent: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_agent_shifttrades": {
    "operationId": "get_workforcemanagement_managementunit_agent_shifttrades",
    "functionName": "get_workforcemanagement_managementunit_agent_shifttrades",
    "signature": "get_workforcemanagement_managementunit_agent_shifttrades(management_unit_id, agent_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "agent_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ShiftTradeListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nagent_id = 'agent_id_example' # str | The agent id\n\ntry:\n    # Gets all the shift trades for a given agent\n    api_response = api_instance.get_workforcemanagement_managementunit_agent_shifttrades(management_unit_id, agent_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_agent_shifttrades: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_shifttrades_matched": {
    "operationId": "get_workforcemanagement_managementunit_shifttrades_matched",
    "functionName": "get_workforcemanagement_managementunit_shifttrades_matched",
    "signature": "get_workforcemanagement_managementunit_shifttrades_matched(management_unit_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "ShiftTradeMatchesSummaryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n\ntry:\n    # Gets a summary of all shift trades in the matched state\n    api_response = api_instance.get_workforcemanagement_managementunit_shifttrades_matched(management_unit_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_shifttrades_matched: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_shifttrades_users": {
    "operationId": "get_workforcemanagement_managementunit_shifttrades_users",
    "functionName": "get_workforcemanagement_managementunit_shifttrades_users",
    "signature": "get_workforcemanagement_managementunit_shifttrades_users(management_unit_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WfmUserEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n\ntry:\n    # Gets list of users available for whom you can send direct shift trade requests\n    api_response = api_instance.get_workforcemanagement_managementunit_shifttrades_users(management_unit_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_shifttrades_users: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_timeofflimit": {
    "operationId": "get_workforcemanagement_managementunit_timeofflimit",
    "functionName": "get_workforcemanagement_managementunit_timeofflimit",
    "signature": "get_workforcemanagement_managementunit_timeofflimit(management_unit_id, time_off_limit_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_limit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TimeOffLimit",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit.\ntime_off_limit_id = 'time_off_limit_id_example' # str | The ID of the time off limit to fetch\n\ntry:\n    # Gets a time off limit object\n    api_response = api_instance.get_workforcemanagement_managementunit_timeofflimit(management_unit_id, time_off_limit_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_timeofflimit: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_timeofflimits": {
    "operationId": "get_workforcemanagement_managementunit_timeofflimits",
    "functionName": "get_workforcemanagement_managementunit_timeofflimits",
    "signature": "get_workforcemanagement_managementunit_timeofflimits(management_unit_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TimeOffLimitListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit.\n\ntry:\n    # Gets a list of time off limit objects under management unit.\n    api_response = api_instance.get_workforcemanagement_managementunit_timeofflimits(management_unit_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_timeofflimits: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_timeoffplan": {
    "operationId": "get_workforcemanagement_managementunit_timeoffplan",
    "functionName": "get_workforcemanagement_managementunit_timeoffplan",
    "signature": "get_workforcemanagement_managementunit_timeoffplan(management_unit_id, time_off_plan_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_plan_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TimeOffPlan",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit\ntime_off_plan_id = 'time_off_plan_id_example' # str | The ID of the time off plan to fetch\n\ntry:\n    # Gets a time off plan\n    api_response = api_instance.get_workforcemanagement_managementunit_timeoffplan(management_unit_id, time_off_plan_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_timeoffplan: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_timeoffplans": {
    "operationId": "get_workforcemanagement_managementunit_timeoffplans",
    "functionName": "get_workforcemanagement_managementunit_timeoffplans",
    "signature": "get_workforcemanagement_managementunit_timeoffplans(management_unit_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TimeOffPlanListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit\n\ntry:\n    # Gets a list of time off plans\n    api_response = api_instance.get_workforcemanagement_managementunit_timeoffplans(management_unit_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_timeoffplans: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_user_timeoffrequest": {
    "operationId": "get_workforcemanagement_managementunit_user_timeoffrequest",
    "functionName": "get_workforcemanagement_managementunit_user_timeoffrequest",
    "signature": "get_workforcemanagement_managementunit_user_timeoffrequest(management_unit_id, user_id, time_off_request_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_request_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TimeOffRequestResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nuser_id = 'user_id_example' # str | The userId to whom the Time Off Request applies.\ntime_off_request_id = 'time_off_request_id_example' # str | Time Off Request Id\n\ntry:\n    # Get a time off request\n    api_response = api_instance.get_workforcemanagement_managementunit_user_timeoffrequest(management_unit_id, user_id, time_off_request_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_user_timeoffrequest: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_user_timeoffrequest_timeofflimits": {
    "operationId": "get_workforcemanagement_managementunit_user_timeoffrequest_timeofflimits",
    "functionName": "get_workforcemanagement_managementunit_user_timeoffrequest_timeofflimits",
    "signature": "get_workforcemanagement_managementunit_user_timeoffrequest_timeofflimits(management_unit_id, user_id, time_off_request_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_request_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "QueryTimeOffLimitValuesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit.\nuser_id = 'user_id_example' # str | The userId to whom the time off request applies.\ntime_off_request_id = 'time_off_request_id_example' # str | The ID of the time off request, which dates and activityCodeId determine limit values to retrieve\n\ntry:\n    # Retrieves time off limit, allocated and waitlisted values according to specific time off request\n    api_response = api_instance.get_workforcemanagement_managementunit_user_timeoffrequest_timeofflimits(management_unit_id, user_id, time_off_request_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_user_timeoffrequest_timeofflimits: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_user_timeoffrequests": {
    "operationId": "get_workforcemanagement_managementunit_user_timeoffrequests",
    "functionName": "get_workforcemanagement_managementunit_user_timeoffrequests",
    "signature": "get_workforcemanagement_managementunit_user_timeoffrequests(management_unit_id, user_id, recently_reviewed)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "recently_reviewed",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nuser_id = 'user_id_example' # str | The userId to whom the Time Off Request applies.\nrecently_reviewed = False # bool | Limit results to requests that have been reviewed within the preceding 30 days (optional) (default to False)\n\ntry:\n    # Get a list of time off requests for a given user\n    api_response = api_instance.get_workforcemanagement_managementunit_user_timeoffrequests(management_unit_id, user_id, recently_reviewed=recently_reviewed)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_user_timeoffrequests: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_users": {
    "operationId": "get_workforcemanagement_managementunit_users",
    "functionName": "get_workforcemanagement_managementunit_users",
    "signature": "get_workforcemanagement_managementunit_users(management_unit_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WfmUserEntityListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n\ntry:\n    # Get users in the management unit\n    api_response = api_instance.get_workforcemanagement_managementunit_users(management_unit_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_users: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_week_schedule": {
    "operationId": "get_workforcemanagement_managementunit_week_schedule",
    "functionName": "get_workforcemanagement_managementunit_week_schedule",
    "signature": "get_workforcemanagement_managementunit_week_schedule(management_unit_id, week_id, schedule_id, expand, force_download_service)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "WeekScheduleResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nweek_id = 'week_id_example' # str | First day of schedule week in yyyy-MM-dd format.\nschedule_id = 'schedule_id_example' # str | The ID of the schedule to fetch\nexpand = 'expand_example' # str | Which fields, if any, to expand (optional)\nforce_download_service = True # bool | Force the result of this operation to be sent via download service.  For testing/app development purposes (optional)\n\ntry:\n    # Deprecated.  Use the equivalent business unit resource instead. Get a week schedule\n    api_response = api_instance.get_workforcemanagement_managementunit_week_schedule(management_unit_id, week_id, schedule_id, expand=expand, force_download_service=force_download_service)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_week_schedule: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_week_schedules": {
    "operationId": "get_workforcemanagement_managementunit_week_schedules",
    "functionName": "get_workforcemanagement_managementunit_week_schedules",
    "signature": "get_workforcemanagement_managementunit_week_schedules(management_unit_id, week_id, include_only_published, earliest_week_date, latest_week_date)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_only_published",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "earliest_week_date",
        "type": "str",
        "required": "false"
      },
      {
        "name": "latest_week_date",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "WeekScheduleListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nweek_id = 'week_id_example' # str | First day of schedule week in yyyy-MM-dd format.\ninclude_only_published = True # bool | Return only published schedules (optional)\nearliest_week_date = 'earliest_week_date_example' # str | The start date of the earliest week to query in yyyy-MM-dd format (optional)\nlatest_week_date = 'latest_week_date_example' # str | The start date of the latest week to query in yyyy-MM-dd format (optional)\n\ntry:\n    # Deprecated.  Use the equivalent business unit resource instead. Get the list of schedules in a week in management unit\n    api_response = api_instance.get_workforcemanagement_managementunit_week_schedules(management_unit_id, week_id, include_only_published=include_only_published, earliest_week_date=earliest_week_date, latest_week_date=latest_week_date)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_week_schedules: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_week_shifttrades": {
    "operationId": "get_workforcemanagement_managementunit_week_shifttrades",
    "functionName": "get_workforcemanagement_managementunit_week_shifttrades",
    "signature": "get_workforcemanagement_managementunit_week_shifttrades(management_unit_id, week_date_id, evaluate_matches, force_download_service)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "evaluate_matches",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "WeekShiftTradeListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nweek_date_id = '2013-10-20' # date | The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nevaluate_matches = True # bool | Whether to evaluate the matches for violations (optional) (default to True)\nforce_download_service = True # bool | Force the result of this operation to be sent via download service. For testing/app development purposes (optional)\n\ntry:\n    # Gets all the shift trades for a given week\n    api_response = api_instance.get_workforcemanagement_managementunit_week_shifttrades(management_unit_id, week_date_id, evaluate_matches=evaluate_matches, force_download_service=force_download_service)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_week_shifttrades: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_workplan": {
    "operationId": "get_workforcemanagement_managementunit_workplan",
    "functionName": "get_workforcemanagement_managementunit_workplan",
    "signature": "get_workforcemanagement_managementunit_workplan(management_unit_id, work_plan_id, include_only)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "work_plan_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "include_only",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "WorkPlan",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nwork_plan_id = 'work_plan_id_example' # str | The ID of the work plan to fetch\ninclude_only = ['include_only_example'] # list[str] | limit response to the specified fields (optional)\n\ntry:\n    # Get a work plan\n    api_response = api_instance.get_workforcemanagement_managementunit_workplan(management_unit_id, work_plan_id, include_only=include_only)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_workplan: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_workplanrotation": {
    "operationId": "get_workforcemanagement_managementunit_workplanrotation",
    "functionName": "get_workforcemanagement_managementunit_workplanrotation",
    "signature": "get_workforcemanagement_managementunit_workplanrotation(management_unit_id, work_plan_rotation_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "work_plan_rotation_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WorkPlanRotationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nwork_plan_rotation_id = 'work_plan_rotation_id_example' # str | The ID of the work plan rotation to fetch\n\ntry:\n    # Get a work plan rotation\n    api_response = api_instance.get_workforcemanagement_managementunit_workplanrotation(management_unit_id, work_plan_rotation_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_workplanrotation: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_workplanrotations": {
    "operationId": "get_workforcemanagement_managementunit_workplanrotations",
    "functionName": "get_workforcemanagement_managementunit_workplanrotations",
    "signature": "get_workforcemanagement_managementunit_workplanrotations(management_unit_id, expand)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "WorkPlanRotationListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nexpand = ['expand_example'] # list[str] |  (optional)\n\ntry:\n    # Get work plan rotations\n    api_response = api_instance.get_workforcemanagement_managementunit_workplanrotations(management_unit_id, expand=expand)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_workplanrotations: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunit_workplans": {
    "operationId": "get_workforcemanagement_managementunit_workplans",
    "functionName": "get_workforcemanagement_managementunit_workplans",
    "signature": "get_workforcemanagement_managementunit_workplans(management_unit_id, expand, exclude)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "exclude",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "WorkPlanListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nexpand = ['expand_example'] # list[str] | Include to access additional data on the work plans (optional)\nexclude = ['exclude_example'] # list[str] | Exclude specific data on the work plans from the response (optional)\n\ntry:\n    # Get work plans\n    api_response = api_instance.get_workforcemanagement_managementunit_workplans(management_unit_id, expand=expand, exclude=exclude)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunit_workplans: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunits": {
    "operationId": "get_workforcemanagement_managementunits",
    "functionName": "get_workforcemanagement_managementunits",
    "signature": "get_workforcemanagement_managementunits(page_size, page_number, expand, feature, division_id)",
    "parameters": [
      {
        "name": "page_size",
        "type": "int",
        "required": "false"
      },
      {
        "name": "page_number",
        "type": "int",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "str",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "str",
        "required": "false"
      },
      {
        "name": "division_id",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "ManagementUnitListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\npage_size = 56 # int | Deprecated, paging is not supported (optional)\npage_number = 56 # int | Deprecated, paging is not supported (optional)\nexpand = 'expand_example' # str | Deprecated, expand settings on the single MU route (optional)\nfeature = 'feature_example' # str | If specified, the list of management units for which the user is authorized to use the requested feature will be returned (optional)\ndivision_id = 'division_id_example' # str | If specified, the list of management units belonging to the specified division will be returned (optional)\n\ntry:\n    # Get management units\n    api_response = api_instance.get_workforcemanagement_managementunits(page_size=page_size, page_number=page_number, expand=expand, feature=feature, division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunits: %s\\n\" % e)"
  },
  "get_workforcemanagement_managementunits_divisionviews": {
    "operationId": "get_workforcemanagement_managementunits_divisionviews",
    "functionName": "get_workforcemanagement_managementunits_divisionviews",
    "signature": "get_workforcemanagement_managementunits_divisionviews(division_id)",
    "parameters": [
      {
        "name": "division_id",
        "type": "list[str]",
        "required": "false"
      }
    ],
    "return": "ManagementUnitListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\ndivision_id = ['division_id_example'] # list[str] | The divisionIds to filter by. If omitted, will return all divisions (optional)\n\ntry:\n    # Get management units across divisions\n    api_response = api_instance.get_workforcemanagement_managementunits_divisionviews(division_id=division_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_managementunits_divisionviews: %s\\n\" % e)"
  },
  "get_workforcemanagement_notifications": {
    "operationId": "get_workforcemanagement_notifications",
    "functionName": "get_workforcemanagement_notifications",
    "signature": "get_workforcemanagement_notifications()",
    "return": "NotificationsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\n\ntry:\n    # Get a list of notifications for the current user\n    api_response = api_instance.get_workforcemanagement_notifications()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_notifications: %s\\n\" % e)"
  },
  "get_workforcemanagement_schedulingjob": {
    "operationId": "get_workforcemanagement_schedulingjob",
    "functionName": "get_workforcemanagement_schedulingjob",
    "signature": "get_workforcemanagement_schedulingjob(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "SchedulingStatusResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\njob_id = 'job_id_example' # str | The id of the scheduling job\n\ntry:\n    # Get status of the scheduling job\n    api_response = api_instance.get_workforcemanagement_schedulingjob(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_schedulingjob: %s\\n\" % e)"
  },
  "get_workforcemanagement_shifttrades": {
    "operationId": "get_workforcemanagement_shifttrades",
    "functionName": "get_workforcemanagement_shifttrades",
    "signature": "get_workforcemanagement_shifttrades()",
    "return": "ShiftTradeListResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\n\ntry:\n    # Gets all of my shift trades\n    api_response = api_instance.get_workforcemanagement_shifttrades()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_shifttrades: %s\\n\" % e)"
  },
  "get_workforcemanagement_shrinkage_job": {
    "operationId": "get_workforcemanagement_shrinkage_job",
    "functionName": "get_workforcemanagement_shrinkage_job",
    "signature": "get_workforcemanagement_shrinkage_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WfmHistoricalShrinkageResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\njob_id = 'job_id_example' # str | jobId\n\ntry:\n    # Request to fetch the status of the historical shrinkage query\n    api_response = api_instance.get_workforcemanagement_shrinkage_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_shrinkage_job: %s\\n\" % e)"
  },
  "get_workforcemanagement_timeoffbalance_job": {
    "operationId": "get_workforcemanagement_timeoffbalance_job",
    "functionName": "get_workforcemanagement_timeoffbalance_job",
    "signature": "get_workforcemanagement_timeoffbalance_job(job_id)",
    "parameters": [
      {
        "name": "job_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TimeOffBalanceJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\njob_id = 'job_id_example' # str | The ID of the job.\n\ntry:\n    # Query the results of time off types job\n    api_response = api_instance.get_workforcemanagement_timeoffbalance_job(job_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_timeoffbalance_job: %s\\n\" % e)"
  },
  "get_workforcemanagement_timeoffrequest": {
    "operationId": "get_workforcemanagement_timeoffrequest",
    "functionName": "get_workforcemanagement_timeoffrequest",
    "signature": "get_workforcemanagement_timeoffrequest(time_off_request_id)",
    "parameters": [
      {
        "name": "time_off_request_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TimeOffRequestResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\ntime_off_request_id = 'time_off_request_id_example' # str | The ID of the time off request\n\ntry:\n    # Get a time off request for the current user\n    api_response = api_instance.get_workforcemanagement_timeoffrequest(time_off_request_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_timeoffrequest: %s\\n\" % e)"
  },
  "get_workforcemanagement_timeoffrequest_waitlistpositions": {
    "operationId": "get_workforcemanagement_timeoffrequest_waitlistpositions",
    "functionName": "get_workforcemanagement_timeoffrequest_waitlistpositions",
    "signature": "get_workforcemanagement_timeoffrequest_waitlistpositions(time_off_request_id)",
    "parameters": [
      {
        "name": "time_off_request_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "WaitlistPositionListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\ntime_off_request_id = 'time_off_request_id_example' # str | The ID of the time off request\n\ntry:\n    # Get the daily waitlist positions of a time off request for the current user\n    api_response = api_instance.get_workforcemanagement_timeoffrequest_waitlistpositions(time_off_request_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_timeoffrequest_waitlistpositions: %s\\n\" % e)"
  },
  "get_workforcemanagement_timeoffrequests": {
    "operationId": "get_workforcemanagement_timeoffrequests",
    "functionName": "get_workforcemanagement_timeoffrequests",
    "signature": "get_workforcemanagement_timeoffrequests(recently_reviewed)",
    "parameters": [
      {
        "name": "recently_reviewed",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nrecently_reviewed = False # bool | Limit results to requests that have been reviewed within the preceding 30 days (optional) (default to False)\n\ntry:\n    # Get a list of time off requests for the current user\n    api_response = api_instance.get_workforcemanagement_timeoffrequests(recently_reviewed=recently_reviewed)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->get_workforcemanagement_timeoffrequests: %s\\n\" % e)"
  },
  "patch_workforcemanagement_agent_adherence_explanation": {
    "operationId": "patch_workforcemanagement_agent_adherence_explanation",
    "functionName": "patch_workforcemanagement_agent_adherence_explanation",
    "signature": "patch_workforcemanagement_agent_adherence_explanation(agent_id, explanation_id, body)",
    "parameters": [
      {
        "name": "agent_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "explanation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateAdherenceExplanationStatusRequest",
        "required": "true"
      }
    ],
    "return": "AdherenceExplanationAsyncResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nagent_id = 'agent_id_example' # str | The ID of the agent to query\nexplanation_id = 'explanation_id_example' # str | The ID of the explanation to update\nbody = PureCloudPlatformClientV2.UpdateAdherenceExplanationStatusRequest() # UpdateAdherenceExplanationStatusRequest | The request body\n\ntry:\n    # Update an adherence explanation\n    api_response = api_instance.patch_workforcemanagement_agent_adherence_explanation(agent_id, explanation_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_agent_adherence_explanation: %s\\n\" % e)"
  },
  "patch_workforcemanagement_businessunit": {
    "operationId": "patch_workforcemanagement_businessunit",
    "functionName": "patch_workforcemanagement_businessunit",
    "signature": "patch_workforcemanagement_businessunit(business_unit_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateBusinessUnitRequest",
        "required": "false"
      }
    ],
    "return": "BusinessUnitResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nbody = PureCloudPlatformClientV2.UpdateBusinessUnitRequest() # UpdateBusinessUnitRequest | body (optional)\n\ntry:\n    # Update business unit\n    api_response = api_instance.patch_workforcemanagement_businessunit(business_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_businessunit: %s\\n\" % e)"
  },
  "patch_workforcemanagement_businessunit_activitycode": {
    "operationId": "patch_workforcemanagement_businessunit_activitycode",
    "functionName": "patch_workforcemanagement_businessunit_activitycode",
    "signature": "patch_workforcemanagement_businessunit_activitycode(business_unit_id, activity_code_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "activity_code_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateActivityCodeRequest",
        "required": "false"
      }
    ],
    "return": "BusinessUnitActivityCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nactivity_code_id = 'activity_code_id_example' # str | The ID of the activity code to update\nbody = PureCloudPlatformClientV2.UpdateActivityCodeRequest() # UpdateActivityCodeRequest | body (optional)\n\ntry:\n    # Update an activity code\n    api_response = api_instance.patch_workforcemanagement_businessunit_activitycode(business_unit_id, activity_code_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_businessunit_activitycode: %s\\n\" % e)"
  },
  "patch_workforcemanagement_businessunit_planninggroup": {
    "operationId": "patch_workforcemanagement_businessunit_planninggroup",
    "functionName": "patch_workforcemanagement_businessunit_planninggroup",
    "signature": "patch_workforcemanagement_businessunit_planninggroup(business_unit_id, planning_group_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "planning_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdatePlanningGroupRequest",
        "required": "false"
      }
    ],
    "return": "PlanningGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit.\nplanning_group_id = 'planning_group_id_example' # str | The ID of a planning group to update\nbody = PureCloudPlatformClientV2.UpdatePlanningGroupRequest() # UpdatePlanningGroupRequest | body (optional)\n\ntry:\n    # Updates the planning group\n    api_response = api_instance.patch_workforcemanagement_businessunit_planninggroup(business_unit_id, planning_group_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_businessunit_planninggroup: %s\\n\" % e)"
  },
  "patch_workforcemanagement_businessunit_scheduling_run": {
    "operationId": "patch_workforcemanagement_businessunit_scheduling_run",
    "functionName": "patch_workforcemanagement_businessunit_scheduling_run",
    "signature": "patch_workforcemanagement_businessunit_scheduling_run(business_unit_id, run_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "run_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchBuScheduleRunRequest",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nrun_id = 'run_id_example' # str | The ID of the schedule run\nbody = PureCloudPlatformClientV2.PatchBuScheduleRunRequest() # PatchBuScheduleRunRequest | body (optional)\n\ntry:\n    # Mark a schedule run as applied\n    api_instance.patch_workforcemanagement_businessunit_scheduling_run(business_unit_id, run_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_businessunit_scheduling_run: %s\\n\" % e)"
  },
  "patch_workforcemanagement_businessunit_servicegoaltemplate": {
    "operationId": "patch_workforcemanagement_businessunit_servicegoaltemplate",
    "functionName": "patch_workforcemanagement_businessunit_servicegoaltemplate",
    "signature": "patch_workforcemanagement_businessunit_servicegoaltemplate(business_unit_id, service_goal_template_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "service_goal_template_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateServiceGoalTemplate",
        "required": "false"
      }
    ],
    "return": "ServiceGoalTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit.\nservice_goal_template_id = 'service_goal_template_id_example' # str | The ID of a service goal template to update\nbody = PureCloudPlatformClientV2.UpdateServiceGoalTemplate() # UpdateServiceGoalTemplate | body (optional)\n\ntry:\n    # Updates a service goal template\n    api_response = api_instance.patch_workforcemanagement_businessunit_servicegoaltemplate(business_unit_id, service_goal_template_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_businessunit_servicegoaltemplate: %s\\n\" % e)"
  },
  "patch_workforcemanagement_businessunit_staffinggroup": {
    "operationId": "patch_workforcemanagement_businessunit_staffinggroup",
    "functionName": "patch_workforcemanagement_businessunit_staffinggroup",
    "signature": "patch_workforcemanagement_businessunit_staffinggroup(business_unit_id, staffing_group_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "staffing_group_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateStaffingGroupRequest",
        "required": "false"
      }
    ],
    "return": "StaffingGroupResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nstaffing_group_id = 'staffing_group_id_example' # str | The ID of the staffing group to update\nbody = PureCloudPlatformClientV2.UpdateStaffingGroupRequest() # UpdateStaffingGroupRequest | body (optional)\n\ntry:\n    # Updates a staffing group\n    api_response = api_instance.patch_workforcemanagement_businessunit_staffinggroup(business_unit_id, staffing_group_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_businessunit_staffinggroup: %s\\n\" % e)"
  },
  "patch_workforcemanagement_businessunit_timeoffplan": {
    "operationId": "patch_workforcemanagement_businessunit_timeoffplan",
    "functionName": "patch_workforcemanagement_businessunit_timeoffplan",
    "signature": "patch_workforcemanagement_businessunit_timeoffplan(business_unit_id, time_off_plan_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_plan_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuUpdateTimeOffPlanRequest",
        "required": "false"
      }
    ],
    "return": "BuTimeOffPlanResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\ntime_off_plan_id = 'time_off_plan_id_example' # str | The ID of the time-off plan to update\nbody = PureCloudPlatformClientV2.BuUpdateTimeOffPlanRequest() # BuUpdateTimeOffPlanRequest | body (optional)\n\ntry:\n    # Updates a time-off plan\n    api_response = api_instance.patch_workforcemanagement_businessunit_timeoffplan(business_unit_id, time_off_plan_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_businessunit_timeoffplan: %s\\n\" % e)"
  },
  "patch_workforcemanagement_managementunit": {
    "operationId": "patch_workforcemanagement_managementunit",
    "functionName": "patch_workforcemanagement_managementunit",
    "signature": "patch_workforcemanagement_managementunit(management_unit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateManagementUnitRequest",
        "required": "false"
      }
    ],
    "return": "ManagementUnit",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nbody = PureCloudPlatformClientV2.UpdateManagementUnitRequest() # UpdateManagementUnitRequest | body (optional)\n\ntry:\n    # Update the requested management unit\n    api_response = api_instance.patch_workforcemanagement_managementunit(management_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_managementunit: %s\\n\" % e)"
  },
  "patch_workforcemanagement_managementunit_agents": {
    "operationId": "patch_workforcemanagement_managementunit_agents",
    "functionName": "patch_workforcemanagement_managementunit_agents",
    "signature": "patch_workforcemanagement_managementunit_agents(management_unit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateMuAgentsRequest",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nbody = PureCloudPlatformClientV2.UpdateMuAgentsRequest() # UpdateMuAgentsRequest | body (optional)\n\ntry:\n    # Update agent configurations\n    api_instance.patch_workforcemanagement_managementunit_agents(management_unit_id, body=body)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_managementunit_agents: %s\\n\" % e)"
  },
  "patch_workforcemanagement_managementunit_timeofflimit": {
    "operationId": "patch_workforcemanagement_managementunit_timeofflimit",
    "functionName": "patch_workforcemanagement_managementunit_timeofflimit",
    "signature": "patch_workforcemanagement_managementunit_timeofflimit(management_unit_id, time_off_limit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_limit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateTimeOffLimitRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffLimit",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit.\ntime_off_limit_id = 'time_off_limit_id_example' # str | The id of time off limit object to update\nbody = PureCloudPlatformClientV2.UpdateTimeOffLimitRequest() # UpdateTimeOffLimitRequest | body (optional)\n\ntry:\n    # Updates a time off limit object.\n    api_response = api_instance.patch_workforcemanagement_managementunit_timeofflimit(management_unit_id, time_off_limit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_managementunit_timeofflimit: %s\\n\" % e)"
  },
  "patch_workforcemanagement_managementunit_timeoffplan": {
    "operationId": "patch_workforcemanagement_managementunit_timeoffplan",
    "functionName": "patch_workforcemanagement_managementunit_timeoffplan",
    "signature": "patch_workforcemanagement_managementunit_timeoffplan(management_unit_id, time_off_plan_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_plan_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateTimeOffPlanRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffPlan",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit\ntime_off_plan_id = 'time_off_plan_id_example' # str | The ID of the time off plan to update\nbody = PureCloudPlatformClientV2.UpdateTimeOffPlanRequest() # UpdateTimeOffPlanRequest | body (optional)\n\ntry:\n    # Updates a time off plan\n    api_response = api_instance.patch_workforcemanagement_managementunit_timeoffplan(management_unit_id, time_off_plan_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_managementunit_timeoffplan: %s\\n\" % e)"
  },
  "patch_workforcemanagement_managementunit_timeoffrequest_user_integrationstatus": {
    "operationId": "patch_workforcemanagement_managementunit_timeoffrequest_user_integrationstatus",
    "functionName": "patch_workforcemanagement_managementunit_timeoffrequest_user_integrationstatus",
    "signature": "patch_workforcemanagement_managementunit_timeoffrequest_user_integrationstatus(management_unit_id, time_off_request_id, user_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_request_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetTimeOffIntegrationStatusRequest",
        "required": "false"
      }
    ],
    "return": "UserTimeOffIntegrationStatusResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit.\ntime_off_request_id = 'time_off_request_id_example' # str | The ID of the time off request.\nuser_id = 'user_id_example' # str | The ID of user to whom the time off request belongs.\nbody = PureCloudPlatformClientV2.SetTimeOffIntegrationStatusRequest() # SetTimeOffIntegrationStatusRequest | body (optional)\n\ntry:\n    # Set integration status for a time off request.\n    api_response = api_instance.patch_workforcemanagement_managementunit_timeoffrequest_user_integrationstatus(management_unit_id, time_off_request_id, user_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_managementunit_timeoffrequest_user_integrationstatus: %s\\n\" % e)"
  },
  "patch_workforcemanagement_managementunit_user_timeoffrequest": {
    "operationId": "patch_workforcemanagement_managementunit_user_timeoffrequest",
    "functionName": "patch_workforcemanagement_managementunit_user_timeoffrequest",
    "signature": "patch_workforcemanagement_managementunit_user_timeoffrequest(management_unit_id, user_id, time_off_request_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_request_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AdminTimeOffRequestPatch",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nuser_id = 'user_id_example' # str | The id of the user the requested time off request belongs to\ntime_off_request_id = 'time_off_request_id_example' # str | The id of the time off request to update\nbody = PureCloudPlatformClientV2.AdminTimeOffRequestPatch() # AdminTimeOffRequestPatch | body (optional)\n\ntry:\n    # Update a time off request\n    api_response = api_instance.patch_workforcemanagement_managementunit_user_timeoffrequest(management_unit_id, user_id, time_off_request_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_managementunit_user_timeoffrequest: %s\\n\" % e)"
  },
  "patch_workforcemanagement_managementunit_week_shifttrade": {
    "operationId": "patch_workforcemanagement_managementunit_week_shifttrade",
    "functionName": "patch_workforcemanagement_managementunit_week_shifttrade",
    "signature": "patch_workforcemanagement_managementunit_week_shifttrade(management_unit_id, week_date_id, trade_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "trade_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchShiftTradeRequest",
        "required": "true"
      }
    ],
    "return": "ShiftTradeResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nweek_date_id = '2013-10-20' # date | The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\ntrade_id = 'trade_id_example' # str | The ID of the shift trade to update\nbody = PureCloudPlatformClientV2.PatchShiftTradeRequest() # PatchShiftTradeRequest | body\n\ntry:\n    # Updates a shift trade. This route can only be called by the initiating agent\n    api_response = api_instance.patch_workforcemanagement_managementunit_week_shifttrade(management_unit_id, week_date_id, trade_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_managementunit_week_shifttrade: %s\\n\" % e)"
  },
  "patch_workforcemanagement_managementunit_workplan": {
    "operationId": "patch_workforcemanagement_managementunit_workplan",
    "functionName": "patch_workforcemanagement_managementunit_workplan",
    "signature": "patch_workforcemanagement_managementunit_workplan(management_unit_id, work_plan_id, validation_mode, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "work_plan_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "validation_mode",
        "type": "str",
        "required": "false"
      },
      {
        "name": "body",
        "type": "WorkPlan",
        "required": "false"
      }
    ],
    "return": "WorkPlan",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nwork_plan_id = 'work_plan_id_example' # str | The ID of the work plan to update\nvalidation_mode = 'validation_mode_example' # str | Allows to update work plan even if validation result is invalid (optional)\nbody = PureCloudPlatformClientV2.WorkPlan() # WorkPlan | body (optional)\n\ntry:\n    # Update a work plan\n    api_response = api_instance.patch_workforcemanagement_managementunit_workplan(management_unit_id, work_plan_id, validation_mode=validation_mode, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_managementunit_workplan: %s\\n\" % e)"
  },
  "patch_workforcemanagement_managementunit_workplanrotation": {
    "operationId": "patch_workforcemanagement_managementunit_workplanrotation",
    "functionName": "patch_workforcemanagement_managementunit_workplanrotation",
    "signature": "patch_workforcemanagement_managementunit_workplanrotation(management_unit_id, work_plan_rotation_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "work_plan_rotation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateWorkPlanRotationRequest",
        "required": "false"
      }
    ],
    "return": "WorkPlanRotationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nwork_plan_rotation_id = 'work_plan_rotation_id_example' # str | The ID of the work plan rotation to update\nbody = PureCloudPlatformClientV2.UpdateWorkPlanRotationRequest() # UpdateWorkPlanRotationRequest | body (optional)\n\ntry:\n    # Update a work plan rotation\n    api_response = api_instance.patch_workforcemanagement_managementunit_workplanrotation(management_unit_id, work_plan_rotation_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_managementunit_workplanrotation: %s\\n\" % e)"
  },
  "patch_workforcemanagement_timeoffrequest": {
    "operationId": "patch_workforcemanagement_timeoffrequest",
    "functionName": "patch_workforcemanagement_timeoffrequest",
    "signature": "patch_workforcemanagement_timeoffrequest(time_off_request_id, body)",
    "parameters": [
      {
        "name": "time_off_request_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AgentTimeOffRequestPatch",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\ntime_off_request_id = 'time_off_request_id_example' # str | The ID of the time off request\nbody = PureCloudPlatformClientV2.AgentTimeOffRequestPatch() # AgentTimeOffRequestPatch | body (optional)\n\ntry:\n    # Update a time off request for the current user\n    api_response = api_instance.patch_workforcemanagement_timeoffrequest(time_off_request_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->patch_workforcemanagement_timeoffrequest: %s\\n\" % e)"
  },
  "post_workforcemanagement_adherence_explanations": {
    "operationId": "post_workforcemanagement_adherence_explanations",
    "functionName": "post_workforcemanagement_adherence_explanations",
    "signature": "post_workforcemanagement_adherence_explanations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AddAdherenceExplanationAgentRequest",
        "required": "true"
      }
    ],
    "return": "AdherenceExplanationAsyncResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.AddAdherenceExplanationAgentRequest() # AddAdherenceExplanationAgentRequest | The request body\n\ntry:\n    # Submit an adherence explanation for the current user\n    api_response = api_instance.post_workforcemanagement_adherence_explanations(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_adherence_explanations: %s\\n\" % e)"
  },
  "post_workforcemanagement_adherence_explanations_query": {
    "operationId": "post_workforcemanagement_adherence_explanations_query",
    "functionName": "post_workforcemanagement_adherence_explanations_query",
    "signature": "post_workforcemanagement_adherence_explanations_query(body, force_async, force_download_service)",
    "parameters": [
      {
        "name": "body",
        "type": "AgentQueryAdherenceExplanationsRequest",
        "required": "true"
      },
      {
        "name": "force_async",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "QueryAdherenceExplanationsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.AgentQueryAdherenceExplanationsRequest() # AgentQueryAdherenceExplanationsRequest | The request body\nforce_async = True # bool | Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)\nforce_download_service = True # bool | Force the result of this operation to be sent via download service. For testing/app development purposes (optional)\n\ntry:\n    # Query adherence explanations for the current user\n    api_response = api_instance.post_workforcemanagement_adherence_explanations_query(body, force_async=force_async, force_download_service=force_download_service)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_adherence_explanations_query: %s\\n\" % e)"
  },
  "post_workforcemanagement_adherence_historical": {
    "operationId": "post_workforcemanagement_adherence_historical",
    "functionName": "post_workforcemanagement_adherence_historical",
    "signature": "post_workforcemanagement_adherence_historical(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WfmHistoricalAdherenceQueryForUsers",
        "required": "false"
      }
    ],
    "return": "WfmHistoricalAdherenceResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.WfmHistoricalAdherenceQueryForUsers() # WfmHistoricalAdherenceQueryForUsers | body (optional)\n\ntry:\n    # Deprecated. Use bulk routes instead (/adherence/historical/bulk)\n    api_response = api_instance.post_workforcemanagement_adherence_historical(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_adherence_historical: %s\\n\" % e)"
  },
  "post_workforcemanagement_adherence_historical_bulk": {
    "operationId": "post_workforcemanagement_adherence_historical_bulk",
    "functionName": "post_workforcemanagement_adherence_historical_bulk",
    "signature": "post_workforcemanagement_adherence_historical_bulk(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WfmHistoricalAdherenceBulkQuery",
        "required": "false"
      }
    ],
    "return": "WfmHistoricalAdherenceBulkResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.WfmHistoricalAdherenceBulkQuery() # WfmHistoricalAdherenceBulkQuery | body (optional)\n\ntry:\n    # Request a historical adherence report in bulk\n    api_response = api_instance.post_workforcemanagement_adherence_historical_bulk(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_adherence_historical_bulk: %s\\n\" % e)"
  },
  "post_workforcemanagement_agent_adherence_explanations": {
    "operationId": "post_workforcemanagement_agent_adherence_explanations",
    "functionName": "post_workforcemanagement_agent_adherence_explanations",
    "signature": "post_workforcemanagement_agent_adherence_explanations(agent_id, body)",
    "parameters": [
      {
        "name": "agent_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AddAdherenceExplanationAdminRequest",
        "required": "true"
      }
    ],
    "return": "AdherenceExplanationAsyncResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nagent_id = 'agent_id_example' # str | The ID of the agent to query\nbody = PureCloudPlatformClientV2.AddAdherenceExplanationAdminRequest() # AddAdherenceExplanationAdminRequest | The request body\n\ntry:\n    # Add an adherence explanation for the requested user\n    api_response = api_instance.post_workforcemanagement_agent_adherence_explanations(agent_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_agent_adherence_explanations: %s\\n\" % e)"
  },
  "post_workforcemanagement_agent_adherence_explanations_query": {
    "operationId": "post_workforcemanagement_agent_adherence_explanations_query",
    "functionName": "post_workforcemanagement_agent_adherence_explanations_query",
    "signature": "post_workforcemanagement_agent_adherence_explanations_query(agent_id, body, force_async, force_download_service)",
    "parameters": [
      {
        "name": "agent_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AgentQueryAdherenceExplanationsRequest",
        "required": "true"
      },
      {
        "name": "force_async",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AgentQueryAdherenceExplanationsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nagent_id = 'agent_id_example' # str | The ID of the agent to query\nbody = PureCloudPlatformClientV2.AgentQueryAdherenceExplanationsRequest() # AgentQueryAdherenceExplanationsRequest | The request body\nforce_async = True # bool | Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)\nforce_download_service = True # bool | Force the result of this operation to be sent via download service. For testing/app development purposes (optional)\n\ntry:\n    # Query adherence explanations for the given agent across a specified range\n    api_response = api_instance.post_workforcemanagement_agent_adherence_explanations_query(agent_id, body, force_async=force_async, force_download_service=force_download_service)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_agent_adherence_explanations_query: %s\\n\" % e)"
  },
  "post_workforcemanagement_agents": {
    "operationId": "post_workforcemanagement_agents",
    "functionName": "post_workforcemanagement_agents",
    "signature": "post_workforcemanagement_agents(body)",
    "parameters": [
      {
        "name": "body",
        "type": "MoveAgentsRequest",
        "required": "false"
      }
    ],
    "return": "MoveAgentsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.MoveAgentsRequest() # MoveAgentsRequest | body (optional)\n\ntry:\n    # Move agents in and out of management unit\n    api_response = api_instance.post_workforcemanagement_agents(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_agents: %s\\n\" % e)"
  },
  "post_workforcemanagement_agents_integrations_hris_query": {
    "operationId": "post_workforcemanagement_agents_integrations_hris_query",
    "functionName": "post_workforcemanagement_agents_integrations_hris_query",
    "signature": "post_workforcemanagement_agents_integrations_hris_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "QueryAgentsIntegrationsRequest",
        "required": "false"
      }
    ],
    "return": "AgentsIntegrationsListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.QueryAgentsIntegrationsRequest() # QueryAgentsIntegrationsRequest | body (optional)\n\ntry:\n    # Query integrations for agents\n    api_response = api_instance.post_workforcemanagement_agents_integrations_hris_query(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_agents_integrations_hris_query: %s\\n\" % e)"
  },
  "post_workforcemanagement_agents_me_possibleworkshifts": {
    "operationId": "post_workforcemanagement_agents_me_possibleworkshifts",
    "functionName": "post_workforcemanagement_agents_me_possibleworkshifts",
    "signature": "post_workforcemanagement_agents_me_possibleworkshifts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AgentPossibleWorkShiftsRequest",
        "required": "true"
      }
    ],
    "return": "AgentPossibleWorkShiftsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.AgentPossibleWorkShiftsRequest() # AgentPossibleWorkShiftsRequest | body\n\ntry:\n    # Get agent possible work shifts for requested time frame\n    api_response = api_instance.post_workforcemanagement_agents_me_possibleworkshifts(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_agents_me_possibleworkshifts: %s\\n\" % e)"
  },
  "post_workforcemanagement_agentschedules_mine": {
    "operationId": "post_workforcemanagement_agentschedules_mine",
    "functionName": "post_workforcemanagement_agentschedules_mine",
    "signature": "post_workforcemanagement_agentschedules_mine(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BuGetCurrentAgentScheduleRequest",
        "required": "false"
      }
    ],
    "return": "BuCurrentAgentScheduleSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.BuGetCurrentAgentScheduleRequest() # BuGetCurrentAgentScheduleRequest | body (optional)\n\ntry:\n    # Get published schedule for the current user\n    api_response = api_instance.post_workforcemanagement_agentschedules_mine(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_agentschedules_mine: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_activitycodes": {
    "operationId": "post_workforcemanagement_businessunit_activitycodes",
    "functionName": "post_workforcemanagement_businessunit_activitycodes",
    "signature": "post_workforcemanagement_businessunit_activitycodes(business_unit_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateActivityCodeRequest",
        "required": "false"
      }
    ],
    "return": "BusinessUnitActivityCode",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\nbody = PureCloudPlatformClientV2.CreateActivityCodeRequest() # CreateActivityCodeRequest | body (optional)\n\ntry:\n    # Create a new activity code\n    api_response = api_instance.post_workforcemanagement_businessunit_activitycodes(business_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_activitycodes: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_adherence_explanations_query": {
    "operationId": "post_workforcemanagement_businessunit_adherence_explanations_query",
    "functionName": "post_workforcemanagement_businessunit_adherence_explanations_query",
    "signature": "post_workforcemanagement_businessunit_adherence_explanations_query(business_unit_id, body, force_async, force_download_service)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuQueryAdherenceExplanationsRequest",
        "required": "true"
      },
      {
        "name": "force_async",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "BuQueryAdherenceExplanationsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nbody = PureCloudPlatformClientV2.BuQueryAdherenceExplanationsRequest() # BuQueryAdherenceExplanationsRequest | The request body\nforce_async = True # bool | Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)\nforce_download_service = True # bool | Force the result of this operation to be sent via download service. For testing/app development purposes (optional)\n\ntry:\n    # Query adherence explanations across an entire business unit for the requested period\n    api_response = api_instance.post_workforcemanagement_businessunit_adherence_explanations_query(business_unit_id, body, force_async=force_async, force_download_service=force_download_service)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_adherence_explanations_query: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_agentschedules_search": {
    "operationId": "post_workforcemanagement_businessunit_agentschedules_search",
    "functionName": "post_workforcemanagement_businessunit_agentschedules_search",
    "signature": "post_workforcemanagement_businessunit_agentschedules_search(business_unit_id, force_async, force_download_service, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force_async",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "BuSearchAgentSchedulesRequest",
        "required": "false"
      }
    ],
    "return": "BuAsyncAgentSchedulesSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nforce_async = True # bool | Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)\nforce_download_service = True # bool | Force the result of this operation to be sent via download service. For testing/app development purposes (optional)\nbody = PureCloudPlatformClientV2.BuSearchAgentSchedulesRequest() # BuSearchAgentSchedulesRequest | body (optional)\n\ntry:\n    # Search published schedules\n    api_response = api_instance.post_workforcemanagement_businessunit_agentschedules_search(business_unit_id, force_async=force_async, force_download_service=force_download_service, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_agentschedules_search: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_intraday": {
    "operationId": "post_workforcemanagement_businessunit_intraday",
    "functionName": "post_workforcemanagement_businessunit_intraday",
    "signature": "post_workforcemanagement_businessunit_intraday(business_unit_id, force_async, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force_async",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "IntradayPlanningGroupRequest",
        "required": "false"
      }
    ],
    "return": "AsyncIntradayResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nforce_async = True # bool | Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional)\nbody = PureCloudPlatformClientV2.IntradayPlanningGroupRequest() # IntradayPlanningGroupRequest | body (optional)\n\ntry:\n    # Get intraday data for the given date for the requested planningGroupIds\n    api_response = api_instance.post_workforcemanagement_businessunit_intraday(business_unit_id, force_async=force_async, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_intraday: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_planninggroups": {
    "operationId": "post_workforcemanagement_businessunit_planninggroups",
    "functionName": "post_workforcemanagement_businessunit_planninggroups",
    "signature": "post_workforcemanagement_businessunit_planninggroups(business_unit_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreatePlanningGroupRequest",
        "required": "false"
      }
    ],
    "return": "PlanningGroup",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit.\nbody = PureCloudPlatformClientV2.CreatePlanningGroupRequest() # CreatePlanningGroupRequest | body (optional)\n\ntry:\n    # Adds a new planning group\n    api_response = api_instance.post_workforcemanagement_businessunit_planninggroups(business_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_planninggroups: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_servicegoaltemplates": {
    "operationId": "post_workforcemanagement_businessunit_servicegoaltemplates",
    "functionName": "post_workforcemanagement_businessunit_servicegoaltemplates",
    "signature": "post_workforcemanagement_businessunit_servicegoaltemplates(business_unit_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateServiceGoalTemplate",
        "required": "false"
      }
    ],
    "return": "ServiceGoalTemplate",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit.\nbody = PureCloudPlatformClientV2.CreateServiceGoalTemplate() # CreateServiceGoalTemplate | body (optional)\n\ntry:\n    # Adds a new service goal template\n    api_response = api_instance.post_workforcemanagement_businessunit_servicegoaltemplates(business_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_servicegoaltemplates: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_staffinggroups": {
    "operationId": "post_workforcemanagement_businessunit_staffinggroups",
    "functionName": "post_workforcemanagement_businessunit_staffinggroups",
    "signature": "post_workforcemanagement_businessunit_staffinggroups(business_unit_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateStaffingGroupRequest",
        "required": "false"
      }
    ],
    "return": "StaffingGroupResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nbody = PureCloudPlatformClientV2.CreateStaffingGroupRequest() # CreateStaffingGroupRequest | body (optional)\n\ntry:\n    # Creates a new staffing group\n    api_response = api_instance.post_workforcemanagement_businessunit_staffinggroups(business_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_staffinggroups: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_staffinggroups_query": {
    "operationId": "post_workforcemanagement_businessunit_staffinggroups_query",
    "functionName": "post_workforcemanagement_businessunit_staffinggroups_query",
    "signature": "post_workforcemanagement_businessunit_staffinggroups_query(business_unit_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "QueryUserStaffingGroupListRequest",
        "required": "false"
      }
    ],
    "return": "UserStaffingGroupListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nbody = PureCloudPlatformClientV2.QueryUserStaffingGroupListRequest() # QueryUserStaffingGroupListRequest | body (optional)\n\ntry:\n    # Gets staffing group associations for a list of user IDs\n    api_response = api_instance.post_workforcemanagement_businessunit_staffinggroups_query(business_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_staffinggroups_query: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_timeofflimits": {
    "operationId": "post_workforcemanagement_businessunit_timeofflimits",
    "functionName": "post_workforcemanagement_businessunit_timeofflimits",
    "signature": "post_workforcemanagement_businessunit_timeofflimits(business_unit_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuCreateTimeOffLimitRequest",
        "required": "false"
      }
    ],
    "return": "BuTimeOffLimitResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nbody = PureCloudPlatformClientV2.BuCreateTimeOffLimitRequest() # BuCreateTimeOffLimitRequest | body (optional)\n\ntry:\n    # Creates a new time-off limit object\n    api_response = api_instance.post_workforcemanagement_businessunit_timeofflimits(business_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_timeofflimits: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_timeofflimits_values_query": {
    "operationId": "post_workforcemanagement_businessunit_timeofflimits_values_query",
    "functionName": "post_workforcemanagement_businessunit_timeofflimits_values_query",
    "signature": "post_workforcemanagement_businessunit_timeofflimits_values_query(business_unit_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "QueryTimeOffLimitValuesRequest",
        "required": "false"
      }
    ],
    "return": "BuTimeOffLimitValuesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nbody = PureCloudPlatformClientV2.QueryTimeOffLimitValuesRequest() # QueryTimeOffLimitValuesRequest | body (optional)\n\ntry:\n    # Retrieves time-off limit related values based on a given set of filters.\n    api_response = api_instance.post_workforcemanagement_businessunit_timeofflimits_values_query(business_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_timeofflimits_values_query: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_timeoffplans": {
    "operationId": "post_workforcemanagement_businessunit_timeoffplans",
    "functionName": "post_workforcemanagement_businessunit_timeoffplans",
    "signature": "post_workforcemanagement_businessunit_timeoffplans(business_unit_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuCreateTimeOffPlanRequest",
        "required": "false"
      }
    ],
    "return": "BuTimeOffPlanResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nbody = PureCloudPlatformClientV2.BuCreateTimeOffPlanRequest() # BuCreateTimeOffPlanRequest | body (optional)\n\ntry:\n    # Creates a new time-off plan\n    api_response = api_instance.post_workforcemanagement_businessunit_timeoffplans(business_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_timeoffplans: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_schedule_agentschedules_query": {
    "operationId": "post_workforcemanagement_businessunit_week_schedule_agentschedules_query",
    "functionName": "post_workforcemanagement_businessunit_week_schedule_agentschedules_query",
    "signature": "post_workforcemanagement_businessunit_week_schedule_agentschedules_query(business_unit_id, week_id, schedule_id, body, force_async, force_download_service)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuQueryAgentSchedulesRequest",
        "required": "true"
      },
      {
        "name": "force_async",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "BuAsyncAgentSchedulesQueryResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nschedule_id = 'schedule_id_example' # str | The ID of the schedule\nbody = PureCloudPlatformClientV2.BuQueryAgentSchedulesRequest() # BuQueryAgentSchedulesRequest | body\nforce_async = True # bool | Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)\nforce_download_service = True # bool | Force the result of this operation to be sent via download service. For testing/app development purposes (optional)\n\ntry:\n    # Loads agent schedule data from the schedule. Used in combination with the metadata route\n    api_response = api_instance.post_workforcemanagement_businessunit_week_schedule_agentschedules_query(business_unit_id, week_id, schedule_id, body, force_async=force_async, force_download_service=force_download_service)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_schedule_agentschedules_query: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_schedule_copy": {
    "operationId": "post_workforcemanagement_businessunit_week_schedule_copy",
    "functionName": "post_workforcemanagement_businessunit_week_schedule_copy",
    "signature": "post_workforcemanagement_businessunit_week_schedule_copy(business_unit_id, week_id, schedule_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuCopyScheduleRequest",
        "required": "true"
      }
    ],
    "return": "BuAsyncScheduleResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nschedule_id = 'schedule_id_example' # str | The ID of the schedule to copy\nbody = PureCloudPlatformClientV2.BuCopyScheduleRequest() # BuCopyScheduleRequest | body\n\ntry:\n    # Copy a schedule\n    api_response = api_instance.post_workforcemanagement_businessunit_week_schedule_copy(business_unit_id, week_id, schedule_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_schedule_copy: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculations": {
    "operationId": "post_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculations",
    "functionName": "post_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculations",
    "signature": "post_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculations(business_unit_id, week_id, schedule_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WfmProcessUploadRequest",
        "required": "false"
      }
    ],
    "return": "PerformancePredictionRecalculationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the performance prediction belongs\nweek_id = 'week_id_example' # str | First day of schedule week in yyyy-MM-dd format\nschedule_id = 'schedule_id_example' # str | The ID of the schedule the performance prediction belongs to\nbody = PureCloudPlatformClientV2.WfmProcessUploadRequest() # WfmProcessUploadRequest | body (optional)\n\ntry:\n    # Request a daily recalculation of the performance prediction for the associated schedule\n    api_response = api_instance.post_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculations(business_unit_id, week_id, schedule_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculations: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculations_uploadurl": {
    "operationId": "post_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculations_uploadurl",
    "functionName": "post_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculations_uploadurl",
    "signature": "post_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculations_uploadurl(business_unit_id, week_id, schedule_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UploadUrlRequestBody",
        "required": "false"
      }
    ],
    "return": "PerformancePredictionRecalculationUploadResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the performance prediction belongs\nweek_id = 'week_id_example' # str | First day of schedule week in yyyy-MM-dd format\nschedule_id = 'schedule_id_example' # str | The ID of the schedule the performance prediction belongs to\nbody = PureCloudPlatformClientV2.UploadUrlRequestBody() # UploadUrlRequestBody | body (optional)\n\ntry:\n    # Upload daily activity changes to be able to request a performance prediction recalculation\n    api_response = api_instance.post_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculations_uploadurl(business_unit_id, week_id, schedule_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_schedule_performancepredictions_recalculations_uploadurl: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_schedule_reschedule": {
    "operationId": "post_workforcemanagement_businessunit_week_schedule_reschedule",
    "functionName": "post_workforcemanagement_businessunit_week_schedule_reschedule",
    "signature": "post_workforcemanagement_businessunit_week_schedule_reschedule(business_unit_id, week_id, schedule_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuRescheduleRequest",
        "required": "true"
      }
    ],
    "return": "BuAsyncScheduleRunResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nschedule_id = 'schedule_id_example' # str | The ID of the schedule\nbody = PureCloudPlatformClientV2.BuRescheduleRequest() # BuRescheduleRequest | body\n\ntry:\n    # Start a rescheduling run\n    api_response = api_instance.post_workforcemanagement_businessunit_week_schedule_reschedule(business_unit_id, week_id, schedule_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_schedule_reschedule: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_schedule_update": {
    "operationId": "post_workforcemanagement_businessunit_week_schedule_update",
    "functionName": "post_workforcemanagement_businessunit_week_schedule_update",
    "signature": "post_workforcemanagement_businessunit_week_schedule_update(business_unit_id, week_id, schedule_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ProcessScheduleUpdateUploadRequest",
        "required": "true"
      }
    ],
    "return": "BuAsyncScheduleResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nschedule_id = 'schedule_id_example' # str | The ID of the schedule\nbody = PureCloudPlatformClientV2.ProcessScheduleUpdateUploadRequest() # ProcessScheduleUpdateUploadRequest | body\n\ntry:\n    # Starts processing a schedule update\n    api_response = api_instance.post_workforcemanagement_businessunit_week_schedule_update(business_unit_id, week_id, schedule_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_schedule_update: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_schedule_update_uploadurl": {
    "operationId": "post_workforcemanagement_businessunit_week_schedule_update_uploadurl",
    "functionName": "post_workforcemanagement_businessunit_week_schedule_update_uploadurl",
    "signature": "post_workforcemanagement_businessunit_week_schedule_update_uploadurl(business_unit_id, week_id, schedule_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "schedule_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UploadUrlRequestBody",
        "required": "true"
      }
    ],
    "return": "UpdateScheduleUploadResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nschedule_id = 'schedule_id_example' # str | The ID of the schedule\nbody = PureCloudPlatformClientV2.UploadUrlRequestBody() # UploadUrlRequestBody | body\n\ntry:\n    # Creates a signed upload URL for updating a schedule\n    api_response = api_instance.post_workforcemanagement_businessunit_week_schedule_update_uploadurl(business_unit_id, week_id, schedule_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_schedule_update_uploadurl: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_schedules": {
    "operationId": "post_workforcemanagement_businessunit_week_schedules",
    "functionName": "post_workforcemanagement_businessunit_week_schedules",
    "signature": "post_workforcemanagement_businessunit_week_schedules(business_unit_id, week_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuCreateBlankScheduleRequest",
        "required": "true"
      }
    ],
    "return": "BuScheduleMetadata",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nbody = PureCloudPlatformClientV2.BuCreateBlankScheduleRequest() # BuCreateBlankScheduleRequest | body\n\ntry:\n    # Create a blank schedule\n    api_response = api_instance.post_workforcemanagement_businessunit_week_schedules(business_unit_id, week_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_schedules: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_schedules_generate": {
    "operationId": "post_workforcemanagement_businessunit_week_schedules_generate",
    "functionName": "post_workforcemanagement_businessunit_week_schedules_generate",
    "signature": "post_workforcemanagement_businessunit_week_schedules_generate(business_unit_id, week_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuGenerateScheduleRequest",
        "required": "true"
      }
    ],
    "return": "BuAsyncScheduleRunResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nbody = PureCloudPlatformClientV2.BuGenerateScheduleRequest() # BuGenerateScheduleRequest | body\n\ntry:\n    # Generate a schedule\n    api_response = api_instance.post_workforcemanagement_businessunit_week_schedules_generate(business_unit_id, week_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_schedules_generate: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_schedules_import": {
    "operationId": "post_workforcemanagement_businessunit_week_schedules_import",
    "functionName": "post_workforcemanagement_businessunit_week_schedules_import",
    "signature": "post_workforcemanagement_businessunit_week_schedules_import(business_unit_id, week_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WfmProcessUploadRequest",
        "required": "true"
      }
    ],
    "return": "ScheduleUploadProcessingResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nbody = PureCloudPlatformClientV2.WfmProcessUploadRequest() # WfmProcessUploadRequest | \n\ntry:\n    # Starts processing a schedule import\n    api_response = api_instance.post_workforcemanagement_businessunit_week_schedules_import(business_unit_id, week_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_schedules_import: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_schedules_import_uploadurl": {
    "operationId": "post_workforcemanagement_businessunit_week_schedules_import_uploadurl",
    "functionName": "post_workforcemanagement_businessunit_week_schedules_import_uploadurl",
    "signature": "post_workforcemanagement_businessunit_week_schedules_import_uploadurl(business_unit_id, week_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UploadUrlRequestBody",
        "required": "true"
      }
    ],
    "return": "ImportScheduleUploadResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\nweek_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nbody = PureCloudPlatformClientV2.UploadUrlRequestBody() # UploadUrlRequestBody | body\n\ntry:\n    # Creates a signed upload URL for importing a schedule\n    api_response = api_instance.post_workforcemanagement_businessunit_week_schedules_import_uploadurl(business_unit_id, week_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_schedules_import_uploadurl: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_shorttermforecast_copy": {
    "operationId": "post_workforcemanagement_businessunit_week_shorttermforecast_copy",
    "functionName": "post_workforcemanagement_businessunit_week_shorttermforecast_copy",
    "signature": "post_workforcemanagement_businessunit_week_shorttermforecast_copy(business_unit_id, week_date_id, forecast_id, body, force_async)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "forecast_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CopyBuForecastRequest",
        "required": "true"
      },
      {
        "name": "force_async",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AsyncForecastOperationResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the forecast belongs\nweek_date_id = '2013-10-20' # date | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nforecast_id = 'forecast_id_example' # str | The ID of the forecast to copy\nbody = PureCloudPlatformClientV2.CopyBuForecastRequest() # CopyBuForecastRequest | body\nforce_async = True # bool | Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional)\n\ntry:\n    # Copy a short term forecast\n    api_response = api_instance.post_workforcemanagement_businessunit_week_shorttermforecast_copy(business_unit_id, week_date_id, forecast_id, body, force_async=force_async)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_shorttermforecast_copy: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_shorttermforecasts_generate": {
    "operationId": "post_workforcemanagement_businessunit_week_shorttermforecasts_generate",
    "functionName": "post_workforcemanagement_businessunit_week_shorttermforecasts_generate",
    "signature": "post_workforcemanagement_businessunit_week_shorttermforecasts_generate(business_unit_id, week_date_id, body, force_async)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "body",
        "type": "GenerateBuForecastRequest",
        "required": "true"
      },
      {
        "name": "force_async",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "AsyncForecastOperationResult",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the forecast belongs\nweek_date_id = '2013-10-20' # date | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nbody = PureCloudPlatformClientV2.GenerateBuForecastRequest() # GenerateBuForecastRequest | body\nforce_async = True # bool | Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional)\n\ntry:\n    # Generate a short term forecast\n    api_response = api_instance.post_workforcemanagement_businessunit_week_shorttermforecasts_generate(business_unit_id, week_date_id, body, force_async=force_async)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_shorttermforecasts_generate: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_shorttermforecasts_import": {
    "operationId": "post_workforcemanagement_businessunit_week_shorttermforecasts_import",
    "functionName": "post_workforcemanagement_businessunit_week_shorttermforecasts_import",
    "signature": "post_workforcemanagement_businessunit_week_shorttermforecasts_import(business_unit_id, week_date_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WfmProcessUploadRequest",
        "required": "true"
      }
    ],
    "return": "ImportForecastResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the forecast belongs\nweek_date_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nbody = PureCloudPlatformClientV2.WfmProcessUploadRequest() # WfmProcessUploadRequest | body\n\ntry:\n    # Starts importing the uploaded short term forecast\n    api_response = api_instance.post_workforcemanagement_businessunit_week_shorttermforecasts_import(business_unit_id, week_date_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_shorttermforecasts_import: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunit_week_shorttermforecasts_import_uploadurl": {
    "operationId": "post_workforcemanagement_businessunit_week_shorttermforecasts_import_uploadurl",
    "functionName": "post_workforcemanagement_businessunit_week_shorttermforecasts_import_uploadurl",
    "signature": "post_workforcemanagement_businessunit_week_shorttermforecasts_import_uploadurl(business_unit_id, week_date_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UploadUrlRequestBody",
        "required": "true"
      }
    ],
    "return": "ImportForecastUploadResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit to which the forecast belongs\nweek_date_id = '2013-10-20' # date | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nbody = PureCloudPlatformClientV2.UploadUrlRequestBody() # UploadUrlRequestBody | body\n\ntry:\n    # Creates a signed upload URL for importing a short term forecast\n    api_response = api_instance.post_workforcemanagement_businessunit_week_shorttermforecasts_import_uploadurl(business_unit_id, week_date_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunit_week_shorttermforecasts_import_uploadurl: %s\\n\" % e)"
  },
  "post_workforcemanagement_businessunits": {
    "operationId": "post_workforcemanagement_businessunits",
    "functionName": "post_workforcemanagement_businessunits",
    "signature": "post_workforcemanagement_businessunits(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateBusinessUnitRequest",
        "required": "false"
      }
    ],
    "return": "BusinessUnitResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.CreateBusinessUnitRequest() # CreateBusinessUnitRequest | body (optional)\n\ntry:\n    # Add a new business unit\n    api_response = api_instance.post_workforcemanagement_businessunits(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_businessunits: %s\\n\" % e)"
  },
  "post_workforcemanagement_calendar_url_ics": {
    "operationId": "post_workforcemanagement_calendar_url_ics",
    "functionName": "post_workforcemanagement_calendar_url_ics",
    "signature": "post_workforcemanagement_calendar_url_ics(language)",
    "parameters": [
      {
        "name": "language",
        "type": "str",
        "required": "false"
      }
    ],
    "return": "CalendarUrlResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nlanguage = ''en-US'' # str | A language tag (which is sometimes referred to as a \\\"locale identifier\\\") to use to localize default activity code names in the ics-formatted calendar (optional) (default to 'en-US')\n\ntry:\n    # Create a newly generated calendar link for the current user; if the current user has previously generated one, the generated link will be returned\n    api_response = api_instance.post_workforcemanagement_calendar_url_ics(language=language)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_calendar_url_ics: %s\\n\" % e)"
  },
  "post_workforcemanagement_historicaldata_deletejob": {
    "operationId": "post_workforcemanagement_historicaldata_deletejob",
    "functionName": "post_workforcemanagement_historicaldata_deletejob",
    "signature": "post_workforcemanagement_historicaldata_deletejob()",
    "return": "HistoricalImportDeleteJobResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\n\ntry:\n    # Delete the entries of the historical data imports in the organization\n    api_response = api_instance.post_workforcemanagement_historicaldata_deletejob()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_historicaldata_deletejob: %s\\n\" % e)"
  },
  "post_workforcemanagement_historicaldata_validate": {
    "operationId": "post_workforcemanagement_historicaldata_validate",
    "functionName": "post_workforcemanagement_historicaldata_validate",
    "signature": "post_workforcemanagement_historicaldata_validate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ValidationServiceRequest",
        "required": "false"
      }
    ],
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.ValidationServiceRequest() # ValidationServiceRequest | body (optional)\n\ntry:\n    # Trigger validation process for historical import\n    api_instance.post_workforcemanagement_historicaldata_validate(body=body)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_historicaldata_validate: %s\\n\" % e)"
  },
  "post_workforcemanagement_integrations_hri_timeofftypes_jobs": {
    "operationId": "post_workforcemanagement_integrations_hri_timeofftypes_jobs",
    "functionName": "post_workforcemanagement_integrations_hri_timeofftypes_jobs",
    "signature": "post_workforcemanagement_integrations_hri_timeofftypes_jobs(hris_integration_id)",
    "parameters": [
      {
        "name": "hris_integration_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "HrisTimeOffTypesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nhris_integration_id = 'hris_integration_id_example' # str | The ID of the HRIS integration for which time off types are queried.\n\ntry:\n    # Get list of time off types configured in integration\n    api_response = api_instance.post_workforcemanagement_integrations_hri_timeofftypes_jobs(hris_integration_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_integrations_hri_timeofftypes_jobs: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_agentschedules_search": {
    "operationId": "post_workforcemanagement_managementunit_agentschedules_search",
    "functionName": "post_workforcemanagement_managementunit_agentschedules_search",
    "signature": "post_workforcemanagement_managementunit_agentschedules_search(management_unit_id, force_async, force_download_service, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force_async",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "BuSearchAgentSchedulesRequest",
        "required": "false"
      }
    ],
    "return": "BuAsyncAgentSchedulesSearchResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nforce_async = True # bool | Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional)\nforce_download_service = True # bool | Force the result of this operation to be sent via download service. For testing/app development purposes (optional)\nbody = PureCloudPlatformClientV2.BuSearchAgentSchedulesRequest() # BuSearchAgentSchedulesRequest | body (optional)\n\ntry:\n    # Query published schedules for given given time range for set of users\n    api_response = api_instance.post_workforcemanagement_managementunit_agentschedules_search(management_unit_id, force_async=force_async, force_download_service=force_download_service, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_agentschedules_search: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_historicaladherencequery": {
    "operationId": "post_workforcemanagement_managementunit_historicaladherencequery",
    "functionName": "post_workforcemanagement_managementunit_historicaladherencequery",
    "signature": "post_workforcemanagement_managementunit_historicaladherencequery(management_unit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WfmHistoricalAdherenceQuery",
        "required": "false"
      }
    ],
    "return": "WfmHistoricalAdherenceResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit\nbody = PureCloudPlatformClientV2.WfmHistoricalAdherenceQuery() # WfmHistoricalAdherenceQuery | body (optional)\n\ntry:\n    # Request a historical adherence report\n    api_response = api_instance.post_workforcemanagement_managementunit_historicaladherencequery(management_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_historicaladherencequery: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_move": {
    "operationId": "post_workforcemanagement_managementunit_move",
    "functionName": "post_workforcemanagement_managementunit_move",
    "signature": "post_workforcemanagement_managementunit_move(management_unit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MoveManagementUnitRequest",
        "required": "false"
      }
    ],
    "return": "MoveManagementUnitResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nbody = PureCloudPlatformClientV2.MoveManagementUnitRequest() # MoveManagementUnitRequest | body (optional)\n\ntry:\n    # Move the requested management unit to a new business unit\n    api_response = api_instance.post_workforcemanagement_managementunit_move(management_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_move: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_schedules_search": {
    "operationId": "post_workforcemanagement_managementunit_schedules_search",
    "functionName": "post_workforcemanagement_managementunit_schedules_search",
    "signature": "post_workforcemanagement_managementunit_schedules_search(management_unit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserListScheduleRequestBody",
        "required": "false"
      }
    ],
    "return": "UserScheduleContainer",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nbody = PureCloudPlatformClientV2.UserListScheduleRequestBody() # UserListScheduleRequestBody | body (optional)\n\ntry:\n    # Query published schedules for given given time range for set of users\n    api_response = api_instance.post_workforcemanagement_managementunit_schedules_search(management_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_schedules_search: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_shrinkage_jobs": {
    "operationId": "post_workforcemanagement_managementunit_shrinkage_jobs",
    "functionName": "post_workforcemanagement_managementunit_shrinkage_jobs",
    "signature": "post_workforcemanagement_managementunit_shrinkage_jobs(management_unit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WfmHistoricalShrinkageRequest",
        "required": "false"
      }
    ],
    "return": "WfmHistoricalShrinkageResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit\nbody = PureCloudPlatformClientV2.WfmHistoricalShrinkageRequest() # WfmHistoricalShrinkageRequest | body (optional)\n\ntry:\n    # Request a historical shrinkage report\n    api_response = api_instance.post_workforcemanagement_managementunit_shrinkage_jobs(management_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_shrinkage_jobs: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_timeofflimits": {
    "operationId": "post_workforcemanagement_managementunit_timeofflimits",
    "functionName": "post_workforcemanagement_managementunit_timeofflimits",
    "signature": "post_workforcemanagement_managementunit_timeofflimits(management_unit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateTimeOffLimitRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffLimit",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit.\nbody = PureCloudPlatformClientV2.CreateTimeOffLimitRequest() # CreateTimeOffLimitRequest | body (optional)\n\ntry:\n    # Creates a new time off limit object under management unit.\n    api_response = api_instance.post_workforcemanagement_managementunit_timeofflimits(management_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_timeofflimits: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_timeofflimits_values_query": {
    "operationId": "post_workforcemanagement_managementunit_timeofflimits_values_query",
    "functionName": "post_workforcemanagement_managementunit_timeofflimits_values_query",
    "signature": "post_workforcemanagement_managementunit_timeofflimits_values_query(management_unit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "QueryTimeOffLimitValuesRequest",
        "required": "false"
      }
    ],
    "return": "QueryTimeOffLimitValuesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit.\nbody = PureCloudPlatformClientV2.QueryTimeOffLimitValuesRequest() # QueryTimeOffLimitValuesRequest | body (optional)\n\ntry:\n    # Retrieves time off limit related values based on a given set of filters.\n    api_response = api_instance.post_workforcemanagement_managementunit_timeofflimits_values_query(management_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_timeofflimits_values_query: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_timeoffplans": {
    "operationId": "post_workforcemanagement_managementunit_timeoffplans",
    "functionName": "post_workforcemanagement_managementunit_timeoffplans",
    "signature": "post_workforcemanagement_managementunit_timeoffplans(management_unit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateTimeOffPlanRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffPlan",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit\nbody = PureCloudPlatformClientV2.CreateTimeOffPlanRequest() # CreateTimeOffPlanRequest | body (optional)\n\ntry:\n    # Creates a new time off plan\n    api_response = api_instance.post_workforcemanagement_managementunit_timeoffplans(management_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_timeoffplans: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_timeoffrequests": {
    "operationId": "post_workforcemanagement_managementunit_timeoffrequests",
    "functionName": "post_workforcemanagement_managementunit_timeoffrequests",
    "signature": "post_workforcemanagement_managementunit_timeoffrequests(management_unit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateAdminTimeOffRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestList",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nbody = PureCloudPlatformClientV2.CreateAdminTimeOffRequest() # CreateAdminTimeOffRequest | body (optional)\n\ntry:\n    # Create a new time off request\n    api_response = api_instance.post_workforcemanagement_managementunit_timeoffrequests(management_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_timeoffrequests: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_timeoffrequests_integrationstatus_query": {
    "operationId": "post_workforcemanagement_managementunit_timeoffrequests_integrationstatus_query",
    "functionName": "post_workforcemanagement_managementunit_timeoffrequests_integrationstatus_query",
    "signature": "post_workforcemanagement_managementunit_timeoffrequests_integrationstatus_query(management_unit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "QueryTimeOffIntegrationStatusRequest",
        "required": "false"
      }
    ],
    "return": "UserTimeOffIntegrationStatusResponseListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit.\nbody = PureCloudPlatformClientV2.QueryTimeOffIntegrationStatusRequest() # QueryTimeOffIntegrationStatusRequest | body (optional)\n\ntry:\n    # Retrieves integration statuses for a list of time off requests\n    api_response = api_instance.post_workforcemanagement_managementunit_timeoffrequests_integrationstatus_query(management_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_timeoffrequests_integrationstatus_query: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_timeoffrequests_query": {
    "operationId": "post_workforcemanagement_managementunit_timeoffrequests_query",
    "functionName": "post_workforcemanagement_managementunit_timeoffrequests_query",
    "signature": "post_workforcemanagement_managementunit_timeoffrequests_query(management_unit_id, force_download_service, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      },
      {
        "name": "body",
        "type": "TimeOffRequestQueryBody",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nforce_download_service = True # bool | Force the result of this operation to be sent via download service. For testing/app development purposes (optional)\nbody = PureCloudPlatformClientV2.TimeOffRequestQueryBody() # TimeOffRequestQueryBody | body (optional)\n\ntry:\n    # Fetches time off requests matching the conditions specified in the request body\n    api_response = api_instance.post_workforcemanagement_managementunit_timeoffrequests_query(management_unit_id, force_download_service=force_download_service, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_timeoffrequests_query: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_timeoffrequests_waitlistpositions_query": {
    "operationId": "post_workforcemanagement_managementunit_timeoffrequests_waitlistpositions_query",
    "functionName": "post_workforcemanagement_managementunit_timeoffrequests_waitlistpositions_query",
    "signature": "post_workforcemanagement_managementunit_timeoffrequests_waitlistpositions_query(management_unit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "QueryWaitlistPositionsRequest",
        "required": "false"
      }
    ],
    "return": "WaitlistPositionListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit.\nbody = PureCloudPlatformClientV2.QueryWaitlistPositionsRequest() # QueryWaitlistPositionsRequest | body (optional)\n\ntry:\n    # Retrieves daily waitlist position for a list of time off requests\n    api_response = api_instance.post_workforcemanagement_managementunit_timeoffrequests_waitlistpositions_query(management_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_timeoffrequests_waitlistpositions_query: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_user_timeoffbalance_jobs": {
    "operationId": "post_workforcemanagement_managementunit_user_timeoffbalance_jobs",
    "functionName": "post_workforcemanagement_managementunit_user_timeoffbalance_jobs",
    "signature": "post_workforcemanagement_managementunit_user_timeoffbalance_jobs(management_unit_id, user_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TimeOffBalanceRequest",
        "required": "true"
      }
    ],
    "return": "TimeOffBalancesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit\nuser_id = 'user_id_example' # str | The ID of the user\nbody = PureCloudPlatformClientV2.TimeOffBalanceRequest() # TimeOffBalanceRequest | The request body\n\ntry:\n    # Query time off balances for a given user for specified activity code and dates\n    api_response = api_instance.post_workforcemanagement_managementunit_user_timeoffbalance_jobs(management_unit_id, user_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_user_timeoffbalance_jobs: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_user_timeoffrequest_timeoffbalance_jobs": {
    "operationId": "post_workforcemanagement_managementunit_user_timeoffrequest_timeoffbalance_jobs",
    "functionName": "post_workforcemanagement_managementunit_user_timeoffrequest_timeoffbalance_jobs",
    "signature": "post_workforcemanagement_managementunit_user_timeoffrequest_timeoffbalance_jobs(management_unit_id, user_id, time_off_request_id)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_request_id",
        "type": "str",
        "required": "true"
      }
    ],
    "return": "TimeOffBalancesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit.\nuser_id = 'user_id_example' # str | The userId to whom the time off request applies.\ntime_off_request_id = 'time_off_request_id_example' # str | The time off request id.\n\ntry:\n    # Query time off balances for dates spanned by a given time off request\n    api_response = api_instance.post_workforcemanagement_managementunit_user_timeoffrequest_timeoffbalance_jobs(management_unit_id, user_id, time_off_request_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_user_timeoffrequest_timeoffbalance_jobs: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_user_timeoffrequests_estimate": {
    "operationId": "post_workforcemanagement_managementunit_user_timeoffrequests_estimate",
    "functionName": "post_workforcemanagement_managementunit_user_timeoffrequests_estimate",
    "signature": "post_workforcemanagement_managementunit_user_timeoffrequests_estimate(management_unit_id, user_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "user_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EstimateAvailableTimeOffRequest",
        "required": "false"
      }
    ],
    "return": "EstimateAvailableTimeOffResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit\nuser_id = 'user_id_example' # str | The id of the user for whom the time off request estimate is requested\nbody = PureCloudPlatformClientV2.EstimateAvailableTimeOffRequest() # EstimateAvailableTimeOffRequest | body (optional)\n\ntry:\n    # Estimates available time off for an agent\n    api_response = api_instance.post_workforcemanagement_managementunit_user_timeoffrequests_estimate(management_unit_id, user_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_user_timeoffrequests_estimate: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_week_shifttrade_match": {
    "operationId": "post_workforcemanagement_managementunit_week_shifttrade_match",
    "functionName": "post_workforcemanagement_managementunit_week_shifttrade_match",
    "signature": "post_workforcemanagement_managementunit_week_shifttrade_match(management_unit_id, week_date_id, trade_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "trade_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MatchShiftTradeRequest",
        "required": "true"
      }
    ],
    "return": "MatchShiftTradeResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nweek_date_id = '2013-10-20' # date | The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\ntrade_id = 'trade_id_example' # str | The ID of the shift trade to update\nbody = PureCloudPlatformClientV2.MatchShiftTradeRequest() # MatchShiftTradeRequest | body\n\ntry:\n    # Matches a shift trade. This route can only be called by the receiving agent\n    api_response = api_instance.post_workforcemanagement_managementunit_week_shifttrade_match(management_unit_id, week_date_id, trade_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_week_shifttrade_match: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_week_shifttrades": {
    "operationId": "post_workforcemanagement_managementunit_week_shifttrades",
    "functionName": "post_workforcemanagement_managementunit_week_shifttrades",
    "signature": "post_workforcemanagement_managementunit_week_shifttrades(management_unit_id, week_date_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AddShiftTradeRequest",
        "required": "true"
      }
    ],
    "return": "ShiftTradeResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nweek_date_id = '2013-10-20' # date | The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nbody = PureCloudPlatformClientV2.AddShiftTradeRequest() # AddShiftTradeRequest | body\n\ntry:\n    # Adds a shift trade\n    api_response = api_instance.post_workforcemanagement_managementunit_week_shifttrades(management_unit_id, week_date_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_week_shifttrades: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_week_shifttrades_search": {
    "operationId": "post_workforcemanagement_managementunit_week_shifttrades_search",
    "functionName": "post_workforcemanagement_managementunit_week_shifttrades_search",
    "signature": "post_workforcemanagement_managementunit_week_shifttrades_search(management_unit_id, week_date_id, body, force_download_service)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SearchShiftTradesRequest",
        "required": "true"
      },
      {
        "name": "force_download_service",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "SearchShiftTradesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nweek_date_id = '2013-10-20' # date | The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nbody = PureCloudPlatformClientV2.SearchShiftTradesRequest() # SearchShiftTradesRequest | body\nforce_download_service = True # bool | Force the result of this operation to be sent via download service. For testing/app development purposes (optional)\n\ntry:\n    # Searches for potential shift trade matches for the current agent\n    api_response = api_instance.post_workforcemanagement_managementunit_week_shifttrades_search(management_unit_id, week_date_id, body, force_download_service=force_download_service)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_week_shifttrades_search: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_week_shifttrades_state_bulk": {
    "operationId": "post_workforcemanagement_managementunit_week_shifttrades_state_bulk",
    "functionName": "post_workforcemanagement_managementunit_week_shifttrades_state_bulk",
    "signature": "post_workforcemanagement_managementunit_week_shifttrades_state_bulk(management_unit_id, week_date_id, body, force_async)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "week_date_id",
        "type": "date",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BulkShiftTradeStateUpdateRequest",
        "required": "true"
      },
      {
        "name": "force_async",
        "type": "bool",
        "required": "false"
      }
    ],
    "return": "BulkUpdateShiftTradeStateResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nweek_date_id = '2013-10-20' # date | The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\nbody = PureCloudPlatformClientV2.BulkShiftTradeStateUpdateRequest() # BulkShiftTradeStateUpdateRequest | body\nforce_async = True # bool | Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional)\n\ntry:\n    # Updates the state of a batch of shift trades\n    api_response = api_instance.post_workforcemanagement_managementunit_week_shifttrades_state_bulk(management_unit_id, week_date_id, body, force_async=force_async)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_week_shifttrades_state_bulk: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_workplan_copy": {
    "operationId": "post_workforcemanagement_managementunit_workplan_copy",
    "functionName": "post_workforcemanagement_managementunit_workplan_copy",
    "signature": "post_workforcemanagement_managementunit_workplan_copy(management_unit_id, work_plan_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "work_plan_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CopyWorkPlan",
        "required": "false"
      }
    ],
    "return": "WorkPlan",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nwork_plan_id = 'work_plan_id_example' # str | The ID of the work plan to create a copy\nbody = PureCloudPlatformClientV2.CopyWorkPlan() # CopyWorkPlan | body (optional)\n\ntry:\n    # Create a copy of work plan\n    api_response = api_instance.post_workforcemanagement_managementunit_workplan_copy(management_unit_id, work_plan_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_workplan_copy: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_workplan_validate": {
    "operationId": "post_workforcemanagement_managementunit_workplan_validate",
    "functionName": "post_workforcemanagement_managementunit_workplan_validate",
    "signature": "post_workforcemanagement_managementunit_workplan_validate(management_unit_id, work_plan_id, expand, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "work_plan_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "list[str]",
        "required": "false"
      },
      {
        "name": "body",
        "type": "WorkPlanValidationRequest",
        "required": "false"
      }
    ],
    "return": "ValidateWorkPlanResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nwork_plan_id = 'work_plan_id_example' # str | The ID of the work plan to validate. For new work plan, use the word 'new' for the ID.\nexpand = ['expand_example'] # list[str] |  (optional)\nbody = PureCloudPlatformClientV2.WorkPlanValidationRequest() # WorkPlanValidationRequest | body (optional)\n\ntry:\n    # Validate Work Plan\n    api_response = api_instance.post_workforcemanagement_managementunit_workplan_validate(management_unit_id, work_plan_id, expand=expand, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_workplan_validate: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_workplanrotation_copy": {
    "operationId": "post_workforcemanagement_managementunit_workplanrotation_copy",
    "functionName": "post_workforcemanagement_managementunit_workplanrotation_copy",
    "signature": "post_workforcemanagement_managementunit_workplanrotation_copy(management_unit_id, work_plan_rotation_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "work_plan_rotation_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CopyWorkPlanRotationRequest",
        "required": "false"
      }
    ],
    "return": "WorkPlanRotationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nwork_plan_rotation_id = 'work_plan_rotation_id_example' # str | The ID of the work plan rotation to create a copy\nbody = PureCloudPlatformClientV2.CopyWorkPlanRotationRequest() # CopyWorkPlanRotationRequest | body (optional)\n\ntry:\n    # Create a copy of work plan rotation\n    api_response = api_instance.post_workforcemanagement_managementunit_workplanrotation_copy(management_unit_id, work_plan_rotation_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_workplanrotation_copy: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_workplanrotations": {
    "operationId": "post_workforcemanagement_managementunit_workplanrotations",
    "functionName": "post_workforcemanagement_managementunit_workplanrotations",
    "signature": "post_workforcemanagement_managementunit_workplanrotations(management_unit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AddWorkPlanRotationRequest",
        "required": "false"
      }
    ],
    "return": "WorkPlanRotationResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nbody = PureCloudPlatformClientV2.AddWorkPlanRotationRequest() # AddWorkPlanRotationRequest | body (optional)\n\ntry:\n    # Create a new work plan rotation\n    api_response = api_instance.post_workforcemanagement_managementunit_workplanrotations(management_unit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_workplanrotations: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunit_workplans": {
    "operationId": "post_workforcemanagement_managementunit_workplans",
    "functionName": "post_workforcemanagement_managementunit_workplans",
    "signature": "post_workforcemanagement_managementunit_workplans(management_unit_id, validation_mode, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "validation_mode",
        "type": "str",
        "required": "false"
      },
      {
        "name": "body",
        "type": "CreateWorkPlan",
        "required": "false"
      }
    ],
    "return": "WorkPlan",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\nvalidation_mode = 'validation_mode_example' # str | Allows to create work plan even if the validation result is invalid (optional)\nbody = PureCloudPlatformClientV2.CreateWorkPlan() # CreateWorkPlan | body (optional)\n\ntry:\n    # Create a new work plan\n    api_response = api_instance.post_workforcemanagement_managementunit_workplans(management_unit_id, validation_mode=validation_mode, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunit_workplans: %s\\n\" % e)"
  },
  "post_workforcemanagement_managementunits": {
    "operationId": "post_workforcemanagement_managementunits",
    "functionName": "post_workforcemanagement_managementunits",
    "signature": "post_workforcemanagement_managementunits(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateManagementUnitApiRequest",
        "required": "false"
      }
    ],
    "return": "ManagementUnit",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.CreateManagementUnitApiRequest() # CreateManagementUnitApiRequest | body (optional)\n\ntry:\n    # Add a management unit\n    api_response = api_instance.post_workforcemanagement_managementunits(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_managementunits: %s\\n\" % e)"
  },
  "post_workforcemanagement_notifications_update": {
    "operationId": "post_workforcemanagement_notifications_update",
    "functionName": "post_workforcemanagement_notifications_update",
    "signature": "post_workforcemanagement_notifications_update(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UpdateNotificationsRequest",
        "required": "false"
      }
    ],
    "return": "UpdateNotificationsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.UpdateNotificationsRequest() # UpdateNotificationsRequest | body (optional)\n\ntry:\n    # Mark a list of notifications as read or unread\n    api_response = api_instance.post_workforcemanagement_notifications_update(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_notifications_update: %s\\n\" % e)"
  },
  "post_workforcemanagement_schedules": {
    "operationId": "post_workforcemanagement_schedules",
    "functionName": "post_workforcemanagement_schedules",
    "signature": "post_workforcemanagement_schedules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CurrentUserScheduleRequestBody",
        "required": "false"
      }
    ],
    "return": "UserScheduleContainer",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.CurrentUserScheduleRequestBody() # CurrentUserScheduleRequestBody | body (optional)\n\ntry:\n    # Get published schedule for the current user\n    api_response = api_instance.post_workforcemanagement_schedules(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_schedules: %s\\n\" % e)"
  },
  "post_workforcemanagement_team_adherence_historical": {
    "operationId": "post_workforcemanagement_team_adherence_historical",
    "functionName": "post_workforcemanagement_team_adherence_historical",
    "signature": "post_workforcemanagement_team_adherence_historical(team_id, body)",
    "parameters": [
      {
        "name": "team_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WfmHistoricalAdherenceQueryForTeams",
        "required": "false"
      }
    ],
    "return": "WfmHistoricalAdherenceResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nteam_id = 'team_id_example' # str | The ID of the team\nbody = PureCloudPlatformClientV2.WfmHistoricalAdherenceQueryForTeams() # WfmHistoricalAdherenceQueryForTeams | body (optional)\n\ntry:\n    # Request a teams historical adherence report\n    api_response = api_instance.post_workforcemanagement_team_adherence_historical(team_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_team_adherence_historical: %s\\n\" % e)"
  },
  "post_workforcemanagement_team_shrinkage_jobs": {
    "operationId": "post_workforcemanagement_team_shrinkage_jobs",
    "functionName": "post_workforcemanagement_team_shrinkage_jobs",
    "signature": "post_workforcemanagement_team_shrinkage_jobs(team_id, body)",
    "parameters": [
      {
        "name": "team_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WfmHistoricalShrinkageTeamsRequest",
        "required": "false"
      }
    ],
    "return": "WfmHistoricalShrinkageResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nteam_id = 'team_id_example' # str | The ID of the team\nbody = PureCloudPlatformClientV2.WfmHistoricalShrinkageTeamsRequest() # WfmHistoricalShrinkageTeamsRequest | body (optional)\n\ntry:\n    # Request a historical shrinkage report\n    api_response = api_instance.post_workforcemanagement_team_shrinkage_jobs(team_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_team_shrinkage_jobs: %s\\n\" % e)"
  },
  "post_workforcemanagement_timeoffbalance_jobs": {
    "operationId": "post_workforcemanagement_timeoffbalance_jobs",
    "functionName": "post_workforcemanagement_timeoffbalance_jobs",
    "signature": "post_workforcemanagement_timeoffbalance_jobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TimeOffBalanceRequest",
        "required": "true"
      }
    ],
    "return": "TimeOffBalancesResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.TimeOffBalanceRequest() # TimeOffBalanceRequest | The request body\n\ntry:\n    # Query time off balances for the current user for specified activity code and dates\n    api_response = api_instance.post_workforcemanagement_timeoffbalance_jobs(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_timeoffbalance_jobs: %s\\n\" % e)"
  },
  "post_workforcemanagement_timeofflimits_available_query": {
    "operationId": "post_workforcemanagement_timeofflimits_available_query",
    "functionName": "post_workforcemanagement_timeofflimits_available_query",
    "signature": "post_workforcemanagement_timeofflimits_available_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AvailableTimeOffRequest",
        "required": "false"
      }
    ],
    "return": "AvailableTimeOffResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.AvailableTimeOffRequest() # AvailableTimeOffRequest | body (optional)\n\ntry:\n    # Queries available time off for the current user\n    api_response = api_instance.post_workforcemanagement_timeofflimits_available_query(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_timeofflimits_available_query: %s\\n\" % e)"
  },
  "post_workforcemanagement_timeoffrequests": {
    "operationId": "post_workforcemanagement_timeoffrequests",
    "functionName": "post_workforcemanagement_timeoffrequests",
    "signature": "post_workforcemanagement_timeoffrequests(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateAgentTimeOffRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.CreateAgentTimeOffRequest() # CreateAgentTimeOffRequest | body (optional)\n\ntry:\n    # Create a time off request for the current user\n    api_response = api_instance.post_workforcemanagement_timeoffrequests(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_timeoffrequests: %s\\n\" % e)"
  },
  "post_workforcemanagement_timeoffrequests_estimate": {
    "operationId": "post_workforcemanagement_timeoffrequests_estimate",
    "functionName": "post_workforcemanagement_timeoffrequests_estimate",
    "signature": "post_workforcemanagement_timeoffrequests_estimate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EstimateAvailableTimeOffRequest",
        "required": "false"
      }
    ],
    "return": "EstimateAvailableTimeOffResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.EstimateAvailableTimeOffRequest() # EstimateAvailableTimeOffRequest | body (optional)\n\ntry:\n    # Estimates available time off for current user\n    api_response = api_instance.post_workforcemanagement_timeoffrequests_estimate(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_timeoffrequests_estimate: %s\\n\" % e)"
  },
  "post_workforcemanagement_timeoffrequests_integrationstatus_query": {
    "operationId": "post_workforcemanagement_timeoffrequests_integrationstatus_query",
    "functionName": "post_workforcemanagement_timeoffrequests_integrationstatus_query",
    "signature": "post_workforcemanagement_timeoffrequests_integrationstatus_query(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CurrentUserTimeOffIntegrationStatusRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffIntegrationStatusResponseListing",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbody = PureCloudPlatformClientV2.CurrentUserTimeOffIntegrationStatusRequest() # CurrentUserTimeOffIntegrationStatusRequest | body (optional)\n\ntry:\n    # Retrieves integration statuses for a list of current user time off requests\n    api_response = api_instance.post_workforcemanagement_timeoffrequests_integrationstatus_query(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->post_workforcemanagement_timeoffrequests_integrationstatus_query: %s\\n\" % e)"
  },
  "put_workforcemanagement_agent_integrations_hris": {
    "operationId": "put_workforcemanagement_agent_integrations_hris",
    "functionName": "put_workforcemanagement_agent_integrations_hris",
    "signature": "put_workforcemanagement_agent_integrations_hris(agent_id, body)",
    "parameters": [
      {
        "name": "agent_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AgentIntegrationsRequest",
        "required": "true"
      }
    ],
    "return": "AgentIntegrationsResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nagent_id = 'agent_id_example' # str | The ID of the agent\nbody = PureCloudPlatformClientV2.AgentIntegrationsRequest() # AgentIntegrationsRequest | body\n\ntry:\n    # Update integrations for agent\n    api_response = api_instance.put_workforcemanagement_agent_integrations_hris(agent_id, body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->put_workforcemanagement_agent_integrations_hris: %s\\n\" % e)"
  },
  "put_workforcemanagement_businessunit_timeofflimit_values": {
    "operationId": "put_workforcemanagement_businessunit_timeofflimit_values",
    "functionName": "put_workforcemanagement_businessunit_timeofflimit_values",
    "signature": "put_workforcemanagement_businessunit_timeofflimit_values(business_unit_id, time_off_limit_id, body)",
    "parameters": [
      {
        "name": "business_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_limit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuSetTimeOffLimitValuesRequest",
        "required": "false"
      }
    ],
    "return": "BuTimeOffLimitResponse",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nbusiness_unit_id = 'business_unit_id_example' # str | The ID of the business unit\ntime_off_limit_id = 'time_off_limit_id_example' # str | The ID of the time-off limit object to set values for\nbody = PureCloudPlatformClientV2.BuSetTimeOffLimitValuesRequest() # BuSetTimeOffLimitValuesRequest | body (optional)\n\ntry:\n    # Sets daily values for a date range of time-off limit object\n    api_response = api_instance.put_workforcemanagement_businessunit_timeofflimit_values(business_unit_id, time_off_limit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->put_workforcemanagement_businessunit_timeofflimit_values: %s\\n\" % e)"
  },
  "put_workforcemanagement_managementunit_timeofflimit_values": {
    "operationId": "put_workforcemanagement_managementunit_timeofflimit_values",
    "functionName": "put_workforcemanagement_managementunit_timeofflimit_values",
    "signature": "put_workforcemanagement_managementunit_timeofflimit_values(management_unit_id, time_off_limit_id, body)",
    "parameters": [
      {
        "name": "management_unit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "time_off_limit_id",
        "type": "str",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetTimeOffLimitValuesRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffLimit",
    "example": "import PureCloudPlatformClientV2\nfrom PureCloudPlatformClientV2.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: PureCloud OAuth\nPureCloudPlatformClientV2.configuration.access_token = 'your_access_token'\n# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)\n\n# create an instance of the API class\napi_instance = PureCloudPlatformClientV2.WorkforceManagementApi();\nmanagement_unit_id = 'management_unit_id_example' # str | The ID of the management unit.\ntime_off_limit_id = 'time_off_limit_id_example' # str | The ID of the time off limit object to set values for\nbody = PureCloudPlatformClientV2.SetTimeOffLimitValuesRequest() # SetTimeOffLimitValuesRequest | body (optional)\n\ntry:\n    # Sets daily values for a date range of time off limit object\n    api_response = api_instance.put_workforcemanagement_managementunit_timeofflimit_values(management_unit_id, time_off_limit_id, body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling WorkforceManagementApi->put_workforcemanagement_managementunit_timeofflimit_values: %s\\n\" % e)"
  }
}