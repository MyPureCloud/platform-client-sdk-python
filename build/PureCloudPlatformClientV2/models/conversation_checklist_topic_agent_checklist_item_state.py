# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from datetime import datetime
from datetime import date
from pprint import pformat
import re
import json

from ..utils import sanitize_for_serialization

# type hinting support
from typing import TYPE_CHECKING
from typing import List
from typing import Dict


class ConversationChecklistTopicAgentChecklistItemState(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self) -> None:
        """
        ConversationChecklistTopicAgentChecklistItemState - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'name': 'str',
            'description': 'str',
            'state_from_model': 'str',
            'state_from_agent': 'str',
            'date_last_modified_by_model': 'datetime',
            'date_last_modified_by_agent': 'datetime',
            'automated_check_enabled': 'bool',
            'important': 'bool',
            'last_modified_in_acw': 'bool'
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'description': 'description',
            'state_from_model': 'stateFromModel',
            'state_from_agent': 'stateFromAgent',
            'date_last_modified_by_model': 'dateLastModifiedByModel',
            'date_last_modified_by_agent': 'dateLastModifiedByAgent',
            'automated_check_enabled': 'automatedCheckEnabled',
            'important': 'important',
            'last_modified_in_acw': 'lastModifiedInAcw'
        }

        self._id = None
        self._name = None
        self._description = None
        self._state_from_model = None
        self._state_from_agent = None
        self._date_last_modified_by_model = None
        self._date_last_modified_by_agent = None
        self._automated_check_enabled = None
        self._important = None
        self._last_modified_in_acw = None

    @property
    def id(self) -> str:
        """
        Gets the id of this ConversationChecklistTopicAgentChecklistItemState.


        :return: The id of this ConversationChecklistTopicAgentChecklistItemState.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str) -> None:
        """
        Sets the id of this ConversationChecklistTopicAgentChecklistItemState.


        :param id: The id of this ConversationChecklistTopicAgentChecklistItemState.
        :type: str
        """
        

        self._id = id

    @property
    def name(self) -> str:
        """
        Gets the name of this ConversationChecklistTopicAgentChecklistItemState.


        :return: The name of this ConversationChecklistTopicAgentChecklistItemState.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str) -> None:
        """
        Sets the name of this ConversationChecklistTopicAgentChecklistItemState.


        :param name: The name of this ConversationChecklistTopicAgentChecklistItemState.
        :type: str
        """
        

        self._name = name

    @property
    def description(self) -> str:
        """
        Gets the description of this ConversationChecklistTopicAgentChecklistItemState.


        :return: The description of this ConversationChecklistTopicAgentChecklistItemState.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str) -> None:
        """
        Sets the description of this ConversationChecklistTopicAgentChecklistItemState.


        :param description: The description of this ConversationChecklistTopicAgentChecklistItemState.
        :type: str
        """
        

        self._description = description

    @property
    def state_from_model(self) -> str:
        """
        Gets the state_from_model of this ConversationChecklistTopicAgentChecklistItemState.


        :return: The state_from_model of this ConversationChecklistTopicAgentChecklistItemState.
        :rtype: str
        """
        return self._state_from_model

    @state_from_model.setter
    def state_from_model(self, state_from_model: str) -> None:
        """
        Sets the state_from_model of this ConversationChecklistTopicAgentChecklistItemState.


        :param state_from_model: The state_from_model of this ConversationChecklistTopicAgentChecklistItemState.
        :type: str
        """
        if isinstance(state_from_model, int):
            state_from_model = str(state_from_model)
        allowed_values = ["Unknown", "Ticked", "Unticked"]
        if state_from_model.lower() not in map(str.lower, allowed_values):
            # print("Invalid value for state_from_model -> " + state_from_model)
            self._state_from_model = "outdated_sdk_version"
        else:
            self._state_from_model = state_from_model

    @property
    def state_from_agent(self) -> str:
        """
        Gets the state_from_agent of this ConversationChecklistTopicAgentChecklistItemState.


        :return: The state_from_agent of this ConversationChecklistTopicAgentChecklistItemState.
        :rtype: str
        """
        return self._state_from_agent

    @state_from_agent.setter
    def state_from_agent(self, state_from_agent: str) -> None:
        """
        Sets the state_from_agent of this ConversationChecklistTopicAgentChecklistItemState.


        :param state_from_agent: The state_from_agent of this ConversationChecklistTopicAgentChecklistItemState.
        :type: str
        """
        if isinstance(state_from_agent, int):
            state_from_agent = str(state_from_agent)
        allowed_values = ["Unknown", "Ticked", "Unticked"]
        if state_from_agent.lower() not in map(str.lower, allowed_values):
            # print("Invalid value for state_from_agent -> " + state_from_agent)
            self._state_from_agent = "outdated_sdk_version"
        else:
            self._state_from_agent = state_from_agent

    @property
    def date_last_modified_by_model(self) -> datetime:
        """
        Gets the date_last_modified_by_model of this ConversationChecklistTopicAgentChecklistItemState.


        :return: The date_last_modified_by_model of this ConversationChecklistTopicAgentChecklistItemState.
        :rtype: datetime
        """
        return self._date_last_modified_by_model

    @date_last_modified_by_model.setter
    def date_last_modified_by_model(self, date_last_modified_by_model: datetime) -> None:
        """
        Sets the date_last_modified_by_model of this ConversationChecklistTopicAgentChecklistItemState.


        :param date_last_modified_by_model: The date_last_modified_by_model of this ConversationChecklistTopicAgentChecklistItemState.
        :type: datetime
        """
        

        self._date_last_modified_by_model = date_last_modified_by_model

    @property
    def date_last_modified_by_agent(self) -> datetime:
        """
        Gets the date_last_modified_by_agent of this ConversationChecklistTopicAgentChecklistItemState.


        :return: The date_last_modified_by_agent of this ConversationChecklistTopicAgentChecklistItemState.
        :rtype: datetime
        """
        return self._date_last_modified_by_agent

    @date_last_modified_by_agent.setter
    def date_last_modified_by_agent(self, date_last_modified_by_agent: datetime) -> None:
        """
        Sets the date_last_modified_by_agent of this ConversationChecklistTopicAgentChecklistItemState.


        :param date_last_modified_by_agent: The date_last_modified_by_agent of this ConversationChecklistTopicAgentChecklistItemState.
        :type: datetime
        """
        

        self._date_last_modified_by_agent = date_last_modified_by_agent

    @property
    def automated_check_enabled(self) -> bool:
        """
        Gets the automated_check_enabled of this ConversationChecklistTopicAgentChecklistItemState.


        :return: The automated_check_enabled of this ConversationChecklistTopicAgentChecklistItemState.
        :rtype: bool
        """
        return self._automated_check_enabled

    @automated_check_enabled.setter
    def automated_check_enabled(self, automated_check_enabled: bool) -> None:
        """
        Sets the automated_check_enabled of this ConversationChecklistTopicAgentChecklistItemState.


        :param automated_check_enabled: The automated_check_enabled of this ConversationChecklistTopicAgentChecklistItemState.
        :type: bool
        """
        

        self._automated_check_enabled = automated_check_enabled

    @property
    def important(self) -> bool:
        """
        Gets the important of this ConversationChecklistTopicAgentChecklistItemState.


        :return: The important of this ConversationChecklistTopicAgentChecklistItemState.
        :rtype: bool
        """
        return self._important

    @important.setter
    def important(self, important: bool) -> None:
        """
        Sets the important of this ConversationChecklistTopicAgentChecklistItemState.


        :param important: The important of this ConversationChecklistTopicAgentChecklistItemState.
        :type: bool
        """
        

        self._important = important

    @property
    def last_modified_in_acw(self) -> bool:
        """
        Gets the last_modified_in_acw of this ConversationChecklistTopicAgentChecklistItemState.


        :return: The last_modified_in_acw of this ConversationChecklistTopicAgentChecklistItemState.
        :rtype: bool
        """
        return self._last_modified_in_acw

    @last_modified_in_acw.setter
    def last_modified_in_acw(self, last_modified_in_acw: bool) -> None:
        """
        Sets the last_modified_in_acw of this ConversationChecklistTopicAgentChecklistItemState.


        :param last_modified_in_acw: The last_modified_in_acw of this ConversationChecklistTopicAgentChecklistItemState.
        :type: bool
        """
        

        self._last_modified_in_acw = last_modified_in_acw

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in self.swagger_types.items():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_json(self):
        """
        Returns the model as raw JSON
        """
        return json.dumps(sanitize_for_serialization(self.to_dict()))

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

