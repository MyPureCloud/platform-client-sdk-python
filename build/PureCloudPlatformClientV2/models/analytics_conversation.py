# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems
import re


class AnalyticsConversation(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        AnalyticsConversation - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'conversation_id': 'str',
            'conversation_start': 'datetime',
            'conversation_end': 'datetime',
            'participants': 'list[AnalyticsParticipant]',
            'evaluations': 'list[AnalyticsEvaluation]',
            'division_ids': 'list[str]'
        }

        self.attribute_map = {
            'conversation_id': 'conversationId',
            'conversation_start': 'conversationStart',
            'conversation_end': 'conversationEnd',
            'participants': 'participants',
            'evaluations': 'evaluations',
            'division_ids': 'divisionIds'
        }

        self._conversation_id = None
        self._conversation_start = None
        self._conversation_end = None
        self._participants = None
        self._evaluations = None
        self._division_ids = None

    @property
    def conversation_id(self):
        """
        Gets the conversation_id of this AnalyticsConversation.
        Unique identifier for the conversation

        :return: The conversation_id of this AnalyticsConversation.
        :rtype: str
        """
        return self._conversation_id

    @conversation_id.setter
    def conversation_id(self, conversation_id):
        """
        Sets the conversation_id of this AnalyticsConversation.
        Unique identifier for the conversation

        :param conversation_id: The conversation_id of this AnalyticsConversation.
        :type: str
        """
        
        self._conversation_id = conversation_id

    @property
    def conversation_start(self):
        """
        Gets the conversation_start of this AnalyticsConversation.
        Date/time the conversation started. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ

        :return: The conversation_start of this AnalyticsConversation.
        :rtype: datetime
        """
        return self._conversation_start

    @conversation_start.setter
    def conversation_start(self, conversation_start):
        """
        Sets the conversation_start of this AnalyticsConversation.
        Date/time the conversation started. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ

        :param conversation_start: The conversation_start of this AnalyticsConversation.
        :type: datetime
        """
        
        self._conversation_start = conversation_start

    @property
    def conversation_end(self):
        """
        Gets the conversation_end of this AnalyticsConversation.
        Date/time the conversation ended. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ

        :return: The conversation_end of this AnalyticsConversation.
        :rtype: datetime
        """
        return self._conversation_end

    @conversation_end.setter
    def conversation_end(self, conversation_end):
        """
        Sets the conversation_end of this AnalyticsConversation.
        Date/time the conversation ended. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ

        :param conversation_end: The conversation_end of this AnalyticsConversation.
        :type: datetime
        """
        
        self._conversation_end = conversation_end

    @property
    def participants(self):
        """
        Gets the participants of this AnalyticsConversation.
        Participants in the conversation

        :return: The participants of this AnalyticsConversation.
        :rtype: list[AnalyticsParticipant]
        """
        return self._participants

    @participants.setter
    def participants(self, participants):
        """
        Sets the participants of this AnalyticsConversation.
        Participants in the conversation

        :param participants: The participants of this AnalyticsConversation.
        :type: list[AnalyticsParticipant]
        """
        
        self._participants = participants

    @property
    def evaluations(self):
        """
        Gets the evaluations of this AnalyticsConversation.
        Evaluations tied to this conversation

        :return: The evaluations of this AnalyticsConversation.
        :rtype: list[AnalyticsEvaluation]
        """
        return self._evaluations

    @evaluations.setter
    def evaluations(self, evaluations):
        """
        Sets the evaluations of this AnalyticsConversation.
        Evaluations tied to this conversation

        :param evaluations: The evaluations of this AnalyticsConversation.
        :type: list[AnalyticsEvaluation]
        """
        
        self._evaluations = evaluations

    @property
    def division_ids(self):
        """
        Gets the division_ids of this AnalyticsConversation.
        Identifiers of divisions associated with this conversation

        :return: The division_ids of this AnalyticsConversation.
        :rtype: list[str]
        """
        return self._division_ids

    @division_ids.setter
    def division_ids(self, division_ids):
        """
        Sets the division_ids of this AnalyticsConversation.
        Identifiers of divisions associated with this conversation

        :param division_ids: The division_ids of this AnalyticsConversation.
        :type: list[str]
        """
        
        self._division_ids = division_ids

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

