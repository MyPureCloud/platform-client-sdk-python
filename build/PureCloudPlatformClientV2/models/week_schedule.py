# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from datetime import datetime
from datetime import date
from pprint import pformat
from six import iteritems
import re
import json

from ..utils import sanitize_for_serialization

# type hinting support
from typing import TYPE_CHECKING
from typing import List
from typing import Dict

if TYPE_CHECKING:
    from . import HeadcountForecast
    from . import ShortTermForecastReference
    from . import UserSchedule
    from . import WeekScheduleGenerationResult
    from . import WfmVersionedEntityMetadata

class WeekSchedule(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self) -> None:
        """
        WeekSchedule - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'self_uri': 'str',
            'week_date': 'str',
            'description': 'str',
            'published': 'bool',
            'generation_results': 'WeekScheduleGenerationResult',
            'short_term_forecast': 'ShortTermForecastReference',
            'metadata': 'WfmVersionedEntityMetadata',
            'user_schedules': 'dict(str, UserSchedule)',
            'headcount_forecast': 'HeadcountForecast',
            'agent_schedules_version': 'int'
        }

        self.attribute_map = {
            'id': 'id',
            'self_uri': 'selfUri',
            'week_date': 'weekDate',
            'description': 'description',
            'published': 'published',
            'generation_results': 'generationResults',
            'short_term_forecast': 'shortTermForecast',
            'metadata': 'metadata',
            'user_schedules': 'userSchedules',
            'headcount_forecast': 'headcountForecast',
            'agent_schedules_version': 'agentSchedulesVersion'
        }

        self._id = None
        self._self_uri = None
        self._week_date = None
        self._description = None
        self._published = None
        self._generation_results = None
        self._short_term_forecast = None
        self._metadata = None
        self._user_schedules = None
        self._headcount_forecast = None
        self._agent_schedules_version = None

    @property
    def id(self) -> str:
        """
        Gets the id of this WeekSchedule.
        The globally unique identifier for the object.

        :return: The id of this WeekSchedule.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str) -> None:
        """
        Sets the id of this WeekSchedule.
        The globally unique identifier for the object.

        :param id: The id of this WeekSchedule.
        :type: str
        """
        

        self._id = id

    @property
    def self_uri(self) -> str:
        """
        Gets the self_uri of this WeekSchedule.
        The URI for this object

        :return: The self_uri of this WeekSchedule.
        :rtype: str
        """
        return self._self_uri

    @self_uri.setter
    def self_uri(self, self_uri: str) -> None:
        """
        Sets the self_uri of this WeekSchedule.
        The URI for this object

        :param self_uri: The self_uri of this WeekSchedule.
        :type: str
        """
        

        self._self_uri = self_uri

    @property
    def week_date(self) -> str:
        """
        Gets the week_date of this WeekSchedule.
        First day of this week schedule in yyyy-MM-dd format

        :return: The week_date of this WeekSchedule.
        :rtype: str
        """
        return self._week_date

    @week_date.setter
    def week_date(self, week_date: str) -> None:
        """
        Sets the week_date of this WeekSchedule.
        First day of this week schedule in yyyy-MM-dd format

        :param week_date: The week_date of this WeekSchedule.
        :type: str
        """
        

        self._week_date = week_date

    @property
    def description(self) -> str:
        """
        Gets the description of this WeekSchedule.
        Description of the week schedule

        :return: The description of this WeekSchedule.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str) -> None:
        """
        Sets the description of this WeekSchedule.
        Description of the week schedule

        :param description: The description of this WeekSchedule.
        :type: str
        """
        

        self._description = description

    @property
    def published(self) -> bool:
        """
        Gets the published of this WeekSchedule.
        Whether the week schedule is published

        :return: The published of this WeekSchedule.
        :rtype: bool
        """
        return self._published

    @published.setter
    def published(self, published: bool) -> None:
        """
        Sets the published of this WeekSchedule.
        Whether the week schedule is published

        :param published: The published of this WeekSchedule.
        :type: bool
        """
        

        self._published = published

    @property
    def generation_results(self) -> 'WeekScheduleGenerationResult':
        """
        Gets the generation_results of this WeekSchedule.
        Summary of the results from the schedule run

        :return: The generation_results of this WeekSchedule.
        :rtype: WeekScheduleGenerationResult
        """
        return self._generation_results

    @generation_results.setter
    def generation_results(self, generation_results: 'WeekScheduleGenerationResult') -> None:
        """
        Sets the generation_results of this WeekSchedule.
        Summary of the results from the schedule run

        :param generation_results: The generation_results of this WeekSchedule.
        :type: WeekScheduleGenerationResult
        """
        

        self._generation_results = generation_results

    @property
    def short_term_forecast(self) -> 'ShortTermForecastReference':
        """
        Gets the short_term_forecast of this WeekSchedule.
        Short term forecast associated with this schedule

        :return: The short_term_forecast of this WeekSchedule.
        :rtype: ShortTermForecastReference
        """
        return self._short_term_forecast

    @short_term_forecast.setter
    def short_term_forecast(self, short_term_forecast: 'ShortTermForecastReference') -> None:
        """
        Sets the short_term_forecast of this WeekSchedule.
        Short term forecast associated with this schedule

        :param short_term_forecast: The short_term_forecast of this WeekSchedule.
        :type: ShortTermForecastReference
        """
        

        self._short_term_forecast = short_term_forecast

    @property
    def metadata(self) -> 'WfmVersionedEntityMetadata':
        """
        Gets the metadata of this WeekSchedule.
        Version metadata for this work plan

        :return: The metadata of this WeekSchedule.
        :rtype: WfmVersionedEntityMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: 'WfmVersionedEntityMetadata') -> None:
        """
        Sets the metadata of this WeekSchedule.
        Version metadata for this work plan

        :param metadata: The metadata of this WeekSchedule.
        :type: WfmVersionedEntityMetadata
        """
        

        self._metadata = metadata

    @property
    def user_schedules(self) -> Dict[str, 'UserSchedule']:
        """
        Gets the user_schedules of this WeekSchedule.
        User schedules in the week

        :return: The user_schedules of this WeekSchedule.
        :rtype: dict(str, UserSchedule)
        """
        return self._user_schedules

    @user_schedules.setter
    def user_schedules(self, user_schedules: Dict[str, 'UserSchedule']) -> None:
        """
        Sets the user_schedules of this WeekSchedule.
        User schedules in the week

        :param user_schedules: The user_schedules of this WeekSchedule.
        :type: dict(str, UserSchedule)
        """
        

        self._user_schedules = user_schedules

    @property
    def headcount_forecast(self) -> 'HeadcountForecast':
        """
        Gets the headcount_forecast of this WeekSchedule.
        Headcount information for the week schedule

        :return: The headcount_forecast of this WeekSchedule.
        :rtype: HeadcountForecast
        """
        return self._headcount_forecast

    @headcount_forecast.setter
    def headcount_forecast(self, headcount_forecast: 'HeadcountForecast') -> None:
        """
        Sets the headcount_forecast of this WeekSchedule.
        Headcount information for the week schedule

        :param headcount_forecast: The headcount_forecast of this WeekSchedule.
        :type: HeadcountForecast
        """
        

        self._headcount_forecast = headcount_forecast

    @property
    def agent_schedules_version(self) -> int:
        """
        Gets the agent_schedules_version of this WeekSchedule.
        Version of agent schedules in the week schedule

        :return: The agent_schedules_version of this WeekSchedule.
        :rtype: int
        """
        return self._agent_schedules_version

    @agent_schedules_version.setter
    def agent_schedules_version(self, agent_schedules_version: int) -> None:
        """
        Sets the agent_schedules_version of this WeekSchedule.
        Version of agent schedules in the week schedule

        :param agent_schedules_version: The agent_schedules_version of this WeekSchedule.
        :type: int
        """
        

        self._agent_schedules_version = agent_schedules_version

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_json(self):
        """
        Returns the model as raw JSON
        """
        return json.dumps(sanitize_for_serialization(self.to_dict()))

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

