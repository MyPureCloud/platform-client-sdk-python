# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems
import re


class WfmMoveAgentsCompleteNotification(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        WfmMoveAgentsCompleteNotification - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'requesting_user': 'DocumentDataV2NotificationWorkspace',
            'destination_management_unit': 'DocumentDataV2NotificationWorkspace',
            'move_agent_results': 'list[WfmMoveAgentsCompleteNotificationMoveAgentResults]'
        }

        self.attribute_map = {
            'requesting_user': 'requestingUser',
            'destination_management_unit': 'destinationManagementUnit',
            'move_agent_results': 'moveAgentResults'
        }

        self._requesting_user = None
        self._destination_management_unit = None
        self._move_agent_results = None

    @property
    def requesting_user(self):
        """
        Gets the requesting_user of this WfmMoveAgentsCompleteNotification.


        :return: The requesting_user of this WfmMoveAgentsCompleteNotification.
        :rtype: DocumentDataV2NotificationWorkspace
        """
        return self._requesting_user

    @requesting_user.setter
    def requesting_user(self, requesting_user):
        """
        Sets the requesting_user of this WfmMoveAgentsCompleteNotification.


        :param requesting_user: The requesting_user of this WfmMoveAgentsCompleteNotification.
        :type: DocumentDataV2NotificationWorkspace
        """
        
        self._requesting_user = requesting_user

    @property
    def destination_management_unit(self):
        """
        Gets the destination_management_unit of this WfmMoveAgentsCompleteNotification.


        :return: The destination_management_unit of this WfmMoveAgentsCompleteNotification.
        :rtype: DocumentDataV2NotificationWorkspace
        """
        return self._destination_management_unit

    @destination_management_unit.setter
    def destination_management_unit(self, destination_management_unit):
        """
        Sets the destination_management_unit of this WfmMoveAgentsCompleteNotification.


        :param destination_management_unit: The destination_management_unit of this WfmMoveAgentsCompleteNotification.
        :type: DocumentDataV2NotificationWorkspace
        """
        
        self._destination_management_unit = destination_management_unit

    @property
    def move_agent_results(self):
        """
        Gets the move_agent_results of this WfmMoveAgentsCompleteNotification.


        :return: The move_agent_results of this WfmMoveAgentsCompleteNotification.
        :rtype: list[WfmMoveAgentsCompleteNotificationMoveAgentResults]
        """
        return self._move_agent_results

    @move_agent_results.setter
    def move_agent_results(self, move_agent_results):
        """
        Sets the move_agent_results of this WfmMoveAgentsCompleteNotification.


        :param move_agent_results: The move_agent_results of this WfmMoveAgentsCompleteNotification.
        :type: list[WfmMoveAgentsCompleteNotificationMoveAgentResults]
        """
        
        self._move_agent_results = move_agent_results

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

