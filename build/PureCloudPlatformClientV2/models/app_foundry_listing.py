# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems
import re


class AppFoundryListing(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        AppFoundryListing - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'name': 'LocalizedField',
            'registry_info': 'AppFoundryListingRegistryInfo',
            'marketing_info': 'MarketingInfo',
            'tagline': 'LocalizedField',
            'brief_description': 'LocalizedField',
            'full_description': 'LocalizedField',
            'platform': 'Platform',
            'company_logo': 'str',
            'app_logo': 'str',
            'company_name': 'LocalizedField',
            'website': 'LocalizedField',
            'screenshots': 'list[str]',
            'video_links': 'list[str]',
            'languages': 'list[str]',
            'vendor_email': 'str',
            'terms_of_service': 'str',
            'help_documentation_url': 'LocalizedField',
            'marketing_url': 'LocalizedField',
            'industries': 'list[str]',
            'categories': 'list[str]',
            'smart_cases': 'list[SmartCase]',
            'pricing': 'list[PricingOption]',
            'self_uri': 'str'
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'registry_info': 'registryInfo',
            'marketing_info': 'marketingInfo',
            'tagline': 'tagline',
            'brief_description': 'briefDescription',
            'full_description': 'fullDescription',
            'platform': 'platform',
            'company_logo': 'companyLogo',
            'app_logo': 'appLogo',
            'company_name': 'companyName',
            'website': 'website',
            'screenshots': 'screenshots',
            'video_links': 'videoLinks',
            'languages': 'languages',
            'vendor_email': 'vendorEmail',
            'terms_of_service': 'termsOfService',
            'help_documentation_url': 'helpDocumentationURL',
            'marketing_url': 'marketingURL',
            'industries': 'industries',
            'categories': 'categories',
            'smart_cases': 'smartCases',
            'pricing': 'pricing',
            'self_uri': 'selfUri'
        }

        self._id = None
        self._name = None
        self._registry_info = None
        self._marketing_info = None
        self._tagline = None
        self._brief_description = None
        self._full_description = None
        self._platform = None
        self._company_logo = None
        self._app_logo = None
        self._company_name = None
        self._website = None
        self._screenshots = None
        self._video_links = None
        self._languages = None
        self._vendor_email = None
        self._terms_of_service = None
        self._help_documentation_url = None
        self._marketing_url = None
        self._industries = None
        self._categories = None
        self._smart_cases = None
        self._pricing = None
        self._self_uri = None

    @property
    def id(self):
        """
        Gets the id of this AppFoundryListing.
        The globally unique identifier for the object.

        :return: The id of this AppFoundryListing.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this AppFoundryListing.
        The globally unique identifier for the object.

        :param id: The id of this AppFoundryListing.
        :type: str
        """
        
        self._id = id

    @property
    def name(self):
        """
        Gets the name of this AppFoundryListing.
        Localized name

        :return: The name of this AppFoundryListing.
        :rtype: LocalizedField
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this AppFoundryListing.
        Localized name

        :param name: The name of this AppFoundryListing.
        :type: LocalizedField
        """
        
        self._name = name

    @property
    def registry_info(self):
        """
        Gets the registry_info of this AppFoundryListing.
        Provides information about the integration implementation

        :return: The registry_info of this AppFoundryListing.
        :rtype: AppFoundryListingRegistryInfo
        """
        return self._registry_info

    @registry_info.setter
    def registry_info(self, registry_info):
        """
        Sets the registry_info of this AppFoundryListing.
        Provides information about the integration implementation

        :param registry_info: The registry_info of this AppFoundryListing.
        :type: AppFoundryListingRegistryInfo
        """
        
        self._registry_info = registry_info

    @property
    def marketing_info(self):
        """
        Gets the marketing_info of this AppFoundryListing.
        Marketing data

        :return: The marketing_info of this AppFoundryListing.
        :rtype: MarketingInfo
        """
        return self._marketing_info

    @marketing_info.setter
    def marketing_info(self, marketing_info):
        """
        Sets the marketing_info of this AppFoundryListing.
        Marketing data

        :param marketing_info: The marketing_info of this AppFoundryListing.
        :type: MarketingInfo
        """
        
        self._marketing_info = marketing_info

    @property
    def tagline(self):
        """
        Gets the tagline of this AppFoundryListing.
        Localized tagline

        :return: The tagline of this AppFoundryListing.
        :rtype: LocalizedField
        """
        return self._tagline

    @tagline.setter
    def tagline(self, tagline):
        """
        Sets the tagline of this AppFoundryListing.
        Localized tagline

        :param tagline: The tagline of this AppFoundryListing.
        :type: LocalizedField
        """
        
        self._tagline = tagline

    @property
    def brief_description(self):
        """
        Gets the brief_description of this AppFoundryListing.
        Localized short description

        :return: The brief_description of this AppFoundryListing.
        :rtype: LocalizedField
        """
        return self._brief_description

    @brief_description.setter
    def brief_description(self, brief_description):
        """
        Sets the brief_description of this AppFoundryListing.
        Localized short description

        :param brief_description: The brief_description of this AppFoundryListing.
        :type: LocalizedField
        """
        
        self._brief_description = brief_description

    @property
    def full_description(self):
        """
        Gets the full_description of this AppFoundryListing.
        Localized full description

        :return: The full_description of this AppFoundryListing.
        :rtype: LocalizedField
        """
        return self._full_description

    @full_description.setter
    def full_description(self, full_description):
        """
        Sets the full_description of this AppFoundryListing.
        Localized full description

        :param full_description: The full_description of this AppFoundryListing.
        :type: LocalizedField
        """
        
        self._full_description = full_description

    @property
    def platform(self):
        """
        Gets the platform of this AppFoundryListing.
        The supported platform

        :return: The platform of this AppFoundryListing.
        :rtype: Platform
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """
        Sets the platform of this AppFoundryListing.
        The supported platform

        :param platform: The platform of this AppFoundryListing.
        :type: Platform
        """
        
        self._platform = platform

    @property
    def company_logo(self):
        """
        Gets the company_logo of this AppFoundryListing.
        URL to the company logo to be displayed

        :return: The company_logo of this AppFoundryListing.
        :rtype: str
        """
        return self._company_logo

    @company_logo.setter
    def company_logo(self, company_logo):
        """
        Sets the company_logo of this AppFoundryListing.
        URL to the company logo to be displayed

        :param company_logo: The company_logo of this AppFoundryListing.
        :type: str
        """
        
        self._company_logo = company_logo

    @property
    def app_logo(self):
        """
        Gets the app_logo of this AppFoundryListing.
        URL to the app logo to be displayed

        :return: The app_logo of this AppFoundryListing.
        :rtype: str
        """
        return self._app_logo

    @app_logo.setter
    def app_logo(self, app_logo):
        """
        Sets the app_logo of this AppFoundryListing.
        URL to the app logo to be displayed

        :param app_logo: The app_logo of this AppFoundryListing.
        :type: str
        """
        
        self._app_logo = app_logo

    @property
    def company_name(self):
        """
        Gets the company_name of this AppFoundryListing.
        Localized company name for the listing publisher

        :return: The company_name of this AppFoundryListing.
        :rtype: LocalizedField
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """
        Sets the company_name of this AppFoundryListing.
        Localized company name for the listing publisher

        :param company_name: The company_name of this AppFoundryListing.
        :type: LocalizedField
        """
        
        self._company_name = company_name

    @property
    def website(self):
        """
        Gets the website of this AppFoundryListing.
        Localized URL to the website associated with the listing

        :return: The website of this AppFoundryListing.
        :rtype: LocalizedField
        """
        return self._website

    @website.setter
    def website(self, website):
        """
        Sets the website of this AppFoundryListing.
        Localized URL to the website associated with the listing

        :param website: The website of this AppFoundryListing.
        :type: LocalizedField
        """
        
        self._website = website

    @property
    def screenshots(self):
        """
        Gets the screenshots of this AppFoundryListing.
        Screenshot URLS

        :return: The screenshots of this AppFoundryListing.
        :rtype: list[str]
        """
        return self._screenshots

    @screenshots.setter
    def screenshots(self, screenshots):
        """
        Sets the screenshots of this AppFoundryListing.
        Screenshot URLS

        :param screenshots: The screenshots of this AppFoundryListing.
        :type: list[str]
        """
        
        self._screenshots = screenshots

    @property
    def video_links(self):
        """
        Gets the video_links of this AppFoundryListing.
        Usage video URLS

        :return: The video_links of this AppFoundryListing.
        :rtype: list[str]
        """
        return self._video_links

    @video_links.setter
    def video_links(self, video_links):
        """
        Sets the video_links of this AppFoundryListing.
        Usage video URLS

        :param video_links: The video_links of this AppFoundryListing.
        :type: list[str]
        """
        
        self._video_links = video_links

    @property
    def languages(self):
        """
        Gets the languages of this AppFoundryListing.
        Indicates the languages that the application supports. Supported application languages may differ from the listing localization languages

        :return: The languages of this AppFoundryListing.
        :rtype: list[str]
        """
        return self._languages

    @languages.setter
    def languages(self, languages):
        """
        Sets the languages of this AppFoundryListing.
        Indicates the languages that the application supports. Supported application languages may differ from the listing localization languages

        :param languages: The languages of this AppFoundryListing.
        :type: list[str]
        """
        
        self._languages = languages

    @property
    def vendor_email(self):
        """
        Gets the vendor_email of this AppFoundryListing.
        Contact email for the listing publisher

        :return: The vendor_email of this AppFoundryListing.
        :rtype: str
        """
        return self._vendor_email

    @vendor_email.setter
    def vendor_email(self, vendor_email):
        """
        Sets the vendor_email of this AppFoundryListing.
        Contact email for the listing publisher

        :param vendor_email: The vendor_email of this AppFoundryListing.
        :type: str
        """
        
        self._vendor_email = vendor_email

    @property
    def terms_of_service(self):
        """
        Gets the terms_of_service of this AppFoundryListing.
        URL to the terms of service

        :return: The terms_of_service of this AppFoundryListing.
        :rtype: str
        """
        return self._terms_of_service

    @terms_of_service.setter
    def terms_of_service(self, terms_of_service):
        """
        Sets the terms_of_service of this AppFoundryListing.
        URL to the terms of service

        :param terms_of_service: The terms_of_service of this AppFoundryListing.
        :type: str
        """
        
        self._terms_of_service = terms_of_service

    @property
    def help_documentation_url(self):
        """
        Gets the help_documentation_url of this AppFoundryListing.
        URL to help documentation

        :return: The help_documentation_url of this AppFoundryListing.
        :rtype: LocalizedField
        """
        return self._help_documentation_url

    @help_documentation_url.setter
    def help_documentation_url(self, help_documentation_url):
        """
        Sets the help_documentation_url of this AppFoundryListing.
        URL to help documentation

        :param help_documentation_url: The help_documentation_url of this AppFoundryListing.
        :type: LocalizedField
        """
        
        self._help_documentation_url = help_documentation_url

    @property
    def marketing_url(self):
        """
        Gets the marketing_url of this AppFoundryListing.
        URL to external marketing page

        :return: The marketing_url of this AppFoundryListing.
        :rtype: LocalizedField
        """
        return self._marketing_url

    @marketing_url.setter
    def marketing_url(self, marketing_url):
        """
        Sets the marketing_url of this AppFoundryListing.
        URL to external marketing page

        :param marketing_url: The marketing_url of this AppFoundryListing.
        :type: LocalizedField
        """
        
        self._marketing_url = marketing_url

    @property
    def industries(self):
        """
        Gets the industries of this AppFoundryListing.
        Industries targeted

        :return: The industries of this AppFoundryListing.
        :rtype: list[str]
        """
        return self._industries

    @industries.setter
    def industries(self, industries):
        """
        Sets the industries of this AppFoundryListing.
        Industries targeted

        :param industries: The industries of this AppFoundryListing.
        :type: list[str]
        """
        
        self._industries = industries

    @property
    def categories(self):
        """
        Gets the categories of this AppFoundryListing.
        Indicated the categories the listing belongs to

        :return: The categories of this AppFoundryListing.
        :rtype: list[str]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """
        Sets the categories of this AppFoundryListing.
        Indicated the categories the listing belongs to

        :param categories: The categories of this AppFoundryListing.
        :type: list[str]
        """
        
        self._categories = categories

    @property
    def smart_cases(self):
        """
        Gets the smart_cases of this AppFoundryListing.
        Use cases the listing is meant to address

        :return: The smart_cases of this AppFoundryListing.
        :rtype: list[SmartCase]
        """
        return self._smart_cases

    @smart_cases.setter
    def smart_cases(self, smart_cases):
        """
        Sets the smart_cases of this AppFoundryListing.
        Use cases the listing is meant to address

        :param smart_cases: The smart_cases of this AppFoundryListing.
        :type: list[SmartCase]
        """
        
        self._smart_cases = smart_cases

    @property
    def pricing(self):
        """
        Gets the pricing of this AppFoundryListing.
        Pricing options for the listing

        :return: The pricing of this AppFoundryListing.
        :rtype: list[PricingOption]
        """
        return self._pricing

    @pricing.setter
    def pricing(self, pricing):
        """
        Sets the pricing of this AppFoundryListing.
        Pricing options for the listing

        :param pricing: The pricing of this AppFoundryListing.
        :type: list[PricingOption]
        """
        
        self._pricing = pricing

    @property
    def self_uri(self):
        """
        Gets the self_uri of this AppFoundryListing.
        The URI for this object

        :return: The self_uri of this AppFoundryListing.
        :rtype: str
        """
        return self._self_uri

    @self_uri.setter
    def self_uri(self, self_uri):
        """
        Sets the self_uri of this AppFoundryListing.
        The URI for this object

        :param self_uri: The self_uri of this AppFoundryListing.
        :type: str
        """
        
        self._self_uri = self_uri

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

