# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems
import re


class CreateAsgRequest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        CreateAsgRequest - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'asg_owner_email': 'str',
            'edge_group_id': 'str',
            'external_trunk_base_id': 'str',
            'asg_logical_iam_instance_profile': 'str',
            'asg_ami': 'bool',
            'asg_type': 'str',
            'asg_instance_count': 'int',
            'asg_network_space': 'str',
            'asg_chaos_exempt': 'bool',
            'asg_recovery_shutdown_minutes': 'int'
        }

        self.attribute_map = {
            'asg_owner_email': 'asgOwnerEmail',
            'edge_group_id': 'edgeGroupId',
            'external_trunk_base_id': 'externalTrunkBaseId',
            'asg_logical_iam_instance_profile': 'asgLogicalIAMInstanceProfile',
            'asg_ami': 'asgAmi',
            'asg_type': 'asgType',
            'asg_instance_count': 'asgInstanceCount',
            'asg_network_space': 'asgNetworkSpace',
            'asg_chaos_exempt': 'asgChaosExempt',
            'asg_recovery_shutdown_minutes': 'asgRecoveryShutdownMinutes'
        }

        self._asg_owner_email = None
        self._edge_group_id = None
        self._external_trunk_base_id = None
        self._asg_logical_iam_instance_profile = None
        self._asg_ami = None
        self._asg_type = None
        self._asg_instance_count = None
        self._asg_network_space = None
        self._asg_chaos_exempt = None
        self._asg_recovery_shutdown_minutes = None

    @property
    def asg_owner_email(self):
        """
        Gets the asg_owner_email of this CreateAsgRequest.
        Email address of the individual starting the ASG

        :return: The asg_owner_email of this CreateAsgRequest.
        :rtype: str
        """
        return self._asg_owner_email

    @asg_owner_email.setter
    def asg_owner_email(self, asg_owner_email):
        """
        Sets the asg_owner_email of this CreateAsgRequest.
        Email address of the individual starting the ASG

        :param asg_owner_email: The asg_owner_email of this CreateAsgRequest.
        :type: str
        """
        
        self._asg_owner_email = asg_owner_email

    @property
    def edge_group_id(self):
        """
        Gets the edge_group_id of this CreateAsgRequest.
        Edge group that the user wants the asg edges to be assigned to.

        :return: The edge_group_id of this CreateAsgRequest.
        :rtype: str
        """
        return self._edge_group_id

    @edge_group_id.setter
    def edge_group_id(self, edge_group_id):
        """
        Sets the edge_group_id of this CreateAsgRequest.
        Edge group that the user wants the asg edges to be assigned to.

        :param edge_group_id: The edge_group_id of this CreateAsgRequest.
        :type: str
        """
        
        self._edge_group_id = edge_group_id

    @property
    def external_trunk_base_id(self):
        """
        Gets the external_trunk_base_id of this CreateAsgRequest.
        Trunk base that the user wants the asg edges to be assigned to

        :return: The external_trunk_base_id of this CreateAsgRequest.
        :rtype: str
        """
        return self._external_trunk_base_id

    @external_trunk_base_id.setter
    def external_trunk_base_id(self, external_trunk_base_id):
        """
        Sets the external_trunk_base_id of this CreateAsgRequest.
        Trunk base that the user wants the asg edges to be assigned to

        :param external_trunk_base_id: The external_trunk_base_id of this CreateAsgRequest.
        :type: str
        """
        
        self._external_trunk_base_id = external_trunk_base_id

    @property
    def asg_logical_iam_instance_profile(self):
        """
        Gets the asg_logical_iam_instance_profile of this CreateAsgRequest.
        Overrides the default logical IAM Instance Profile

        :return: The asg_logical_iam_instance_profile of this CreateAsgRequest.
        :rtype: str
        """
        return self._asg_logical_iam_instance_profile

    @asg_logical_iam_instance_profile.setter
    def asg_logical_iam_instance_profile(self, asg_logical_iam_instance_profile):
        """
        Sets the asg_logical_iam_instance_profile of this CreateAsgRequest.
        Overrides the default logical IAM Instance Profile

        :param asg_logical_iam_instance_profile: The asg_logical_iam_instance_profile of this CreateAsgRequest.
        :type: str
        """
        
        self._asg_logical_iam_instance_profile = asg_logical_iam_instance_profile

    @property
    def asg_ami(self):
        """
        Gets the asg_ami of this CreateAsgRequest.
        Overrides the default EDGE AMI used with the ASG

        :return: The asg_ami of this CreateAsgRequest.
        :rtype: bool
        """
        return self._asg_ami

    @asg_ami.setter
    def asg_ami(self, asg_ami):
        """
        Sets the asg_ami of this CreateAsgRequest.
        Overrides the default EDGE AMI used with the ASG

        :param asg_ami: The asg_ami of this CreateAsgRequest.
        :type: bool
        """
        
        self._asg_ami = asg_ami

    @property
    def asg_type(self):
        """
        Gets the asg_type of this CreateAsgRequest.
        Overrides the type of ASG being created.  By default we always create a 'standard' asg.

        :return: The asg_type of this CreateAsgRequest.
        :rtype: str
        """
        return self._asg_type

    @asg_type.setter
    def asg_type(self, asg_type):
        """
        Sets the asg_type of this CreateAsgRequest.
        Overrides the type of ASG being created.  By default we always create a 'standard' asg.

        :param asg_type: The asg_type of this CreateAsgRequest.
        :type: str
        """
        allowed_values = ["standard", "recovery"]
        if asg_type.lower() not in map(str.lower, allowed_values):
            # print "Invalid value for asg_type -> " + asg_type
            self._asg_type = "outdated_sdk_version"
        else:
            self._asg_type = asg_type

    @property
    def asg_instance_count(self):
        """
        Gets the asg_instance_count of this CreateAsgRequest.
        Overrides the default number of Edge instances to start in the ASG

        :return: The asg_instance_count of this CreateAsgRequest.
        :rtype: int
        """
        return self._asg_instance_count

    @asg_instance_count.setter
    def asg_instance_count(self, asg_instance_count):
        """
        Sets the asg_instance_count of this CreateAsgRequest.
        Overrides the default number of Edge instances to start in the ASG

        :param asg_instance_count: The asg_instance_count of this CreateAsgRequest.
        :type: int
        """
        
        self._asg_instance_count = asg_instance_count

    @property
    def asg_network_space(self):
        """
        Gets the asg_network_space of this CreateAsgRequest.
        Overrides the network space the ASG will start in.  The default will always be mediaservices

        :return: The asg_network_space of this CreateAsgRequest.
        :rtype: str
        """
        return self._asg_network_space

    @asg_network_space.setter
    def asg_network_space(self, asg_network_space):
        """
        Sets the asg_network_space of this CreateAsgRequest.
        Overrides the network space the ASG will start in.  The default will always be mediaservices

        :param asg_network_space: The asg_network_space of this CreateAsgRequest.
        :type: str
        """
        
        self._asg_network_space = asg_network_space

    @property
    def asg_chaos_exempt(self):
        """
        Gets the asg_chaos_exempt of this CreateAsgRequest.
        Optional parameter that exempts this ASG from chaos monkey killing one of its instances.

        :return: The asg_chaos_exempt of this CreateAsgRequest.
        :rtype: bool
        """
        return self._asg_chaos_exempt

    @asg_chaos_exempt.setter
    def asg_chaos_exempt(self, asg_chaos_exempt):
        """
        Sets the asg_chaos_exempt of this CreateAsgRequest.
        Optional parameter that exempts this ASG from chaos monkey killing one of its instances.

        :param asg_chaos_exempt: The asg_chaos_exempt of this CreateAsgRequest.
        :type: bool
        """
        
        self._asg_chaos_exempt = asg_chaos_exempt

    @property
    def asg_recovery_shutdown_minutes(self):
        """
        Gets the asg_recovery_shutdown_minutes of this CreateAsgRequest.
        Number of minutes a recovery ASG will stay active before it is torn down

        :return: The asg_recovery_shutdown_minutes of this CreateAsgRequest.
        :rtype: int
        """
        return self._asg_recovery_shutdown_minutes

    @asg_recovery_shutdown_minutes.setter
    def asg_recovery_shutdown_minutes(self, asg_recovery_shutdown_minutes):
        """
        Sets the asg_recovery_shutdown_minutes of this CreateAsgRequest.
        Number of minutes a recovery ASG will stay active before it is torn down

        :param asg_recovery_shutdown_minutes: The asg_recovery_shutdown_minutes of this CreateAsgRequest.
        :type: int
        """
        
        self._asg_recovery_shutdown_minutes = asg_recovery_shutdown_minutes

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

