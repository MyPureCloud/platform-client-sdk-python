# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from datetime import datetime
from datetime import date
from pprint import pformat
from six import iteritems
import re
import json

from ..utils import sanitize_for_serialization

# type hinting support
from typing import TYPE_CHECKING
from typing import List
from typing import Dict

if TYPE_CHECKING:
    from . import WfmBuScheduleTopicBuManagementUnitScheduleSummary
    from . import WfmBuScheduleTopicBuScheduleGenerationResultSummary
    from . import WfmBuScheduleTopicBuShortTermForecastReference
    from . import WfmBuScheduleTopicWfmVersionedEntityMetadata

class WfmBuScheduleTopicBuScheduleMetadata(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self) -> None:
        """
        WfmBuScheduleTopicBuScheduleMetadata - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'week_date': 'datetime',
            'week_count': 'int',
            'description': 'str',
            'published': 'bool',
            'short_term_forecast': 'WfmBuScheduleTopicBuShortTermForecastReference',
            'management_units': 'list[WfmBuScheduleTopicBuManagementUnitScheduleSummary]',
            'generation_results': 'WfmBuScheduleTopicBuScheduleGenerationResultSummary',
            'metadata': 'WfmBuScheduleTopicWfmVersionedEntityMetadata'
        }

        self.attribute_map = {
            'id': 'id',
            'week_date': 'weekDate',
            'week_count': 'weekCount',
            'description': 'description',
            'published': 'published',
            'short_term_forecast': 'shortTermForecast',
            'management_units': 'managementUnits',
            'generation_results': 'generationResults',
            'metadata': 'metadata'
        }

        self._id = None
        self._week_date = None
        self._week_count = None
        self._description = None
        self._published = None
        self._short_term_forecast = None
        self._management_units = None
        self._generation_results = None
        self._metadata = None

    @property
    def id(self) -> str:
        """
        Gets the id of this WfmBuScheduleTopicBuScheduleMetadata.


        :return: The id of this WfmBuScheduleTopicBuScheduleMetadata.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str) -> None:
        """
        Sets the id of this WfmBuScheduleTopicBuScheduleMetadata.


        :param id: The id of this WfmBuScheduleTopicBuScheduleMetadata.
        :type: str
        """
        

        self._id = id

    @property
    def week_date(self) -> datetime:
        """
        Gets the week_date of this WfmBuScheduleTopicBuScheduleMetadata.


        :return: The week_date of this WfmBuScheduleTopicBuScheduleMetadata.
        :rtype: datetime
        """
        return self._week_date

    @week_date.setter
    def week_date(self, week_date: datetime) -> None:
        """
        Sets the week_date of this WfmBuScheduleTopicBuScheduleMetadata.


        :param week_date: The week_date of this WfmBuScheduleTopicBuScheduleMetadata.
        :type: datetime
        """
        

        self._week_date = week_date

    @property
    def week_count(self) -> int:
        """
        Gets the week_count of this WfmBuScheduleTopicBuScheduleMetadata.


        :return: The week_count of this WfmBuScheduleTopicBuScheduleMetadata.
        :rtype: int
        """
        return self._week_count

    @week_count.setter
    def week_count(self, week_count: int) -> None:
        """
        Sets the week_count of this WfmBuScheduleTopicBuScheduleMetadata.


        :param week_count: The week_count of this WfmBuScheduleTopicBuScheduleMetadata.
        :type: int
        """
        

        self._week_count = week_count

    @property
    def description(self) -> str:
        """
        Gets the description of this WfmBuScheduleTopicBuScheduleMetadata.


        :return: The description of this WfmBuScheduleTopicBuScheduleMetadata.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str) -> None:
        """
        Sets the description of this WfmBuScheduleTopicBuScheduleMetadata.


        :param description: The description of this WfmBuScheduleTopicBuScheduleMetadata.
        :type: str
        """
        

        self._description = description

    @property
    def published(self) -> bool:
        """
        Gets the published of this WfmBuScheduleTopicBuScheduleMetadata.


        :return: The published of this WfmBuScheduleTopicBuScheduleMetadata.
        :rtype: bool
        """
        return self._published

    @published.setter
    def published(self, published: bool) -> None:
        """
        Sets the published of this WfmBuScheduleTopicBuScheduleMetadata.


        :param published: The published of this WfmBuScheduleTopicBuScheduleMetadata.
        :type: bool
        """
        

        self._published = published

    @property
    def short_term_forecast(self) -> 'WfmBuScheduleTopicBuShortTermForecastReference':
        """
        Gets the short_term_forecast of this WfmBuScheduleTopicBuScheduleMetadata.


        :return: The short_term_forecast of this WfmBuScheduleTopicBuScheduleMetadata.
        :rtype: WfmBuScheduleTopicBuShortTermForecastReference
        """
        return self._short_term_forecast

    @short_term_forecast.setter
    def short_term_forecast(self, short_term_forecast: 'WfmBuScheduleTopicBuShortTermForecastReference') -> None:
        """
        Sets the short_term_forecast of this WfmBuScheduleTopicBuScheduleMetadata.


        :param short_term_forecast: The short_term_forecast of this WfmBuScheduleTopicBuScheduleMetadata.
        :type: WfmBuScheduleTopicBuShortTermForecastReference
        """
        

        self._short_term_forecast = short_term_forecast

    @property
    def management_units(self) -> List['WfmBuScheduleTopicBuManagementUnitScheduleSummary']:
        """
        Gets the management_units of this WfmBuScheduleTopicBuScheduleMetadata.


        :return: The management_units of this WfmBuScheduleTopicBuScheduleMetadata.
        :rtype: list[WfmBuScheduleTopicBuManagementUnitScheduleSummary]
        """
        return self._management_units

    @management_units.setter
    def management_units(self, management_units: List['WfmBuScheduleTopicBuManagementUnitScheduleSummary']) -> None:
        """
        Sets the management_units of this WfmBuScheduleTopicBuScheduleMetadata.


        :param management_units: The management_units of this WfmBuScheduleTopicBuScheduleMetadata.
        :type: list[WfmBuScheduleTopicBuManagementUnitScheduleSummary]
        """
        

        self._management_units = management_units

    @property
    def generation_results(self) -> 'WfmBuScheduleTopicBuScheduleGenerationResultSummary':
        """
        Gets the generation_results of this WfmBuScheduleTopicBuScheduleMetadata.


        :return: The generation_results of this WfmBuScheduleTopicBuScheduleMetadata.
        :rtype: WfmBuScheduleTopicBuScheduleGenerationResultSummary
        """
        return self._generation_results

    @generation_results.setter
    def generation_results(self, generation_results: 'WfmBuScheduleTopicBuScheduleGenerationResultSummary') -> None:
        """
        Sets the generation_results of this WfmBuScheduleTopicBuScheduleMetadata.


        :param generation_results: The generation_results of this WfmBuScheduleTopicBuScheduleMetadata.
        :type: WfmBuScheduleTopicBuScheduleGenerationResultSummary
        """
        

        self._generation_results = generation_results

    @property
    def metadata(self) -> 'WfmBuScheduleTopicWfmVersionedEntityMetadata':
        """
        Gets the metadata of this WfmBuScheduleTopicBuScheduleMetadata.


        :return: The metadata of this WfmBuScheduleTopicBuScheduleMetadata.
        :rtype: WfmBuScheduleTopicWfmVersionedEntityMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: 'WfmBuScheduleTopicWfmVersionedEntityMetadata') -> None:
        """
        Sets the metadata of this WfmBuScheduleTopicBuScheduleMetadata.


        :param metadata: The metadata of this WfmBuScheduleTopicBuScheduleMetadata.
        :type: WfmBuScheduleTopicWfmVersionedEntityMetadata
        """
        

        self._metadata = metadata

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_json(self):
        """
        Returns the model as raw JSON
        """
        return json.dumps(sanitize_for_serialization(self.to_dict()))

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

