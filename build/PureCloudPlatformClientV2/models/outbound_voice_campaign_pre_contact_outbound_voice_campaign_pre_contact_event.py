# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from datetime import datetime
from datetime import date
from pprint import pformat
import re
import json

from ..utils import sanitize_for_serialization

# type hinting support
from typing import TYPE_CHECKING
from typing import List
from typing import Dict

if TYPE_CHECKING:
    from . import OutboundVoiceCampaignPreContactVoiceAttributes

class OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self) -> None:
        """
        OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'event_time': 'int',
            'voice_attributes': 'OutboundVoiceCampaignPreContactVoiceAttributes',
            'wrapup_code': 'str',
            'outbound_campaign_id': 'str',
            'dialing_mode': 'str',
            'agent_script_id': 'str',
            'division_id': 'str',
            'outbound_contact_list_id': 'str',
            'outbound_contact_list_filter_id': 'str',
            'outbound_queue_id': 'str',
            'outbound_contact_id': 'str',
            'is_campaign_always_running': 'bool',
            'is_campaign_skill_based': 'bool',
            'is_campaign_dynamic_sorting': 'bool',
            'is_campaign_dynamic_filtering': 'bool',
            'outbound_campaign_health_mask': 'int',
            'is_re_call': 'bool',
            'scheduled_date_time': 'str',
            'is_final': 'bool',
            'conversation_id': 'str'
        }

        self.attribute_map = {
            'event_time': 'eventTime',
            'voice_attributes': 'voiceAttributes',
            'wrapup_code': 'wrapupCode',
            'outbound_campaign_id': 'outboundCampaignId',
            'dialing_mode': 'dialingMode',
            'agent_script_id': 'agentScriptId',
            'division_id': 'divisionId',
            'outbound_contact_list_id': 'outboundContactListId',
            'outbound_contact_list_filter_id': 'outboundContactListFilterId',
            'outbound_queue_id': 'outboundQueueId',
            'outbound_contact_id': 'outboundContactId',
            'is_campaign_always_running': 'isCampaignAlwaysRunning',
            'is_campaign_skill_based': 'isCampaignSkillBased',
            'is_campaign_dynamic_sorting': 'isCampaignDynamicSorting',
            'is_campaign_dynamic_filtering': 'isCampaignDynamicFiltering',
            'outbound_campaign_health_mask': 'outboundCampaignHealthMask',
            'is_re_call': 'isReCall',
            'scheduled_date_time': 'scheduledDateTime',
            'is_final': 'isFinal',
            'conversation_id': 'conversationId'
        }

        self._event_time = None
        self._voice_attributes = None
        self._wrapup_code = None
        self._outbound_campaign_id = None
        self._dialing_mode = None
        self._agent_script_id = None
        self._division_id = None
        self._outbound_contact_list_id = None
        self._outbound_contact_list_filter_id = None
        self._outbound_queue_id = None
        self._outbound_contact_id = None
        self._is_campaign_always_running = None
        self._is_campaign_skill_based = None
        self._is_campaign_dynamic_sorting = None
        self._is_campaign_dynamic_filtering = None
        self._outbound_campaign_health_mask = None
        self._is_re_call = None
        self._scheduled_date_time = None
        self._is_final = None
        self._conversation_id = None

    @property
    def event_time(self) -> int:
        """
        Gets the event_time of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The event_time of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: int
        """
        return self._event_time

    @event_time.setter
    def event_time(self, event_time: int) -> None:
        """
        Sets the event_time of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param event_time: The event_time of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: int
        """
        

        self._event_time = event_time

    @property
    def voice_attributes(self) -> 'OutboundVoiceCampaignPreContactVoiceAttributes':
        """
        Gets the voice_attributes of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The voice_attributes of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: OutboundVoiceCampaignPreContactVoiceAttributes
        """
        return self._voice_attributes

    @voice_attributes.setter
    def voice_attributes(self, voice_attributes: 'OutboundVoiceCampaignPreContactVoiceAttributes') -> None:
        """
        Sets the voice_attributes of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param voice_attributes: The voice_attributes of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: OutboundVoiceCampaignPreContactVoiceAttributes
        """
        

        self._voice_attributes = voice_attributes

    @property
    def wrapup_code(self) -> str:
        """
        Gets the wrapup_code of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The wrapup_code of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: str
        """
        return self._wrapup_code

    @wrapup_code.setter
    def wrapup_code(self, wrapup_code: str) -> None:
        """
        Sets the wrapup_code of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param wrapup_code: The wrapup_code of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: str
        """
        

        self._wrapup_code = wrapup_code

    @property
    def outbound_campaign_id(self) -> str:
        """
        Gets the outbound_campaign_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The outbound_campaign_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: str
        """
        return self._outbound_campaign_id

    @outbound_campaign_id.setter
    def outbound_campaign_id(self, outbound_campaign_id: str) -> None:
        """
        Sets the outbound_campaign_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param outbound_campaign_id: The outbound_campaign_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: str
        """
        

        self._outbound_campaign_id = outbound_campaign_id

    @property
    def dialing_mode(self) -> str:
        """
        Gets the dialing_mode of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The dialing_mode of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: str
        """
        return self._dialing_mode

    @dialing_mode.setter
    def dialing_mode(self, dialing_mode: str) -> None:
        """
        Sets the dialing_mode of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param dialing_mode: The dialing_mode of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: str
        """
        if isinstance(dialing_mode, int):
            dialing_mode = str(dialing_mode)
        allowed_values = ["UNKNOWN", "PREVIEW", "POWER", "PREDICTIVE", "AGENTLESS", "EXTERNAL", "PROGRESSIVE"]
        if dialing_mode.lower() not in map(str.lower, allowed_values):
            # print("Invalid value for dialing_mode -> " + dialing_mode)
            self._dialing_mode = "outdated_sdk_version"
        else:
            self._dialing_mode = dialing_mode

    @property
    def agent_script_id(self) -> str:
        """
        Gets the agent_script_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The agent_script_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: str
        """
        return self._agent_script_id

    @agent_script_id.setter
    def agent_script_id(self, agent_script_id: str) -> None:
        """
        Sets the agent_script_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param agent_script_id: The agent_script_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: str
        """
        

        self._agent_script_id = agent_script_id

    @property
    def division_id(self) -> str:
        """
        Gets the division_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The division_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: str
        """
        return self._division_id

    @division_id.setter
    def division_id(self, division_id: str) -> None:
        """
        Sets the division_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param division_id: The division_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: str
        """
        

        self._division_id = division_id

    @property
    def outbound_contact_list_id(self) -> str:
        """
        Gets the outbound_contact_list_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The outbound_contact_list_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: str
        """
        return self._outbound_contact_list_id

    @outbound_contact_list_id.setter
    def outbound_contact_list_id(self, outbound_contact_list_id: str) -> None:
        """
        Sets the outbound_contact_list_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param outbound_contact_list_id: The outbound_contact_list_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: str
        """
        

        self._outbound_contact_list_id = outbound_contact_list_id

    @property
    def outbound_contact_list_filter_id(self) -> str:
        """
        Gets the outbound_contact_list_filter_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The outbound_contact_list_filter_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: str
        """
        return self._outbound_contact_list_filter_id

    @outbound_contact_list_filter_id.setter
    def outbound_contact_list_filter_id(self, outbound_contact_list_filter_id: str) -> None:
        """
        Sets the outbound_contact_list_filter_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param outbound_contact_list_filter_id: The outbound_contact_list_filter_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: str
        """
        

        self._outbound_contact_list_filter_id = outbound_contact_list_filter_id

    @property
    def outbound_queue_id(self) -> str:
        """
        Gets the outbound_queue_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The outbound_queue_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: str
        """
        return self._outbound_queue_id

    @outbound_queue_id.setter
    def outbound_queue_id(self, outbound_queue_id: str) -> None:
        """
        Sets the outbound_queue_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param outbound_queue_id: The outbound_queue_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: str
        """
        

        self._outbound_queue_id = outbound_queue_id

    @property
    def outbound_contact_id(self) -> str:
        """
        Gets the outbound_contact_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The outbound_contact_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: str
        """
        return self._outbound_contact_id

    @outbound_contact_id.setter
    def outbound_contact_id(self, outbound_contact_id: str) -> None:
        """
        Sets the outbound_contact_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param outbound_contact_id: The outbound_contact_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: str
        """
        

        self._outbound_contact_id = outbound_contact_id

    @property
    def is_campaign_always_running(self) -> bool:
        """
        Gets the is_campaign_always_running of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The is_campaign_always_running of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: bool
        """
        return self._is_campaign_always_running

    @is_campaign_always_running.setter
    def is_campaign_always_running(self, is_campaign_always_running: bool) -> None:
        """
        Sets the is_campaign_always_running of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param is_campaign_always_running: The is_campaign_always_running of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: bool
        """
        

        self._is_campaign_always_running = is_campaign_always_running

    @property
    def is_campaign_skill_based(self) -> bool:
        """
        Gets the is_campaign_skill_based of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The is_campaign_skill_based of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: bool
        """
        return self._is_campaign_skill_based

    @is_campaign_skill_based.setter
    def is_campaign_skill_based(self, is_campaign_skill_based: bool) -> None:
        """
        Sets the is_campaign_skill_based of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param is_campaign_skill_based: The is_campaign_skill_based of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: bool
        """
        

        self._is_campaign_skill_based = is_campaign_skill_based

    @property
    def is_campaign_dynamic_sorting(self) -> bool:
        """
        Gets the is_campaign_dynamic_sorting of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The is_campaign_dynamic_sorting of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: bool
        """
        return self._is_campaign_dynamic_sorting

    @is_campaign_dynamic_sorting.setter
    def is_campaign_dynamic_sorting(self, is_campaign_dynamic_sorting: bool) -> None:
        """
        Sets the is_campaign_dynamic_sorting of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param is_campaign_dynamic_sorting: The is_campaign_dynamic_sorting of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: bool
        """
        

        self._is_campaign_dynamic_sorting = is_campaign_dynamic_sorting

    @property
    def is_campaign_dynamic_filtering(self) -> bool:
        """
        Gets the is_campaign_dynamic_filtering of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The is_campaign_dynamic_filtering of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: bool
        """
        return self._is_campaign_dynamic_filtering

    @is_campaign_dynamic_filtering.setter
    def is_campaign_dynamic_filtering(self, is_campaign_dynamic_filtering: bool) -> None:
        """
        Sets the is_campaign_dynamic_filtering of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param is_campaign_dynamic_filtering: The is_campaign_dynamic_filtering of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: bool
        """
        

        self._is_campaign_dynamic_filtering = is_campaign_dynamic_filtering

    @property
    def outbound_campaign_health_mask(self) -> int:
        """
        Gets the outbound_campaign_health_mask of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The outbound_campaign_health_mask of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: int
        """
        return self._outbound_campaign_health_mask

    @outbound_campaign_health_mask.setter
    def outbound_campaign_health_mask(self, outbound_campaign_health_mask: int) -> None:
        """
        Sets the outbound_campaign_health_mask of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param outbound_campaign_health_mask: The outbound_campaign_health_mask of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: int
        """
        

        self._outbound_campaign_health_mask = outbound_campaign_health_mask

    @property
    def is_re_call(self) -> bool:
        """
        Gets the is_re_call of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The is_re_call of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: bool
        """
        return self._is_re_call

    @is_re_call.setter
    def is_re_call(self, is_re_call: bool) -> None:
        """
        Sets the is_re_call of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param is_re_call: The is_re_call of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: bool
        """
        

        self._is_re_call = is_re_call

    @property
    def scheduled_date_time(self) -> str:
        """
        Gets the scheduled_date_time of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The scheduled_date_time of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: str
        """
        return self._scheduled_date_time

    @scheduled_date_time.setter
    def scheduled_date_time(self, scheduled_date_time: str) -> None:
        """
        Sets the scheduled_date_time of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param scheduled_date_time: The scheduled_date_time of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: str
        """
        

        self._scheduled_date_time = scheduled_date_time

    @property
    def is_final(self) -> bool:
        """
        Gets the is_final of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The is_final of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: bool
        """
        return self._is_final

    @is_final.setter
    def is_final(self, is_final: bool) -> None:
        """
        Sets the is_final of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param is_final: The is_final of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: bool
        """
        

        self._is_final = is_final

    @property
    def conversation_id(self) -> str:
        """
        Gets the conversation_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :return: The conversation_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :rtype: str
        """
        return self._conversation_id

    @conversation_id.setter
    def conversation_id(self, conversation_id: str) -> None:
        """
        Sets the conversation_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.


        :param conversation_id: The conversation_id of this OutboundVoiceCampaignPreContactOutboundVoiceCampaignPreContactEvent.
        :type: str
        """
        

        self._conversation_id = conversation_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in self.swagger_types.items():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_json(self):
        """
        Returns the model as raw JSON
        """
        return json.dumps(sanitize_for_serialization(self.to_dict()))

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

