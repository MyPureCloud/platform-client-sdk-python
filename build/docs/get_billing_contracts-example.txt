import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.BillingApi();
before = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)
after = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)
page_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)
date_start = '2013-10-20' # date | Start date for the query. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)
date_end = '2013-10-20' # date | End date for the query. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional)
status = 'status_example' # str | Filter by the status of contracts (optional)
external_number = 'external_number_example' # str | Filter by the unique external number. (optional)

try:
    # Get billing contracts
    api_response = api_instance.get_billing_contracts(before=before, after=after, page_size=page_size, date_start=date_start, date_end=date_end, status=status, external_number=external_number)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling BillingApi->get_billing_contracts: %s\n" % e)