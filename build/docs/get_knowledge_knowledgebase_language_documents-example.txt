import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...) or get_code_authorization_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.KnowledgeApi();
knowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID
language_code = 'en-US' # str | Language code, format: iso2-LOCALE
before = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)
after = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)
limit = 'limit_example' # str | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize (optional)
page_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)
categories = 'categories_example' # str | Filter by categories ids, comma separated values expected. (optional)
title = 'title_example' # str | Filter by document title. (optional)
sort_by = 'sort_by_example' # str | Sort by. (optional)
sort_order = 'sort_order_example' # str | Sort Order. (optional)
document_ids = ['document_ids_example'] # list[str] | Comma-separated list of document identifiers to fetch by. (optional)

try:
    # Get documents
    api_response = api_instance.get_knowledge_knowledgebase_language_documents(knowledge_base_id, language_code, before=before, after=after, limit=limit, page_size=page_size, categories=categories, title=title, sort_by=sort_by, sort_order=sort_order, document_ids=document_ids)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling KnowledgeApi->get_knowledge_knowledgebase_language_documents: %s\n" % e)