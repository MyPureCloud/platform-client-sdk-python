import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.BusinessRulesApi();
after = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)
page_size = 'page_size_example' # str | Number of entities to return. Maximum of 100. (optional)
division_ids = ['division_ids_example'] # list[str] | One or more comma separated divisions to filters decision tables by. If nothing is provided, the decision tables associated with the list of divisions that the user has access to will be returned. (optional)
name = 'name_example' # str | Search for decision tables with a name that contains the given search string. Search is case insensitive and will match any table that contains this string in any part of the name. (optional)

try:
    # Get a list of decision tables.
    api_response = api_instance.get_businessrules_decisiontables(after=after, page_size=page_size, division_ids=division_ids, name=name)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling BusinessRulesApi->get_businessrules_decisiontables: %s\n" % e)