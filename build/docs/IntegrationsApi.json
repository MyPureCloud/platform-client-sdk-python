{
    "DELETE /api/v2/integrations/{integrationId}": {
        "operationId": "delete_integration",
        "functionName": "delete_integration",
        "signature": "delete_integration(integration_id)",
        "parameters": [
            {
                "name": "integration_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "Integration"
    },
    "DELETE /api/v2/integrations/actions/{actionId}": {
        "operationId": "delete_integrations_action",
        "functionName": "delete_integrations_action",
        "signature": "delete_integrations_action(action_id)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/integrations/actions/{actionId}/draft": {
        "operationId": "delete_integrations_action_draft",
        "functionName": "delete_integrations_action_draft",
        "signature": "delete_integrations_action_draft(action_id)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/integrations/credentials/{credentialId}": {
        "operationId": "delete_integrations_credential",
        "functionName": "delete_integrations_credential",
        "signature": "delete_integrations_credential(credential_id)",
        "parameters": [
            {
                "name": "credential_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "GET /api/v2/integrations/{integrationId}": {
        "operationId": "get_integration",
        "functionName": "get_integration",
        "signature": "get_integration(integration_id, page_size, page_number, sort_by, expand, next_page, previous_page)",
        "parameters": [
            {
                "name": "integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "next_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "previous_page",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "Integration"
    },
    "GET /api/v2/integrations/{integrationId}/config/current": {
        "operationId": "get_integration_config_current",
        "functionName": "get_integration_config_current",
        "signature": "get_integration_config_current(integration_id)",
        "parameters": [
            {
                "name": "integration_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "IntegrationConfiguration"
    },
    "GET /api/v2/integrations": {
        "operationId": "get_integrations",
        "functionName": "get_integrations",
        "signature": "get_integrations(page_size, page_number, sort_by, expand, next_page, previous_page)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "next_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "previous_page",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "IntegrationEntityListing"
    },
    "GET /api/v2/integrations/actions/{actionId}": {
        "operationId": "get_integrations_action",
        "functionName": "get_integrations_action",
        "signature": "get_integrations_action(action_id, expand, include_config)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "str",
                "required": "false"
            },
            {
                "name": "include_config",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Action"
    },
    "GET /api/v2/integrations/actions/{actionId}/draft": {
        "operationId": "get_integrations_action_draft",
        "functionName": "get_integrations_action_draft",
        "signature": "get_integrations_action_draft(action_id, expand, include_config)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "str",
                "required": "false"
            },
            {
                "name": "include_config",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Action"
    },
    "GET /api/v2/integrations/actions/{actionId}/draft/schemas/{fileName}": {
        "operationId": "get_integrations_action_draft_schema",
        "functionName": "get_integrations_action_draft_schema",
        "signature": "get_integrations_action_draft_schema(action_id, file_name)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "file_name",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "JsonSchemaDocument"
    },
    "GET /api/v2/integrations/actions/{actionId}/draft/templates/{fileName}": {
        "operationId": "get_integrations_action_draft_template",
        "functionName": "get_integrations_action_draft_template",
        "signature": "get_integrations_action_draft_template(action_id, file_name)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "file_name",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "str"
    },
    "GET /api/v2/integrations/actions/{actionId}/draft/validation": {
        "operationId": "get_integrations_action_draft_validation",
        "functionName": "get_integrations_action_draft_validation",
        "signature": "get_integrations_action_draft_validation(action_id)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "DraftValidationResult"
    },
    "GET /api/v2/integrations/actions/{actionId}/schemas/{fileName}": {
        "operationId": "get_integrations_action_schema",
        "functionName": "get_integrations_action_schema",
        "signature": "get_integrations_action_schema(action_id, file_name)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "file_name",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "JsonSchemaDocument"
    },
    "GET /api/v2/integrations/actions/{actionId}/templates/{fileName}": {
        "operationId": "get_integrations_action_template",
        "functionName": "get_integrations_action_template",
        "signature": "get_integrations_action_template(action_id, file_name)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "file_name",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "str"
    },
    "GET /api/v2/integrations/actions": {
        "operationId": "get_integrations_actions",
        "functionName": "get_integrations_actions",
        "signature": "get_integrations_actions(page_size, page_number, next_page, previous_page, sort_by, sort_order, category, name, ids, secure, include_auth_actions)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "next_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "previous_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "sort_order",
                "type": "str",
                "required": "false"
            },
            {
                "name": "category",
                "type": "str",
                "required": "false"
            },
            {
                "name": "name",
                "type": "str",
                "required": "false"
            },
            {
                "name": "ids",
                "type": "str",
                "required": "false"
            },
            {
                "name": "secure",
                "type": "str",
                "required": "false"
            },
            {
                "name": "include_auth_actions",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "ActionEntityListing"
    },
    "GET /api/v2/integrations/actions/categories": {
        "operationId": "get_integrations_actions_categories",
        "functionName": "get_integrations_actions_categories",
        "signature": "get_integrations_actions_categories(page_size, page_number, next_page, previous_page, sort_by, sort_order, secure)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "next_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "previous_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "sort_order",
                "type": "str",
                "required": "false"
            },
            {
                "name": "secure",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "CategoryEntityListing"
    },
    "GET /api/v2/integrations/actions/drafts": {
        "operationId": "get_integrations_actions_drafts",
        "functionName": "get_integrations_actions_drafts",
        "signature": "get_integrations_actions_drafts(page_size, page_number, next_page, previous_page, sort_by, sort_order, category, name, ids, secure, include_auth_actions)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "next_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "previous_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "sort_order",
                "type": "str",
                "required": "false"
            },
            {
                "name": "category",
                "type": "str",
                "required": "false"
            },
            {
                "name": "name",
                "type": "str",
                "required": "false"
            },
            {
                "name": "ids",
                "type": "str",
                "required": "false"
            },
            {
                "name": "secure",
                "type": "str",
                "required": "false"
            },
            {
                "name": "include_auth_actions",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "ActionEntityListing"
    },
    "GET /api/v2/integrations/botconnector/{integrationId}/bots/{botId}": {
        "operationId": "get_integrations_botconnector_integration_id_bot",
        "functionName": "get_integrations_botconnector_integration_id_bot",
        "signature": "get_integrations_botconnector_integration_id_bot(integration_id, bot_id, version)",
        "parameters": [
            {
                "name": "integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "bot_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "version",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "BotConnectorBot"
    },
    "GET /api/v2/integrations/botconnector/{integrationId}/bots/{botId}/versions": {
        "operationId": "get_integrations_botconnector_integration_id_bot_versions",
        "functionName": "get_integrations_botconnector_integration_id_bot_versions",
        "signature": "get_integrations_botconnector_integration_id_bot_versions(integration_id, bot_id, page_number, page_size)",
        "parameters": [
            {
                "name": "integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "bot_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "BotConnectorBotVersionSummaryEntityListing"
    },
    "GET /api/v2/integrations/botconnector/{integrationId}/bots": {
        "operationId": "get_integrations_botconnector_integration_id_bots",
        "functionName": "get_integrations_botconnector_integration_id_bots",
        "signature": "get_integrations_botconnector_integration_id_bots(integration_id)",
        "parameters": [
            {
                "name": "integration_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "BotList"
    },
    "GET /api/v2/integrations/botconnector/{integrationId}/bots/summaries": {
        "operationId": "get_integrations_botconnector_integration_id_bots_summaries",
        "functionName": "get_integrations_botconnector_integration_id_bots_summaries",
        "signature": "get_integrations_botconnector_integration_id_bots_summaries(integration_id, page_number, page_size)",
        "parameters": [
            {
                "name": "integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "BotConnectorBotSummaryEntityListing"
    },
    "GET /api/v2/integrations/clientapps": {
        "operationId": "get_integrations_clientapps",
        "functionName": "get_integrations_clientapps",
        "signature": "get_integrations_clientapps(page_size, page_number, sort_by, expand, next_page, previous_page)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "next_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "previous_page",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "ClientAppEntityListing"
    },
    "GET /api/v2/integrations/clientapps/unifiedcommunications": {
        "operationId": "get_integrations_clientapps_unifiedcommunications",
        "functionName": "get_integrations_clientapps_unifiedcommunications",
        "signature": "get_integrations_clientapps_unifiedcommunications(page_size, page_number, sort_by, expand, next_page, previous_page)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "next_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "previous_page",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "UCIntegrationListing"
    },
    "GET /api/v2/integrations/credentials/{credentialId}": {
        "operationId": "get_integrations_credential",
        "functionName": "get_integrations_credential",
        "signature": "get_integrations_credential(credential_id)",
        "parameters": [
            {
                "name": "credential_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "Credential"
    },
    "GET /api/v2/integrations/credentials": {
        "operationId": "get_integrations_credentials",
        "functionName": "get_integrations_credentials",
        "signature": "get_integrations_credentials(page_number, page_size)",
        "parameters": [
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "CredentialInfoListing"
    },
    "GET /api/v2/integrations/credentials/types": {
        "operationId": "get_integrations_credentials_types",
        "functionName": "get_integrations_credentials_types",
        "signature": "get_integrations_credentials_types()",
        
        "return": "CredentialTypeListing"
    },
    "GET /api/v2/integrations/speech/dialogflow/agents/{agentId}": {
        "operationId": "get_integrations_speech_dialogflow_agent",
        "functionName": "get_integrations_speech_dialogflow_agent",
        "signature": "get_integrations_speech_dialogflow_agent(agent_id)",
        "parameters": [
            {
                "name": "agent_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "DialogflowAgent"
    },
    "GET /api/v2/integrations/speech/dialogflow/agents": {
        "operationId": "get_integrations_speech_dialogflow_agents",
        "functionName": "get_integrations_speech_dialogflow_agents",
        "signature": "get_integrations_speech_dialogflow_agents(page_number, page_size, name)",
        "parameters": [
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "name",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "DialogflowAgentSummaryEntityListing"
    },
    "GET /api/v2/integrations/speech/lex/bot/alias/{aliasId}": {
        "operationId": "get_integrations_speech_lex_bot_alias",
        "functionName": "get_integrations_speech_lex_bot_alias",
        "signature": "get_integrations_speech_lex_bot_alias(alias_id)",
        "parameters": [
            {
                "name": "alias_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "LexBotAlias"
    },
    "GET /api/v2/integrations/speech/lex/bot/{botId}/aliases": {
        "operationId": "get_integrations_speech_lex_bot_bot_id_aliases",
        "functionName": "get_integrations_speech_lex_bot_bot_id_aliases",
        "signature": "get_integrations_speech_lex_bot_bot_id_aliases(bot_id, page_number, page_size, status, name)",
        "parameters": [
            {
                "name": "bot_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "status",
                "type": "str",
                "required": "false"
            },
            {
                "name": "name",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "LexBotAliasEntityListing"
    },
    "GET /api/v2/integrations/speech/lex/bots": {
        "operationId": "get_integrations_speech_lex_bots",
        "functionName": "get_integrations_speech_lex_bots",
        "signature": "get_integrations_speech_lex_bots(page_number, page_size, name)",
        "parameters": [
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "name",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "LexBotEntityListing"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}": {
        "operationId": "get_integrations_speech_nuance_nuance_integration_id_bot",
        "functionName": "get_integrations_speech_nuance_nuance_integration_id_bot",
        "signature": "get_integrations_speech_nuance_nuance_integration_id_bot(nuance_integration_id, bot_id, expand, target_channel)",
        "parameters": [
            {
                "name": "nuance_integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "bot_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "target_channel",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "NuanceBot"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}/jobs/{jobId}": {
        "operationId": "get_integrations_speech_nuance_nuance_integration_id_bot_job",
        "functionName": "get_integrations_speech_nuance_nuance_integration_id_bot_job",
        "signature": "get_integrations_speech_nuance_nuance_integration_id_bot_job(nuance_integration_id, bot_id, job_id)",
        "parameters": [
            {
                "name": "nuance_integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "bot_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "AsyncJob"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}/jobs/{jobId}/results": {
        "operationId": "get_integrations_speech_nuance_nuance_integration_id_bot_job_results",
        "functionName": "get_integrations_speech_nuance_nuance_integration_id_bot_job_results",
        "signature": "get_integrations_speech_nuance_nuance_integration_id_bot_job_results(nuance_integration_id, bot_id, job_id)",
        "parameters": [
            {
                "name": "nuance_integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "bot_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "NuanceBot"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots": {
        "operationId": "get_integrations_speech_nuance_nuance_integration_id_bots",
        "functionName": "get_integrations_speech_nuance_nuance_integration_id_bots",
        "signature": "get_integrations_speech_nuance_nuance_integration_id_bots(nuance_integration_id, page_number, page_size, only_registered_bots)",
        "parameters": [
            {
                "name": "nuance_integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "only_registered_bots",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "NuanceBotEntityListing"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/jobs/{jobId}": {
        "operationId": "get_integrations_speech_nuance_nuance_integration_id_bots_job",
        "functionName": "get_integrations_speech_nuance_nuance_integration_id_bots_job",
        "signature": "get_integrations_speech_nuance_nuance_integration_id_bots_job(nuance_integration_id, job_id)",
        "parameters": [
            {
                "name": "nuance_integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "AsyncJob"
    },
    "GET /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/jobs/{jobId}/results": {
        "operationId": "get_integrations_speech_nuance_nuance_integration_id_bots_job_results",
        "functionName": "get_integrations_speech_nuance_nuance_integration_id_bots_job_results",
        "signature": "get_integrations_speech_nuance_nuance_integration_id_bots_job_results(nuance_integration_id, job_id)",
        "parameters": [
            {
                "name": "nuance_integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "NuanceBotEntityListing"
    },
    "GET /api/v2/integrations/speech/tts/engines/{engineId}": {
        "operationId": "get_integrations_speech_tts_engine",
        "functionName": "get_integrations_speech_tts_engine",
        "signature": "get_integrations_speech_tts_engine(engine_id, include_voices)",
        "parameters": [
            {
                "name": "engine_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "include_voices",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "TtsEngineEntity"
    },
    "GET /api/v2/integrations/speech/tts/engines/{engineId}/voices/{voiceId}": {
        "operationId": "get_integrations_speech_tts_engine_voice",
        "functionName": "get_integrations_speech_tts_engine_voice",
        "signature": "get_integrations_speech_tts_engine_voice(engine_id, voice_id)",
        "parameters": [
            {
                "name": "engine_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "voice_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "TtsVoiceEntity"
    },
    "GET /api/v2/integrations/speech/tts/engines/{engineId}/voices": {
        "operationId": "get_integrations_speech_tts_engine_voices",
        "functionName": "get_integrations_speech_tts_engine_voices",
        "signature": "get_integrations_speech_tts_engine_voices(engine_id, page_number, page_size)",
        "parameters": [
            {
                "name": "engine_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "TtsVoiceEntityListing"
    },
    "GET /api/v2/integrations/speech/tts/engines": {
        "operationId": "get_integrations_speech_tts_engines",
        "functionName": "get_integrations_speech_tts_engines",
        "signature": "get_integrations_speech_tts_engines(page_number, page_size, include_voices, name, language)",
        "parameters": [
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "include_voices",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "name",
                "type": "str",
                "required": "false"
            },
            {
                "name": "language",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "TtsEngineEntityListing"
    },
    "GET /api/v2/integrations/speech/tts/settings": {
        "operationId": "get_integrations_speech_tts_settings",
        "functionName": "get_integrations_speech_tts_settings",
        "signature": "get_integrations_speech_tts_settings()",
        
        "return": "TtsSettings"
    },
    "GET /api/v2/integrations/types/{typeId}": {
        "operationId": "get_integrations_type",
        "functionName": "get_integrations_type",
        "signature": "get_integrations_type(type_id)",
        "parameters": [
            {
                "name": "type_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "IntegrationType"
    },
    "GET /api/v2/integrations/types/{typeId}/configschemas/{configType}": {
        "operationId": "get_integrations_type_configschema",
        "functionName": "get_integrations_type_configschema",
        "signature": "get_integrations_type_configschema(type_id, config_type)",
        "parameters": [
            {
                "name": "type_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "config_type",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "JsonSchemaDocument"
    },
    "GET /api/v2/integrations/types": {
        "operationId": "get_integrations_types",
        "functionName": "get_integrations_types",
        "signature": "get_integrations_types(page_size, page_number, sort_by, expand, next_page, previous_page)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "next_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "previous_page",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "IntegrationTypeEntityListing"
    },
    "GET /api/v2/integrations/userapps": {
        "operationId": "get_integrations_userapps",
        "functionName": "get_integrations_userapps",
        "signature": "get_integrations_userapps(page_size, page_number, sort_by, expand, next_page, previous_page, app_host)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "next_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "previous_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "app_host",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "UserAppEntityListing"
    },
    "PATCH /api/v2/integrations/{integrationId}": {
        "operationId": "patch_integration",
        "functionName": "patch_integration",
        "signature": "patch_integration(integration_id, page_size, page_number, sort_by, expand, next_page, previous_page, body)",
        "parameters": [
            {
                "name": "integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "next_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "previous_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "body",
                "type": "Integration",
                "required": "false"
            }
        ],
        "return": "Integration"
    },
    "PATCH /api/v2/integrations/actions/{actionId}": {
        "operationId": "patch_integrations_action",
        "functionName": "patch_integrations_action",
        "signature": "patch_integrations_action(action_id, body)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "UpdateActionInput",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "PATCH /api/v2/integrations/actions/{actionId}/draft": {
        "operationId": "patch_integrations_action_draft",
        "functionName": "patch_integrations_action_draft",
        "signature": "patch_integrations_action_draft(action_id, body)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "UpdateDraftInput",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations": {
        "operationId": "post_integrations",
        "functionName": "post_integrations",
        "signature": "post_integrations(body)",
        "parameters": [
            {
                "name": "body",
                "type": "CreateIntegrationRequest",
                "required": "false"
            }
        ],
        "return": "Integration"
    },
    "POST /api/v2/integrations/actions/{actionId}/draft": {
        "operationId": "post_integrations_action_draft",
        "functionName": "post_integrations_action_draft",
        "signature": "post_integrations_action_draft(action_id)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations/actions/{actionId}/draft/publish": {
        "operationId": "post_integrations_action_draft_publish",
        "functionName": "post_integrations_action_draft_publish",
        "signature": "post_integrations_action_draft_publish(action_id, body)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "PublishDraftInput",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations/actions/{actionId}/draft/test": {
        "operationId": "post_integrations_action_draft_test",
        "functionName": "post_integrations_action_draft_test",
        "signature": "post_integrations_action_draft_test(action_id, body)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "object",
                "required": "true"
            }
        ],
        "return": "TestExecutionResult"
    },
    "POST /api/v2/integrations/actions/{actionId}/execute": {
        "operationId": "post_integrations_action_execute",
        "functionName": "post_integrations_action_execute",
        "signature": "post_integrations_action_execute(action_id, body)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "object",
                "required": "true"
            }
        ],
        "return": "object"
    },
    "POST /api/v2/integrations/actions/{actionId}/test": {
        "operationId": "post_integrations_action_test",
        "functionName": "post_integrations_action_test",
        "signature": "post_integrations_action_test(action_id, body)",
        "parameters": [
            {
                "name": "action_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "object",
                "required": "true"
            }
        ],
        "return": "TestExecutionResult"
    },
    "POST /api/v2/integrations/actions": {
        "operationId": "post_integrations_actions",
        "functionName": "post_integrations_actions",
        "signature": "post_integrations_actions(body)",
        "parameters": [
            {
                "name": "body",
                "type": "PostActionInput",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations/actions/drafts": {
        "operationId": "post_integrations_actions_drafts",
        "functionName": "post_integrations_actions_drafts",
        "signature": "post_integrations_actions_drafts(body)",
        "parameters": [
            {
                "name": "body",
                "type": "PostActionInput",
                "required": "true"
            }
        ],
        "return": "Action"
    },
    "POST /api/v2/integrations/credentials": {
        "operationId": "post_integrations_credentials",
        "functionName": "post_integrations_credentials",
        "signature": "post_integrations_credentials(body)",
        "parameters": [
            {
                "name": "body",
                "type": "Credential",
                "required": "false"
            }
        ],
        "return": "CredentialInfo"
    },
    "POST /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/{botId}/jobs": {
        "operationId": "post_integrations_speech_nuance_nuance_integration_id_bot_jobs",
        "functionName": "post_integrations_speech_nuance_nuance_integration_id_bot_jobs",
        "signature": "post_integrations_speech_nuance_nuance_integration_id_bot_jobs(nuance_integration_id, bot_id, expand, body)",
        "parameters": [
            {
                "name": "nuance_integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "bot_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "body",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "AsyncJob"
    },
    "POST /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/jobs": {
        "operationId": "post_integrations_speech_nuance_nuance_integration_id_bots_jobs",
        "functionName": "post_integrations_speech_nuance_nuance_integration_id_bots_jobs",
        "signature": "post_integrations_speech_nuance_nuance_integration_id_bots_jobs(nuance_integration_id, page_number, page_size, only_registered_bots)",
        "parameters": [
            {
                "name": "nuance_integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "only_registered_bots",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "AsyncJob"
    },
    "POST /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/launch/validate": {
        "operationId": "post_integrations_speech_nuance_nuance_integration_id_bots_launch_validate",
        "functionName": "post_integrations_speech_nuance_nuance_integration_id_bots_launch_validate",
        "signature": "post_integrations_speech_nuance_nuance_integration_id_bots_launch_validate(nuance_integration_id, settings)",
        "parameters": [
            {
                "name": "nuance_integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "settings",
                "type": "BotExecutionConfiguration",
                "required": "true"
            }
        ]
    },
    "PUT /api/v2/integrations/{integrationId}/config/current": {
        "operationId": "put_integration_config_current",
        "functionName": "put_integration_config_current",
        "signature": "put_integration_config_current(integration_id, body)",
        "parameters": [
            {
                "name": "integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "IntegrationConfiguration",
                "required": "false"
            }
        ],
        "return": "IntegrationConfiguration"
    },
    "PUT /api/v2/integrations/botconnector/{integrationId}/bots": {
        "operationId": "put_integrations_botconnector_integration_id_bots",
        "functionName": "put_integrations_botconnector_integration_id_bots",
        "signature": "put_integrations_botconnector_integration_id_bots(integration_id, bot_list)",
        "parameters": [
            {
                "name": "integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "bot_list",
                "type": "BotList",
                "required": "true"
            }
        ]
    },
    "PUT /api/v2/integrations/credentials/{credentialId}": {
        "operationId": "put_integrations_credential",
        "functionName": "put_integrations_credential",
        "signature": "put_integrations_credential(credential_id, body)",
        "parameters": [
            {
                "name": "credential_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Credential",
                "required": "false"
            }
        ],
        "return": "CredentialInfo"
    },
    "PUT /api/v2/integrations/speech/nuance/{nuanceIntegrationId}/bots/launch/settings": {
        "operationId": "put_integrations_speech_nuance_nuance_integration_id_bots_launch_settings",
        "functionName": "put_integrations_speech_nuance_nuance_integration_id_bots_launch_settings",
        "signature": "put_integrations_speech_nuance_nuance_integration_id_bots_launch_settings(nuance_integration_id, settings)",
        "parameters": [
            {
                "name": "nuance_integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "settings",
                "type": "NuanceBotLaunchSettings",
                "required": "true"
            }
        ]
    },
    "PUT /api/v2/integrations/speech/tts/settings": {
        "operationId": "put_integrations_speech_tts_settings",
        "functionName": "put_integrations_speech_tts_settings",
        "signature": "put_integrations_speech_tts_settings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "TtsSettings",
                "required": "true"
            }
        ],
        "return": "TtsSettings"
    },
    "PUT /api/v2/integrations/unifiedcommunications/{ucIntegrationId}/thirdpartypresences": {
        "operationId": "put_integrations_unifiedcommunication_thirdpartypresences",
        "functionName": "put_integrations_unifiedcommunication_thirdpartypresences",
        "signature": "put_integrations_unifiedcommunication_thirdpartypresences(uc_integration_id, body)",
        "parameters": [
            {
                "name": "uc_integration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "list[UCThirdPartyPresence]",
                "required": "true"
            }
        ],
        "return": "str"
    }
    
}