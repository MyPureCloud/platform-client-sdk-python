import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.RoutingApi();
page_size = 25 # int | Page size [max value is 100] (optional) (default to 25)
page_number = 1 # int | Page number [max value is 5] (optional) (default to 1)
sort_by = ''name'' # str | Sort by (optional) (default to 'name')
sort_order = ''asc'' # str | Sort order (optional) (default to 'asc')
name = 'name_example' # str | Name (optional)
id = ['id_example'] # list[str] | Queue ID(s) (optional)
division_id = ['division_id_example'] # list[str] | Division ID(s) (optional)

try:
    # Get a paged listing of simplified queue objects, filterable by name, queue ID(s), or division ID(s).
    api_response = api_instance.get_routing_queues_divisionviews(page_size=page_size, page_number=page_number, sort_by=sort_by, sort_order=sort_order, name=name, id=id, division_id=division_id)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling RoutingApi->get_routing_queues_divisionviews: %s\n" % e)