import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.TextbotsApi();
bot_type = ['bot_type_example'] # list[str] | Bot types (optional)
bot_name = 'bot_name_example' # str | Bot name (optional)
bot_id = ['bot_id_example'] # list[str] | Bot IDs. Maximum of 50 (optional)
virtual_agent_enabled = True # bool | Include or exclude virtual agent flows, only applies to GenesysBotFlows or GenesysDigitalBotFlows (optional)
page_size = 25 # int | The maximum results to return. Maximum of 100 (optional) (default to 25)

try:
    # Find bots using the currently configured friendly name or ID.
    api_response = api_instance.get_textbots_bots_search(bot_type=bot_type, bot_name=bot_name, bot_id=bot_id, virtual_agent_enabled=virtual_agent_enabled, page_size=page_size)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling TextbotsApi->get_textbots_bots_search: %s\n" % e)