{
    "DELETE /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations/{annotationId}": {
        "operationId": "delete_conversation_recording_annotation",
        "functionName": "delete_conversation_recording_annotation",
        "signature": "delete_conversation_recording_annotation(conversation_id, recording_id, annotation_id)",
        "parameters": [
            {
                "name": "conversation_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "recording_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "annotation_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/orphanrecordings/{orphanId}": {
        "operationId": "delete_orphanrecording",
        "functionName": "delete_orphanrecording",
        "signature": "delete_orphanrecording(orphan_id)",
        "parameters": [
            {
                "name": "orphan_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "OrphanRecording"
    },
    "DELETE /api/v2/recording/crossplatform/mediaretentionpolicies": {
        "operationId": "delete_recording_crossplatform_mediaretentionpolicies",
        "functionName": "delete_recording_crossplatform_mediaretentionpolicies",
        "signature": "delete_recording_crossplatform_mediaretentionpolicies(ids)",
        "parameters": [
            {
                "name": "ids",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/recording/crossplatform/mediaretentionpolicies/{policyId}": {
        "operationId": "delete_recording_crossplatform_mediaretentionpolicy",
        "functionName": "delete_recording_crossplatform_mediaretentionpolicy",
        "signature": "delete_recording_crossplatform_mediaretentionpolicy(policy_id)",
        "parameters": [
            {
                "name": "policy_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/recording/jobs/{jobId}": {
        "operationId": "delete_recording_job",
        "functionName": "delete_recording_job",
        "signature": "delete_recording_job(job_id)",
        "parameters": [
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/recording/mediaretentionpolicies": {
        "operationId": "delete_recording_mediaretentionpolicies",
        "functionName": "delete_recording_mediaretentionpolicies",
        "signature": "delete_recording_mediaretentionpolicies(ids)",
        "parameters": [
            {
                "name": "ids",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/recording/mediaretentionpolicies/{policyId}": {
        "operationId": "delete_recording_mediaretentionpolicy",
        "functionName": "delete_recording_mediaretentionpolicy",
        "signature": "delete_recording_mediaretentionpolicy(policy_id)",
        "parameters": [
            {
                "name": "policy_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "GET /api/v2/conversations/{conversationId}/recordings/{recordingId}": {
        "operationId": "get_conversation_recording",
        "functionName": "get_conversation_recording",
        "signature": "get_conversation_recording(conversation_id, recording_id, format_id, email_format_id, chat_format_id, message_format_id, download, file_name, locale, media_formats)",
        "parameters": [
            {
                "name": "conversation_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "recording_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "format_id",
                "type": "str",
                "required": "false"
            },
            {
                "name": "email_format_id",
                "type": "str",
                "required": "false"
            },
            {
                "name": "chat_format_id",
                "type": "str",
                "required": "false"
            },
            {
                "name": "message_format_id",
                "type": "str",
                "required": "false"
            },
            {
                "name": "download",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "file_name",
                "type": "str",
                "required": "false"
            },
            {
                "name": "locale",
                "type": "str",
                "required": "false"
            },
            {
                "name": "media_formats",
                "type": "list[str]",
                "required": "false"
            }
        ],
        "return": "Recording"
    },
    "GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations/{annotationId}": {
        "operationId": "get_conversation_recording_annotation",
        "functionName": "get_conversation_recording_annotation",
        "signature": "get_conversation_recording_annotation(conversation_id, recording_id, annotation_id)",
        "parameters": [
            {
                "name": "conversation_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "recording_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "annotation_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "Annotation"
    },
    "GET /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations": {
        "operationId": "get_conversation_recording_annotations",
        "functionName": "get_conversation_recording_annotations",
        "signature": "get_conversation_recording_annotations(conversation_id, recording_id)",
        "parameters": [
            {
                "name": "conversation_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "recording_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "list[Annotation]"
    },
    "GET /api/v2/conversations/{conversationId}/recordingmetadata": {
        "operationId": "get_conversation_recordingmetadata",
        "functionName": "get_conversation_recordingmetadata",
        "signature": "get_conversation_recordingmetadata(conversation_id)",
        "parameters": [
            {
                "name": "conversation_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "list[RecordingMetadata]"
    },
    "GET /api/v2/conversations/{conversationId}/recordingmetadata/{recordingId}": {
        "operationId": "get_conversation_recordingmetadata_recording_id",
        "functionName": "get_conversation_recordingmetadata_recording_id",
        "signature": "get_conversation_recordingmetadata_recording_id(conversation_id, recording_id)",
        "parameters": [
            {
                "name": "conversation_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "recording_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "RecordingMetadata"
    },
    "GET /api/v2/conversations/{conversationId}/recordings": {
        "operationId": "get_conversation_recordings",
        "functionName": "get_conversation_recordings",
        "signature": "get_conversation_recordings(conversation_id, max_wait_ms, format_id, media_formats)",
        "parameters": [
            {
                "name": "conversation_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "max_wait_ms",
                "type": "int",
                "required": "false"
            },
            {
                "name": "format_id",
                "type": "str",
                "required": "false"
            },
            {
                "name": "media_formats",
                "type": "list[str]",
                "required": "false"
            }
        ],
        "return": "list[Recording]"
    },
    "GET /api/v2/orphanrecordings/{orphanId}": {
        "operationId": "get_orphanrecording",
        "functionName": "get_orphanrecording",
        "signature": "get_orphanrecording(orphan_id)",
        "parameters": [
            {
                "name": "orphan_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "OrphanRecording"
    },
    "GET /api/v2/orphanrecordings/{orphanId}/media": {
        "operationId": "get_orphanrecording_media",
        "functionName": "get_orphanrecording_media",
        "signature": "get_orphanrecording_media(orphan_id, format_id, email_format_id, chat_format_id, message_format_id, download, file_name, locale, media_formats)",
        "parameters": [
            {
                "name": "orphan_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "format_id",
                "type": "str",
                "required": "false"
            },
            {
                "name": "email_format_id",
                "type": "str",
                "required": "false"
            },
            {
                "name": "chat_format_id",
                "type": "str",
                "required": "false"
            },
            {
                "name": "message_format_id",
                "type": "str",
                "required": "false"
            },
            {
                "name": "download",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "file_name",
                "type": "str",
                "required": "false"
            },
            {
                "name": "locale",
                "type": "str",
                "required": "false"
            },
            {
                "name": "media_formats",
                "type": "list[str]",
                "required": "false"
            }
        ],
        "return": "Recording"
    },
    "GET /api/v2/orphanrecordings": {
        "operationId": "get_orphanrecordings",
        "functionName": "get_orphanrecordings",
        "signature": "get_orphanrecordings(page_size, page_number, sort_by, expand, next_page, previous_page, has_conversation, media)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "next_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "previous_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "has_conversation",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "media",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "OrphanRecordingListing"
    },
    "GET /api/v2/recording/batchrequests/{jobId}": {
        "operationId": "get_recording_batchrequest",
        "functionName": "get_recording_batchrequest",
        "signature": "get_recording_batchrequest(job_id)",
        "parameters": [
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "BatchDownloadJobStatusResult"
    },
    "GET /api/v2/recording/crossplatform/mediaretentionpolicies": {
        "operationId": "get_recording_crossplatform_mediaretentionpolicies",
        "functionName": "get_recording_crossplatform_mediaretentionpolicies",
        "signature": "get_recording_crossplatform_mediaretentionpolicies(page_size, page_number, sort_by, expand, next_page, previous_page, name, enabled, summary, has_errors, delete_days_threshold)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "next_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "previous_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "name",
                "type": "str",
                "required": "false"
            },
            {
                "name": "enabled",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "summary",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "has_errors",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "delete_days_threshold",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "PolicyEntityListing"
    },
    "GET /api/v2/recording/crossplatform/mediaretentionpolicies/{policyId}": {
        "operationId": "get_recording_crossplatform_mediaretentionpolicy",
        "functionName": "get_recording_crossplatform_mediaretentionpolicy",
        "signature": "get_recording_crossplatform_mediaretentionpolicy(policy_id)",
        "parameters": [
            {
                "name": "policy_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "CrossPlatformPolicy"
    },
    "GET /api/v2/recording/jobs/{jobId}": {
        "operationId": "get_recording_job",
        "functionName": "get_recording_job",
        "signature": "get_recording_job(job_id)",
        "parameters": [
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "RecordingJob"
    },
    "GET /api/v2/recording/jobs/{jobId}/failedrecordings": {
        "operationId": "get_recording_job_failedrecordings",
        "functionName": "get_recording_job_failedrecordings",
        "signature": "get_recording_job_failedrecordings(job_id, page_size, page_number, include_total, cursor)",
        "parameters": [
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "include_total",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "cursor",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "FailedRecordingEntityListing"
    },
    "GET /api/v2/recording/jobs": {
        "operationId": "get_recording_jobs",
        "functionName": "get_recording_jobs",
        "signature": "get_recording_jobs(page_size, page_number, sort_by, state, show_only_my_jobs, job_type, include_total, cursor)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "state",
                "type": "str",
                "required": "false"
            },
            {
                "name": "show_only_my_jobs",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "job_type",
                "type": "str",
                "required": "false"
            },
            {
                "name": "include_total",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "cursor",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "RecordingJobEntityListing"
    },
    "GET /api/v2/recording/keyconfigurations/{keyConfigurationId}": {
        "operationId": "get_recording_keyconfiguration",
        "functionName": "get_recording_keyconfiguration",
        "signature": "get_recording_keyconfiguration(key_configuration_id)",
        "parameters": [
            {
                "name": "key_configuration_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "RecordingEncryptionConfiguration"
    },
    "GET /api/v2/recording/keyconfigurations": {
        "operationId": "get_recording_keyconfigurations",
        "functionName": "get_recording_keyconfigurations",
        "signature": "get_recording_keyconfigurations()",
        
        "return": "RecordingEncryptionConfigurationListing"
    },
    "GET /api/v2/recording/mediaretentionpolicies": {
        "operationId": "get_recording_mediaretentionpolicies",
        "functionName": "get_recording_mediaretentionpolicies",
        "signature": "get_recording_mediaretentionpolicies(page_size, page_number, sort_by, expand, next_page, previous_page, name, enabled, summary, has_errors, delete_days_threshold)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "next_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "previous_page",
                "type": "str",
                "required": "false"
            },
            {
                "name": "name",
                "type": "str",
                "required": "false"
            },
            {
                "name": "enabled",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "summary",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "has_errors",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "delete_days_threshold",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "PolicyEntityListing"
    },
    "GET /api/v2/recording/mediaretentionpolicies/{policyId}": {
        "operationId": "get_recording_mediaretentionpolicy",
        "functionName": "get_recording_mediaretentionpolicy",
        "signature": "get_recording_mediaretentionpolicy(policy_id)",
        "parameters": [
            {
                "name": "policy_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "Policy"
    },
    "GET /api/v2/recording/recordingkeys": {
        "operationId": "get_recording_recordingkeys",
        "functionName": "get_recording_recordingkeys",
        "signature": "get_recording_recordingkeys(page_size, page_number)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "EncryptionKeyEntityListing"
    },
    "GET /api/v2/recording/recordingkeys/rotationschedule": {
        "operationId": "get_recording_recordingkeys_rotationschedule",
        "functionName": "get_recording_recordingkeys_rotationschedule",
        "signature": "get_recording_recordingkeys_rotationschedule()",
        
        "return": "KeyRotationSchedule"
    },
    "GET /api/v2/recording/settings": {
        "operationId": "get_recording_settings",
        "functionName": "get_recording_settings",
        "signature": "get_recording_settings(create_default)",
        "parameters": [
            {
                "name": "create_default",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "RecordingSettings"
    },
    "GET /api/v2/recording/uploads/reports/{reportId}": {
        "operationId": "get_recording_uploads_report",
        "functionName": "get_recording_uploads_report",
        "signature": "get_recording_uploads_report(report_id)",
        "parameters": [
            {
                "name": "report_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "RecordingUploadReport"
    },
    "GET /api/v2/recordings/retention/query": {
        "operationId": "get_recordings_retention_query",
        "functionName": "get_recordings_retention_query",
        "signature": "get_recordings_retention_query(retention_threshold_days, cursor, page_size)",
        "parameters": [
            {
                "name": "retention_threshold_days",
                "type": "int",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "str",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "RecordingRetentionCursorEntityListing"
    },
    "GET /api/v2/recordings/screensessions": {
        "operationId": "get_recordings_screensessions",
        "functionName": "get_recordings_screensessions",
        "signature": "get_recordings_screensessions(page_size, page_number)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "ScreenRecordingSessionListing"
    },
    "PATCH /api/v2/recording/crossplatform/mediaretentionpolicies/{policyId}": {
        "operationId": "patch_recording_crossplatform_mediaretentionpolicy",
        "functionName": "patch_recording_crossplatform_mediaretentionpolicy",
        "signature": "patch_recording_crossplatform_mediaretentionpolicy(policy_id, body)",
        "parameters": [
            {
                "name": "policy_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "CrossPlatformPolicyUpdate",
                "required": "true"
            }
        ],
        "return": "CrossPlatformPolicy"
    },
    "PATCH /api/v2/recording/mediaretentionpolicies/{policyId}": {
        "operationId": "patch_recording_mediaretentionpolicy",
        "functionName": "patch_recording_mediaretentionpolicy",
        "signature": "patch_recording_mediaretentionpolicy(policy_id, body)",
        "parameters": [
            {
                "name": "policy_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "PolicyUpdate",
                "required": "true"
            }
        ],
        "return": "Policy"
    },
    "PATCH /api/v2/recordings/screensessions/{recordingSessionId}": {
        "operationId": "patch_recordings_screensession",
        "functionName": "patch_recordings_screensession",
        "signature": "patch_recordings_screensession(recording_session_id, body)",
        "parameters": [
            {
                "name": "recording_session_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "ScreenRecordingSessionRequest",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations": {
        "operationId": "post_conversation_recording_annotations",
        "functionName": "post_conversation_recording_annotations",
        "signature": "post_conversation_recording_annotations(conversation_id, recording_id, body)",
        "parameters": [
            {
                "name": "conversation_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "recording_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Annotation",
                "required": "true"
            }
        ],
        "return": "Annotation"
    },
    "POST /api/v2/recording/batchrequests": {
        "operationId": "post_recording_batchrequests",
        "functionName": "post_recording_batchrequests",
        "signature": "post_recording_batchrequests(body)",
        "parameters": [
            {
                "name": "body",
                "type": "BatchDownloadJobSubmission",
                "required": "true"
            }
        ],
        "return": "BatchDownloadJobSubmissionResult"
    },
    "POST /api/v2/recording/crossplatform/mediaretentionpolicies": {
        "operationId": "post_recording_crossplatform_mediaretentionpolicies",
        "functionName": "post_recording_crossplatform_mediaretentionpolicies",
        "signature": "post_recording_crossplatform_mediaretentionpolicies(body)",
        "parameters": [
            {
                "name": "body",
                "type": "CrossPlatformPolicyCreate",
                "required": "true"
            }
        ],
        "return": "CrossPlatformPolicy"
    },
    "POST /api/v2/recording/jobs": {
        "operationId": "post_recording_jobs",
        "functionName": "post_recording_jobs",
        "signature": "post_recording_jobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "RecordingJobsQuery",
                "required": "true"
            }
        ],
        "return": "RecordingJob"
    },
    "POST /api/v2/recording/keyconfigurations": {
        "operationId": "post_recording_keyconfigurations",
        "functionName": "post_recording_keyconfigurations",
        "signature": "post_recording_keyconfigurations(body)",
        "parameters": [
            {
                "name": "body",
                "type": "RecordingEncryptionConfiguration",
                "required": "true"
            }
        ],
        "return": "RecordingEncryptionConfiguration"
    },
    "POST /api/v2/recording/keyconfigurations/validate": {
        "operationId": "post_recording_keyconfigurations_validate",
        "functionName": "post_recording_keyconfigurations_validate",
        "signature": "post_recording_keyconfigurations_validate(body)",
        "parameters": [
            {
                "name": "body",
                "type": "RecordingEncryptionConfiguration",
                "required": "true"
            }
        ],
        "return": "RecordingEncryptionConfiguration"
    },
    "POST /api/v2/recording/localkeys": {
        "operationId": "post_recording_localkeys",
        "functionName": "post_recording_localkeys",
        "signature": "post_recording_localkeys(body)",
        "parameters": [
            {
                "name": "body",
                "type": "LocalEncryptionKeyRequest",
                "required": "true"
            }
        ],
        "return": "EncryptionKey"
    },
    "POST /api/v2/recording/mediaretentionpolicies": {
        "operationId": "post_recording_mediaretentionpolicies",
        "functionName": "post_recording_mediaretentionpolicies",
        "signature": "post_recording_mediaretentionpolicies(body)",
        "parameters": [
            {
                "name": "body",
                "type": "PolicyCreate",
                "required": "true"
            }
        ],
        "return": "Policy"
    },
    "POST /api/v2/recording/recordingkeys": {
        "operationId": "post_recording_recordingkeys",
        "functionName": "post_recording_recordingkeys",
        "signature": "post_recording_recordingkeys()",
        
        "return": "EncryptionKey"
    },
    "POST /api/v2/recording/uploads/reports": {
        "operationId": "post_recording_uploads_reports",
        "functionName": "post_recording_uploads_reports",
        "signature": "post_recording_uploads_reports(body)",
        "parameters": [
            {
                "name": "body",
                "type": "RecordingUploadReportRequest",
                "required": "true"
            }
        ],
        "return": "RecordingUploadReport"
    },
    "POST /api/v2/recordings/deletionprotection": {
        "operationId": "post_recordings_deletionprotection",
        "functionName": "post_recordings_deletionprotection",
        "signature": "post_recordings_deletionprotection(body)",
        "parameters": [
            {
                "name": "body",
                "type": "ConversationDeletionProtectionQuery",
                "required": "true"
            }
        ],
        "return": "list[AddressableEntityRef]"
    },
    "POST /api/v2/recordings/screensessions/acknowledge": {
        "operationId": "post_recordings_screensessions_acknowledge",
        "functionName": "post_recordings_screensessions_acknowledge",
        "signature": "post_recordings_screensessions_acknowledge(body)",
        "parameters": [
            {
                "name": "body",
                "type": "AcknowledgeScreenRecordingRequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/recordings/screensessions/metadata": {
        "operationId": "post_recordings_screensessions_metadata",
        "functionName": "post_recordings_screensessions_metadata",
        "signature": "post_recordings_screensessions_metadata(body)",
        "parameters": [
            {
                "name": "body",
                "type": "ScreenRecordingMetaDataRequest",
                "required": "true"
            }
        ]
    },
    "PUT /api/v2/conversations/{conversationId}/recordings/{recordingId}": {
        "operationId": "put_conversation_recording",
        "functionName": "put_conversation_recording",
        "signature": "put_conversation_recording(conversation_id, recording_id, body, clear_export)",
        "parameters": [
            {
                "name": "conversation_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "recording_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Recording",
                "required": "true"
            },
            {
                "name": "clear_export",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Recording"
    },
    "PUT /api/v2/conversations/{conversationId}/recordings/{recordingId}/annotations/{annotationId}": {
        "operationId": "put_conversation_recording_annotation",
        "functionName": "put_conversation_recording_annotation",
        "signature": "put_conversation_recording_annotation(conversation_id, recording_id, annotation_id, body)",
        "parameters": [
            {
                "name": "conversation_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "recording_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "annotation_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Annotation",
                "required": "true"
            }
        ],
        "return": "Annotation"
    },
    "PUT /api/v2/orphanrecordings/{orphanId}": {
        "operationId": "put_orphanrecording",
        "functionName": "put_orphanrecording",
        "signature": "put_orphanrecording(orphan_id, body)",
        "parameters": [
            {
                "name": "orphan_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "OrphanUpdateRequest",
                "required": "false"
            }
        ],
        "return": "Recording"
    },
    "PUT /api/v2/recording/crossplatform/mediaretentionpolicies/{policyId}": {
        "operationId": "put_recording_crossplatform_mediaretentionpolicy",
        "functionName": "put_recording_crossplatform_mediaretentionpolicy",
        "signature": "put_recording_crossplatform_mediaretentionpolicy(policy_id, body)",
        "parameters": [
            {
                "name": "policy_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "CrossPlatformPolicy",
                "required": "true"
            }
        ],
        "return": "CrossPlatformPolicy"
    },
    "PUT /api/v2/recording/jobs/{jobId}": {
        "operationId": "put_recording_job",
        "functionName": "put_recording_job",
        "signature": "put_recording_job(job_id, body)",
        "parameters": [
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "ExecuteRecordingJobsQuery",
                "required": "true"
            }
        ],
        "return": "RecordingJob"
    },
    "PUT /api/v2/recording/keyconfigurations/{keyConfigurationId}": {
        "operationId": "put_recording_keyconfiguration",
        "functionName": "put_recording_keyconfiguration",
        "signature": "put_recording_keyconfiguration(key_configuration_id, body)",
        "parameters": [
            {
                "name": "key_configuration_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "RecordingEncryptionConfiguration",
                "required": "true"
            }
        ],
        "return": "RecordingEncryptionConfiguration"
    },
    "PUT /api/v2/recording/mediaretentionpolicies/{policyId}": {
        "operationId": "put_recording_mediaretentionpolicy",
        "functionName": "put_recording_mediaretentionpolicy",
        "signature": "put_recording_mediaretentionpolicy(policy_id, body)",
        "parameters": [
            {
                "name": "policy_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Policy",
                "required": "true"
            }
        ],
        "return": "Policy"
    },
    "PUT /api/v2/recording/recordingkeys/rotationschedule": {
        "operationId": "put_recording_recordingkeys_rotationschedule",
        "functionName": "put_recording_recordingkeys_rotationschedule",
        "signature": "put_recording_recordingkeys_rotationschedule(body)",
        "parameters": [
            {
                "name": "body",
                "type": "KeyRotationSchedule",
                "required": "true"
            }
        ],
        "return": "KeyRotationSchedule"
    },
    "PUT /api/v2/recording/settings": {
        "operationId": "put_recording_settings",
        "functionName": "put_recording_settings",
        "signature": "put_recording_settings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "RecordingSettings",
                "required": "true"
            }
        ],
        "return": "RecordingSettings"
    },
    "PUT /api/v2/recordings/deletionprotection": {
        "operationId": "put_recordings_deletionprotection",
        "functionName": "put_recordings_deletionprotection",
        "signature": "put_recordings_deletionprotection(protect, body)",
        "parameters": [
            {
                "name": "protect",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "body",
                "type": "ConversationDeletionProtectionQuery",
                "required": "false"
            }
        ]
    }
    
}