import time
import 
from .rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
.configuration.access_token = 'YOUR_ACCESS_TOKEN'

# create an instance of the API class
api_instance = .GetLanguageunderstandingDomainFeedbackRequest()
domain_id = 'domain_id_example' # str | ID of the NLU domain.
intent_name = 'intent_name_example' # str | The top intent name to retrieve feedback for. (optional)
assessment = 'assessment_example' # str | The top assessment to retrieve feedback for. (optional)
date_start = '2013-10-20' # date | Begin of time window as ISO-8601 date. (optional)
date_end = '2013-10-20' # date | End of time window as ISO-8601 date. (optional)
include_deleted = true # bool | Whether to include soft-deleted items in the result. (optional)
page_number = 1 # int | Page number (optional) (default to 1)
page_size = 25 # int | Page size (optional) (default to 25)
enable_cursor_pagination = false # bool | Enable Cursor Pagination (optional) (default to false)
after = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. This is considered only when enableCursorPagination=true (optional)
fields = ['fields_example'] # list[str] | Fields and properties to get, comma-separated (optional)

try:
    # Get all feedback in the given NLU Domain Version.
    api_response = api_instance.get_languageunderstanding_domain_feedback(domain_id, intent_name=intent_name, assessment=assessment, date_start=date_start, date_end=date_end, include_deleted=include_deleted, page_number=page_number, page_size=page_size, enable_cursor_pagination=enable_cursor_pagination, after=after, fields=fields)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling GetLanguageunderstandingDomainFeedbackRequest->get_languageunderstanding_domain_feedback: %s\n" % e)