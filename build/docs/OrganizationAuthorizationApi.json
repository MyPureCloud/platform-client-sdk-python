{
    "DELETE /api/v2/orgauthorization/trustees/{trusteeOrgId}": {
        "operationId": "delete_orgauthorization_trustee",
        "functionName": "delete_orgauthorization_trustee",
        "signature": "delete_orgauthorization_trustee(trustee_org_id)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/orgauthorization/trustees/{trusteeOrgId}/clonedusers/{trusteeUserId}": {
        "operationId": "delete_orgauthorization_trustee_cloneduser",
        "functionName": "delete_orgauthorization_trustee_cloneduser",
        "signature": "delete_orgauthorization_trustee_cloneduser(trustee_org_id, trustee_user_id)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_user_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}": {
        "operationId": "delete_orgauthorization_trustee_group",
        "functionName": "delete_orgauthorization_trustee_group",
        "signature": "delete_orgauthorization_trustee_group(trustee_org_id, trustee_group_id)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_group_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roles": {
        "operationId": "delete_orgauthorization_trustee_group_roles",
        "functionName": "delete_orgauthorization_trustee_group_roles",
        "signature": "delete_orgauthorization_trustee_group_roles(trustee_org_id, trustee_group_id)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_group_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}": {
        "operationId": "delete_orgauthorization_trustee_user",
        "functionName": "delete_orgauthorization_trustee_user",
        "signature": "delete_orgauthorization_trustee_user(trustee_org_id, trustee_user_id)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_user_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles": {
        "operationId": "delete_orgauthorization_trustee_user_roles",
        "functionName": "delete_orgauthorization_trustee_user_roles",
        "signature": "delete_orgauthorization_trustee_user_roles(trustee_org_id, trustee_user_id)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_user_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/orgauthorization/trustees": {
        "operationId": "delete_orgauthorization_trustees",
        "functionName": "delete_orgauthorization_trustees",
        "signature": "delete_orgauthorization_trustees(id)",
        "parameters": [
            {
                "name": "id",
                "type": "list[str]",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}": {
        "operationId": "delete_orgauthorization_trustor",
        "functionName": "delete_orgauthorization_trustor",
        "signature": "delete_orgauthorization_trustor(trustor_org_id)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers/{trusteeUserId}": {
        "operationId": "delete_orgauthorization_trustor_cloneduser",
        "functionName": "delete_orgauthorization_trustor_cloneduser",
        "signature": "delete_orgauthorization_trustor_cloneduser(trustor_org_id, trustee_user_id)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_user_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/groups/{trustorGroupId}": {
        "operationId": "delete_orgauthorization_trustor_group",
        "functionName": "delete_orgauthorization_trustor_group",
        "signature": "delete_orgauthorization_trustor_group(trustor_org_id, trustor_group_id)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustor_group_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}": {
        "operationId": "delete_orgauthorization_trustor_user",
        "functionName": "delete_orgauthorization_trustor_user",
        "signature": "delete_orgauthorization_trustor_user(trustor_org_id, trustee_user_id)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_user_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/orgauthorization/trustors": {
        "operationId": "delete_orgauthorization_trustors",
        "functionName": "delete_orgauthorization_trustors",
        "signature": "delete_orgauthorization_trustors(id)",
        "parameters": [
            {
                "name": "id",
                "type": "list[str]",
                "required": "true"
            }
        ]
    },
    "GET /api/v2/orgauthorization/pairings/{pairingId}": {
        "operationId": "get_orgauthorization_pairing",
        "functionName": "get_orgauthorization_pairing",
        "signature": "get_orgauthorization_pairing(pairing_id)",
        "parameters": [
            {
                "name": "pairing_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "TrustRequest"
    },
    "GET /api/v2/orgauthorization/trustees/{trusteeOrgId}": {
        "operationId": "get_orgauthorization_trustee",
        "functionName": "get_orgauthorization_trustee",
        "signature": "get_orgauthorization_trustee(trustee_org_id)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "Trustee"
    },
    "GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/clonedusers": {
        "operationId": "get_orgauthorization_trustee_clonedusers",
        "functionName": "get_orgauthorization_trustee_clonedusers",
        "signature": "get_orgauthorization_trustee_clonedusers(trustee_org_id)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "ClonedUserEntityListing"
    },
    "GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}": {
        "operationId": "get_orgauthorization_trustee_group",
        "functionName": "get_orgauthorization_trustee_group",
        "signature": "get_orgauthorization_trustee_group(trustee_org_id, trustee_group_id)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_group_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "TrustGroup"
    },
    "GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roles": {
        "operationId": "get_orgauthorization_trustee_group_roles",
        "functionName": "get_orgauthorization_trustee_group_roles",
        "signature": "get_orgauthorization_trustee_group_roles(trustee_org_id, trustee_group_id)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_group_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "UserAuthorization"
    },
    "GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups": {
        "operationId": "get_orgauthorization_trustee_groups",
        "functionName": "get_orgauthorization_trustee_groups",
        "signature": "get_orgauthorization_trustee_groups(trustee_org_id, page_size, page_number)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "TrustGroupEntityListing"
    },
    "GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}": {
        "operationId": "get_orgauthorization_trustee_user",
        "functionName": "get_orgauthorization_trustee_user",
        "signature": "get_orgauthorization_trustee_user(trustee_org_id, trustee_user_id)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "TrustUser"
    },
    "GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles": {
        "operationId": "get_orgauthorization_trustee_user_roles",
        "functionName": "get_orgauthorization_trustee_user_roles",
        "signature": "get_orgauthorization_trustee_user_roles(trustee_org_id, trustee_user_id)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "UserAuthorization"
    },
    "GET /api/v2/orgauthorization/trustees/{trusteeOrgId}/users": {
        "operationId": "get_orgauthorization_trustee_users",
        "functionName": "get_orgauthorization_trustee_users",
        "signature": "get_orgauthorization_trustee_users(trustee_org_id, page_size, page_number)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "TrustUserEntityListing"
    },
    "GET /api/v2/orgauthorization/trustees": {
        "operationId": "get_orgauthorization_trustees",
        "functionName": "get_orgauthorization_trustees",
        "signature": "get_orgauthorization_trustees(page_size, page_number)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "TrustEntityListing"
    },
    "GET /api/v2/orgauthorization/trustees/default": {
        "operationId": "get_orgauthorization_trustees_default",
        "functionName": "get_orgauthorization_trustees_default",
        "signature": "get_orgauthorization_trustees_default()",
        
        "return": "Trustee"
    },
    "GET /api/v2/orgauthorization/trustors/{trustorOrgId}": {
        "operationId": "get_orgauthorization_trustor",
        "functionName": "get_orgauthorization_trustor",
        "signature": "get_orgauthorization_trustor(trustor_org_id)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "Trustor"
    },
    "GET /api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers/{trusteeUserId}": {
        "operationId": "get_orgauthorization_trustor_cloneduser",
        "functionName": "get_orgauthorization_trustor_cloneduser",
        "signature": "get_orgauthorization_trustor_cloneduser(trustor_org_id, trustee_user_id)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "ClonedUser"
    },
    "GET /api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers": {
        "operationId": "get_orgauthorization_trustor_clonedusers",
        "functionName": "get_orgauthorization_trustor_clonedusers",
        "signature": "get_orgauthorization_trustor_clonedusers(trustor_org_id)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "ClonedUserEntityListing"
    },
    "GET /api/v2/orgauthorization/trustors/{trustorOrgId}/groups/{trustorGroupId}": {
        "operationId": "get_orgauthorization_trustor_group",
        "functionName": "get_orgauthorization_trustor_group",
        "signature": "get_orgauthorization_trustor_group(trustor_org_id, trustor_group_id)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustor_group_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "TrustGroup"
    },
    "GET /api/v2/orgauthorization/trustors/{trustorOrgId}/groups": {
        "operationId": "get_orgauthorization_trustor_groups",
        "functionName": "get_orgauthorization_trustor_groups",
        "signature": "get_orgauthorization_trustor_groups(trustor_org_id, page_size, page_number)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "TrustGroupEntityListing"
    },
    "GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}": {
        "operationId": "get_orgauthorization_trustor_user",
        "functionName": "get_orgauthorization_trustor_user",
        "signature": "get_orgauthorization_trustor_user(trustor_org_id, trustee_user_id)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "TrustUser"
    },
    "GET /api/v2/orgauthorization/trustors/{trustorOrgId}/users": {
        "operationId": "get_orgauthorization_trustor_users",
        "functionName": "get_orgauthorization_trustor_users",
        "signature": "get_orgauthorization_trustor_users(trustor_org_id, page_size, page_number)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "TrustUserEntityListing"
    },
    "GET /api/v2/orgauthorization/trustors": {
        "operationId": "get_orgauthorization_trustors",
        "functionName": "get_orgauthorization_trustors",
        "signature": "get_orgauthorization_trustors(page_size, page_number)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "TrustorEntityListing"
    },
    "POST /api/v2/orgauthorization/pairings": {
        "operationId": "post_orgauthorization_pairings",
        "functionName": "post_orgauthorization_pairings",
        "signature": "post_orgauthorization_pairings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "TrustRequestCreate",
                "required": "true"
            }
        ],
        "return": "TrustRequest"
    },
    "POST /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups": {
        "operationId": "post_orgauthorization_trustee_groups",
        "functionName": "post_orgauthorization_trustee_groups",
        "signature": "post_orgauthorization_trustee_groups(trustee_org_id, body)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "TrustMemberCreate",
                "required": "true"
            }
        ],
        "return": "TrustGroup"
    },
    "POST /api/v2/orgauthorization/trustees/{trusteeOrgId}/users": {
        "operationId": "post_orgauthorization_trustee_users",
        "functionName": "post_orgauthorization_trustee_users",
        "signature": "post_orgauthorization_trustee_users(trustee_org_id, body)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "TrustMemberCreate",
                "required": "true"
            }
        ],
        "return": "TrustUser"
    },
    "POST /api/v2/orgauthorization/trustees": {
        "operationId": "post_orgauthorization_trustees",
        "functionName": "post_orgauthorization_trustees",
        "signature": "post_orgauthorization_trustees(body)",
        "parameters": [
            {
                "name": "body",
                "type": "TrustCreate",
                "required": "true"
            }
        ],
        "return": "Trustee"
    },
    "POST /api/v2/orgauthorization/trustees/audits": {
        "operationId": "post_orgauthorization_trustees_audits",
        "functionName": "post_orgauthorization_trustees_audits",
        "signature": "post_orgauthorization_trustees_audits(body, page_size, page_number, sort_by, sort_order)",
        "parameters": [
            {
                "name": "body",
                "type": "TrusteeAuditQueryRequest",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "sort_order",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "object"
    },
    "POST /api/v2/orgauthorization/trustees/default": {
        "operationId": "post_orgauthorization_trustees_default",
        "functionName": "post_orgauthorization_trustees_default",
        "signature": "post_orgauthorization_trustees_default(assign_default_role, auto_expire)",
        "parameters": [
            {
                "name": "assign_default_role",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "auto_expire",
                "type": "bool",
                "required": "false"
            }
        ],
        "return": "Trustee"
    },
    "POST /api/v2/orgauthorization/trustor/audits": {
        "operationId": "post_orgauthorization_trustor_audits",
        "functionName": "post_orgauthorization_trustor_audits",
        "signature": "post_orgauthorization_trustor_audits(body, page_size, page_number, sort_by, sort_order)",
        "parameters": [
            {
                "name": "body",
                "type": "TrustorAuditQueryRequest",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_by",
                "type": "str",
                "required": "false"
            },
            {
                "name": "sort_order",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "object"
    },
    "PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}": {
        "operationId": "put_orgauthorization_trustee",
        "functionName": "put_orgauthorization_trustee",
        "signature": "put_orgauthorization_trustee(trustee_org_id, body)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "TrustUpdate",
                "required": "true"
            }
        ],
        "return": "Trustee"
    },
    "PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roledivisions": {
        "operationId": "put_orgauthorization_trustee_group_roledivisions",
        "functionName": "put_orgauthorization_trustee_group_roledivisions",
        "signature": "put_orgauthorization_trustee_group_roledivisions(trustee_org_id, trustee_group_id, body)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_group_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "RoleDivisionGrants",
                "required": "true"
            }
        ],
        "return": "UserAuthorization"
    },
    "PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/groups/{trusteeGroupId}/roles": {
        "operationId": "put_orgauthorization_trustee_group_roles",
        "functionName": "put_orgauthorization_trustee_group_roles",
        "signature": "put_orgauthorization_trustee_group_roles(trustee_org_id, trustee_group_id, body)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_group_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "list[str]",
                "required": "true"
            }
        ],
        "return": "UserAuthorization"
    },
    "PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roledivisions": {
        "operationId": "put_orgauthorization_trustee_user_roledivisions",
        "functionName": "put_orgauthorization_trustee_user_roledivisions",
        "signature": "put_orgauthorization_trustee_user_roledivisions(trustee_org_id, trustee_user_id, body)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "RoleDivisionGrants",
                "required": "true"
            }
        ],
        "return": "UserAuthorization"
    },
    "PUT /api/v2/orgauthorization/trustees/{trusteeOrgId}/users/{trusteeUserId}/roles": {
        "operationId": "put_orgauthorization_trustee_user_roles",
        "functionName": "put_orgauthorization_trustee_user_roles",
        "signature": "put_orgauthorization_trustee_user_roles(trustee_org_id, trustee_user_id, body)",
        "parameters": [
            {
                "name": "trustee_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "list[str]",
                "required": "true"
            }
        ],
        "return": "UserAuthorization"
    },
    "PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/clonedusers/{trusteeUserId}": {
        "operationId": "put_orgauthorization_trustor_cloneduser",
        "functionName": "put_orgauthorization_trustor_cloneduser",
        "signature": "put_orgauthorization_trustor_cloneduser(trustor_org_id, trustee_user_id)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "ClonedUser"
    },
    "PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/groups/{trustorGroupId}": {
        "operationId": "put_orgauthorization_trustor_group",
        "functionName": "put_orgauthorization_trustor_group",
        "signature": "put_orgauthorization_trustor_group(trustor_org_id, trustor_group_id)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustor_group_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "TrustGroup"
    },
    "PUT /api/v2/orgauthorization/trustors/{trustorOrgId}/users/{trusteeUserId}": {
        "operationId": "put_orgauthorization_trustor_user",
        "functionName": "put_orgauthorization_trustor_user",
        "signature": "put_orgauthorization_trustor_user(trustor_org_id, trustee_user_id)",
        "parameters": [
            {
                "name": "trustor_org_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "trustee_user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "TrustUser"
    }
    
}