import time
import 
from .rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
.configuration.access_token = 'YOUR_ACCESS_TOKEN'

# create an instance of the API class
api_instance = .GetKnowledgeKnowledgebaseLanguageTrainingsRequest()
knowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID
language_code = 'en-US' # str | Language code, format: iso2-LOCALE
before = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)
after = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)
limit = 'limit_example' # str | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize, use CursorQueryParameters instead. (optional)
page_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)
knowledge_documents_state = 'knowledge_documents_state_example' # str | Return the training with the specified state of the trained documents. (optional)

try:
    # Get all trainings information for a knowledgebase
    api_response = api_instance.get_knowledge_knowledgebase_language_trainings(knowledge_base_id, language_code, before=before, after=after, limit=limit, page_size=page_size, knowledge_documents_state=knowledge_documents_state)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling GetKnowledgeKnowledgebaseLanguageTrainingsRequest->get_knowledge_knowledgebase_language_trainings: %s\n" % e)