import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.ExternalContactsApi();
cursor = 'cursor_example' # str | Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL (optional)
limit = 56 # int | The number of ExternalSources per page; must be between 10 and 200, default is 100 (optional)
name = 'name_example' # str | Filter by external source name. Filtering is prefix filtering and not an exact match (optional)
active = True # bool | Filter by active status of external source (optional)

try:
    # Fetch a list of External Sources
    api_response = api_instance.get_externalcontacts_externalsources(cursor=cursor, limit=limit, name=name, active=active)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling ExternalContactsApi->get_externalcontacts_externalsources: %s\n" % e)