import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...) or get_code_authorization_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.KnowledgeApi();
knowledge_base_id = 'knowledge_base_id_example' # str | Knowledge base ID.
document_id = 'document_id_example' # str | Document ID.
before = 'before_example' # str | The cursor that points to the start of the set of entities that has been returned. (optional)
after = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)
page_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)
only_commented = True # bool | If true, only feedback records that have comment are returned. If false, feedback records with and without comment are returned. Default: false. (optional)
document_version_id = 'document_version_id_example' # str | Document version ID to filter by. Supported only if onlyCommented=true is set. (optional)
document_variation_id = 'document_variation_id_example' # str | Document variation ID to filter by. Supported only if onlyCommented=true is set. (optional)
app_type = 'app_type_example' # str | Application type to filter by. Supported only if onlyCommented=true is set. (optional)
query_type = 'query_type_example' # str | Query type to filter by. Supported only if onlyCommented=true is set. (optional)
user_id = 'user_id_example' # str | The ID of the user, who created the feedback, to filter by. Supported only if onlyCommented=true is set. (optional)
queue_id = 'queue_id_example' # str | Queue ID to filter by. Supported only if onlyCommented=true is set. (optional)
state = 'state_example' # str | State to filter by. Supported only if onlyCommented=true is set. Default: Final (optional)

try:
    # Get a list of feedback records given on a document
    api_response = api_instance.get_knowledge_knowledgebase_document_feedback(knowledge_base_id, document_id, before=before, after=after, page_size=page_size, only_commented=only_commented, document_version_id=document_version_id, document_variation_id=document_variation_id, app_type=app_type, query_type=query_type, user_id=user_id, queue_id=queue_id, state=state)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling KnowledgeApi->get_knowledge_knowledgebase_document_feedback: %s\n" % e)