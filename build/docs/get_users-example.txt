import time
import 
from .rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
.configuration.access_token = 'YOUR_ACCESS_TOKEN'

# create an instance of the API class
api_instance = .GetUsersRequest()
page_size = 25 # int | Page size (optional) (default to 25)
page_number = 1 # int | Page number (optional) (default to 1)
id = ['id_example'] # list[str] | A list of user IDs to fetch by bulk (optional)
jabber_id = ['jabber_id_example'] # list[str] | A list of jabberIds to fetch by bulk (cannot be used with the \"id\" parameter) (optional)
sort_order = 'ASC' # str | Ascending or descending sort order (optional) (default to ASC)
expand = ['expand_example'] # list[str] | Which fields, if any, to expand (optional)
integration_presence_source = 'integration_presence_source_example' # str | Gets an integration presence for users instead of their defaults. This parameter will only be used when presence is provided as an \"expand\". When using this parameter the maximum number of users that can be returned is 100. (optional)
state = 'active' # str | Only list users of this state (optional) (default to active)

try:
    # Get the list of available users.
    api_response = api_instance.get_users(page_size=page_size, page_number=page_number, id=id, jabber_id=jabber_id, sort_order=sort_order, expand=expand, integration_presence_source=integration_presence_source, state=state)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling GetUsersRequest->get_users: %s\n" % e)