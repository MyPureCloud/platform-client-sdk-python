import time
import 
from .rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
.configuration.access_token = 'YOUR_ACCESS_TOKEN'

# create an instance of the API class
api_instance = .GetIntegrationsActionsRequest()
page_size = 25 # int | The total page size requested (optional) (default to 25)
page_number = 1 # int | The page number requested (optional) (default to 1)
next_page = 'next_page_example' # str | next page token (optional)
previous_page = 'previous_page_example' # str | Previous page token (optional)
sort_by = 'sort_by_example' # str | Root level field name to sort on. (optional)
sort_order = 'asc' # str | Direction to sort 'sortBy' field. (optional) (default to asc)
category = 'category_example' # str | Filter by category name (optional)
name = 'name_example' # str | Filter by action name. Provide full or just the first part of name. (optional)
secure = 'secure_example' # str | Filter to only include secure actions. True will only include actions marked secured. False will include only unsecure actions. Do not use filter if you want all Actions. (optional)
include_auth_actions = 'false' # str | Whether or not to include authentication actions in the response. These actions are not directly executable. Some integrations create them and will run them as needed to refresh authentication information for other actions. (optional) (default to false)

try:
    # Retrieves all actions associated with filters passed in via query param.
    api_response = api_instance.get_integrations_actions(page_size=page_size, page_number=page_number, next_page=next_page, previous_page=previous_page, sort_by=sort_by, sort_order=sort_order, category=category, name=name, secure=secure, include_auth_actions=include_auth_actions)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling GetIntegrationsActionsRequest->get_integrations_actions: %s\n" % e)