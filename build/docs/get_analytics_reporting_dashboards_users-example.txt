import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.AnalyticsApi();
sort_by = ''asc'' # str |  (optional) (default to 'asc')
page_number = 1 # int |  (optional) (default to 1)
page_size = 25 # int |  (optional) (default to 25)
id = ['id_example'] # list[str] | A list of user IDs to fetch by bulk (optional)
state = 'state_example' # str | Only list users of this state (optional)
deleted_only = True # bool | Only list users with deleted dashboards (optional)

try:
    # Get dashboards summary for users in a org
    api_response = api_instance.get_analytics_reporting_dashboards_users(sort_by=sort_by, page_number=page_number, page_size=page_size, id=id, state=state, deleted_only=deleted_only)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling AnalyticsApi->get_analytics_reporting_dashboards_users: %s\n" % e)