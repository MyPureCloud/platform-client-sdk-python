import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.RoutingApi();
predictor_id = 'predictor_id_example' # str | Predictor ID
body = PureCloudPlatformClientV2.PatchPredictorRequest() # PatchPredictorRequest |  (optional)

try:
    # Update single predictor.
    api_response = api_instance.patch_routing_predictor(predictor_id, body=body)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling RoutingApi->patch_routing_predictor: %s\n" % e)