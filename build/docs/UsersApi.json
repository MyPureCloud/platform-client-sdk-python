{
    "DELETE /api/v2/analytics/users/details/jobs/{jobId}": {
        "operationId": "delete_analytics_users_details_job",
        "functionName": "delete_analytics_users_details_job",
        "signature": "delete_analytics_users_details_job(job_id)",
        "parameters": [
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/authorization/subjects/{subjectId}/divisions/{divisionId}/roles/{roleId}": {
        "operationId": "delete_authorization_subject_division_role",
        "functionName": "delete_authorization_subject_division_role",
        "signature": "delete_authorization_subject_division_role(subject_id, division_id, role_id)",
        "parameters": [
            {
                "name": "subject_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "division_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "role_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/routing/users/{userId}/utilization": {
        "operationId": "delete_routing_user_utilization",
        "functionName": "delete_routing_user_utilization",
        "signature": "delete_routing_user_utilization(user_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/users/{userId}": {
        "operationId": "delete_user",
        "functionName": "delete_user",
        "signature": "delete_user(user_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "object"
    },
    "DELETE /api/v2/users/{userId}/routinglanguages/{languageId}": {
        "operationId": "delete_user_routinglanguage",
        "functionName": "delete_user_routinglanguage",
        "signature": "delete_user_routinglanguage(user_id, language_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "language_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/users/{userId}/routingskills/{skillId}": {
        "operationId": "delete_user_routingskill",
        "functionName": "delete_user_routingskill",
        "signature": "delete_user_routingskill(user_id, skill_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "skill_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/users/{userId}/station/associatedstation": {
        "operationId": "delete_user_station_associatedstation",
        "functionName": "delete_user_station_associatedstation",
        "signature": "delete_user_station_associatedstation(user_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/users/{userId}/station/defaultstation": {
        "operationId": "delete_user_station_defaultstation",
        "functionName": "delete_user_station_defaultstation",
        "signature": "delete_user_station_defaultstation(user_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "GET /api/v2/analytics/users/aggregates/jobs/{jobId}": {
        "operationId": "get_analytics_users_aggregates_job",
        "functionName": "get_analytics_users_aggregates_job",
        "signature": "get_analytics_users_aggregates_job(job_id)",
        "parameters": [
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "AsyncQueryStatus"
    },
    "GET /api/v2/analytics/users/aggregates/jobs/{jobId}/results": {
        "operationId": "get_analytics_users_aggregates_job_results",
        "functionName": "get_analytics_users_aggregates_job_results",
        "signature": "get_analytics_users_aggregates_job_results(job_id, cursor)",
        "parameters": [
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "UserAsyncAggregateQueryResponse"
    },
    "GET /api/v2/analytics/users/details/jobs/{jobId}": {
        "operationId": "get_analytics_users_details_job",
        "functionName": "get_analytics_users_details_job",
        "signature": "get_analytics_users_details_job(job_id)",
        "parameters": [
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "AsyncQueryStatus"
    },
    "GET /api/v2/analytics/users/details/jobs/{jobId}/results": {
        "operationId": "get_analytics_users_details_job_results",
        "functionName": "get_analytics_users_details_job_results",
        "signature": "get_analytics_users_details_job_results(job_id, cursor, page_size)",
        "parameters": [
            {
                "name": "job_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "str",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "AnalyticsUserDetailsAsyncQueryResponse"
    },
    "GET /api/v2/analytics/users/details/jobs/availability": {
        "operationId": "get_analytics_users_details_jobs_availability",
        "functionName": "get_analytics_users_details_jobs_availability",
        "signature": "get_analytics_users_details_jobs_availability()",
        
        "return": "DataAvailabilityResponse"
    },
    "GET /api/v2/authorization/divisionspermitted/me": {
        "operationId": "get_authorization_divisionspermitted_me",
        "functionName": "get_authorization_divisionspermitted_me",
        "signature": "get_authorization_divisionspermitted_me(permission, name)",
        "parameters": [
            {
                "name": "permission",
                "type": "str",
                "required": "true"
            },
            {
                "name": "name",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "list[AuthzDivision]"
    },
    "GET /api/v2/authorization/divisionspermitted/paged/me": {
        "operationId": "get_authorization_divisionspermitted_paged_me",
        "functionName": "get_authorization_divisionspermitted_paged_me",
        "signature": "get_authorization_divisionspermitted_paged_me(permission, page_number, page_size)",
        "parameters": [
            {
                "name": "permission",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "DivsPermittedEntityListing"
    },
    "GET /api/v2/authorization/divisionspermitted/paged/{subjectId}": {
        "operationId": "get_authorization_divisionspermitted_paged_subject_id",
        "functionName": "get_authorization_divisionspermitted_paged_subject_id",
        "signature": "get_authorization_divisionspermitted_paged_subject_id(subject_id, permission, page_number, page_size)",
        "parameters": [
            {
                "name": "subject_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "permission",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "DivsPermittedEntityListing"
    },
    "GET /api/v2/authorization/subjects/{subjectId}": {
        "operationId": "get_authorization_subject",
        "functionName": "get_authorization_subject",
        "signature": "get_authorization_subject(subject_id)",
        "parameters": [
            {
                "name": "subject_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "AuthzSubject"
    },
    "GET /api/v2/authorization/subjects/me": {
        "operationId": "get_authorization_subjects_me",
        "functionName": "get_authorization_subjects_me",
        "signature": "get_authorization_subjects_me()",
        
        "return": "AuthzSubject"
    },
    "GET /api/v2/fieldconfig": {
        "operationId": "get_fieldconfig",
        "functionName": "get_fieldconfig",
        "signature": "get_fieldconfig(type)",
        "parameters": [
            {
                "name": "type",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "FieldConfig"
    },
    "GET /api/v2/profiles/users": {
        "operationId": "get_profiles_users",
        "functionName": "get_profiles_users",
        "signature": "get_profiles_users(page_size, page_number, id, jid, sort_order, expand, integration_presence_source)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "id",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "jid",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "sort_order",
                "type": "str",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "integration_presence_source",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "UserProfileEntityListing"
    },
    "GET /api/v2/routing/users/{userId}/utilization": {
        "operationId": "get_routing_user_utilization",
        "functionName": "get_routing_user_utilization",
        "signature": "get_routing_user_utilization(user_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "AgentMaxUtilization"
    },
    "GET /api/v2/users/{userId}": {
        "operationId": "get_user",
        "functionName": "get_user",
        "signature": "get_user(user_id, expand, integration_presence_source, state)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "integration_presence_source",
                "type": "str",
                "required": "false"
            },
            {
                "name": "state",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "User"
    },
    "GET /api/v2/users/{userId}/adjacents": {
        "operationId": "get_user_adjacents",
        "functionName": "get_user_adjacents",
        "signature": "get_user_adjacents(user_id, expand)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            }
        ],
        "return": "Adjacents"
    },
    "GET /api/v2/users/{userId}/callforwarding": {
        "operationId": "get_user_callforwarding",
        "functionName": "get_user_callforwarding",
        "signature": "get_user_callforwarding(user_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "CallForwarding"
    },
    "GET /api/v2/users/{userId}/directreports": {
        "operationId": "get_user_directreports",
        "functionName": "get_user_directreports",
        "signature": "get_user_directreports(user_id, expand)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            }
        ],
        "return": "list[User]"
    },
    "GET /api/v2/users/{userId}/favorites": {
        "operationId": "get_user_favorites",
        "functionName": "get_user_favorites",
        "signature": "get_user_favorites(user_id, page_size, page_number, sort_order, expand)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_order",
                "type": "str",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            }
        ],
        "return": "UserEntityListing"
    },
    "GET /api/v2/users/{userId}/geolocations/{clientId}": {
        "operationId": "get_user_geolocation",
        "functionName": "get_user_geolocation",
        "signature": "get_user_geolocation(user_id, client_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "client_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "Geolocation"
    },
    "GET /api/v2/users/{userId}/outofoffice": {
        "operationId": "get_user_outofoffice",
        "functionName": "get_user_outofoffice",
        "signature": "get_user_outofoffice(user_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "OutOfOffice"
    },
    "GET /api/v2/users/{userId}/profile": {
        "operationId": "get_user_profile",
        "functionName": "get_user_profile",
        "signature": "get_user_profile(user_id, expand, integration_presence_source)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "integration_presence_source",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "UserProfile"
    },
    "GET /api/v2/users/{userId}/profileskills": {
        "operationId": "get_user_profileskills",
        "functionName": "get_user_profileskills",
        "signature": "get_user_profileskills(user_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "list[str]"
    },
    "GET /api/v2/users/{userId}/queues": {
        "operationId": "get_user_queues",
        "functionName": "get_user_queues",
        "signature": "get_user_queues(user_id, page_size, page_number, joined, division_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "joined",
                "type": "bool",
                "required": "false"
            },
            {
                "name": "division_id",
                "type": "list[str]",
                "required": "false"
            }
        ],
        "return": "UserQueueEntityListing"
    },
    "GET /api/v2/users/{subjectId}/roles": {
        "operationId": "get_user_roles",
        "functionName": "get_user_roles",
        "signature": "get_user_roles(subject_id)",
        "parameters": [
            {
                "name": "subject_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "UserAuthorization"
    },
    "GET /api/v2/users/{userId}/routinglanguages": {
        "operationId": "get_user_routinglanguages",
        "functionName": "get_user_routinglanguages",
        "signature": "get_user_routinglanguages(user_id, page_size, page_number, sort_order)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_order",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "UserLanguageEntityListing"
    },
    "GET /api/v2/users/{userId}/routingskills": {
        "operationId": "get_user_routingskills",
        "functionName": "get_user_routingskills",
        "signature": "get_user_routingskills(user_id, page_size, page_number, sort_order)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_order",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "UserSkillEntityListing"
    },
    "GET /api/v2/users/{userId}/routingstatus": {
        "operationId": "get_user_routingstatus",
        "functionName": "get_user_routingstatus",
        "signature": "get_user_routingstatus(user_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "RoutingStatus"
    },
    "GET /api/v2/users/{userId}/skillgroups": {
        "operationId": "get_user_skillgroups",
        "functionName": "get_user_skillgroups",
        "signature": "get_user_skillgroups(user_id, page_size, after, before)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "after",
                "type": "str",
                "required": "false"
            },
            {
                "name": "before",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "UserSkillGroupEntityListing"
    },
    "GET /api/v2/users/{userId}/state": {
        "operationId": "get_user_state",
        "functionName": "get_user_state",
        "signature": "get_user_state(user_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "UserState"
    },
    "GET /api/v2/users/{userId}/station": {
        "operationId": "get_user_station",
        "functionName": "get_user_station",
        "signature": "get_user_station(user_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "UserStations"
    },
    "GET /api/v2/users/{userId}/superiors": {
        "operationId": "get_user_superiors",
        "functionName": "get_user_superiors",
        "signature": "get_user_superiors(user_id, expand)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            }
        ],
        "return": "list[User]"
    },
    "GET /api/v2/users/{userId}/trustors": {
        "operationId": "get_user_trustors",
        "functionName": "get_user_trustors",
        "signature": "get_user_trustors(user_id, page_size, page_number)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "TrustorEntityListing"
    },
    "GET /api/v2/users": {
        "operationId": "get_users",
        "functionName": "get_users",
        "signature": "get_users(page_size, page_number, id, jabber_id, sort_order, expand, integration_presence_source, state)",
        "parameters": [
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "id",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "jabber_id",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "sort_order",
                "type": "str",
                "required": "false"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "integration_presence_source",
                "type": "str",
                "required": "false"
            },
            {
                "name": "state",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "UserEntityListing"
    },
    "GET /api/v2/users/development/activities": {
        "operationId": "get_users_development_activities",
        "functionName": "get_users_development_activities",
        "signature": "get_users_development_activities(user_id, module_id, interval, completion_interval, overdue, pcPass, page_size, page_number, sort_order, types, statuses, relationship)",
        "parameters": [
            {
                "name": "user_id",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "module_id",
                "type": "str",
                "required": "false"
            },
            {
                "name": "interval",
                "type": "str",
                "required": "false"
            },
            {
                "name": "completion_interval",
                "type": "str",
                "required": "false"
            },
            {
                "name": "overdue",
                "type": "str",
                "required": "false"
            },
            {
                "name": "pcPass",
                "type": "str",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_order",
                "type": "str",
                "required": "false"
            },
            {
                "name": "types",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "statuses",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "relationship",
                "type": "list[str]",
                "required": "false"
            }
        ],
        "return": "DevelopmentActivityListing"
    },
    "GET /api/v2/users/development/activities/me": {
        "operationId": "get_users_development_activities_me",
        "functionName": "get_users_development_activities_me",
        "signature": "get_users_development_activities_me(module_id, interval, completion_interval, overdue, pcPass, page_size, page_number, sort_order, types, statuses, relationship)",
        "parameters": [
            {
                "name": "module_id",
                "type": "str",
                "required": "false"
            },
            {
                "name": "interval",
                "type": "str",
                "required": "false"
            },
            {
                "name": "completion_interval",
                "type": "str",
                "required": "false"
            },
            {
                "name": "overdue",
                "type": "str",
                "required": "false"
            },
            {
                "name": "pcPass",
                "type": "str",
                "required": "false"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            },
            {
                "name": "sort_order",
                "type": "str",
                "required": "false"
            },
            {
                "name": "types",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "statuses",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "relationship",
                "type": "list[str]",
                "required": "false"
            }
        ],
        "return": "DevelopmentActivityListing"
    },
    "GET /api/v2/users/development/activities/{activityId}": {
        "operationId": "get_users_development_activity",
        "functionName": "get_users_development_activity",
        "signature": "get_users_development_activity(activity_id, type)",
        "parameters": [
            {
                "name": "activity_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "type",
                "type": "str",
                "required": "true"
            }
        ],
        "return": "DevelopmentActivity"
    },
    "GET /api/v2/users/me": {
        "operationId": "get_users_me",
        "functionName": "get_users_me",
        "signature": "get_users_me(expand, integration_presence_source)",
        "parameters": [
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "integration_presence_source",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "UserMe"
    },
    "GET /api/v2/users/search": {
        "operationId": "get_users_search",
        "functionName": "get_users_search",
        "signature": "get_users_search(q64, expand, integration_presence_source)",
        "parameters": [
            {
                "name": "q64",
                "type": "str",
                "required": "true"
            },
            {
                "name": "expand",
                "type": "list[str]",
                "required": "false"
            },
            {
                "name": "integration_presence_source",
                "type": "str",
                "required": "false"
            }
        ],
        "return": "UsersSearchResponse"
    },
    "PATCH /api/v2/users/{userId}": {
        "operationId": "patch_user",
        "functionName": "patch_user",
        "signature": "patch_user(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "UpdateUser",
                "required": "true"
            }
        ],
        "return": "User"
    },
    "PATCH /api/v2/users/{userId}/callforwarding": {
        "operationId": "patch_user_callforwarding",
        "functionName": "patch_user_callforwarding",
        "signature": "patch_user_callforwarding(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "CallForwarding",
                "required": "true"
            }
        ],
        "return": "CallForwarding"
    },
    "PATCH /api/v2/users/{userId}/geolocations/{clientId}": {
        "operationId": "patch_user_geolocation",
        "functionName": "patch_user_geolocation",
        "signature": "patch_user_geolocation(user_id, client_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "client_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Geolocation",
                "required": "true"
            }
        ],
        "return": "Geolocation"
    },
    "PATCH /api/v2/users/{userId}/queues/{queueId}": {
        "operationId": "patch_user_queue",
        "functionName": "patch_user_queue",
        "signature": "patch_user_queue(queue_id, user_id, body)",
        "parameters": [
            {
                "name": "queue_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "UserQueue",
                "required": "true"
            }
        ],
        "return": "UserQueue"
    },
    "PATCH /api/v2/users/{userId}/queues": {
        "operationId": "patch_user_queues",
        "functionName": "patch_user_queues",
        "signature": "patch_user_queues(user_id, body, division_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "list[UserQueue]",
                "required": "true"
            },
            {
                "name": "division_id",
                "type": "list[str]",
                "required": "false"
            }
        ],
        "return": "UserQueueEntityListing"
    },
    "PATCH /api/v2/users/{userId}/routinglanguages/{languageId}": {
        "operationId": "patch_user_routinglanguage",
        "functionName": "patch_user_routinglanguage",
        "signature": "patch_user_routinglanguage(user_id, language_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "language_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "UserRoutingLanguage",
                "required": "true"
            }
        ],
        "return": "UserRoutingLanguage"
    },
    "PATCH /api/v2/users/{userId}/routinglanguages/bulk": {
        "operationId": "patch_user_routinglanguages_bulk",
        "functionName": "patch_user_routinglanguages_bulk",
        "signature": "patch_user_routinglanguages_bulk(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "list[UserRoutingLanguagePost]",
                "required": "true"
            }
        ],
        "return": "UserLanguageEntityListing"
    },
    "PATCH /api/v2/users/{userId}/routingskills/bulk": {
        "operationId": "patch_user_routingskills_bulk",
        "functionName": "patch_user_routingskills_bulk",
        "signature": "patch_user_routingskills_bulk(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "list[UserRoutingSkillPost]",
                "required": "true"
            }
        ],
        "return": "UserSkillEntityListing"
    },
    "PATCH /api/v2/users/bulk": {
        "operationId": "patch_users_bulk",
        "functionName": "patch_users_bulk",
        "signature": "patch_users_bulk(body)",
        "parameters": [
            {
                "name": "body",
                "type": "list[PatchUser]",
                "required": "true"
            }
        ],
        "return": "UserEntityListing"
    },
    "POST /api/v2/analytics/users/activity/query": {
        "operationId": "post_analytics_users_activity_query",
        "functionName": "post_analytics_users_activity_query",
        "signature": "post_analytics_users_activity_query(body, page_size, page_number)",
        "parameters": [
            {
                "name": "body",
                "type": "UserActivityQuery",
                "required": "true"
            },
            {
                "name": "page_size",
                "type": "int",
                "required": "false"
            },
            {
                "name": "page_number",
                "type": "int",
                "required": "false"
            }
        ],
        "return": "UserActivityResponse"
    },
    "POST /api/v2/analytics/users/aggregates/jobs": {
        "operationId": "post_analytics_users_aggregates_jobs",
        "functionName": "post_analytics_users_aggregates_jobs",
        "signature": "post_analytics_users_aggregates_jobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "UserAsyncAggregationQuery",
                "required": "true"
            }
        ],
        "return": "AsyncQueryResponse"
    },
    "POST /api/v2/analytics/users/aggregates/query": {
        "operationId": "post_analytics_users_aggregates_query",
        "functionName": "post_analytics_users_aggregates_query",
        "signature": "post_analytics_users_aggregates_query(body)",
        "parameters": [
            {
                "name": "body",
                "type": "UserAggregationQuery",
                "required": "true"
            }
        ],
        "return": "UserAggregateQueryResponse"
    },
    "POST /api/v2/analytics/users/details/jobs": {
        "operationId": "post_analytics_users_details_jobs",
        "functionName": "post_analytics_users_details_jobs",
        "signature": "post_analytics_users_details_jobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "AsyncUserDetailsQuery",
                "required": "true"
            }
        ],
        "return": "AsyncQueryResponse"
    },
    "POST /api/v2/analytics/users/details/query": {
        "operationId": "post_analytics_users_details_query",
        "functionName": "post_analytics_users_details_query",
        "signature": "post_analytics_users_details_query(body)",
        "parameters": [
            {
                "name": "body",
                "type": "UserDetailsQuery",
                "required": "true"
            }
        ],
        "return": "AnalyticsUserDetailsQueryResponse"
    },
    "POST /api/v2/analytics/users/observations/query": {
        "operationId": "post_analytics_users_observations_query",
        "functionName": "post_analytics_users_observations_query",
        "signature": "post_analytics_users_observations_query(body)",
        "parameters": [
            {
                "name": "body",
                "type": "UserObservationQuery",
                "required": "true"
            }
        ],
        "return": "UserObservationQueryResponse"
    },
    "POST /api/v2/authorization/subjects/{subjectId}/bulkadd": {
        "operationId": "post_authorization_subject_bulkadd",
        "functionName": "post_authorization_subject_bulkadd",
        "signature": "post_authorization_subject_bulkadd(subject_id, body, subject_type)",
        "parameters": [
            {
                "name": "subject_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "RoleDivisionGrants",
                "required": "true"
            },
            {
                "name": "subject_type",
                "type": "str",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/authorization/subjects/{subjectId}/bulkremove": {
        "operationId": "post_authorization_subject_bulkremove",
        "functionName": "post_authorization_subject_bulkremove",
        "signature": "post_authorization_subject_bulkremove(subject_id, body)",
        "parameters": [
            {
                "name": "subject_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "RoleDivisionGrants",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/authorization/subjects/{subjectId}/bulkreplace": {
        "operationId": "post_authorization_subject_bulkreplace",
        "functionName": "post_authorization_subject_bulkreplace",
        "signature": "post_authorization_subject_bulkreplace(subject_id, body, subject_type)",
        "parameters": [
            {
                "name": "subject_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "RoleDivisionGrants",
                "required": "true"
            },
            {
                "name": "subject_type",
                "type": "str",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/authorization/subjects/{subjectId}/divisions/{divisionId}/roles/{roleId}": {
        "operationId": "post_authorization_subject_division_role",
        "functionName": "post_authorization_subject_division_role",
        "signature": "post_authorization_subject_division_role(subject_id, division_id, role_id, subject_type)",
        "parameters": [
            {
                "name": "subject_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "division_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "role_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "subject_type",
                "type": "str",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/users/{userId}/externalid": {
        "operationId": "post_user_externalid",
        "functionName": "post_user_externalid",
        "signature": "post_user_externalid(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "UserExternalIdentifier",
                "required": "true"
            }
        ],
        "return": "list[UserExternalIdentifier]"
    },
    "POST /api/v2/users/{userId}/invite": {
        "operationId": "post_user_invite",
        "functionName": "post_user_invite",
        "signature": "post_user_invite(user_id, force)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "force",
                "type": "bool",
                "required": "false"
            }
        ]
    },
    "POST /api/v2/users/{userId}/password": {
        "operationId": "post_user_password",
        "functionName": "post_user_password",
        "signature": "post_user_password(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "ChangePasswordRequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/users/{userId}/routinglanguages": {
        "operationId": "post_user_routinglanguages",
        "functionName": "post_user_routinglanguages",
        "signature": "post_user_routinglanguages(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "UserRoutingLanguagePost",
                "required": "true"
            }
        ],
        "return": "UserRoutingLanguage"
    },
    "POST /api/v2/users/{userId}/routingskills": {
        "operationId": "post_user_routingskills",
        "functionName": "post_user_routingskills",
        "signature": "post_user_routingskills(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "UserRoutingSkillPost",
                "required": "true"
            }
        ],
        "return": "UserRoutingSkill"
    },
    "POST /api/v2/users": {
        "operationId": "post_users",
        "functionName": "post_users",
        "signature": "post_users(body)",
        "parameters": [
            {
                "name": "body",
                "type": "CreateUser",
                "required": "true"
            }
        ],
        "return": "User"
    },
    "POST /api/v2/users/development/activities/aggregates/query": {
        "operationId": "post_users_development_activities_aggregates_query",
        "functionName": "post_users_development_activities_aggregates_query",
        "signature": "post_users_development_activities_aggregates_query(body)",
        "parameters": [
            {
                "name": "body",
                "type": "DevelopmentActivityAggregateParam",
                "required": "true"
            }
        ],
        "return": "DevelopmentActivityAggregateResponse"
    },
    "POST /api/v2/users/me/password": {
        "operationId": "post_users_me_password",
        "functionName": "post_users_me_password",
        "signature": "post_users_me_password(body)",
        "parameters": [
            {
                "name": "body",
                "type": "ChangeMyPasswordRequest",
                "required": "true"
            }
        ]
    },
    "POST /api/v2/users/search": {
        "operationId": "post_users_search",
        "functionName": "post_users_search",
        "signature": "post_users_search(body)",
        "parameters": [
            {
                "name": "body",
                "type": "UserSearchRequest",
                "required": "true"
            }
        ],
        "return": "UsersSearchResponse"
    },
    "POST /api/v2/users/search/conversation/target": {
        "operationId": "post_users_search_conversation_target",
        "functionName": "post_users_search_conversation_target",
        "signature": "post_users_search_conversation_target(body)",
        "parameters": [
            {
                "name": "body",
                "type": "UserSearchRequest",
                "required": "true"
            }
        ],
        "return": "UsersSearchResponse"
    },
    "POST /api/v2/users/search/queuemembers/manage": {
        "operationId": "post_users_search_queuemembers_manage",
        "functionName": "post_users_search_queuemembers_manage",
        "signature": "post_users_search_queuemembers_manage(body)",
        "parameters": [
            {
                "name": "body",
                "type": "UserSearchRequest",
                "required": "true"
            }
        ],
        "return": "UsersSearchResponse"
    },
    "POST /api/v2/users/search/teams/assign": {
        "operationId": "post_users_search_teams_assign",
        "functionName": "post_users_search_teams_assign",
        "signature": "post_users_search_teams_assign(body)",
        "parameters": [
            {
                "name": "body",
                "type": "UserSearchRequest",
                "required": "true"
            }
        ],
        "return": "UsersSearchResponse"
    },
    "PUT /api/v2/routing/users/{userId}/utilization": {
        "operationId": "put_routing_user_utilization",
        "functionName": "put_routing_user_utilization",
        "signature": "put_routing_user_utilization(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "Utilization",
                "required": "true"
            }
        ],
        "return": "AgentMaxUtilization"
    },
    "PUT /api/v2/users/{userId}/callforwarding": {
        "operationId": "put_user_callforwarding",
        "functionName": "put_user_callforwarding",
        "signature": "put_user_callforwarding(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "CallForwarding",
                "required": "true"
            }
        ],
        "return": "CallForwarding"
    },
    "PUT /api/v2/users/{userId}/outofoffice": {
        "operationId": "put_user_outofoffice",
        "functionName": "put_user_outofoffice",
        "signature": "put_user_outofoffice(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "OutOfOffice",
                "required": "true"
            }
        ],
        "return": "OutOfOffice"
    },
    "PUT /api/v2/users/{userId}/profileskills": {
        "operationId": "put_user_profileskills",
        "functionName": "put_user_profileskills",
        "signature": "put_user_profileskills(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "list[str]",
                "required": "true"
            }
        ],
        "return": "list[str]"
    },
    "PUT /api/v2/users/{subjectId}/roles": {
        "operationId": "put_user_roles",
        "functionName": "put_user_roles",
        "signature": "put_user_roles(subject_id, body)",
        "parameters": [
            {
                "name": "subject_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "list[str]",
                "required": "true"
            }
        ],
        "return": "UserAuthorization"
    },
    "PUT /api/v2/users/{userId}/routingskills/{skillId}": {
        "operationId": "put_user_routingskill",
        "functionName": "put_user_routingskill",
        "signature": "put_user_routingskill(user_id, skill_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "skill_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "UserRoutingSkill",
                "required": "true"
            }
        ],
        "return": "UserRoutingSkill"
    },
    "PUT /api/v2/users/{userId}/routingskills/bulk": {
        "operationId": "put_user_routingskills_bulk",
        "functionName": "put_user_routingskills_bulk",
        "signature": "put_user_routingskills_bulk(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "list[UserRoutingSkillPost]",
                "required": "true"
            }
        ],
        "return": "UserSkillEntityListing"
    },
    "PUT /api/v2/users/{userId}/routingstatus": {
        "operationId": "put_user_routingstatus",
        "functionName": "put_user_routingstatus",
        "signature": "put_user_routingstatus(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "RoutingStatus",
                "required": "true"
            }
        ],
        "return": "RoutingStatus"
    },
    "PUT /api/v2/users/{userId}/state": {
        "operationId": "put_user_state",
        "functionName": "put_user_state",
        "signature": "put_user_state(user_id, body)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "body",
                "type": "UserState",
                "required": "true"
            }
        ],
        "return": "UserState"
    },
    "PUT /api/v2/users/{userId}/station/associatedstation/{stationId}": {
        "operationId": "put_user_station_associatedstation_station_id",
        "functionName": "put_user_station_associatedstation_station_id",
        "signature": "put_user_station_associatedstation_station_id(user_id, station_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "station_id",
                "type": "str",
                "required": "true"
            }
        ]
    },
    "PUT /api/v2/users/{userId}/station/defaultstation/{stationId}": {
        "operationId": "put_user_station_defaultstation_station_id",
        "functionName": "put_user_station_defaultstation_station_id",
        "signature": "put_user_station_defaultstation_station_id(user_id, station_id)",
        "parameters": [
            {
                "name": "user_id",
                "type": "str",
                "required": "true"
            },
            {
                "name": "station_id",
                "type": "str",
                "required": "true"
            }
        ]
    }
    
}