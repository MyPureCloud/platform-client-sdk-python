import time
import 
from .rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
.configuration.access_token = 'YOUR_ACCESS_TOKEN'

# create an instance of the API class
api_instance = .GetScimUserRequest()
user_id = 'user_id_example' # str | The ID of a user. Returned with GET /api/v2/scim/users.
attributes = ['attributes_example'] # list[str] | Indicates which attributes to include. Returns these attributes and the \"id\", \"userName\", \"active\", and \"meta\" attributes. Use \"attributes\" to avoid expensive secondary calls for the default attributes. (optional)
excluded_attributes = ['excluded_attributes_example'] # list[str] | Indicates which attributes to exclude. Returns the default attributes minus \"excludedAttributes\". Always returns the \"id\", \"userName\", \"active\", and \"meta\" attributes. Use \"excludedAttributes\" to avoid expensive secondary calls for the default attributes. (optional)
if_none_match = 'if_none_match_example' # str | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: \"42\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified. (optional)

try:
    # Get a user
    api_response = api_instance.get_scim_user(user_id, attributes=attributes, excluded_attributes=excluded_attributes, if_none_match=if_none_match)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling GetScimUserRequest->get_scim_user: %s\n" % e)