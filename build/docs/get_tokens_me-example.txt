import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...) or get_code_authorization_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.TokensApi();
preserve_idle_ttl = True # bool | preserveIdleTTL indicates whether the idle token timeout should be reset or preserved. If preserveIdleTTL is true, then TTL value is not reset. If unset or false, the value is reset. (optional)

try:
    # Fetch information about the current token
    api_response = api_instance.get_tokens_me(preserve_idle_ttl=preserve_idle_ttl)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling TokensApi->get_tokens_me: %s\n" % e)