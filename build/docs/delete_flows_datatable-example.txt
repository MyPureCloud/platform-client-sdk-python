import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...) or get_code_authorization_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.ArchitectApi();
datatable_id = 'datatable_id_example' # str | id of datatable
force = False # bool | force delete, even if in use (optional) (default to False)

try:
    # deletes a specific datatable by id
    api_instance.delete_flows_datatable(datatable_id, force=force)
except ApiException as e:
    print("Exception when calling ArchitectApi->delete_flows_datatable: %s\n" % e)