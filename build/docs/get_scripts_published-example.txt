import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...) or get_code_authorization_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.ScriptsApi();
page_size = 25 # int | Page size (optional) (default to 25)
page_number = 1 # int | Page number (optional) (default to 1)
expand = 'expand_example' # str | Expand (optional)
name = 'name_example' # str | Name filter (optional)
feature = 'feature_example' # str | Feature filter (optional)
flow_id = 'flow_id_example' # str | Secure flow id filter (optional)
script_data_version = 'script_data_version_example' # str | Advanced usage - controls the data version of the script (optional)
division_ids = 'division_ids_example' # str | Filters scripts to requested divisionIds (optional)

try:
    # Get the published scripts.
    api_response = api_instance.get_scripts_published(page_size=page_size, page_number=page_number, expand=expand, name=name, feature=feature, flow_id=flow_id, script_data_version=script_data_version, division_ids=division_ids)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling ScriptsApi->get_scripts_published: %s\n" % e)