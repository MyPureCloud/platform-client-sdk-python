import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.ArchitectApi();
body = PureCloudPlatformClientV2.CriteriaQuery() # CriteriaQuery | query
index_only = True # bool | indexes only (optional)
page_size = 50 # int | number of results to return (optional) (default to 50)

try:
    # Query the database of existing flow histories to look for particular flow criteria
    api_response = api_instance.post_flows_instances_query(body, index_only=index_only, page_size=page_size)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling ArchitectApi->post_flows_instances_query: %s\n" % e)