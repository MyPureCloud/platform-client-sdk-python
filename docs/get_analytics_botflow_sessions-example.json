import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.AnalyticsApi();
bot_flow_id = 'bot_flow_id_example' # str | ID of the bot flow.
after = 'after_example' # str | The cursor that points to the ID of the last item in the list of entities that has been returned. (optional)
page_size = ''50'' # str | Max number of entities to return. Maximum of 250 (optional) (default to '50')
interval = '2023-07-17T08:15:44.586Z/2023-07-26T09:22:33.111Z' # str | Date range filter based on the date the individual resources were completed. UTC is the default if no TZ is supplied, however alternate timezones can be used e.g: '2022-11-22T09:11:11.111+08:00/2022-11-30T07:17:44.586-07'. . Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)
bot_result_categories = 'bot_result_categories_example' # str | Optional case-insensitive comma separated list of Bot Result Categories to filter sessions by. (optional)
end_language = 'end_language_example' # str | Optional case-insensitive language code to filter sessions by the language the sessions ended in. (optional)

try:
    # Get Bot Flow Sessions.
    api_response = api_instance.get_analytics_botflow_sessions(bot_flow_id, after=after, page_size=page_size, interval=interval, bot_result_categories=bot_result_categories, end_language=end_language)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling AnalyticsApi->get_analytics_botflow_sessions: %s\n" % e)