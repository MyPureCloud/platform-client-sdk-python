import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.JourneyApi();
session_id = 'session_id_example' # str | System-generated UUID that represents the session the event is a part of.
page_size = 'page_size_example' # str | Number of entities to return. Maximum of 200. (optional)
after = 'after_example' # str | The cursor that points to the end of the set of entities that has been returned. (optional)
event_type = 'event_type_example' # str | A comma separated list of journey event types to include in the results. (optional)

try:
    # Retrieve all events for a given session.
    api_response = api_instance.get_journey_session_events(session_id, page_size=page_size, after=after, event_type=event_type)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling JourneyApi->get_journey_session_events: %s\n" % e)