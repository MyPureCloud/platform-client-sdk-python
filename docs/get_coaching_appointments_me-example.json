import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.CoachingApi();
interval = 'interval_example' # str | Interval to filter data by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)
page_number = 1 # int | Page number (optional) (default to 1)
page_size = 25 # int | Page size (optional) (default to 25)
statuses = ['statuses_example'] # list[str] | Appointment Statuses to filter by (optional)
facilitator_ids = ['facilitator_ids_example'] # list[str] | The facilitator IDs for which to retrieve appointments (optional)
sort_order = 'sort_order_example' # str | Sort (by due date) either Asc or Desc (optional)
relationships = ['relationships_example'] # list[str] | Relationships to filter by (optional)
completion_interval = 'completion_interval_example' # str | Appointment completion start and end to filter by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional)
overdue = 'overdue_example' # str | Overdue status to filter by (optional)
interval_condition = 'interval_condition_example' # str | Filter condition for interval (optional)

try:
    # Get my appointments for a given date range
    api_response = api_instance.get_coaching_appointments_me(interval=interval, page_number=page_number, page_size=page_size, statuses=statuses, facilitator_ids=facilitator_ids, sort_order=sort_order, relationships=relationships, completion_interval=completion_interval, overdue=overdue, interval_condition=interval_condition)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling CoachingApi->get_coaching_appointments_me: %s\n" % e)