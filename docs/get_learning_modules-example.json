import PureCloudPlatformClientV2
from PureCloudPlatformClientV2.rest import ApiException
from pprint import pprint

# Configure OAuth2 access token for authorization: PureCloud OAuth
PureCloudPlatformClientV2.configuration.access_token = 'your_access_token'
# or use get_client_credentials_token(...), get_saml2bearer_token(...), get_code_authorization_token(...) or get_pkce_token(...)

# create an instance of the API class
api_instance = PureCloudPlatformClientV2.LearningApi();
is_archived = False # bool | Archive status (optional) (default to False)
types = ['types_example'] # list[str] | Specifies the module types. (optional)
page_size = 25 # int | Page size (optional) (default to 25)
page_number = 1 # int | Page number (optional) (default to 1)
sort_order = ''ascending'' # str | Sort order (optional) (default to 'ascending')
sort_by = ''name'' # str | Sort by (optional) (default to 'name')
search_term = 'search_term_example' # str | Search Term (searchable by name) (optional)
expand = ['expand_example'] # list[str] | Fields to expand in response(case insensitive) (optional)
is_published = ''Any'' # str | Specifies if only the Unpublished (isPublished is \"False\") or Published (isPublished is \"True\") modules are returned. If isPublished is \"Any\" or omitted, both types are returned (optional) (default to 'Any')
statuses = ['statuses_example'] # list[str] | Specifies the module statuses to filter by (optional)
external_ids = ['external_ids_example'] # list[str] | Specifies the module external IDs to filter by. Only one ID is allowed (optional)

try:
    # Get all learning modules of an organization
    api_response = api_instance.get_learning_modules(is_archived=is_archived, types=types, page_size=page_size, page_number=page_number, sort_order=sort_order, sort_by=sort_by, search_term=search_term, expand=expand, is_published=is_published, statuses=statuses, external_ids=external_ids)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling LearningApi->get_learning_modules: %s\n" % e)